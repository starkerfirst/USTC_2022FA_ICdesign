// **********************************************************************************
// * 0.18um Calibre DRC COMMAND FILE - CHV18S_AL_5V_6V_9V_12V_16V_20V_24V_29V_45V_5M.13_4a ( 08/23/2019 )                     *
// * FOR TSMC 0.18UM CMOS HIGH VOLTAGE MIXED SIGNAL BASED GENERAL PURPOSE GEN-3 BCD FSG AL        *
// * 1P5M SALICIDE 1.8/5/6/9/12/16/20/24/29/36/45/VG1.8/5V AND 5/6/9/12/16/20/24/29/36/45/VG5V PROCESS *
// * (DRC COMMAND FILE DOCUMENT: T-018-CV-DR-032-C1 Rev 1.3_4a)                  *
// * (DESIGN RULE DOCUMENT:      T-018-CV-DR-032 Rev 1.3_4)                                          *
// **********************************************************************************

//************************************************************************************
//* TSMC developed this deck using Mentor Graphics proprietary SVRF and TVF formats.
//* The deck is to be used only in Calibre tools.
//************************************************************************************
//
//  DISCLAIMER
//
//  The information contained herein is provided by TSMC on an "AS IS" basis
//  without any warranty, and TSMC has no obligation to support or otherwise
//  maintain the information.  TSMC disclaims any representation that the
//  information does not infringe any intellectual property rights or proprietary
//  rights of any third parties.  There are no other warranties given by TSMC,
//  whether express, implied or statutory, including, without limitation, implied
//  warranties of merchantability and fitness for a particular purpose.
//
//  STATEMENT OF USE
//
//  This information contains confidential and proprietary information of TSMC.
//  No part of this information may be reproduced, transmitted, transcribed,
//  stored in a retrieval system, or translated into any human or computer
//  language, in any form or by any means, electronic, mechanical, magnetic,
//  optical, chemical, manual, or otherwise, without the prior written permission
//  of TSMC.  This information was prepared for informational purpose and is for
//  use by TSMC's customers only.  TSMC reserves the right to make changes in the
//  information at any time and without notice.
//
//-------------------------------------------------------------------------------------------
//
//  NOTICE: (Read Me First!)
//
//  1. If the input GDS file does not include all the layers in the
//     INPUT LAYER BLOCK, for example, they are generated by logic
//     operations, please make sure the consistence with original
//     layer definition.
//
//  2. The runset is tested and developed on Calibre v2010.4_26.16 (Dec. 2010), please use 
//     this or newer TSMC qualified version of Calibre to execute this runset.
//
//-------------------------------------------------------------------------------------------
//
// REVISION:
//
// 08/09/2016 - Ver 1.0a P.Liu
//   1) Newly created 
// 08/16/2016 - Ver 1.0a1 P.Liu
//   1) Modify rule : PSUB.W.1 and PSUB.E.1
//   2) Modify layerdef : DIO_SHNPSUBSHP_P_1, DIO_SHNNBLPSUBSHP_P_1, DIO_SHNNBLPSUBSHP_GB_P_1
//   3) Add variable : ALL_TEXT
// 02/21/2017 - Ver 1.1a_pre022117 P.Liu
//   1)Add Rule: CFP.E.1_NLD16G5, CFP.E.1_NLD16G5_FULLY_ISO, CFP.E.2_NLD16G5, CFP.E.2_NLD16G5_FULLY_ISO, CFP.E.3_NLD16G5, CFP.E.3_NLD16G5_FULLY_ISO,CFP.E.4_NLD16G5, CFP.E.4_NLD16G5_FULLY_ISO, CFP.O.1_NLD16G5, CFP.O.1_NLD16G5_FULLY_ISO, CFP.R.2_NLD16G5, CFP.R.2_NLD16G5_FULLY_ISO, HV16DMY.E.1, HVESD.C.1.1_PNP_16, HVESD.C.2_PNP_16, HVESD.E.12_PNP_16, HVESD.E.16_PNP_16, HVESD.E.17_PNP_16, HVESD.E.18_PNP_16, HVESD.E.19_PNP_16, HVESD.E.20_PNP_16, HVESD.E.21_PNP_16, HVESD.E.22_PNP_16, HVESD.E.23_PNP_16, HVESD.E.29.1_PNP_16, HVESD.E.4_PNP_16, HVESD.E.5_PNP_16, HVESD.E.6.1_PNP_16, HVESD.E.8.1_PNP_16, HVESD.E.9.1_PNP_16, HVESD.O.1_PNP_16, HVESD.R.10_PNP_16, HVESD.R.11_PNP_16, HVESD.R.12_PNP_16, HVESD.R.18.1_PNP_16, HVESD.R.2_PNP_16, HVESD.R.3_PNP_16, HVESD.S.2_PNP_16, HVESD.S.5_PNP_16, HVESD.S.6_PNP_16, HVESD.W.10_PNP_16, HVESD.W.6_PNP_16, HVESD.W.7_PNP_16, HVMOS.R.5a, HVMOS.R.5b, HVNP.C.3_NLD16G5, HVNP.C.3_NLD16G5_FULLY_ISO, HVOD.C.3.3_NLD16G5, HVOD.C.3.3_NLD16G5_FULLY_ISO, HVOD.C.3.4_NLD16G5_FULLY_ISO, HVOD.C.3.5_NLD16G5_FULLY_ISO, HVOD.E.7_NLD16G5_FULLY_ISO, HVOD.R.17_NLD16G5, HVOD.R.17_NLD16G5_FULLY_ISO, HVOD.W.4_NLD16G5_FULLY_ISO, HVPB.E.1_NLD16G5, HVPB.E.1_NLD16G5_FULLY_ISO, HVPB.R.4, HVPO.O.2_NLD16G5, HVPO.O.2_NLD16G5_FULLY_ISO, HVPO.S.5_NLD16G5, HVPO.S.5_NLD16G5_FULLY_ISO, HVPO.W.4_NLD16G5, HVPO.W.4_NLD16G5_FULLY_ISO, NDD.E.1_NLD16G5, NDD.E.1_NLD16G5_FULLY_ISO, NDD.E.2_NLD16G5, NDD.E.2_NLD16G5_FULLY_ISO, SH_N.E.3_NLD16G5_FULLY_ISO, SLITDMY.E.1_NLD16G5_FULLY_ISO, SLITDMY.E.2_NLD16G5,add Mn.S.2 under DTM
//  2)Modify rule: HVMOS.R.2, HVOD.C.1, HVOD.E.2,HVOD.R.3b,HV16DMY.R.2,SH_N.S.2, SH_N.E.2,CFP.R.1,CFP.R.5,NP.O.1,HVPP.S.1,PP.E.1,PP.E.3,PP.R.3_NP.R.3
//  3)Modify value:HVPO.O.2 for NLD6G5_SA_FULLY_ISO device from 0.45 to 0.475, HVPO.S.5 from minimum value to fix value
//  4)Modify definition: SLIT_HVNMOS/ALL_HVNMOS_D/ALL_HVNMOS_S/ALL_HVNMOS_OD1/HVNGATE_6_9_12_45 because of add NLD16G5 and NLD16G5_FULLY_ISO device, CLM_DMY_DIO because of except HV16DMY,HVGATE_ISO because of add NLD16G5_FULLY_ISO device,MOS_NO_NBL because of add NLD16G5 device,POWER_DEVICES/NPOWER_DEVICES because of add according to DRM NLD16G5_FULLY_ISO device, ENSD_SOURCE_pre,EPSD_SOURCE_pre, HVESD_EOD_pre/HVESD_BOD/HVESD_COD_pre/HVESD_EC/HVESD_merge/HVESD_EC_merge/HVESD_BH/HVESD_PISO_R because of add 16V ESD BJT
// 02/28/2017 - Ver 1.1a P.Liu
//  1)Add 16V to 6-24V group for HVESD/HVLUP 
//  2)Add SBD3TDMY to NBL_ISO_SBD_H
//  3)Add NLD24G5_ISO_SWITCH_GATE to HVGATE_ISO
// 07/21/2017 - Ver 1.1b_pre072117 L.L.Cao
//  1)Enhance PWELi NOHVNWRi definition
// 08/08/2017 - Ver 1.1b L.L.Cao
//	1) Update version
// 08/28/2017 - Ver 1.1c L.L.Cao
//	1) Enhance connectivity for MIM capacitor 
// 09/30/2017 - Ver 1.2a HLGUO 
//  1)Modify PWELi,NOHVNWRi, NONWRi, LV_DEVICES, HLNONWR, PANTI, PANT, FFOD, ALL_PAD, HV_POST_DRIVER_NACT2 definition 
//  2)Add Rule: CFP.E.1_NLD24G5, CFP.E.1_NLD24G5_SWITCH, CFP.E.1_PA16G5_NBL, CFP.E.1_PA16G5_SLIT_NBL, CFP.E.2_NLD24G5, CFP.E.2_NLD24G5_SWITCH, 
//    CFP.E.2_PA16G5_NBL, CFP.E.2_PA16G5_SLIT_NBL, CFP.E.3_NLD24G5, CFP.E.3_NLD24G5_SWITCH, CFP.E.3_PA16G5_NBL, CFP.E.3_PA16G5_SLIT_NBL, 
//    CFP.E.4_NLD24G5, CFP.E.4_NLD24G5_SWITCH, CFP.E.4_PA16G5_NBL, CFP.E.4_PA16G5_SLIT_NBL, CFP.O.1_NLD24G5, CFP.O.1_NLD24G5_SWITCH, 
//    CFP.O.2_PA16G5_NBL, CFP.O.2_PA16G5_SLIT_NBL, CFP.R.2_NLD24G5, CFP.R.2_NLD24G5_SWITCH, CFP.R.2_PA16G5_NBL, CFP.R.2_PA16G5_SLIT_NBL, 
//    CFP.R.5_NA29G3_dep_NBL, CFP.R.5_NA29G5, CFP.R.5_NA29G5_NBL, CFP.R.5_NLD12G5, CFP.R.5_NLD12G5_FULLY_ISO, CFP.R.5_NLD16G5, 
//    CFP.R.5_NLD16G5_FULLY_ISO, CFP.R.5_NLD20G5, CFP.R.5_NLD20G5_FULLY_ISO, CFP.R.5_NLD24G5, CFP.R.5_NLD24G5_FULLY_ISO, CFP.R.5_NLD24G5_ISO_SWITCH, 
//    CFP.R.5_NLD24G5_SWITCH, CFP.R.5_NLD45G5_GB, CFP.R.6_PA16G5_NBL, CFP.R.6_PA16G5_SLIT_NBL, CFP.R.6_PA20G5_BL, CFP.R.6_PA20G5_SLIT_BL, 
//    CFP.R.6_PA29G5_BL, DPW.C.2, DPW.S.1, DPW.W.1, G.1:CU_PPI_PIN_TEXT, G.1:HVMOSPAIR, G.1:NONLDDi, G.2:CU_PPI_PIN_TEXT, G.2:HVMOSPAIR, 
//    G.2:NONLDDi, G.3:CU_PPI_PIN_TEXT, G.3:HVMOSPAIR, G.3:NONLDDi, HRI.A.1, HRI.C.1, HRI.C.2, HRI.C.3_C.4, HRI.E.1, HRI.R.1, HRI.R.2, 
//    HRI.S.1, HRI.W.1, HV5DMY.E.1, HV5DMY.R.2, HVEOD.E.1_NLD24G5, HVEOD.E.1_NLD24G5_SWITCH, HVEOD.E.2_NLD24G5, HVEOD.E.2_NLD24G5_SWITCH, 
//    HVEOD.E.3_NLD24G5, HVEOD.E.3_NLD24G5_SWITCH, HVESD.S.10_5V, HVESD.S.11_5V, HVESD.S.12_5V, HVESD.S.13_5V, HVESD.S.14_5V, HVESD.S.15_5V, 
//    HVESD.S.22_5V, HVESD.S.23_5V, HVESD.S.24_5V, HVESD.S.26_5V, HVESD.S.28_5V, HVESD.S.29_5V, HVESD.S.31_5V, HVESD.S.33_5V, HVESD.S.35_5V, 
//    HVESD.W.2_PNP_12, HVESD.W.2_PNP_12_PDD, HVESD.W.2_PNP_16, HVESD.W.2_PNP_20, HVESD.W.2_PNP_20_PDD, HVESD.W.2_PNP_24, HVESD.W.2_PNP_29, 
//    HVESD.W.2_PNP_45, HVESD.W.2_PNP_6, HVESD.W.2_PNP_9, HVESD.W.3.1_PNP_12_PDD, HVESD.W.3.1_PNP_16, HVESD.W.3.1_PNP_20, HVESD.W.3.1_PNP_20_PDD, 
//    HVESD.W.3.1_PNP_24, HVESD.W.3.2_PNP_12_PDD, HVESD.W.3.2_PNP_16, HVESD.W.3.2_PNP_20, HVESD.W.3.2_PNP_20_PDD, HVESD.W.3.2_PNP_24, 
//    HVLOWR.E.1_NLD24G5_SWITCH, HVLOWR.R.2_NLD24G5_SWITCH, HVLUP.C.2_HVDMY_5_GA, HVLUP.C.3_HVDMY_5_GA, HVLUP.C.4_HVDMY_5_GA, HVLUP.C.5_HVDMY_5_GA, 
//    HVLUP.C.6_HVDMY_5_GA, HVLUP.C.7_HVDMY_5_GA, HVLUP.C.8_HVDMY_5_GA, HVLUP.E.1_HVDMY_5_GA, HVLUP.E.2_HVDMY_5_GA, HVLUP.E.3_HVDMY_5_GA, 
//    HVLUP.E.4_HVDMY_5_GA, HVLUP.E.7_HVDMY_5_GA, HVLUP.E.8_HVDMY_5_GA, HVLUP.W.10_HVDMY_24_20_16_12_9_6_GA, HVLUP.W.10_HVDMY_5_GA, 
//    HVLUP.W.11_HVDMY_5_GA, HVLUP.W.1_HVDMY_5_GA, HVLUP.W.2_HVDMY_5_GA, HVLUP.W.3_HVDMY_5_GA, HVLUP.W.4.1_HVDMY_5_GA, HVLUP.W.4_HVDMY_5_GA, 
//    HVLUP.W.5_HVDMY_45_GB, HVLUP.W.5_HVDMY_5_GA, HVLUP.W.6_HVDMY_5_GA, HVLUP.W.7_HVDMY_5_GA, HVLUP.W.8_HVDMY_5_GA, HVLUP.W.9_HVDMY_24_20_16_12_9_6_GA, 
//    HVLUP.W.9_HVDMY_5_GA, HVNP.C.3_NLD24G5, HVNP.C.3_NLD24G5_SWITCH, HVNP.C.3_NLD6G5_DE, HVOD.C.3.3_NLD24G5, HVOD.C.3.3_NLD24G5_SWITCH, 
//    HVOD.C.3.3_NLD6G5_DE, HVOD.C.3.3_NLD6G5_SA, HVOD.C.3.3_PA16G5_NBL, HVOD.C.3.3_PA16G5_SLIT_NBL, HVOD.C.3.3_PA9G5_NBL, HVOD.C.3.3_PA9G5_SLIT_NBL, 
//    HVOD.C.3.4_NLD5G5_ISO_SWITCH, HVOD.C.3.8_NLD5G5_ISO_SWITCH, HVOD.C.4_PA16G5_NBL, HVOD.C.4_PA9G5_NBL, HVOD.E.7_NLD5G5_ISO_SWITCH, 
//    HVOD.E.8_PA16G5_NBL, HVOD.E.8_PA16G5_SLIT_NBL, HVOD.E.8_PA9G5_NBL, HVOD.E.8_PA9G5_SLIT_NBL, HVOD.E.8_PCH5_AS_SWITCH_MAC, 
//    HVOD.E.9_PA16G5_NBL, HVOD.E.9_PA16G5_SLIT_NBL, HVOD.E.9_PA9G5_NBL, HVOD.E.9_PA9G5_SLIT_NBL, HVOD.R.17_NLD24G5, HVOD.R.17_NLD24G5_SWITCH, 
//    HVOD.R.17_PA16G5_NBL, HVOD.R.17_PA16G5_SLIT_NBL, HVOD.S.3_PCH5_AS_SWITCH_MAC, HVOD.W.4_NLD5G5_ISO_SWITCH, HVOD.W.4_PA16G5_NBL, 
//    HVOD.W.4_PA16G5_SLIT_NBL, HVOD.W.4_PA9G5_NBL, HVOD.W.4_PA9G5_SLIT_NBL, HVOD.W.4_PCH5_AS_SWITCH_MAC, HVPB.E.1_NLD24G5, HVPB.E.1_NLD24G5_SWITCH, 
//    HVPB.E.1_NLD5G5_ISO_SWITCH, HVPB.E.1_NLD6G5_DE, HVPB.E.1_NLD6G5_SA, HVPO.E.4_PA16G5_NBL, HVPO.E.4_PA16G5_SLIT_NBL, HVPO.E.4_PA9G5_NBL, 
//    HVPO.E.4_PA9G5_SLIT_NBL, HVPO.O.2_NLD24G5, HVPO.O.2_NLD24G5_SWITCH, HVPO.O.2_NLD5G5_ISO_SWITCH, HVPO.O.2_NLD6G5_DE, HVPO.O.2_NLD6G5_SA, 
//    HVPO.O.6_PCH5_AS_SWITCH_MAC, HVPO.O.7_PA16G5_NBL, HVPO.O.7_PA9G5_NBL, HVPO.O.9_PA16G5_SLIT_NBL, HVPO.O.9_PA9G5_SLIT_NBL, 
//    HVPO.S.5_1_PCH5_AS_SWITCH_MAC, HVPO.S.5_NLD24G5, HVPO.S.5_NLD24G5_SWITCH, HVPO.S.5_NLD5G5_ISO_SWITCH, HVPO.S.5_NLD6G5_DE, 
//    HVPO.S.5_NLD6G5_SA, HVPO.S.5_PA16G5_SLIT_NBL, HVPO.S.5_PA9G5_SLIT_NBL, HVPO.W.4_NLD24G5, HVPO.W.4_NLD24G5_SWITCH, HVPO.W.4_NLD5G5_ISO_SWITCH, 
//    HVPO.W.4_NLD6G5_DE, HVPO.W.4_NLD6G5_SA, HVPO.W.4_PA16G5_NBL, HVPO.W.4_PA16G5_SLIT_NBL, HVPO.W.4_PA9G5_NBL, HVPO.W.4_PA9G5_SLIT_NBL, 
//    HVPO.W.4_PCH5_AS_SWITCH_MAC, HVPP.C.2_PA16G5_NBL, HVPP.C.2_PA16G5_SLIT_NBL, HVPP.C.2_PA9G5_NBL, HVPP.C.2_PA9G5_SLIT_NBL, 
//    LVISO.E.1, LVISO.R.7, NDD.E.1_NLD24G5, NDD.E.1_NLD24G5_SWITCH, NDD.E.1_NLD5G5_ISO_SWITCH, NDD.E.1_NLD6G5_DE, NDD.E.1_NLD6G5_SA, 
//    NDD.E.2_NLD24G5, NDD.E.2_NLD24G5_SWITCH, NDD.E.2_NLD5G5_ISO_SWITCH, NDD.E.2_NLD6G5_DE, NDD.E.2_NLD6G5_SA, NONLDD.E.1_PCH5_AS_SWITCH_MAC, 
//    NONLDD.O.1_PCH5_AS_SWITCH_MAC, NONLDD.R.1, NONLDD.R.2, PDD.E.1_PA16G5_NBL, PDD.E.1_PA16G5_SLIT_NBL, PDD.E.1_PA9G5_NBL, PDD.E.1_PA9G5_SLIT_NBL, 
//    PDD.E.6_PA16G5_NBL, PDD.E.6_PA16G5_SLIT_NBL, PDD.E.6_PA9G5_NBL, PDD.E.6_PA9G5_SLIT_NBL, SH_N.C.12_NLD6G5_DE, SH_N.C.15_NLD5G5_ISO_SWITCH, 
//    SH_N.C.15_PCH5_AS_SWITCH_MAC, SH_N.E.3_NLD24G5, SH_N.E.3_NLD24G5_SWITCH, SH_N.E.4_PA16G5_NBL, SH_N.E.4_PA16G5_SLIT_NBL, SH_N.E.4_PA9G5_NBL, 
//    SH_N.E.4_PA9G5_SLIT_NBL, SH_N.E.7_NLD6G5_DE, SLITDMY.E.1_NLD5G5_ISO_SWITCH, SLITDMY.E.1_PA16G5_SLIT_NBL, SLITDMY.E.1_PA9G5_SLIT_NBL, 
//    SLITDMY.E.2_NLD24G5, SLITDMY.E.2_NLD24G5_SWITCH, SLITDMY.E.2_NLD6G5_DE, SLITDMY.E.2_NLD6G5_SA 
//  3)Remove Rules: CFP.R.5, CFP.R.6, HVESD.W.10_PNP_12_PDD, HVESD.W.10_PNP_16, HVESD.W.10_PNP_20, HVESD.W.10_PNP_20_PDD, 
//    HVESD.W.10_PNP_24, HVLUP.W.10, HVLUP.W.9
//  4)Modify Rules: HVMOS.R.2, NBL.W.1, NBL.R.8, NBL.R.4, NBLSLOT.W.1, LVISO.R.6, HVOD.C.1, HVOD.E.1, HVOD.E.2, HVOD.R.1, HVOD.R.2, HVOD.R.3, HVOD.R,9
//   HVOD.C.3.6, HVOD.C.4, HVEOD.E.3, HVNW.W.1, HVDMY.E.1.1, HVDMY.R.11, HVDMY.E.6, HVDMY.E.7, HVGB.E.4, SH_N.S.2, SH_N.E.2, SH_N.E.1, SH_N.E.8 SH_N.E.9,
//   SH_N.E.10, SH_N.R.3, PDD.R.1, NW.S.3.1, NW.S.4.1, CFP.R.1, RES.3_PO, NP.S.1, NP.E.3, PP.W.1, PP.E.1, PP.E.6, _PP.E.6.MM, ESD.40g, LUP.3.4g_5V, LUP.5.4g_5V,
//   HVEDS.E.13.1, HVESD.E.13, HVESD.E.14, HVESD.E.34, HVESD.E.39.1,HVESD.E.40.1, HVESD.E.41.1, HVESD.S.1, HVESD.S.3, HVESD.S.4, HVESD.R.2, HVESD.R.1, HVLUP.R.3,
//   HVLUP.C.2, HVLUP.C.3, HVLUP.C.4, HVLUP.C.5, HVLUP.C.6, BJT.E.8, HVESD.E.13.1, HVESD.R.1
//  5)Add Switch "CHECK_HVLUP_WITH_175C"
// 12/25/2017 - Ver 1.2_1a KZHU
//  1)Add rule:HVOD.R.21
//  2)Build connection for N_WELLSi and P_WELLSi
//  3)Build new connection(_mf) for OD.R.5, CFP.R.5, CFP.R.6, CFP.R.9, HVMOS.R.5a HVMOS.R.5b, HVOD.R.2c, HVOD.R.3c, HVBJT.R.7,HVBJT.R.8_PNDDSHPNBL,HVBJT.R.9, HVOD.R.17, HVOD.R.20, HVPB.R.4, HVPO.W.4, SDIO.R.1, HVESD.R.8, HVESD.R.9, HVESD.R.12, HVESD.R.13, ESD.3g, ESD.5g, ESD.35g 
//  4)Build new connection(_w) for NWR.R.7, PO.R.4, RES.HV.R.1
//  5)Enhance coding : LVISO.R.2, HVLUP.R.1_2
// 01/05/2018 - Ver 1.2_2a KZHU
//  1)Update version
// 03/23/2018 - Ver 1.3a_pre032318 KZHU
//   1)Add Rule: CFP.E.1_NA20G5, CFP.E.1_NA20G5_NBL, CFP.E.1_NA45G3_DEP_GB, CFP.E.1_NLD36G5_GB, CFP.E.2_NA20G5, CFP.E.2_NA20G5_NBL, CFP.E.2_NA45G3_DEP_GB, 
//CFP.E.2_NLD36G5_GB, CFP.E.3_NA20G5, CFP.E.3_NA20G5_NBL, CFP.E.3_NA45G3_DEP_GB, CFP.E.3_NLD36G5_GB, CFP.E.4_NA20G5, CFP.E.4_NA20G5_NBL, 
//CFP.E.4_NA45G3_DEP_GB, CFP.E.4_NLD36G5_GB, CFP.O.1_NA20G5, CFP.O.1_NA20G5_NBL, CFP.O.3_NA45G3_DEP_GB, CFP.O.3_NLD36G5_GB, 
//CFP.R.2_NA20G5, CFP.R.2_NA20G5_NBL, CFP.R.2_NA45G3_DEP_GB, CFP.R.2_NLD36G5_GB, CFP.R.5_NA20G5, CFP.R.5_NA20G5_NBL, CFP.R.5_NA45G3_DEP_GB, 
//CFP.R.5_NLD36G5_GB, HV36DMY.E.1, HV36DMY.R.2, HVEOD.E.1_NA20G5, HVEOD.E.1_NA20G5_NBL, HVEOD.E.2_NA20G5, HVEOD.E.2_NA20G5_NBL, 
//HVEOD.E.3_NA20G5, HVEOD.E.3_NA20G5_NBL, HVESD.C.1.1_PNP_36, HVESD.E.13.1_PNP_36, HVESD.E.13_PNP_36, HVESD.E.14_PNP_36, HVESD.E.2_PNP_36, 
//HVESD.E.31.1_PNP_36, HVESD.E.33_PNP_36, HVESD.E.34_PNP_36, HVESD.E.39.1_PNP_36, HVESD.E.40.1_PNP_36, HVESD.E.41.1_PNP_36, 
//HVESD.E.5_PNP_36, HVESD.E.6.1_PNP_36, HVESD.E.7_PNP_36, HVESD.E.8.1_PNP_36, HVESD.E.9.1_PNP_36, HVESD.R.13_PNP_36, HVESD.R.18.1_PNP_36, 
//HVESD.R.1_PNP_36, HVESD.R.3_PNP_36, HVESD.S.1_PNP_36, HVESD.S.3_PNP_36, HVESD.S.4_PNP_36, HVESD.S.7.1_PNP_36, HVESD.W.22.1_PNP_36, 
//HVESD.W.2_PNP_36, HVESD.W.3_4_5_PNP_36, HVNP.C.3_NA20G5, HVNP.C.3_NA20G5_NBL, HVNP.C.3_NA45G3_DEP_GB, HVNP.C.3_NLD36G5_GB, 
//HVNW.E.1_NA45G3_DEP_GB, HVNW.E.1_NLD36G5_GB, HVNW.E.2_NA45G3_DEP_GB, HVNW.E.2_NLD36G5_GB, HVOD.C.3.3_NA20G5, HVOD.C.3.3_NA20G5_NBL, 
//HVOD.C.3.3_NA45G3_DEP_GB, HVOD.C.3.3_NLD36G5_GB, HVOD.C.3.3_PA36G5_BL_GB, HVOD.C.3.4_NA20G5_NBL, HVOD.C.3.5_NA20G5_NBL, HVOD.C.4_NA20G5, 
//HVOD.C.4_NA20G5_NBL, HVOD.C.4_PA36G5_BL_GB, HVOD.E.7_NA20G5_NBL, HVOD.E.8_PA36G5_BL_GB, HVOD.E.9_PA36G5_BL_GB, HVOD.R.17_NA20G5, 
//HVOD.R.17_NA20G5_NBL, HVOD.R.17_NA45G3_DEP_GB, HVOD.R.17_NLD36G5_GB, HVOD.R.17_PA36G5_BL_GB, HVOD.S.1_PA36G5_BL_GB, HVOD.W.4_NA20G5_NBL, 
//HVOD.W.4_PA36G5_BL_GB, HVPB.E.2_NLD36G5_GB, HVPO.E.4_PA36G5_BL_GB, HVPO.E.5_PA36G5_BL_GB, HVPO.E.7_NA20G5, HVPO.E.7_NA20G5_NBL, 
//HVPO.O.10_NA45G3_DEP_GB, HVPO.O.10_NLD36G5_GB, HVPO.O.3_NA20G5, HVPO.O.3_NA20G5_NBL, HVPO.O.8_PA36G5_BL_GB, HVPO.S.5_NA45G3_DEP_GB, 
//HVPO.S.5_NLD36G5_GB, HVPO.W.4_NA20G5, HVPO.W.4_NA20G5_NBL, HVPO.W.4_NA45G3_DEP_GB, HVPO.W.4_NLD36G5_GB, HVPO.W.4_PA36G5_BL_GB, 
//HVPW.C.1_NA45G3_DEP_GB, HVPW.E.5_PA36G5_BL_GB, HVPW.E.6_PA36G5_BL_GB, HVPW.E.7_NA45G3_DEP_GB, HVPW.O.1_NA45G3_DEP_GB, M1.DN.1, 
//M1.DN.2, M2.DN.1, M2.DN.2, M2.R.2, M3.DN.1, M3.DN.2, M3.R.2, M4.DN.1, M4.DN.2, M4.R.2, M5.DN.1, M5.DN.2, M6.DN.1, M6.DN.2, 
//NBLSLOT.E.1_NA45G3_DEP_GB, NBLSLOT.E.1_NLD36G5_GB, NBLSLOT.E.2_NLD36G5_GB, NBLSLOT.E.3_NLD36G5_GB, NBLSLOT.E.4_NA45G3_DEP_GB, 
//NBLSLOT.E.5_NA45G3_DEP_GB, NBLSLOT.S.1_NA45G3_DEP_GB, NBLSLOT.S.1_NLD36G5_GB, NBLSLOT.W.1_NA45G3_DEP_GB, NBLSLOT.W.1_NLD36G5_GB, 
//NDD.E.1_NA20G5, NDD.E.1_NA20G5_NBL, NDD.E.3_NA20G5, NDD.E.3_NA20G5_NBL, NDD.E.4_NA20G5, NDD.E.4_NA20G5_NBL, NDD.E.5_NA20G5, 
//NDD.E.5_NA20G5_NBL, NDD.O.1_NA20G5, NDD.O.1_NA20G5_NBL, OD.EX.1, RPO.A.2, SERRES.C.1, SERRES.C.2, SERRES.C.4, SERRES.C.6, 
//SERRES.E.1, SERRES.E.2, SERRES.E.3, SERRES.E.4, SERRES.E.5, SERRES.E.6, SERRES.L.1, SERRES.R.4, SERRES.R.5, SERRES.R.6, SERRES.R.8, 
//SERRES.S.1, SERRES.W.1, SH_N.C.13_NA45G3_DEP_GB, SH_N.C.13_NLD36G5_GB, SH_N.E.3_NA20G5_NBL, SH_N.E.3_NA45G3_DEP_GB, SH_N.E.3_NLD36G5_GB, 
//SH_N.E.4_PA36G5_BL_GB, SH_N.E.5_NA45G3_DEP_GB, SH_N.E.5_NLD36G5_GB, SH_N.E.6_NA45G3_DEP_GB, SH_N.E.6_NLD36G5_GB, SH_N.O.1_NA45G3_DEP_GB, 
//SH_N.O.1_NLD36G5_GB, SH_N.O.2_NA45G3_DEP_GB, SH_N.O.2_NLD36G5_GB, SH_P.C.3_NA20G5, SH_P.C.3_NA20G5_NBL, SH_P.C.6_NA20G5_NBL, 
//SH_P.C.8_NA20G5, SLITDMY.E.1_NA45G3_DEP_GB, SLITDMY.E.1_NLD36G5_GB, VTDN.E.1_NA45G3_DEP_GB, VTDN.E.4_NA45G3_DEP_GB
//   2)Modify rule: NBLSLOT.C.3, HVOD.C.1, HVOD.C.1_GB, HVOD.C.6, HVOD.E.1, HVOD.E.1_GB, HVOD.E.2, HVOD.E.3, HVEOD.R.1, HVNW.W.1, HVNW.S.1, 
//HVPW.W.1, HVPW.R.1, HVDMY.R.6, SH_N.E.2, SH_N.E.2_GB, PSUB.C.1, RES.3_PO, RES.3_OD, NP.O.1
//   3)Enhance coding: ESD.10g, HVLUP.R.15
//  06/18/2018 - Ver 1.3a HLGUO
//    1)Add Rules: AMT.S.1, ESD.5.1g, ESD.5.2g, ESD.WARN.4, ESD.WARN.5, G.1:LUPWDMY_2, G.1:M0i, G.1:MSIi, G.1:SICR_V1i, 
//   G.2:LUPWDMY_2, G.2:M0i, G.2:MSIi, G.2:SICR_V1i, G.3:LUPWDMY_2, G.3:M0i, G.3:MSIi, G.3:SICR_V1i, H18NWDMY.R.5, HVESD.S.16_36V, 
//   HVESD.S.17_36V, HVESD.S.18_36V, HVESD.S.19_36V, HVESD.S.20_36V, HVESD.S.21_36V, HVESD.S.25_36V, HVESD.S.27_36V, HVESD.S.30_36V, 
//   HVESD.S.32_36V, HVESD.S.34_36V, HVESD.S.36_36V, HVESD.S.38_36V, HVLUP.C.10_HVDMY_24_20_16_12_9_6_GA, HVLUP.C.10_HVDMY_29_GA, 
//   HVLUP.C.10_HVDMY_36_GB, HVLUP.C.10_HVDMY_45_GB, HVLUP.C.10_HVDMY_5_GA, HVLUP.C.11_HVDMY_24_20_16_12_9_6_GA, HVLUP.C.11_HVDMY_29_GA, 
//   HVLUP.C.11_HVDMY_36_GB, HVLUP.C.11_HVDMY_45_GB, HVLUP.C.11_HVDMY_5_GA, HVLUP.C.2_HVDMY_36_GB, HVLUP.C.3_HVDMY_36_GB, HVLUP.C.4_HVDMY_36_GB, 
//   HVLUP.C.5_HVDMY_36_GB, HVLUP.C.6_HVDMY_36_GB, HVLUP.C.7_HVDMY_36_GB, HVLUP.C.8_HVDMY_36_GB, HVLUP.C.9_HVDMY_24_20_16_12_9_6_GA, 
//   HVLUP.C.9_HVDMY_29_GA, HVLUP.C.9_HVDMY_36_GB, HVLUP.C.9_HVDMY_45_GB, HVLUP.C.9_HVDMY_5_GA, HVLUP.E.1_HVDMY_36_GB, HVLUP.E.2_HVDMY_36_GB, 
//   HVLUP.E.3_HVDMY_36_GB, HVLUP.E.4_HVDMY_36_GB, HVLUP.E.7_HVDMY_36_GB, HVLUP.E.8_HVDMY_36_GB, HVLUP.W.11_HVDMY_36_GB, HVLUP.W.1_HVDMY_36_GB, 
//   HVLUP.W.2_HVDMY_36_GB, HVLUP.W.3_HVDMY_36_GB, HVLUP.W.4.1_HVDMY_36_GB, HVLUP.W.4_HVDMY_36_GB, HVLUP.W.5_HVDMY_36_GB, HVLUP.W.6_HVDMY_36_GB, 
//   HVLUP.W.7_HVDMY_36_GB, HVLUP.W.8_HVDMY_36_GB, HVRPO.C.1, HVRPO.C.3_SBD_12V, HVRPO.C.3_SBD_16V, HVRPO.C.3_SBD_24V, LUP.10g__LUP.13g, 
//   LUP.14g, LUP.2.2g, LUP.3.1g_1.8V, LUP.5.1g_1.8V, LUP.WARN.1, NBL.R.3.1 
//   2)Delete Rules:M1.DN.1, M1.DN.2
//   3)Modify Rules:NBL.W.1, NBL.R.3, NBL.R.8, LVISO.R.8, NBL.R.2, SH_N.E.1, NT_N.R.7, RES.2, RES.HRI.8, ESD.26g, ESD.5g, ESD.40g, HVLUP.R.15, HVLUP.R.6, ESD.40
//   4)Modify VDD_TEXT and VSS_TEXT default value
//   5)Build connectivity for TFR resistor
//   6)Enhance Coding: PO.R.4, ESD.10g, HVMOS.R.5
//   7)Enhance layer definition: NMOS_filter
//   8)Add 36V Voltage Group for HVLUP and parasitic HVESD rules check & Modify 5V Voltage Group HVLUP rules' value
// 07/18/2018 - Ver 1.3_1a K.Q.Ying
//   1) Update version
//   09/27/2018 - Ver 1.3_2a S.S. Wang
//     1) Enhance DRC to identify 5V LV ESD clamps on the Net in parasitic flow 
//     2) Add HV9ISO, HV29ISO and HV45ISO into HVDMY in parasitic flow
//     3) Modified rules: HVOD.C.2.1, HVOD.C.1_GB, AMT.S.1
//     4) Deleted rules: Mx.R.2
//     5) Add rule: AMT.S.1.1U
// 02/22/2019 - Ver 1.4a_pre022219 J. Xia
//     1) Add rule: PSUB.R.2
// 04/30/2019 - Ver 1.3_3a X.Y. Geng
//     1) Modify rules: H18NWDMY.R.5, LVISO.R.4
//     2) Enhance coding: CFP.R.6_PA29G5_BL
// 08/23/2019 - Ver 1.3_4a L.Wu
//     1) Add rules: HVBJT.R.1_NPDDSHNNBL_PO_BOUNDARY,HVBJT.R.1_NPWSHNNBL_PO_BOUNDARY,HVBJT.R.1_PNDDPSUB,HVBJT.R.1_PHVNWPSUB_GB,HVBJT.R.1_PNDDSHPNBL,HVBJT.R.1_NPDDSHNNBL_BGR8,HVBJT.R.1_NPWSHNNBL_BGR8,HVBJT.R.5_NPDDSHNNBL_PO_BOUNDARY,HVBJT.R.5_NPWSHNNBL_PO_BOUNDARY,HVBJT.R.5_PNDDPSUB,HVBJT.R.5_PHVNWPSUB_GB,HVBJT.R.5_PNDDSHPNBL,HVBJT.R.5_NPDDSHNNBL_BGR8,HVBJT.R.5_NPWSHNNBL_BGR8,HVBJT.R.6_NPDDSHNNBL_PO_BOUNDARY,HVBJT.R.6_NPWSHNNBL_PO_BOUNDARY,HVBJT.R.6_PNDDSHPNBL,HVBJT.R.6_NPDDSHNNBL_BGR8,HVBJT.R.6_NPWSHNNBL_BGR8,HVOD.S.4,M1.E.3,M1.E.4,MOM.R.3,NBL.R.5,SH_N.R.4,RM.WARN.1,RM.WARN.3,RM.WARN.4,DPW.R.3,LDNLVT.R.1,RES.HV.S.1,RES.HV.S.2,RES.HV.S.3,RES.HV.S.4,RES.HV.S.5,RES.HV.S.6
//     2) Modify rules: LVISO.R.8,NBL.R.2,Mx.DN.2,Mn.DN.2,NTN.R.7
//     3) Enhance rules: MOM.A.1, AN.R.40m, SDIO.R.1, NWR.R.7

//-------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------
//
// DUMMY LAYER REQUIRED:
//
//  1) HOTWL   - Hot N-Well
//               N-Well not connected to the most positive voltage Vdd is defined as Hot N-Well. 
//               It must follow different width and space rules from the N-Well connected to 
//               Vdd (Cold N-Well). Use "HOTWL" layer to exactly cover the Hot N-Well area for 
//               correct N-Well DRC.
//
//  2) EXCL    - UN-DRC area
//               If there's any area with different rules and not to be checked in this run, 
//               use the "EXCL" layer to exactly cover the area to be excluded.
//
//  3) SDI     - I/O ESD Protection Circuit
//               For I/O guidance rule checking, use "SDI" layer to designate the ESD area to 
//               checked. The whole ESD devices should be covered by "SDI".
//
//  4) DPDMY   - Dummy Pad area
//               For chip corner dummy pad, use "DPDUMMY" layer to cover dummy pad area.
//
//  5) PLDMY   - Power Line
//               For chip corner power line, use "PLDUMMY" layer to cover whole power line area.
//
//  6) RWDMY   - NWell Resistor
//               The N-Well region covered by both RWDMY and RPO is the NW within OD resistor.
//               The N-Well region covered by only RWDMY is the NW under STI resistor.
//
//  7) DRCDMY  - TSMC reserved layer.
// 
//  8) ESD1DMY - IO ESD region dummy layer, RPO must enclose whole gate.
//     ESD2DMY - RPO enclose gate 0.05 for 3.3V.
//
//  9) DMN2V   - Dummy layer to ensure N2V in N+ poly/od resistor.
//     DMP2V   - Dummy layer to ensure P2V in P+ poly/od resistor.
//
// 10) RLPPDMY - LPP high resistance poly resistor
//               Use "RLPPDMY" to exactly cover LPP high resistance poly resistor area.
//
// 11) WBDMY   - Dummy layer to cover the CUP pad.
//
// 12) CTMDMY  - Capacitor bottom plate
//               Use "CTMDMY" to cover capacitor bottom plate in mixed-signal process.
//
// 13) INDDMY  - Dummy layer for inductor recognition in mixed-signal process.
//
// 14) LUPWDMY - DRC dummy layer to waive Latch-Up rules for verified IP. 
//-------------------------------------------------------------------------------------------
//
//                      CURRENT STATUS
//
//  RULES NOT IMPLEMENTED:
//
//  The following rules are not coded in this rule file:
//
//  rule                      description/explanation/alternate file
//  ------------------------  ----------------------------------------------------
//  Part I recommendations    Not coded (page 3 of spec.)
//
//  Antenna rules             Please refer to Antenna DRC deck.
//
//  Passivation rules         Please refer to Bond PAD DRC deck.
//
//  Metal Fuse rules          Please refer to Metal Fuse DRC deck.
//
//  Seal Ring rules           Not coded.
//
//  SRAM rules                Not coded.
//
//  Chip Corner Power Line    Only ADP.1/ADP.S.1/ADP.C.1/ADP.C.2/ADP.E.1
//  and Dummy PAD             /ADP.W.1/ADP.W.2/ADP.E.2 
//                            rules are coded.
//
//  * Guidelines implemented :
//
//    1) Partial I/O ESD GuideLines are implemented: 6,8,18~34,37.
//       Others are not implemented because of guideline.
//
//    2) Partial LatchUp GuideLines are implemented: 1,2,3,4,5,6
//       Others are not implemented because of guideline.
//
//    3) Dummy PAD Guidlines implemented: ADP.S.2 ADP.W.3 ADP.W.4
//
//    4) Seal Ring rules are not implemented: SR.S.1 SR.E.1 
//
//    5) Metal stress relief guideline rules are not implemented.
//



//-------------------------------------------------------------------------------------------
//	
//  * To correctly use this DRC deck, the following settings are very important in
//    this DRC command file:
//	
//  (0) Calibre v2010.4_26.16 (Dec. 2010) is used to develop and QA this command file. 
//      Please execute the DRC with this or newer TSMC qualified version of Calibre.
//
//==================================================================================================================
//  (1) Process selection:
//
//	For this 0.18um process, please do not turn on the switches . Please keep them off.
//              //#DEFINE LP       // turn on only when you use Low Power process,otherwise please turn off it  
//


//  (2) Variable for High Voltage & Core Voltage:
//
//	Please choose proper voltages for the core and I/O devices in the logic section.
//	The setting should be:
//
//		#DEFINE 5V 	// when HIGH_VOLTAGE is 5V
//		//#DEFINE 2.5V 	// when HIGH_VOLTAGE is 2.5V
//		//#DEFINE 3.3V 	// when HIGH_VOLTAGE is 3.3V
//		#DEFINE 1.8V 	// when CORE_VOLTAGE is 1.8V
//		//#DEFINE 1.5V 	// when CORE_VOLTAGE is 1.5V
//
//	To execute the runset with I/O voltage equals 5V and core voltage as 1.8V.
//

//  (3) Variable for check SRAM inside layer EXCL:
//
//	By default, we include DRC check inside SRAM region covered by exclude layer "EXCL(55)".
//	However, customers could turn off this option to check M2 and upward layers inside EXCL
//	in order to check logic rules inside SRAM.
//	Please notice that by default, this option will disable the waiving function of EXCL, 
//	and the region covered by EXCL will be examined with M2 and upward layers' rules.
//	Please add // to this option:
//
//		//#DEFINE CHECK_SRAM_EXCL
//
//  (4) Sealring option: 
//  By default, this option is enable for whole chip layout with sealring structure.
//  Chip corner, Sealring, Assembly isolation, chip edge, and exclusion for density check will be affected 
//  by this options. If sealring is not assembled in chip layout, please turn off this option.     
//  If the option "FULL_CHIP" is disable, this option does not work.
//		//#DEFINE WITH_SEALRING
//
//  (5) Variable for MD&VIAD rule checking:
//
//	By default, MD&VIAD rules are checked in this deck. If MD&VIAD rules are not required
//	to check, please add // to this option:
//
//		//#DEFINE CHECK_ALRDL
//

//  (6) Variable for dummy OD&PO rule checking:
//
//	By default, dummy OD&PO are checked by rules in this deck. But some unnecessary rule
//	checks may induce false alarm. If dummy OD&PO are not required to check, please
//	add // to this option:
//
//		//#DEFINE CHECK_DUMMY_ODPO
//
//
//	Note: If this option is disabled, please make sure the LVS result is correct after 
//	      dummy insertion to prevent from dummy pattern induced layout circuit short.
//
//  (7) Variable for Mixed-Signal/RF circuit design:
//
//	By default, this DRC deck is used for Mixed-Signal/RF process. When this DRC deck is
//	used for general Logic process, please add // to this option:
//
//		//#DEFINE MIX_MODE
//

//  (8) FULL_CHIP :
//    By default, this option is for whole chip layout for the rules about sealring and dummy PAD.   
//    If the layout is a cell, please add // to this option.
//            
//              //#DEFINE FULL_CHIP
//
//  (9) Variable for Thick Top Metal check:
//
//      By default, the Top Metal is 40K Top Metal.   
//      If customer uses 15KA Top Metal, please remove // to the option 'THICK_15K' and add // to 'THICK_30K', 'THICK_40K'.  
//      If customer uses 30KA Top Metal, please remove // to the option 'THICK_30K' and add // to 'THICK_40K', 'THICK_15K'.  
//      If customer uses Normal Top Metal, please add // to the option 'THICK_40K', 'THICK_30K' and 'THICK_15K'.
//
//      For 30KA Top Metal
//              #DEFINE THICK_30K
//              //#DEFINE THICK_40K
//              //#DEFINE THICK_15K
//
//      For 15KA Top Metal
//              //#DEFINE THICK_40K
//              //#DEFINE THICK_30K
//              #DEFINE THICK_15K
//
//      For Normal Top Metal
//              //#DEFINE THICK_40K
//              //#DEFINE THICK_30K
//              //#DEFINE THICK_15K
//

//  (10) Variable for Two Top Metal check:
//
//      By default, there is only 1 Top Metal .   
//      If customer uses two Top Metal, please remove // to the option 'DTM' as following:   
//
//              #DEFINE DTM
//
//  (11) Variable for recommended rule check:
//
//	By default, recommended rules are not checked, but it is suggested to remove // to 
//	enable this option from the point of view of noise isolation and SPICE model accuracy.
//	The recommended rule check includes NWR.R.7, VIAx.E.3, UTM20K/40K.I.3, UTM20K/40K.C.1, ESDIMP.EN.1 and RES rules.
//
//		#DEFINE Recommend
//

//  (12) Variable for substrate to ground check:
//
//	By default, this deck set substrate not tied to ground. If substrate is tied to ground,
//	please remove // to this option:
//
//		#DEFINE SubToGround
//

//  (13) Latch-up guideline check:
//
//	By default, This command file will check Latch-up guideline rules,
//	please add // if you don't want check these rules:
//
//		//#DEFINE GUIDELINE_LUP
//
//  (14) DISCONNECT_ALL_RESISTOR & CONNECT_ALL_RESISTOR:
//  By default, the connection is broken by resistors with dummy layer RES200 for Latch-Up rule checks. 
//  The switches of DISCONNECT_ALL_RESISTOR and CONNECT_ALL_RESISTOR can control the connectivity of resistor.
//  Turn on DISCONNECT_ALL_RESISTOR option will disconnect all resistors between pad and device for Latch-Up rule check.
//  Turn on CONNECT_ALL_RESISTOR option will connect all resistors between pad and device for Latch-Up rule check.
//	    //#DEFINE DISCONNECT_ALL_RESISTOR 
//		//#DEFINE CONNECT_ALL_RESISTOR
//
//  (15) ESD guideline check:
//
//	By default, This command file will check ESD guideline rules,
//	please add // if you don't want check these rules:
//
//      	//#DEFINE GUIDELINE_ESD
//
//  (16) Variable CHECK_LATCHUP_BY_TEXT:
//     DRC uses CB/UBM layer to recognize PAD, and uses the connection
//     of well strap to distinguish IO PAD and VDD/VSS PAD. So latch-up rules can not be
//     checked in cell level if no CB/CBD/CB2/UBM layer exists. Also,if VDD/VSS pad is not
//     connected to strap, it will be falsely recognized as IO pad. 
//     You can remove // this option to solve these inconveniences. Assign the PAD/VDD/VSS pin name in
//     Variables (PAD_TEXT/VDD_TEXT/VSS_TEXT). Notice that only text by metal pin layer in top cell
//     is used for latch-up check.
//
//     By default, the switch CHECK_LATCHUP_BY_TEXT is off. If you want to recognize VDD/VSS/PAD by pin name,
//     you could remove // this switch as follow:
//
//              #DEFINE CHECK_LATCHUP_BY_TEXT
//
//  (17) DENSITY_IN_BLOCKAGE :
//      By default, this option is for local density check. 
//      If customer want to check local density within blockage layers only, please remove // to this option.
//
//              #DEFINE DENSITY_IN_BLOCKAGE
//
//  (18) BigSealringCorner option:
//      If customer requests TSMC to add chip corner stress relief pattern, seal ring and CDU,
//	    empty areas in 4 chip corners must be reserved and no layout is allowed inside. 
//	    By default, this option is enabled and "big seal-ring corner" will be used as chip 
//      corner stress relief patterns.
//	            #DEFINE BigSealringCorner
//	            // #DEFINE SmallSealringCorner  
//
//  (19) SmallSealringCorner option:
//  	If customer requests TSMC to add chip corner stress relief pattern, seal ring and CDU,
//	    empty areas in 4 chip corners must be reserved and no layout is allowed inside. 
//      If "SmallSealringCorner" structure is used as chip corner stress relief patterns in 
//      your design, please remove // this option for proper checking as below :
//              // #DEFINE BigSealringCorner  
//              #DEFINE SmallSealringCorner  
//     
//  (20) ALL_AREA_IO:
//		Plese remove // to turn on for treat OD injector as same as AAIO .
//		#DEFINE ALL_AREA_IO
//      
//---------------------------------------------------------------------

// (21) PARASITIC_ESD:
//       By default, this deck check the PARASITIC_ESD, otherwise please add // to turn off to disable check Parasitic ESD rules
//      #DEFINE PARASITIC_ESD           // Turn off to disable check Parasitic ESD rules
//
// (22) CHECK_ALL_IO_LATCHUP:
//       By default, this deck checks the HVLUP rules for those well-defined I/O devices only. If the I/O pad connected devices are neither High-side I/O HV devices nor Low-side I/O HV devices, all of related 
//		 HVLUP rules will not be checked. However, in certain application, the latch-up rule checking is necessary for those non-covered I/O pad connected devices. For the case ,please remove // to turn on the CHECK_ALL_IO_LATCHUP  
//       After that, HVLUP rules will be checked on all of I/O pad connected HVMOS .
//       #DEFINE CHECK_ALL_IO_LATCHUP           
//
// (23) CHECK_HVLUP_WITH_175C:
//     It's default off and DRC checks the HVLUP rules with 125C. For automative 175C application, please turn on it for  
//     automative 175C application. It turn on for HVLUP.C.2.1/ HVLUP.C.3.1/HVLUP.C.4.1/HVLUP.C.5.1/HVLUP.C.6.1 rule check.

//-------------------------------------------------------------------------------------------

/*SWITCH DEFINITION START*/
//
// OPTION SETUP
//===============
//#DEFINE CHECK_SRAM_EXCL // turn on only when you want check M2 and upward layers in SRAM region covered by EXCL. otherwise please turn off it

//#DEFINE CHECK_ALRDL       // MD & VIAD is not allowed in this process, please keep this switch off

#DEFINE CHECK_DUMMY_ODPO  // turn on only when you want check Dummy OD&PO. otherwise please turn off it

#DEFINE GUIDELINE_LUP     // turn on only when you want check latchup guideline rules. otherwise please turn off it
//#DEFINE DISCONNECT_ALL_RESISTOR    // turn on only when you want to disconnect all resistors to check latchup rules, otherwise please turn off it
//#DEFINE CONNECT_ALL_RESISTOR       // turn on only when you want to connect all resistors to check latchup rules, otherwise please turn off it
#DEFINE GUIDELINE_ESD     // turn on only when you want check ESD guideline rules. otherwise please turn off it
//#DEFINE Recommend       // turn on only when you want to check Recommended rules. otherwise please turn off it

#DEFINE SubToGround     // turn on only when substrate is tied to ground. otherwise please turn off it


#DEFINE MIX_MODE          // turn on only when you use Mixed-Singal/RF process. otherwise please turn off it

//#DEFINE LP          // turn on only when you use Low Power process. otherwise please turn off it 

#DEFINE PARASITIC_ESD                 // Turn on to check Parasitic ESD rules . otherwise please turn off it
#DEFINE THICK_40K       // turn on only when 40KA Thick Top Metal is used. otherwise please turn off it
//#DEFINE THICK_30K       // turn on only when 30KA Thick Top Metal is used. otherwise please turn off it
//#DEFINE THICK_15K       // turn on only when 15KA Thick Top Metal is used. otherwise please turn off it

//#DEFINE DTM         // turn on only when the process is double top metal. otherwise please turn off it
#DEFINE 5V 	// turn on only when HIGH_VOLTAGE is 5V. otherwise please turn off it
//#DEFINE 3.3V 	// turn on only when HIGH_VOLTAGE is 3.3V. otherwise please turn off it
//#DEFINE 2.5V 	// turn on only when HIGH_VOLTAGE is 2.5V. otherwise please turn off it
#DEFINE 1.8V 	// turn on only when CORE_VOLTAGE is 1.8V. otherwise please turn off it
//#DEFINE 1.5V 	// turn on only when CORE_VOLTAGE is 1.5V. otherwise please turn off it

//#DEFINE CHECK_LATCHUP_BY_TEXT       // Turn on to recognize IO PAD by following text  
VARIABLE PAD_TEXT  "?"       // pin name of PAD
VARIABLE VDD_TEXT  "VDD?" "AVDDBG" "AVDDR" "AVDWELL" "VDWELL" "VD33APST" "VDD5V" "TAVD33" "VD33PST" "AVDD" "TAVDD" "TAVD33PST" "TAVDDPST" "AVD33B" "VDD" "AVD33G" "DVDD" "AVDDG" "AVDDB" "VDDG" "VDDPST" "VD33REF" "VD33" "AVD33R" "VDDSA"    // pin name of VDD
VARIABLE VSS_TEXT  "VSS?" "VSSPST" "AVS33R" "AVSSUB" "VSSREF" "VSSAPST" "VS33APST" "DVSS" "AVS33G" "AVSSBG" "TAVSS" "AVS33B" "AVSSB" "GND" "VSSG" "VSSUB" "VSS" "AVSS" "TAVSSPST" "AGND" "AVSSR" "AVSSG"    // pin name of VSS 

#DEFINE FULL_CHIP           // Turn on for chip level design of sealring and dummy PAD, otherwise please turn off it.

//#DEFINE DENSITY_IN_BLOCKAGE     // turn on only when to check density within blockage layers
#DEFINE BigSealringCorner         // Turn on to use big seal-ring corner for whole chip design
//#DEFINE SmallSealringCorner     // Turn on to use small seal-ring corner for whole chip design
#DEFINE WITH_SEALRING			// Turn on to check sealring rules

//#DEFINE ALL_AREA_IO   // Turn on for treat OD injector as same as AAIO
//#DEFINE CHECK_ALL_IO_LATCHUP
//#DEFINE CHECK_HVLUP_WITH_175C  // Trun on for automative 175C application. otherwise please turn off it


//
// ENVIRONMENT SETUP
//------------------
PRECISION    1000
RESOLUTION     5   //Set layout grid  check to 0.005

LAYOUT SYSTEM GDSII
LAYOUT PATH "GDSFILENAME"
LAYOUT PRIMARY "TOPCELLNAME"

DRC RESULTS DATABASE "DRC_RES.db"
DRC SUMMARY REPORT "DRC.rep" 
DRC CHECK TEXT ALL
DRC MAXIMUM RESULTS ALL
//DRC INCREMENTAL CONNECT YES
DRC EXCLUDE FALSE NOTCH NO

FLAG OFFGRID YES     // For layout grid check. default grid value is resolution size
FLAG ACUTE YES
FLAG SKEW YES
FLAG NONSIMPLE YES
FLAG NONSIMPLE PATH YES

LAYOUT PROCESS BOX RECORD YES
/* SWITCH DEFINITION END */


VARIABLE  GRID      0.005
VARIABLE  G_1 		5




VARIABLE OD_W_3_J 0.42
VARIABLE OD_W_3_T 0.8
VARIABLE OD_C_7 0.36
VARIABLE M1_W_1 0.23
VARIABLE M1_S_1 0.23
VARIABLE M2_W_1 0.28
VARIABLE M2_S_1 0.28
VARIABLE M3_W_1 0.28
VARIABLE M3_S_1 0.28
VARIABLE M4_W_1 0.28
VARIABLE M4_S_1 0.28
VARIABLE M5_W_1 0.44
VARIABLE M5_S_1 0.46
VARIABLE M1_THICKNESS 0.53
VARIABLE M2_THICKNESS 0.53
VARIABLE M3_THICKNESS 0.53
#IFDEF DTM
VARIABLE M4_THICKNESS 0.99
#ELSE
VARIABLE M4_THICKNESS 0.53
#ENDIF
#IFDEF THICK_40K
VARIABLE M5_THICKNESS 4.6
#ELSE
#IFDEF THICK_30K
VARIABLE M5_THICKNESS 3.5       // The Thickness of Top Metal is 30K A
#ELSE
  #IFDEF THICK_15K
  VARIABLE M5_THICKNESS 1.6     // The Thickness of Top Metal is 15K A
  #ELSE
  VARIABLE M5_THICKNESS 0.99    // The Thickness of Top Metal is 9.9K A
  #ENDIF
#ENDIF
#ENDIF  
VARIABLE MOM_S_2 0.5
VARIABLE MOM_A_1 1090000000.0



VARIABLE OD_C_2_1 0.6
VARIABLE OD_C_4_1 0.8
VARIABLE OD_W_1 0.22
VARIABLE OD_EX_1 0.18


VARIABLE PO_C_2   0.32
VARIABLE PP_W_1   0.44
VARIABLE PP_S_1   0.44
VARIABLE PP_C_1   0.26
VARIABLE PP_C_5   0.32
VARIABLE PP_E_1   0.18
VARIABLE PP_E_6   0.18
VARIABLE PP_E_6_2   0.18
VARIABLE NP_W_1   0.44
VARIABLE NP_S_1   0.44
VARIABLE NP_C_1   0.26
VARIABLE NP_C_5   0.32
VARIABLE NP_E_1   0.18
VARIABLE RPO_S_1  0.43
VARIABLE RPO_A_2  1.0
VARIABLE RPO_C_2  0.22
VARIABLE CO_E_3   0.12
VARIABLE CO_E_4   0.12
VARIABLE M1_S_2   0.6
VARIABLE M1_S_2_1 0.6
VARIABLE M1_S_2_2 0.6
VARIABLE M1_S_2_L 35.0 
VARIABLE M2_S_2_1 0.6
VARIABLE M2_S_2_2 0.6
VARIABLE M2_S_2_L 35.0 
VARIABLE M3_S_2_1 0.6
VARIABLE M3_S_2_2 0.6
VARIABLE M3_S_2_L 35.0 
VARIABLE M4_S_2_1 0.6
VARIABLE M4_S_2_2 0.6
VARIABLE M4_S_2_L 35.0 
VARIABLE M5_S_2_1 0.6
VARIABLE M5_S_2_2 0.6
VARIABLE M5_S_2_L 35.0 
VARIABLE MD_S_2_1 0.6
VARIABLE MD_S_2_2 0.6
VARIABLE MD_S_2_L 35.0 



VARIABLE M1_A_1   0.202
VARIABLE Mx_A_1   0.202
VARIABLE VIAn_W_1 0.36
VARIABLE VIAn_S_1 0.35
VARIABLE VIAD_W_1 0.36
VARIABLE VIAD_S_1 0.35
VARIABLE M1_E_3   2
VARIABLE M1_E_4   2.5
VARIABLE SR_S_1   5.0
VARIABLE SR_E_1   0.6
VARIABLE SR_E_2   4.1
VARIABLE CO_W_2   0.22
VARIABLE VIA1_W_2 0.26
VARIABLE VIA2_W_2 0.26
VARIABLE VIA3_W_2 0.26
VARIABLE VIAn_W_2 0.36


VARIABLE NW_S_3 2.0
VARIABLE NW_S_4 2.0
VARIABLE NW_C_1	0.6
VARIABLE NT_N_W_1 0.74
VARIABLE PO_C_3 0.15
VARIABLE PO_C_4 0.15
VARIABLE RES_2_W 0.42
VARIABLE RES_13 0.2
VARIABLE RES_14 0.6

VARIABLE RES_HV_S_1 0.14
VARIABLE RES_HV_S_2 0.17
VARIABLE RES_HV_S_3 0.20
VARIABLE RES_HV_S_4 0.24
VARIABLE RES_HV_S_5 0.31
VARIABLE RES_HV_S_6 0.31
VARIABLE RES_2_Nsq 5.0
VARIABLE RES_12_W 2.0
VARIABLE RES_12_Nsq 5.0
VARIABLE RES_HRI_9 0.6
VARIABLE VIA2_E_3 0.06
VARIABLE VIA3_E_3 0.06
VARIABLE VIA4_E_3 0.06
VARIABLE VIAD_E_3 0.06


VARIABLE UTM40K_W_2 3.0
VARIABLE ESD_3g 360.0

VARIABLE ESD_5g 720.0
VARIABLE ESD_5_1g 2000.0
VARIABLE ESD_5_2g 6000.0


VARIABLE ESD_10g 2.4

VARIABLE ESDIMP_W_1 0.6
VARIABLE ESDIMP_S_1 0.6
VARIABLE ESDIMP_S_2 0.6
VARIABLE ESDIMP_EN_1 0.4
VARIABLE ESDIMP_A_1 1.0
VARIABLE ESDIMP_A_2 1.0
VARIABLE DNW_W_1_0152 3.570
VARIABLE DNW_S_1_0152 5.950

VARIABLE PO_W_2_HRI 0.42

VARIABLE BJT_O_1 0.3
VARIABLE BJT_E_1 0.3
VARIABLE BJT_E_2 3.0
VARIABLE BJT_E_4 0.0
VARIABLE BJT_E_5 1.0
VARIABLE BJT_E_6	0.25
VARIABLE BJT_E_7	0.5
VARIABLE BJT_E_8	1.0
VARIABLE BJT_O_6	0.25
VARIABLE BJT_C_3	0.0
VARIABLE BJT_C_4	1.0
VARIABLE LDPO_C_1	0.8
VARIABLE LDPO_E_1	0.4
VARIABLE LDOD_S_1	0.8
VARIABLE LDOD_O_1	1.0
VARIABLE LDOD_C_1	0.95
VARIABLE LDOD_E_1	1.0
VARIABLE LDOD_W_1	0.8
VARIABLE LDNLVT_C_1	0.0
VARIABLE LDNLVT_E_1	0.8
VARIABLE LDNLVT_S_1	1.8
VARIABLE H18NWDMY_E_1	0.0
VARIABLE H18NWDMY_S_1	3.4
VARIABLE H18NWDMY_S_2	4.0
VARIABLE H18NWDMY_S_3	3.4
VARIABLE H18NWDMY_C_1	4.0
VARIABLE MTP_C_1	0.15
VARIABLE RES_HRI_12 0.25
VARIABLE RES_HRI_13 0.26


VARIABLE PO_R_2 50.0




VARIABLE AMT_S_1 10.0
VARIABLE AMT_S_1_A 25.0
VARIABLE NWR_E_1    1.0   
VARIABLE NWR_E_2    0.3   
VARIABLE NWR_C_1    0.3   
VARIABLE NWR_C_2    0.22  
VARIABLE NWR_C_3    0.3   
VARIABLE NWR_O_1    0.4   
VARIABLE NWR_E_3    0.18  
         
VARIABLE NT_N_W_2_1 1.6 
VARIABLE NT_N_W_2_2 0.5 
VARIABLE NT_N_W_3   1.2   
VARIABLE NT_N_S_1   0.86  
VARIABLE NT_N_E_1   0.26  
VARIABLE NT_N_E_2   0.86  
VARIABLE NT_N_C_1   0.52  
VARIABLE NT_N_C_2   1.66  
VARIABLE NT_N_C_3   0.86     

VARIABLE NLVT_W_1   3.2  
VARIABLE NLVT_S_1   3.2  
VARIABLE NLVT_C_1   0.65  
VARIABLE NLVT_C_2   3.2  
VARIABLE NLVT_C_3   0.8  
VARIABLE NLVT_E_1   0.8  

VARIABLE OD_C_8	    0.6
VARIABLE OD_E_1		0.6

VARIABLE NP_E_7		0.44
VARIABLE VARDMY_W_1	0.5
VARIABLE VARDMY_S_1	0.05
VARIABLE VARDMY_S_2	0.43
VARIABLE VARDMY_E_1	0.16
VARIABLE VARDMY_E_2 0.32

VARIABLE MIM_M3_W_1 35.0
VARIABLE MIM_M3_S_1 0.80
VARIABLE MIM_M3_S_2 0.80
VARIABLE MIM_M3_E_3 0.40
VARIABLE MIM_M4_W_1 35.0
VARIABLE MIM_M4_S_1 0.80
VARIABLE MIM_M4_S_2 0.80
VARIABLE MIM_M4_E_3 0.40
VARIABLE CTM_W_1  4.0
VARIABLE CTM_W_2  0.4
VARIABLE CTM_S_1  1.2
VARIABLE CTM_S_2  0.8
VARIABLE CTM_W_4  30.0
VARIABLE CTM_A_1  0.202
VARIABLE MIMVIA_S_1 2.00
VARIABLE MIMVIA_S_2 4.00
VARIABLE MIMVIA_E_1 0.24
VARIABLE MIMVIA_E_2 0.12
VARIABLE MIMVIA_C_1 0.40
VARIABLE UTM15K_E_3	0.09
VARIABLE UTM30K_E_3	0.09
VARIABLE UTM40K_E_3	0.09
VARIABLE NW_S_3_1		3.22
VARIABLE OD2_NOT_NW		0.86
VARIABLE NW_S_4_1		5.4


VARIABLE  HVOD_S_1_PA29G5_BL			0.28
VARIABLE  HVOD_S_1_PA36G5_BL_GB			1.4
VARIABLE  HVOD_S_1_PA45G5_BL_GB			2.0
VARIABLE  HVESD_W_9_2_GA				1.0
VARIABLE  HVESD_W_9_2_GB				1.0
VARIABLE  HVESD_W_15_ESDDIO_GA			1200
VARIABLE  HVESD_W_15_ESDDIO_GB			1200
VARIABLE  HVESD_W_16_ESDDIO_GA			2.0	
VARIABLE  HVESD_W_16_ESDDIO_GB			2.0	
VARIABLE  HVESD_W_17_ESDDIO_GA			2.0	
VARIABLE  HVESD_W_17_ESDDIO_GB			2.0	
VARIABLE  HVESD_W_18_ESDDIO_GA			2.0	
VARIABLE  HVESD_W_18_ESDDIO_GB			2.0	
VARIABLE  HVESD_W_19_ESDDIO_GA			100.0	
VARIABLE  HVESD_W_19_ESDDIO_GB			100.0	
VARIABLE  HVESD_W_20_ESDDIO_GA			3.0	
VARIABLE  HVESD_W_20_1_ESDDIO_GA		2.0	
VARIABLE  HVESD_W_21_ESDDIO_GA			4.0	
VARIABLE  HVESD_W_22_2_ESDDIO_GB		0.6
VARIABLE  HVESD_S_7_2_ESDDIO_GB			0.6
VARIABLE  HVESD_S_8_ESDDIO_GA			5.9
VARIABLE  HVESD_S_8_ESDDIO_GB			7.4
VARIABLE  HVESD_S_9_ESDDIO_GA			6.9
VARIABLE  HVESD_S_9_ESDDIO_GB			8.4
VARIABLE  HVESD_C_1_2_ESDDIO_GA			4.0
VARIABLE  HVESD_C_1_2_ESDDIO_GB			8.0
VARIABLE  HVESD_E_39_ESDDIO_GB			0.0
VARIABLE  HVESD_E_40_ESDDIO_GB			0
VARIABLE  HVESD_E_41_ESDDIO_GB			0.6
VARIABLE  HVESD_C_6_ESDDIO_GA			0
VARIABLE  HVESD_C_7_ESDDIO_GA			0
VARIABLE  HVESD_C_8_ESDDIO_GB			3.5
VARIABLE  HVESD_C_8_1_ESDDIO_GB			4.0	
VARIABLE  HVESD_E_3_ESDDIO_GA			4.0
VARIABLE  HVESD_E_3_ESDDIO_GB			4.0
VARIABLE  HVESD_E_6_2_ESDDIO_GA			3.0
VARIABLE  HVESD_E_6_2_ESDDIO_GB			5.0
VARIABLE  HVESD_E_8_2_ESDDIO_GA			3.0
VARIABLE  HVESD_E_8_2_ESDDIO_GB			3.0
VARIABLE  HVESD_E_9_2_ESDDIO_GA			0.0
VARIABLE  HVESD_E_9_2_ESDDIO_GB			0.0
VARIABLE  HVESD_E_24_ESDDIO_GA			2.5
VARIABLE  HVESD_E_24_ESDDIO_GB			3.0
VARIABLE  HVESD_E_25_ESDDIO_GA			0.4
VARIABLE  HVESD_E_25_ESDDIO_GB			0.4
VARIABLE  HVESD_E_26_ESDDIO_GA			6.9
VARIABLE  HVESD_E_26_ESDDIO_GB			8.4
VARIABLE  HVESD_E_27_ESDDIO_GA			0.4
VARIABLE  HVESD_E_28_ESDDIO_GB			0.4
VARIABLE  HVESD_E_29_2_ESDDIO_GA		3.0 	
VARIABLE  HVESD_E_30_ESDDIO_GB			5.4
VARIABLE  HVESD_E_31_2_ESDDIO_GB		3.0
VARIABLE  HVESD_E_32_ESDDIO_GB			4.4
VARIABLE  HVESD_R_16_ESDDIO_GA			3.0
VARIABLE  HVESD_R_16_ESDDIO_GB			3.0
VARIABLE  HVESD_R_17_ESDDIO_GA			6.0
VARIABLE  HVESD_R_17_ESDDIO_GB			6.0
VARIABLE  HVESD_W_3_1					60
VARIABLE  HVESD_W_3_2					240
VARIABLE  HVESD_W_3_1_PNP_6					60
VARIABLE  HVESD_W_3_2_PNP_6					240
VARIABLE  HVESD_W_3_1_PNP_9					60
VARIABLE  HVESD_W_3_2_PNP_9					240
VARIABLE  HVESD_W_3_1_PNP_12					60
VARIABLE  HVESD_W_3_2_PNP_12					240
VARIABLE  HVESD_W_3_1_PNP_24					60
VARIABLE  HVESD_W_3_2_PNP_24					240
VARIABLE  HVESD_W_3_1_PNP_29					60
VARIABLE  HVESD_W_3_2_PNP_29					240
VARIABLE  HVESD_W_3_1_PNP_20					60
VARIABLE  HVESD_W_3_2_PNP_20					240
VARIABLE  HVESD_W_3_1_PNP_16					60
VARIABLE  HVESD_W_3_2_PNP_16					240
VARIABLE  HVESD_W_3_1_PNP_12_PDD					60
VARIABLE  HVESD_W_3_2_PNP_12_PDD					240
VARIABLE  HVESD_W_3_1_PNP_20_PDD					60
VARIABLE  HVESD_W_3_2_PNP_20_PDD					240
VARIABLE  HVESD_W_3_1_PNP_36					60
VARIABLE  HVESD_W_3_2_PNP_36					240
VARIABLE  HVESD_W_3_1_PNP_45					60
VARIABLE  HVESD_W_3_2_PNP_45					240
VARIABLE  HVESD_W_2_PNP_6					2880
VARIABLE  HVESD_W_2_PNP_9					2880
VARIABLE  HVESD_W_2_PNP_24					2880
VARIABLE  HVESD_W_2_PNP_29					2880
VARIABLE  HVESD_W_2_PNP_16					2880
VARIABLE  HVESD_W_2_PNP_12_PDD					2880
VARIABLE  HVESD_W_2_PNP_20_PDD					2880
VARIABLE  HVESD_W_2_PNP_36					2880
VARIABLE  HVESD_W_2_PNP_45					2880
VARIABLE  HVESD_W_2_PNP_20					5760
VARIABLE  HVESD_W_2_PNP_12					5760
VARIABLE  HVESD_W_4_PNP_6				0.46
VARIABLE  HVESD_W_4_PNP_9				0.46
VARIABLE  HVESD_W_4_PNP_12				0.46
VARIABLE  HVESD_W_4_PNP_36				0.66
VARIABLE  HVESD_W_4_PNP_45				0.66
VARIABLE  HVESD_W_4_PNP_29              0.46
VARIABLE  HVESD_W_5_PNP_6				0.46
VARIABLE  HVESD_W_5_PNP_9				0.46
VARIABLE  HVESD_W_5_PNP_12				0.46
VARIABLE  HVESD_W_5_PNP_29              0.46
VARIABLE  HVESD_W_5_PNP_36				2.0
VARIABLE  HVESD_W_5_PNP_45				2.0
VARIABLE  HVESD_W_6_PNP_12_PDD          1.02
VARIABLE  HVESD_W_6_PNP_16          1.02
VARIABLE  HVESD_W_6_PNP_20				1.02
VARIABLE  HVESD_W_6_PNP_20_PDD          1.02
VARIABLE  HVESD_W_6_PNP_24              1.02
VARIABLE  HVESD_W_7_PNP_12_PDD          1.02
VARIABLE  HVESD_W_7_PNP_16          1.02
VARIABLE  HVESD_W_7_PNP_20				1.02
VARIABLE  HVESD_W_7_PNP_20_PDD          1.02
VARIABLE  HVESD_W_7_PNP_24              1.02
VARIABLE  HVESD_W_8						0.96
VARIABLE  HVESD_W_9_1					0.96
VARIABLE  HVESD_W_11_PNP_20				1.5
VARIABLE  HVESD_W_12_PNP_20				3.5
VARIABLE  HVESD_W_13_PNP_20				1.86
VARIABLE  HVESD_W_14_PNP_20				3.5
VARIABLE  HVESD_W_22_1_PNP_36			0.6
VARIABLE  HVESD_W_22_1_PNP_45			0.6
VARIABLE  HVESD_S_1_PNP_6    			0.4  
VARIABLE  HVESD_S_1_PNP_9    			0.6  
VARIABLE  HVESD_S_1_PNP_12   			0.4  
VARIABLE  HVESD_S_1_PNP_20   			0.84
VARIABLE  HVESD_S_1_PNP_29              2.5 
VARIABLE  HVESD_S_1_PNP_36   			2.9
VARIABLE  HVESD_S_1_PNP_45   			3.4 
VARIABLE  HVESD_S_2_PNP_12_PDD          1.3
VARIABLE  HVESD_S_2_PNP_16          1.6 
VARIABLE  HVESD_S_2_PNP_20				0.84
VARIABLE  HVESD_S_2_PNP_20_PDD          1.9
VARIABLE  HVESD_S_2_PNP_24              2.1
VARIABLE  HVESD_S_3_PNP_6    			2.0
VARIABLE  HVESD_S_3_PNP_9    			3.0  
VARIABLE  HVESD_S_3_PNP_12   			2.0
VARIABLE  HVESD_S_3_PNP_29              5.9  
VARIABLE  HVESD_S_3_PNP_36   			5.4
VARIABLE  HVESD_S_3_PNP_45   			9.4
VARIABLE  HVESD_S_4_PNP_6    			4.0
VARIABLE  HVESD_S_4_PNP_9    			3.5  
VARIABLE  HVESD_S_4_PNP_12   			4.0
VARIABLE  HVESD_S_4_PNP_29              6.9  
VARIABLE  HVESD_S_4_PNP_36   			6.4
VARIABLE  HVESD_S_4_PNP_45   			10.4
VARIABLE  HVESD_S_5_PNP_12_PDD          5.98
VARIABLE  HVESD_S_5_PNP_16          5.98
VARIABLE  HVESD_S_5_PNP_20				4.6
VARIABLE  HVESD_S_5_PNP_20_PDD          5.98
VARIABLE  HVESD_S_5_PNP_24              5.98
VARIABLE  HVESD_S_6_PNP_20				6.6
VARIABLE  HVESD_S_6_PNP_12_PDD          6.98
VARIABLE  HVESD_S_6_PNP_16          6.98
VARIABLE  HVESD_S_6_PNP_20_PDD          6.98
VARIABLE  HVESD_S_6_PNP_24              6.98
VARIABLE  HVESD_S_7_1_PNP_36			0.6
VARIABLE  HVESD_S_7_1_PNP_45			0.6
VARIABLE  HVESD_C_1_1_PNP_6    			2.5
VARIABLE  HVESD_C_1_1_PNP_9    			2.5  
VARIABLE  HVESD_C_1_1_PNP_12   			4.0
VARIABLE  HVESD_C_1_1_PNP_12_PDD        4.0
VARIABLE  HVESD_C_1_1_PNP_16        4.0
VARIABLE  HVESD_C_1_1_PNP_20   			4.5
VARIABLE  HVESD_C_1_1_PNP_20_PDD        4
VARIABLE  HVESD_C_1_1_PNP_24            4
VARIABLE  HVESD_C_1_1_PNP_29            4
VARIABLE  HVESD_C_1_1_PNP_36   			4.5
VARIABLE  HVESD_C_1_1_PNP_45   			8.0
VARIABLE  HVESD_C_2_PNP_12_PDD          0.1
VARIABLE  HVESD_C_2_PNP_16          0.1
VARIABLE  HVESD_C_2_PNP_20_PDD          0.1
VARIABLE  HVESD_C_2_PNP_24              0.1
VARIABLE  HVESD_C_5_3_PNP_45			0.6
VARIABLE  HVESD_E_1_PNP_6				0
VARIABLE  HVESD_E_1_PNP_12				0
VARIABLE  HVESD_E_2_PNP_6    			4.0
VARIABLE  HVESD_E_2_PNP_9    			4.0
VARIABLE  HVESD_E_2_PNP_12   			4.0
VARIABLE  HVESD_E_2_PNP_29              4.0  
VARIABLE  HVESD_E_2_PNP_36   			4.0
VARIABLE  HVESD_E_2_PNP_45   			4.0
VARIABLE  HVESD_E_4_PNP_20				4.0
VARIABLE  HVESD_E_4_PNP_12_PDD          4.0
VARIABLE  HVESD_E_4_PNP_16          4.0
VARIABLE  HVESD_E_4_PNP_20_PDD          4.0
VARIABLE  HVESD_E_4_PNP_24              4.0
VARIABLE  HVESD_E_5_PNP_6    			2.5
VARIABLE  HVESD_E_5_PNP_9    			2.5
VARIABLE  HVESD_E_5_PNP_12   			2.5
VARIABLE  HVESD_E_5_PNP_12_PDD          2.5
VARIABLE  HVESD_E_5_PNP_16          2.5
VARIABLE  HVESD_E_5_PNP_20   			2.5
VARIABLE  HVESD_E_5_PNP_20_PDD          2.5
VARIABLE  HVESD_E_5_PNP_24              2.5
VARIABLE  HVESD_E_5_PNP_29              2.5
VARIABLE  HVESD_E_5_PNP_36   			1.0
VARIABLE  HVESD_E_5_PNP_45   			3.0
VARIABLE  HVESD_E_6_1_PNP_6    			1.5
VARIABLE  HVESD_E_6_1_PNP_9    			1.5
VARIABLE  HVESD_E_6_1_PNP_12   			3.0
VARIABLE  HVESD_E_6_1_PNP_12_PDD        3.0
VARIABLE  HVESD_E_6_1_PNP_16        3.0 
VARIABLE  HVESD_E_6_1_PNP_20   			3.0
VARIABLE  HVESD_E_6_1_PNP_20_PDD        3.0
VARIABLE  HVESD_E_6_1_PNP_24            3.0
VARIABLE  HVESD_E_6_1_PNP_29            3.0  
VARIABLE  HVESD_E_6_1_PNP_36   			3.5
VARIABLE  HVESD_E_6_1_PNP_45   			5.0
VARIABLE  HVESD_E_7_PNP_9				0.3
VARIABLE  HVESD_E_7_PNP_36				0.4
VARIABLE  HVESD_E_7_PNP_45				0.4
VARIABLE  HVESD_E_8_1_PNP_6    			3.0
VARIABLE  HVESD_E_8_1_PNP_9    			3.0
VARIABLE  HVESD_E_8_1_PNP_12   			3.0
VARIABLE  HVESD_E_8_1_PNP_12_PDD        3.0
VARIABLE  HVESD_E_8_1_PNP_16        3.0
VARIABLE  HVESD_E_8_1_PNP_20   			3.0
VARIABLE  HVESD_E_8_1_PNP_20_PDD        3.0
VARIABLE  HVESD_E_8_1_PNP_24            3.0
VARIABLE  HVESD_E_8_1_PNP_29            3.0
VARIABLE  HVESD_E_8_1_PNP_36   			1.0
VARIABLE  HVESD_E_8_1_PNP_45   			3.0
VARIABLE  HVESD_E_9_1_PNP_6    			0
VARIABLE  HVESD_E_9_1_PNP_9    			0
VARIABLE  HVESD_E_9_1_PNP_12   			0
VARIABLE  HVESD_E_9_1_PNP_12_PDD        0
VARIABLE  HVESD_E_9_1_PNP_16        0
VARIABLE  HVESD_E_9_1_PNP_20   			0
VARIABLE  HVESD_E_9_1_PNP_20_PDD        0
VARIABLE  HVESD_E_9_1_PNP_24            0
VARIABLE  HVESD_E_9_1_PNP_29            0
VARIABLE  HVESD_E_9_1_PNP_36   			0
VARIABLE  HVESD_E_9_1_PNP_45   			0
VARIABLE  HVESD_E_10_PNP_20				0.6
VARIABLE  HVESD_E_11_PNP_20				0.6
VARIABLE  HVESD_E_12_PNP_12_PDD         0.48
VARIABLE  HVESD_E_12_PNP_16         0.48
VARIABLE  HVESD_E_12_PNP_20_PDD         0.48
VARIABLE  HVESD_E_12_PNP_24             0.48
VARIABLE  HVESD_E_13_PNP_36				4.0
VARIABLE  HVESD_E_13_1_PNP_36			2.1
VARIABLE  HVESD_E_14_PNP_36				5.0
VARIABLE  HVESD_E_13_PNP_45				6.0
VARIABLE  HVESD_E_13_1_PNP_45			2.6
VARIABLE  HVESD_E_14_PNP_45				7.0
VARIABLE  HVESD_E_15_PNP_20				0.42
VARIABLE  HVESD_E_16_PNP_12_PDD         0.3
VARIABLE  HVESD_E_16_PNP_16         0.3
VARIABLE  HVESD_E_16_PNP_20				0.42
VARIABLE  HVESD_E_16_PNP_20_PDD         0.3
VARIABLE  HVESD_E_16_PNP_24             0.3
VARIABLE  HVESD_E_17_PNP_20				6.6
VARIABLE  HVESD_E_17_PNP_20_PDD         6.98
VARIABLE  HVESD_E_17_PNP_12_PDD         6.98
VARIABLE  HVESD_E_17_PNP_16         6.98
VARIABLE  HVESD_E_17_PNP_24             6.98
VARIABLE  HVESD_E_18_PNP_12_PDD         0.18
VARIABLE  HVESD_E_18_PNP_16         0.18
VARIABLE  HVESD_E_18_PNP_20				0.18
VARIABLE  HVESD_E_18_PNP_20_PDD         0.18
VARIABLE  HVESD_E_18_PNP_24             0.18
VARIABLE  HVESD_E_19_PNP_12_PDD         0.8
VARIABLE  HVESD_E_19_PNP_16         0.8
VARIABLE  HVESD_E_19_PNP_20				0.8
VARIABLE  HVESD_E_19_PNP_20_PDD         0.8
VARIABLE  HVESD_E_19_PNP_24             0.8
VARIABLE  HVESD_E_20_PNP_12_PDD         0.7
VARIABLE  HVESD_E_20_PNP_16         1
VARIABLE  HVESD_E_20_PNP_24             1.5
VARIABLE  HVESD_E_21_PNP_12_PDD         0.48
VARIABLE  HVESD_E_21_PNP_16         0.48
VARIABLE  HVESD_E_21_PNP_20_PDD         0.48
VARIABLE  HVESD_E_21_PNP_24             0.48
VARIABLE  HVESD_E_22_PNP_12_PDD         0.5
VARIABLE  HVESD_E_22_PNP_16         0.8
VARIABLE  HVESD_E_22_PNP_20_PDD         1
VARIABLE  HVESD_E_22_PNP_24             1
VARIABLE  HVESD_E_23_PNP_12_PDD         0.3
VARIABLE  HVESD_E_23_PNP_16         0.3
VARIABLE  HVESD_E_23_PNP_20_PDD         0.3
VARIABLE  HVESD_E_23_PNP_24             0.3
VARIABLE  HVESD_E_29_1_PNP_6    			3.0
VARIABLE  HVESD_E_29_1_PNP_9    			3.0
VARIABLE  HVESD_E_29_1_PNP_12   			3.0
VARIABLE  HVESD_E_29_1_PNP_12_PDD           3 
VARIABLE  HVESD_E_29_1_PNP_16           3 
VARIABLE  HVESD_E_29_1_PNP_20   			3.0
VARIABLE  HVESD_E_29_1_PNP_20_PDD           3.0
VARIABLE  HVESD_E_29_1_PNP_24               3 
VARIABLE  HVESD_E_29_1_PNP_29               3 
VARIABLE  HVESD_E_31_1_PNP_36   			1.0
VARIABLE  HVESD_E_31_1_PNP_45   			3.0
VARIABLE  HVESD_E_33_PNP_29                 0.4  
VARIABLE  HVESD_E_33_PNP_36   				0.4
VARIABLE  HVESD_E_33_PNP_45   				0.4
VARIABLE  HVESD_E_34_PNP_29                 6.9
VARIABLE  HVESD_E_34_PNP_36   				6.4
VARIABLE  HVESD_E_34_PNP_45   				10.4
VARIABLE  HVESD_E_35_36_PNP_29              0.4
VARIABLE  HVESD_E_37_PNP_12   				0
VARIABLE  HVESD_E_37_PNP_20   				0
VARIABLE  HVESD_E_38_PNP_12   				3.0
VARIABLE  HVESD_E_38_PNP_20   				3.0
VARIABLE  HVESD_E_39_1_PNP_36                   0
VARIABLE  HVESD_E_40_1_PNP_36					0
VARIABLE  HVESD_E_41_1_PNP_36					0.6
VARIABLE  HVESD_E_39_1_PNP_45                   0
VARIABLE  HVESD_E_40_1_PNP_45					0
VARIABLE  HVESD_E_41_1_PNP_45					0.6
VARIABLE  HVESD_E_39_2_ESDDIO_GB            0
VARIABLE  HVESD_E_40_2_ESDDIO_GB            0
VARIABLE  HVESD_E_41_2_ESDDIO_GB            0.6
VARIABLE  HVESD_O_1_PNP_20   				0.1
VARIABLE  HVESD_O_1_PNP_12_PDD          0.1
VARIABLE  HVESD_O_1_PNP_16         0.1
VARIABLE  HVESD_O_1_PNP_20_PDD          0.1
VARIABLE  HVESD_O_1_PNP_24              0.1
VARIABLE  HVESD_R_1_PNP_6    			7.0
VARIABLE  HVESD_R_1_PNP_9    			7.0
VARIABLE  HVESD_R_1_PNP_12   			7.0
VARIABLE  HVESD_R_1_PNP_29              7.0  
VARIABLE  HVESD_R_1_PNP_36   			7.0
VARIABLE  HVESD_R_1_PNP_45   			7.0

VARIABLE  HVESD_R_1_1_PNP_6    			25.0
VARIABLE  HVESD_R_1_1_PNP_9    			25.0
VARIABLE  HVESD_R_1_1_PNP_12   			25.0
VARIABLE  HVESD_R_1_1_PNP_29              25.0  
VARIABLE  HVESD_R_1_1_PNP_36   			25.0
VARIABLE  HVESD_R_1_1_PNP_45   			25.0

VARIABLE  HVESD_R_2_PNP_12_PDD          7.0
VARIABLE  HVESD_R_2_PNP_16          7.0
VARIABLE  HVESD_R_2_PNP_20   			7.0
VARIABLE  HVESD_R_2_PNP_20_PDD          7.0
VARIABLE  HVESD_R_2_PNP_24              7.0

VARIABLE  HVESD_R_2_1_PNP_12_PDD          25.0
VARIABLE  HVESD_R_2_1_PNP_16          25.0
VARIABLE  HVESD_R_2_1_PNP_20   			25.0
VARIABLE  HVESD_R_2_1_PNP_20_PDD          25.0
VARIABLE  HVESD_R_2_1_PNP_24              25.0

VARIABLE  HVESD_R_3_PNP_6    			1.0
VARIABLE  HVESD_R_3_PNP_9    			1.0
VARIABLE  HVESD_R_3_PNP_12   			2.0
VARIABLE  HVESD_R_3_PNP_12_PDD          1.0
VARIABLE  HVESD_R_3_PNP_16          1.0  
VARIABLE  HVESD_R_3_PNP_20   			2.0
VARIABLE  HVESD_R_3_PNP_20_PDD          1.0 
VARIABLE  HVESD_R_3_PNP_24              1.0
VARIABLE  HVESD_R_3_PNP_29              1.0 
VARIABLE  HVESD_R_3_PNP_36   			1.0
VARIABLE  HVESD_R_3_PNP_45   			1.0
VARIABLE  NBL_W_1                       8.0
VARIABLE  NBL_S_1                       6.42
VARIABLE  NBL_S_2                       5.22
VARIABLE  NBL_S_3                       9.42
VARIABLE  SH_P_W_1                      0.65
VARIABLE  SH_P_S_1                      0.65
VARIABLE  SH_N_W_1                      0.65
VARIABLE  SH_N_W_2                      2.42
VARIABLE  SH_N_C_1                      0.65
VARIABLE  SH_N_C_2                      0.15
VARIABLE  SH_N_C_3                      0.15
VARIABLE  SH_N_S_1                      0.65
VARIABLE  SH_N_S_2						3.5

VARIABLE  HVDMY_S_1                     2
VARIABLE  HVDMY_C_2                     0.65
VARIABLE  HVDMY_C_3                     0.65
VARIABLE  HVDMY_C_4                     0.43
VARIABLE  HVOD_W_1                      5
VARIABLE  HVOD_W_2                      0.42
VARIABLE  HVOD_W_3						3.0
VARIABLE  HVOD_A_1                      0.64
VARIABLE  HVGA_S_1                      1
VARIABLE  NDD_W_1                       3.5
VARIABLE  NDD_S_1                       2
VARIABLE  PDD_W_1                       0.6
VARIABLE  PDD_S_1                       0.6
VARIABLE  HVPB_W_1                      0.94
VARIABLE  HVPB_S_1                      0.6
VARIABLE  HVPB_O_1                      0.2

VARIABLE  VTDN_W_1   					1.78 
VARIABLE  VTDN_S_1   					0.6  
VARIABLE  VTDN_E_3   					0.2  
VARIABLE  VTDN_C_1   					0.3  

VARIABLE  OD2_W_1						0.6
VARIABLE  OD2_O_2						0.44	
VARIABLE  OD2_O_3						0.44
VARIABLE  OD2_C_3						0.6
VARIABLE  OD2_E_5						0.44

VARIABLE NBLSLOT_W_1_NLD24G5_SWITCH 0.6
VARIABLE NBLSLOT_S_1_NLD24G5_SWITCH 0.6
VARIABLE NBLSLOT_C_1_NLD24G5_SWITCH 1
VARIABLE NBLSLOT_C_2_NLD24G5_SWITCH 1
VARIABLE NBLSLOT_C_3_NLD24G5_SWITCH 1.6
VARIABLE HVOD_W_4_PCH5_AS_SWITCH_MAC 3
VARIABLE HVOD_W_4_NLD5G5_ISO_SWITCH 3.42
VARIABLE HVOD_W_4_NLD24G5 3.42
VARIABLE HVOD_W_4_PA9G5_NBL 3
VARIABLE HVOD_W_4_PA9G5_SLIT_NBL 3
VARIABLE HVOD_W_4_PA16G5_NBL 3
VARIABLE HVOD_W_4_PA16G5_SLIT_NBL 3
VARIABLE HVOD_C_3_3_NLD6G5_SA 0.82
VARIABLE HVOD_C_3_3_NLD6G5_DE 0.82
VARIABLE HVOD_C_3_3_NLD24G5 0.82
VARIABLE HVOD_C_3_3_NLD24G5_SWITCH 0.82
VARIABLE HVOD_C_3_3_PA9G5_NBL 0.5
VARIABLE HVOD_C_3_3_PA9G5_SLIT_NBL 0.5
VARIABLE HVOD_C_3_3_PA16G5_NBL 0.5
VARIABLE HVOD_C_3_3_PA16G5_SLIT_NBL 0.5
VARIABLE HVOD_C_3_4_NLD5G5_ISO_SWITCH 0.82
VARIABLE HVOD_C_3_8_NLD5G5_ISO_SWITCH 0.5
VARIABLE HVOD_C_4_PA9G5_NBL 0.36
VARIABLE HVOD_C_4_PA16G5_NBL 0.36
VARIABLE HVOD_E_7_NLD5G5_ISO_SWITCH 0.5
VARIABLE HVOD_E_8_PCH5_AS_SWITCH_MAC 0.5
VARIABLE HVOD_E_8_PA9G5_NBL 0.5
VARIABLE HVOD_E_8_PA9G5_SLIT_NBL 0.5
VARIABLE HVOD_E_8_PA16G5_NBL 0.5
VARIABLE HVOD_E_8_PA16G5_SLIT_NBL 0.5
VARIABLE HVOD_E_9_PA9G5_NBL 0.92
VARIABLE HVOD_E_9_PA9G5_SLIT_NBL 0.92
VARIABLE HVOD_E_9_PA16G5_NBL 0.92
VARIABLE HVOD_E_9_PA16G5_SLIT_NBL 0.92
VARIABLE HVEOD_E_1_NLD24G5 1
VARIABLE HVEOD_E_1_NLD24G5_SWITCH 1
VARIABLE HVEOD_E_2_NLD24G5 1
VARIABLE HVEOD_E_2_NLD24G5_SWITCH 1
VARIABLE HVEOD_E_3_NLD24G5 0.2
VARIABLE HVEOD_E_3_NLD24G5_SWITCH 0.2
VARIABLE NONLDD_E_1_PCH5_AS_SWITCH_MAC 1
VARIABLE NONLDD_O_1_PCH5_AS_SWITCH_MAC 0.2
VARIABLE SH_N_C_12_NLD6G5_DE 0.2
VARIABLE SH_N_E_3_NLD24G5 2.2
VARIABLE SH_N_E_3_NLD24G5_SWITCH 2.2
VARIABLE SH_N_E_4_PA9G5_NBL 1.2
VARIABLE SH_N_E_4_PA9G5_SLIT_NBL 1.2
VARIABLE SH_N_E_4_PA16G5_NBL 1.8
VARIABLE SH_N_E_4_PA16G5_SLIT_NBL 1.8
VARIABLE SH_N_E_7_NLD6G5_DE 0.5
VARIABLE NDD_E_2_NLD5G5_ISO_SWITCH 0.1
VARIABLE NDD_E_1_NLD5G5_ISO_SWITCH 1
VARIABLE NDD_E_2_NLD6G5_SA 0.1
VARIABLE NDD_E_1_NLD6G5_SA 1
VARIABLE NDD_E_2_NLD6G5_DE 0.1
VARIABLE NDD_E_1_NLD6G5_DE 1.5
VARIABLE NDD_E_2_NLD24G5 0.1
VARIABLE NDD_E_1_NLD24G5 3
VARIABLE NDD_E_2_NLD24G5_SWITCH 0.1
VARIABLE NDD_E_1_NLD24G5_SWITCH 3
VARIABLE HVPB_E_1_NLD5G5_ISO_SWITCH 0
VARIABLE HVPB_E_1_NLD6G5_SA 0
VARIABLE HVPB_E_1_NLD6G5_DE 0
VARIABLE HVPB_E_1_NLD24G5 0
VARIABLE HVPB_E_1_NLD24G5_SWITCH 0
VARIABLE HVPO_S_5_NLD5G5_ISO_SWITCH 0.54
VARIABLE HVPO_S_5_NLD6G5_SA 0.54
VARIABLE HVPO_S_5_NLD6G5_DE 0.54
VARIABLE HVPO_S_5_NLD24G5 0.54
VARIABLE HVPO_S_5_NLD24G5_SWITCH 0.54
VARIABLE HVPO_S_5_1_PCH5_AS_SWITCH_MAC 0.54
VARIABLE HVPO_S_5_PA9G5_SLIT_NBL 0.54
VARIABLE HVPO_S_5_PA16G5_SLIT_NBL 0.54
VARIABLE HVPO_E_4_PA9G5_NBL 0.45
VARIABLE HVPO_E_4_PA9G5_SLIT_NBL 0.45
VARIABLE HVPO_E_4_PA16G5_NBL 0.55
VARIABLE HVPO_E_4_PA16G5_SLIT_NBL 0.55
VARIABLE HVPO_O_6_PCH5_AS_SWITCH_MAC 0.35
VARIABLE HVPO_O_9_PA9G5_SLIT_NBL 0.7
VARIABLE HVPO_O_9_PA16G5_SLIT_NBL 0.8
VARIABLE CFP_E_1_NLD24G5 0
VARIABLE CFP_E_1_NLD24G5_SWITCH 0
VARIABLE CFP_E_1_PA16G5_NBL 0
VARIABLE CFP_E_1_PA16G5_SLIT_NBL 0
VARIABLE CFP_E_2_NLD24G5 0.45
VARIABLE CFP_E_2_NLD24G5_SWITCH 0.45
VARIABLE CFP_E_2_PA16G5_NBL 0.45
VARIABLE CFP_E_2_PA16G5_SLIT_NBL 0.45
VARIABLE CFP_E_3_NLD24G5 0.2
VARIABLE CFP_E_3_NLD24G5_SWITCH 0.2
VARIABLE CFP_E_3_PA16G5_NBL 0.2
VARIABLE CFP_E_3_PA16G5_SLIT_NBL 0.2
VARIABLE CFP_E_4_NLD24G5 0.06
VARIABLE CFP_E_4_NLD24G5_SWITCH 0.06
VARIABLE CFP_E_4_PA16G5_NBL 0.06
VARIABLE CFP_E_4_PA16G5_SLIT_NBL 0.06
VARIABLE CFP_O_1_NLD24G5 1.1
VARIABLE CFP_O_1_NLD24G5_SWITCH 0.9
VARIABLE CFP_O_2_PA16G5_NBL 0.35
VARIABLE CFP_O_2_PA16G5_SLIT_NBL 0.35
VARIABLE HVNP_C_3_NLD6G5_DE 0.2
VARIABLE HVNP_C_3_NLD24G5 1.5
VARIABLE HVNP_C_3_NLD24G5_SWITCH 1.25
VARIABLE HVPP_C_2_PA9G5_NBL 0.3
VARIABLE HVPP_C_2_PA9G5_SLIT_NBL 0.3
VARIABLE HVPP_C_2_PA16G5_NBL 0.55
VARIABLE HVPP_C_2_PA16G5_SLIT_NBL 0.55

VARIABLE  HVOD_W_4_NLD6G5_DE_FULLY_ISO  3.42 
VARIABLE  HVOD_W_4_NLD6G5_SA_FULLY_ISO  3.42
VARIABLE  HVOD_W_4_NA6G5_NBL            3.42
VARIABLE  HVOD_W_4_NLD9G5_FULLY_ISO     3.42
VARIABLE  HVOD_W_4_NLD12G5_FULLY_ISO    3.42
VARIABLE  HVOD_W_4_NLD16G5_FULLY_ISO    3.42
VARIABLE  HVOD_W_4_NLD20G5_FULLY_ISO    3.42
VARIABLE  HVOD_W_4_NLD24G5_FULLY_ISO    3.42
VARIABLE  HVOD_W_4_NLD24G5_ISO_SWITCH   3.42
VARIABLE  HVOD_W_4_NA20G5_NBL           3.42
VARIABLE  HVOD_W_4_NA29G5_NBL           3.42 
VARIABLE  HVOD_W_4_NA29G3_DEP_NBL       3.42
VARIABLE  HVOD_W_4_PA6G5_DE_BL          3
VARIABLE  HVOD_W_4_PA6G5_SA_BL          3
VARIABLE  HVOD_W_4_PA12G5_SLIT_BL       3
VARIABLE  HVOD_W_4_PA12G5_NBL           3
VARIABLE  HVOD_W_4_PA20G5_BL            3 
VARIABLE  HVOD_W_4_PA20G5_SLIT_BL       3
VARIABLE  HVOD_W_4_PA29G5_BL            3
VARIABLE  HVOD_W_4_PA36G5_BL_GB         2.42
VARIABLE  HVOD_W_4_PA45G5_BL_GB         2.42

VARIABLE  HVOD_W_6_SBD_12V 3
VARIABLE  HVOD_W_6_SBD_16V 3
VARIABLE  HVOD_W_6_SBD_24V 3

VARIABLE  HVOD_W_7_SBD_12V 3.42
VARIABLE  HVOD_W_7_SBD_16V 3.42
VARIABLE  HVOD_W_7_SBD_24V 3.42

VARIABLE  HVOD_C_3_6_SBD_12V 0.5
VARIABLE  HVOD_C_3_6_SBD_16V 0.5
VARIABLE  HVOD_C_3_6_SBD_24V 0.5

VARIABLE  HVOD_C_3_3_NLD6G5_DE_FULLY_ISO    0.5
VARIABLE  HVOD_C_3_3_NLD6G5_SA_FULLY_ISO    0.5
VARIABLE  HVOD_C_3_3_NA6G5_NBL              0.5
VARIABLE  HVOD_C_3_3_NLD9G5                 0.82
VARIABLE  HVOD_C_3_3_NLD9G5_FULLY_ISO       0.5
VARIABLE  HVOD_C_3_3_NLD12G5                0.82
VARIABLE  HVOD_C_3_3_NLD12G5_FULLY_ISO      0.5
VARIABLE  HVOD_C_3_3_NLD16G5                0.82
VARIABLE  HVOD_C_3_3_NLD16G5_FULLY_ISO      0.5
VARIABLE  HVOD_C_3_3_NLD20G5                0.82
VARIABLE  HVOD_C_3_3_NLD20G5_FULLY_ISO      0.5
VARIABLE  HVOD_C_3_3_NLD24G5_FULLY_ISO      0.5 
VARIABLE  HVOD_C_3_3_NLD24G5_ISO_SWITCH     0.5
VARIABLE  HVOD_C_3_3_NA20G5                 0.82
VARIABLE  HVOD_C_3_3_NA20G5_NBL             0.5
VARIABLE  HVOD_C_3_3_NA29G5                 0.82
VARIABLE  HVOD_C_3_3_NA29G5_NBL             0.5
VARIABLE  HVOD_C_3_3_NA29G3_DEP_NBL         0.5
VARIABLE  HVOD_C_3_3_NLD36G5_GB             0.5
VARIABLE  HVOD_C_3_3_NLD45G5_GB             0.5
VARIABLE  HVOD_C_3_3_NA45G3_DEP_GB         0.5
VARIABLE  HVOD_C_3_3_PA6G5_DE_BL   0.5
VARIABLE  HVOD_C_3_3_PA6G5_SA_BL   0.5
VARIABLE  HVOD_C_3_3_PA12G5_SLIT_BL   0.5
VARIABLE  HVOD_C_3_3_PA12G5_NBL   0.5
VARIABLE  HVOD_C_3_3_PA20G5_BL   0.5
VARIABLE  HVOD_C_3_3_PA20G5_SLIT_BL   0.5
VARIABLE  HVOD_C_3_3_PA29G5_BL   0.5
VARIABLE  HVOD_C_3_3_PA36G5_BL_GB   0.5
VARIABLE  HVOD_C_3_3_PA45G5_BL_GB   0.5

VARIABLE  HVOD_C_3_4_NLD6G5_DE_FULLY_ISO  0.82
VARIABLE  HVOD_C_3_4_NLD6G5_SA_FULLY_ISO  0.82
VARIABLE  HVOD_C_3_4_NA6G5_NBL            0.82
VARIABLE  HVOD_C_3_4_NLD9G5_FULLY_ISO  0.82
VARIABLE  HVOD_C_3_4_NLD12G5_FULLY_ISO  0.82
VARIABLE  HVOD_C_3_4_NLD16G5_FULLY_ISO  0.82
VARIABLE  HVOD_C_3_4_NLD20G5_FULLY_ISO  0.82
VARIABLE  HVOD_C_3_4_NLD24G5_FULLY_ISO  0.82
VARIABLE  HVOD_C_3_4_NLD24G5_ISO_SWITCH  0.82
VARIABLE  HVOD_C_3_4_NA20G5_NBL  0.82
VARIABLE  HVOD_C_3_4_NA29G5_NBL  0.82
VARIABLE  HVOD_C_3_4_NA29G3_DEP_NBL  0.82

VARIABLE  HVOD_C_3_5_NLD6G5_DE_FULLY_ISO  0.5
VARIABLE  HVOD_C_3_5_NLD6G5_SA_FULLY_ISO  0.5
VARIABLE  HVOD_C_3_5_NA6G5_NBL            0.5
VARIABLE  HVOD_C_3_5_NLD9G5_FULLY_ISO  0.5
VARIABLE  HVOD_C_3_5_NLD12G5_FULLY_ISO  0.5
VARIABLE  HVOD_C_3_5_NLD16G5_FULLY_ISO  0.5
VARIABLE  HVOD_C_3_5_NLD20G5_FULLY_ISO  0.5
VARIABLE  HVOD_C_3_5_NLD24G5_FULLY_ISO  0.5
VARIABLE  HVOD_C_3_5_NLD24G5_ISO_SWITCH  0.5
VARIABLE  HVOD_C_3_5_NA20G5_NBL  0.5
VARIABLE  HVOD_C_3_5_NA29G5_NBL  0.5
VARIABLE  HVOD_C_3_5_NA29G3_DEP_NBL  0.5

VARIABLE  HVOD_C_3_6_PBSHNNBL  0.5
VARIABLE  HVOD_C_3_6_PDDSHNNBL  0.5
VARIABLE  HVOD_C_3_6_SHNNBLPSUBSHP  0.5
VARIABLE  HVOD_C_3_6_SHNPSUBSHP  0.5
VARIABLE  HVOD_C_3_6_SHPNBLSHN_GB  0.5
VARIABLE  HVOD_C_3_6_SHNNBLPSUBSHP_GB  0.5
VARIABLE  HVOD_C_3_6_ZENER_NBL 2

VARIABLE  HVOD_C_3_7_NPDDSHNNBL_PO_BOUNDARY 2
VARIABLE  HVOD_C_3_7_NPWSHNNBL_PO_BOUNDARY 2
VARIABLE  HVOD_C_3_7_PNDDSHPNBL  0.6


VARIABLE  HVOD_C_4_NA6G5_NBL  0.36
VARIABLE  HVOD_C_4_NA20G5  0.36
VARIABLE  HVOD_C_4_NA20G5_NBL  0.36
VARIABLE  HVOD_C_4_NA29G5  0.36
VARIABLE  HVOD_C_4_NA29G5_NBL  0.36
VARIABLE  HVOD_C_4_NA29G3_DEP_NBL  0.36
VARIABLE  HVOD_C_4_PA6G5_DE_BL  0.36
VARIABLE  HVOD_C_4_PA6G5_SA_BL  0.36
VARIABLE  HVOD_C_4_PA12G5_NBL  0.36
VARIABLE  HVOD_C_4_PA20G5_BL  0.36
VARIABLE  HVOD_C_4_PA29G5_BL  0.36
VARIABLE  HVOD_C_4_PA36G5_BL_GB  0.36
VARIABLE  HVOD_C_4_PA45G5_BL_GB  0.36

VARIABLE  HVOD_E_5_SBD_12V 0.44
VARIABLE  HVOD_E_5_SBD_16V 0.44
VARIABLE  HVOD_E_5_SBD_24V 0.44

VARIABLE  HVOD_E_7_NLD6G5_DE_FULLY_ISO  0.5
VARIABLE  HVOD_E_7_NLD6G5_SA_FULLY_ISO  0.5
VARIABLE  HVOD_E_7_NA6G5_NBL  0.5
VARIABLE  HVOD_E_7_NLD9G5_FULLY_ISO  0.5
VARIABLE  HVOD_E_7_NLD12G5_FULLY_ISO  0.5
VARIABLE  HVOD_E_7_NLD16G5_FULLY_ISO  0.5
VARIABLE  HVOD_E_7_NLD20G5_FULLY_ISO  0.5
VARIABLE  HVOD_E_7_NLD24G5_FULLY_ISO  0.5
VARIABLE  HVOD_E_7_NLD24G5_ISO_SWITCH  0.5
VARIABLE  HVOD_E_7_NA20G5_NBL  0.5
VARIABLE  HVOD_E_7_NA29G5_NBL  0.5
VARIABLE  HVOD_E_7_NA29G3_DEP_NBL  0.5

VARIABLE  HVOD_E_8_PA6G5_DE_BL  0.5
VARIABLE  HVOD_E_8_PA6G5_SA_BL  0.5
VARIABLE  HVOD_E_8_PA12G5_SLIT_BL  0.5
VARIABLE  HVOD_E_8_PA12G5_NBL  0.5
VARIABLE  HVOD_E_8_PA20G5_BL  0.5
VARIABLE  HVOD_E_8_PA20G5_SLIT_BL  0.5
VARIABLE  HVOD_E_8_PA29G5_BL  0.5
VARIABLE  HVOD_E_8_PA36G5_BL_GB  1
VARIABLE  HVOD_E_8_PA45G5_BL_GB  1

VARIABLE  HVOD_E_9_PA6G5_DE_BL  0.92
VARIABLE  HVOD_E_9_PA6G5_SA_BL  0.92
VARIABLE  HVOD_E_9_PA12G5_SLIT_BL  0.92
VARIABLE  HVOD_E_9_PA12G5_NBL  0.92
VARIABLE  HVOD_E_9_PA20G5_BL  0.92
VARIABLE  HVOD_E_9_PA20G5_SLIT_BL  0.92
VARIABLE  HVOD_E_9_PA29G5_BL  0.92
VARIABLE  HVOD_E_9_PA36G5_BL_GB  1
VARIABLE  HVOD_E_9_PA45G5_BL_GB  1

VARIABLE  HVOD_E_10_SHNNBLPSUBSHP  0.5
VARIABLE  HVOD_E_10_SHNPSUBSHP  0.5
VARIABLE  HVOD_E_10_SHNNBLPSUBSHP_GB  1

VARIABLE  HVOD_E_11_SBD_12V 0.5
VARIABLE  HVOD_E_11_SBD_16V 0.5
VARIABLE  HVOD_E_11_SBD_24V 0.5


VARIABLE  HVOD_E_11_PBSHNNBL  0.5
VARIABLE  HVOD_E_11_PDDSHNNBL  0.5
VARIABLE  HVOD_E_11_SHPNBLSHN_GB  0.5
VARIABLE  HVOD_E_11_ZENER_NBL  2

VARIABLE  HVEOD_E_1_NLD20G5  1
VARIABLE  HVEOD_E_1_NLD20G5_FULLY_ISO  1
VARIABLE  HVEOD_E_1_NLD24G5_FULLY_ISO  1
VARIABLE  HVEOD_E_1_NLD24G5_ISO_SWITCH  1
VARIABLE  HVEOD_E_1_NA20G5  1
VARIABLE  HVEOD_E_1_NA20G5_NBL  1
VARIABLE  HVEOD_E_1_NA29G5  1
VARIABLE  HVEOD_E_1_NA29G5_NBL  1
VARIABLE  HVEOD_E_1_NA29G3_DEP_NBL  1

VARIABLE  HVEOD_E_2_NLD20G5  1
VARIABLE  HVEOD_E_2_NLD20G5_FULLY_ISO  1
VARIABLE  HVEOD_E_2_NLD24G5_FULLY_ISO  1
VARIABLE  HVEOD_E_2_NLD24G5_ISO_SWITCH  1
VARIABLE  HVEOD_E_2_NA20G5  1
VARIABLE  HVEOD_E_2_NA20G5_NBL  1
VARIABLE  HVEOD_E_2_NA29G5  1
VARIABLE  HVEOD_E_2_NA29G5_NBL  1
VARIABLE  HVEOD_E_2_NA29G3_DEP_NBL  1

VARIABLE  HVEOD_E_3_NLD20G5  0.2
VARIABLE  HVEOD_E_3_NLD20G5_FULLY_ISO  0.2
VARIABLE  HVEOD_E_3_NLD24G5_FULLY_ISO  0.2
VARIABLE  HVEOD_E_3_NLD24G5_ISO_SWITCH  0.2
VARIABLE  HVEOD_E_3_NA20G5  0.2
VARIABLE  HVEOD_E_3_NA20G5_NBL  0.2
VARIABLE  HVEOD_E_3_NA29G5  0.2
VARIABLE  HVEOD_E_3_NA29G5_NBL  0.2
VARIABLE  HVEOD_E_3_NA29G3_DEP_NBL  0.2
VARIABLE  HVOD_S_2_NPDD 2
VARIABLE  HVOD_S_3_PCH5_AS_SWITCH_MAC 0.36
VARIABLE  HVOD_S_2_PBSHNNBL 2.5
VARIABLE  HVOD_S_2_PDDSHNNBL 2.5
VARIABLE  HVOD_S_2_NHVPW_GB 2
VARIABLE  HVOD_S_2_SHPNBLSHN_GB 1
VARIABLE  HVOD_C_1		 2.7
VARIABLE  HVOD_C_1_1     0.5
VARIABLE  HVOD_C_1_GB	 5.0
VARIABLE  HVOD_C_2_1	 0.82
VARIABLE  HVOD_C_3_4     0.82
VARIABLE  HVOD_C_3_5     0.5
VARIABLE  HVOD_C_4		 0.36
VARIABLE  HVOD_C_5		 2.5
VARIABLE  HVOD_C_6		 3.5
VARIABLE  HVOD_C_9		 2.0
VARIABLE  HVOD_E_1       0.5
VARIABLE  HVOD_E_1_GB    1.0
VARIABLE  HVOD_E_2		 2.0
VARIABLE  HVOD_E_3		 3.5
VARIABLE  HVOD_E_6		 2.0
VARIABLE  HVOD_S_4       7

VARIABLE  HVEOD_E_4_SBD_24V 1

VARIABLE  HVEOD_O_1_SBD_24V 0.76
VARIABLE  HVEOD_O_2_SBD_24V 0.32

VARIABLE  HVNW_W_1		3.0
VARIABLE  HVNW_S_1		6.0
VARIABLE  HVNW_C_2		0
VARIABLE  HVNW_E_3		4.5
VARIABLE  HVNW_E_6		4.0

VARIABLE  HVNW_E_1_NLD45G5_GB  2
VARIABLE  HVNW_E_2_NLD45G5_GB  4
VARIABLE  HVNW_E_1_NLD36G5_GB  2
VARIABLE  HVNW_E_2_NLD36G5_GB  4
VARIABLE  HVNW_E_1_NA45G3_DEP_GB  2
VARIABLE  HVNW_E_2_NA45G3_DEP_GB  4

VARIABLE  HVPW_W_1		3.2
VARIABLE  HVPW_S_1		6.2
VARIABLE  HVPW_E_2		2.0
VARIABLE  HVPW_E_6		2.5

VARIABLE  HVPW_E_2_NHVPW_GB  2
VARIABLE  HVPW_E_5_PA36G5_BL_GB  2.5
VARIABLE  HVPW_E_6_PA36G5_BL_GB  2.5
VARIABLE  HVPW_E_5_PA45G5_BL_GB  2.5
VARIABLE  HVPW_E_6_PA45G5_BL_GB  2.5 
VARIABLE  HVPW_E_7_NA45G3_DEP_GB 1.5
VARIABLE  HVPW_O_1_NA45G3_DEP_GB 1.2
VARIABLE  HVPW_C_1_NA45G3_DEP_GB 0.2

VARIABLE  SH_N_C_12_NLD6G5_DE_FULLY_ISO  0.2

VARIABLE  SH_N_C_13_NLD36G5_GB  0
VARIABLE  SH_N_C_13_NLD45G5_GB  0
VARIABLE  SH_N_C_13_NA45G3_DEP_GB  0


VARIABLE  SH_N_C_14_PA6G5_DE_BL  1
VARIABLE  SH_N_C_14_PA6G5_SA_BL  1.5
VARIABLE  SH_N_C_16_ZENER_NBL  3

VARIABLE  SH_N_E_1  0

VARIABLE  SH_N_E_3_NLD6G5_SA_FULLY_ISO  1
VARIABLE  SH_N_E_3_NLD6G5_DE_FULLY_ISO  1
VARIABLE  SH_N_E_3_NLD9G5_FULLY_ISO  1.2
VARIABLE  SH_N_E_3_NLD12G5_FULLY_ISO  1.6
VARIABLE  SH_N_E_3_NLD16G5_FULLY_ISO  1.8 
VARIABLE  SH_N_E_3_NLD20G5_FULLY_ISO  2
VARIABLE  SH_N_E_3_NLD24G5_FULLY_ISO  2.2
VARIABLE  SH_N_E_3_NLD24G5_ISO_SWITCH 2.2
VARIABLE  SH_N_E_3_NLD36G5_GB  3.5
VARIABLE  SH_N_E_3_NLD45G5_GB  4.5
VARIABLE  SH_N_E_3_NA45G3_DEP_GB  4.5
VARIABLE  SH_N_E_3_NA6G5_NBL   1
VARIABLE  SH_N_E_3_NA20G5_NBL  2
VARIABLE  SH_N_E_3_NA29G5_NBL  2.5
VARIABLE  SH_N_E_3_NA29G3_DEP_NBL  2.5
VARIABLE  SH_N_E_3_PBSHNNBL  2.5
VARIABLE  SH_N_E_3_PDDSHNNBL  2.5
VARIABLE  SH_N_E_3_SHNNBLPSUBSHP  2.5
VARIABLE  SH_N_E_3_SHNPSUBSHP  2.5
VARIABLE  SH_N_E_3_SHPNBLSHN_GB  4.5
VARIABLE  SH_N_E_3_SHNNBLPSUBSHP_GB  4.5
VARIABLE  SH_N_E_3_PNDDSHPNBL  1.9
VARIABLE  SH_N_E_3_ZENER_NBL 3
VARIABLE  SH_N_E_3_SBD_12V 2.2
VARIABLE  SH_N_E_3_SBD_16V 2.2
VARIABLE  SH_N_E_3_SBD_24V 2.2

VARIABLE  SH_N_E_4_PA6G5_DE_BL  1
VARIABLE  SH_N_E_4_PA6G5_SA_BL  1
VARIABLE  SH_N_E_4_PA12G5_SLIT_BL  1.6
VARIABLE  SH_N_E_4_PA12G5_NBL  1.6
VARIABLE  SH_N_E_4_PA20G5_BL  2
VARIABLE  SH_N_E_4_PA20G5_SLIT_BL  2
VARIABLE  SH_N_E_4_PA29G5_BL  2.5
VARIABLE  SH_N_E_4_PA36G5_BL_GB  3.5
VARIABLE  SH_N_E_4_PA45G5_BL_GB  4.5

VARIABLE  SH_N_E_5_NLD36G5_GB  2
VARIABLE  SH_N_E_6_NLD36G5_GB  4
VARIABLE  SH_N_E_5_NLD45G5_GB  2
VARIABLE  SH_N_E_6_NLD45G5_GB  4
VARIABLE  SH_N_E_5_NA45G3_DEP_GB  2
VARIABLE  SH_N_E_6_NA45G3_DEP_GB  4

VARIABLE  SH_N_E_7_NLD6G5_DE_FULLY_ISO  0.5
VARIABLE  SH_N_C_15_PCH5_AS_SWITCH_MAC 0.5
VARIABLE  SH_N_C_15_NLD5G5_ISO_SWITCH 0.5

VARIABLE  SH_N_O_1_NLD36G5_GB  0.64
VARIABLE  SH_N_O_2_NLD36G5_GB  0.2
VARIABLE  SH_N_O_1_NLD45G5_GB  0.64
VARIABLE  SH_N_O_2_NLD45G5_GB  0.2
VARIABLE  SH_N_O_1_NA45G3_DEP_GB  0.64
VARIABLE  SH_N_O_2_NA45G3_DEP_GB  0.2

VARIABLE  SH_P_C_1_SHPNBLSHN_GB  0.5
VARIABLE  SH_P_C_3_NA6G5_NBL  0
VARIABLE  SH_P_C_3_NA20G5  0.2
VARIABLE  SH_P_C_3_NA20G5_NBL  0.2
VARIABLE  SH_P_C_3_NA29G5  0.2
VARIABLE  SH_P_C_3_NA29G5_NBL  0.2 
VARIABLE  SH_P_C_3_NA29G3_DEP_NBL  0.6

VARIABLE  SH_P_C_6_NA6G5_NBL  0
VARIABLE  SH_P_C_6_NA20G5_NBL  0
VARIABLE  SH_P_C_6_NA29G5_NBL  0
VARIABLE  SH_P_C_6_NA29G3_DEP_NBL  0

VARIABLE  SH_P_E_1_PA6G5_SA_BL  0.5
VARIABLE  SH_P_E_1_PA6G5_DE_BL  0.5

VARIABLE  SH_P_E_2_PA6G5_SA_BL  0.5
VARIABLE  SH_P_E_2_PA6G5_DE_BL  0.5

VARIABLE  SH_P_E_3_SHPNBLSHN_GB  0.5

VARIABLE SH_P_E_4_SBD_12V 0.5
VARIABLE SH_P_E_4_SBD_16V 0.5
VARIABLE SH_P_E_4_SBD_24V 0.5

VARIABLE  SH_P_E_9_ZENER_NBL  2
VARIABLE  SH_P_O_1_ZENER_NBL  0.3

VARIABLE  VTDN_E_1_NA29G3_dep_NBL  0.5
VARIABLE  VTDN_E_2_NA29G3_dep_NBL  1
VARIABLE  VTDN_E_1_NA45G3_DEP_GB  0.5
VARIABLE  VTDN_E_4_NA45G3_DEP_GB  0.5

VARIABLE  NDD_O_1_NA6G5_NBL  0.6
VARIABLE  NDD_O_1_NA20G5  0.8
VARIABLE  NDD_O_1_NA20G5_NBL  0.8
VARIABLE  NDD_O_1_NA29G5  0.6 
VARIABLE  NDD_O_1_NA29G5_NBL  0.6
VARIABLE  NDD_O_1_NA29G3_DEP_NBL  0.6

VARIABLE  NDD_E_1_NLD6G5_DE_FULLY_ISO  1.5
VARIABLE  NDD_E_1_NLD6G5_SA_FULLY_ISO  1
VARIABLE  NDD_E_1_NA6G5_NBL  1
VARIABLE  NDD_E_1_NLD9G5  1
VARIABLE  NDD_E_1_NLD9G5_FULLY_ISO  1
VARIABLE  NDD_E_1_NLD12G5  1.5
VARIABLE  NDD_E_1_NLD12G5_FULLY_ISO  1.5
VARIABLE  NDD_E_1_NLD16G5  2
VARIABLE  NDD_E_1_NLD16G5_FULLY_ISO  2
VARIABLE  NDD_E_1_NLD20G5  3
VARIABLE  NDD_E_1_NLD20G5_FULLY_ISO  3
VARIABLE  NDD_E_1_NLD24G5_FULLY_ISO  3
VARIABLE  NDD_E_1_NLD24G5_ISO_SWITCH  3
VARIABLE  NDD_E_1_NA20G5  3
VARIABLE  NDD_E_1_NA20G5_NBL  3
VARIABLE  NDD_E_1_NA29G5  3.5
VARIABLE  NDD_E_1_NA29G5_NBL  3.5
VARIABLE  NDD_E_1_NA29G3_DEP_NBL  3.5

VARIABLE  NDD_E_2_NLD6G5_DE_FULLY_ISO  0.1
VARIABLE  NDD_E_2_NLD6G5_SA_FULLY_ISO  0.1
VARIABLE  NDD_E_2_NLD9G5  0.1
VARIABLE  NDD_E_2_NLD9G5_FULLY_ISO  0.1
VARIABLE  NDD_E_2_NLD12G5  0.1
VARIABLE  NDD_E_2_NLD12G5_FULLY_ISO  0.1
VARIABLE  NDD_E_2_NLD16G5  0.1
VARIABLE  NDD_E_2_NLD16G5_FULLY_ISO  0.1
VARIABLE  NDD_E_2_NLD20G5  0.1
VARIABLE  NDD_E_2_NLD20G5_FULLY_ISO  0.1
VARIABLE  NDD_E_2_NLD24G5_FULLY_ISO  0.1
VARIABLE  NDD_E_2_NLD24G5_ISO_SWITCH  0.1

VARIABLE  NDD_E_3_NA6G5_NBL  0.1
VARIABLE  NDD_E_3_NA20G5  0.1
VARIABLE  NDD_E_3_NA20G5_NBL  0.1
VARIABLE  NDD_E_3_NA29G5  0.1
VARIABLE  NDD_E_3_NA29G5_NBL  0.1
VARIABLE  NDD_E_3_NA29G3_DEP_NBL  0.1

VARIABLE  NDD_E_4_NA6G5_NBL  0
VARIABLE  NDD_E_4_NA20G5  0.2
VARIABLE  NDD_E_4_NA20G5_NBL  0.2
VARIABLE  NDD_E_4_NA29G5  0.2
VARIABLE  NDD_E_4_NA29G5_NBL  0.2
VARIABLE  NDD_E_4_NA29G3_DEP_NBL  0.6

VARIABLE  NDD_E_5_NA6G5_NBL  0.1
VARIABLE  NDD_E_5_NA20G5  0.1
VARIABLE  NDD_E_5_NA20G5_NBL  0.1
VARIABLE  NDD_E_5_NA29G5  0.1
VARIABLE  NDD_E_5_NA29G5_NBL  0.1
VARIABLE  NDD_E_5_NA29G3_DEP_NBL  0.1

VARIABLE  NDD_E_7_SBD_12V  3.5
VARIABLE  NDD_E_7_SBD_16V  3.5
VARIABLE  NDD_E_7_SBD_24V  3.5

VARIABLE  PDD_E_1_PA9G5_SLIT_NBL   1
VARIABLE  PDD_E_1_PA9G5_NBL  1
VARIABLE  PDD_E_1_PA12G5_SLIT_BL   1
VARIABLE  PDD_E_1_PA12G5_NBL  1
VARIABLE  PDD_E_1_PA16G5_NBL  1.5
VARIABLE  PDD_E_1_PA16G5_SLIT_NBL  1.5
VARIABLE  PDD_E_1_PA20G5_BL  1.5
VARIABLE  PDD_E_1_PA20G5_SLIT_BL  1.5
VARIABLE  PDD_E_1_PA29G5_BL  2

VARIABLE  PDD_E_2_SBD_12V 0.3
VARIABLE  PDD_E_2_SBD_16V 0.3
VARIABLE  PDD_E_2_SBD_24V 0.3

VARIABLE  PDD_E_5_NPDD  2
VARIABLE  PDD_E_5_PDDSHNNBL  2

VARIABLE  PDD_E_6_PA9G5_SLIT_NBL  0
VARIABLE  PDD_E_6_PA9G5_NBL  0
VARIABLE  PDD_E_6_PA12G5_SLIT_BL  0
VARIABLE  PDD_E_6_PA12G5_NBL  0
VARIABLE  PDD_E_6_PA16G5_SLIT_NBL  0
VARIABLE  PDD_E_6_PA16G5_NBL  0
VARIABLE  PDD_E_6_PA20G5_BL  0
VARIABLE  PDD_E_6_PA20G5_SLIT_BL  0
VARIABLE  PDD_E_6_PA29G5_BL  0

VARIABLE  PDD_C_1_PDDSHNNBL  0.5

VARIABLE  PDD_C_2_SBD_12V 0.52
VARIABLE  PDD_C_2_SBD_16V 0.62
VARIABLE  PDD_C_2_SBD_24V 0.82

VARIABLE  HVCO_C_3_ZENER_NBL  0.16

VARIABLE  HVPB_E_1_NLD6G5_DE_FULLY_ISO  0
VARIABLE  HVPB_E_1_NLD6G5_SA_FULLY_ISO  0
VARIABLE  HVPB_E_1_NLD9G5  0
VARIABLE  HVPB_E_1_NLD9G5_FULLY_ISO  0
VARIABLE  HVPB_E_1_NLD12G5  0
VARIABLE  HVPB_E_1_NLD12G5_FULLY_ISO  0
VARIABLE  HVPB_E_1_NLD16G5  0
VARIABLE  HVPB_E_1_NLD16G5_FULLY_ISO  0
VARIABLE  HVPB_E_1_NLD20G5  0
VARIABLE  HVPB_E_1_NLD20G5_FULLY_ISO  0
VARIABLE  HVPB_E_1_NLD24G5_FULLY_ISO  0
VARIABLE  HVPB_E_1_NLD24G5_ISO_SWITCH  0

VARIABLE  HVPB_E_2_NLD45G5_GB  1
VARIABLE  HVPB_E_2_NLD36G5_GB  1

VARIABLE  HVPB_E_3_PBSHNNBL  2

VARIABLE  HVPB_O_1_NLD6G5_DE_FULLY_ISO  0.2
VARIABLE  HVPB_O_1_NLD6G5_SA_FULLY_ISO  0.2
VARIABLE  HVPB_O_1_NLD9G5  0.2
VARIABLE  HVPB_O_1_NLD9G5_FULLY_ISO  0.2
VARIABLE  HVPB_O_1_NLD12G5  0.2
VARIABLE  HVPB_O_1_NLD12G5_FULLY_ISO  0.2
VARIABLE  HVPB_O_1_NLD20G5  0.2
VARIABLE  HVPB_O_1_NLD20G5_FULLY_ISO  0.2
VARIABLE  HVPB_O_1_NLD24G5_FULLY_ISO  0.2
VARIABLE  HVPB_O_1_NLD24G5_ISO_SWITCH  0.2
VARIABLE  HVPB_O_1_NLD45G5_GB  0.2

VARIABLE  HVPB_C_1_PBSHNNBL  0.5

VARIABLE  HVPO_W_1_ZENER_NBL  0.6
VARIABLE  HVPO_S_2_1_ZENER_NBL 0.8
VARIABLE  HVPO_S_2_ZENER_NBL  5

VARIABLE  HVPO_S_5_NLD6G5_DE_FULLY_ISO  0.54
VARIABLE  HVPO_S_5_NLD6G5_SA_FULLY_ISO  0.54
VARIABLE  HVPO_S_5_NLD9G5  0.54
VARIABLE  HVPO_S_5_NLD9G5_FULLY_ISO  0.54
VARIABLE  HVPO_S_5_NLD12G5  0.54
VARIABLE  HVPO_S_5_NLD12G5_FULLY_ISO  0.54
VARIABLE  HVPO_S_5_NLD16G5  0.54
VARIABLE  HVPO_S_5_NLD16G5_FULLY_ISO  0.54
VARIABLE  HVPO_S_5_NLD20G5  0.54
VARIABLE  HVPO_S_5_NLD20G5_FULLY_ISO  0.54
VARIABLE  HVPO_S_5_NLD24G5_FULLY_ISO  0.54
VARIABLE  HVPO_S_5_NLD24G5_ISO_SWITCH  0.54
VARIABLE  HVPO_S_5_NLD36G5_GB  0.54
VARIABLE  HVPO_S_5_NLD45G5_GB  0.54
VARIABLE  HVPO_S_5_NA45G3_DEP_GB  0.54
VARIABLE  HVPO_S_5_PA12G5_SLIT_BL  0.54
VARIABLE  HVPO_S_5_PA20G5_SLIT_BL  0.54

VARIABLE  HVPO_E_2  1

VARIABLE  HVPO_E_4_PA6G5_DE_BL  0.35
VARIABLE  HVPO_E_4_PA6G5_SA_BL  0.35
VARIABLE  HVPO_E_4_PA12G5_SLIT_BL  0.55
VARIABLE  HVPO_E_4_PA12G5_NBL  0.55
VARIABLE  HVPO_E_4_PA20G5_BL  0.75
VARIABLE  HVPO_E_4_PA20G5_SLIT_BL  0.75
VARIABLE  HVPO_E_4_PA29G5_BL  1.05
VARIABLE  HVPO_E_4_PA36G5_BL_GB  2.45
VARIABLE  HVPO_E_4_PA45G5_BL_GB  2.65

VARIABLE  HVPO_E_5_PA29G5_BL  0.13
VARIABLE  HVPO_E_5_PA36G5_BL_GB  1.1
VARIABLE  HVPO_E_5_PA45G5_BL_GB  1.2

VARIABLE  HVPO_E_6_ZENER_NBL  0.48

VARIABLE  HVPO_E_7_NA6G5_NBL  0.6
VARIABLE  HVPO_E_7_NA20G5  1
VARIABLE  HVPO_E_7_NA20G5_NBL  1
VARIABLE  HVPO_E_7_NA29G5  0.8
VARIABLE  HVPO_E_7_NA29G5_NBL  0.8
VARIABLE  HVPO_E_7_NA29G3_DEP_NBL  1.2

VARIABLE  HVPO_O_2_NLD6G5_DE_FULLY_ISO  0.4
VARIABLE  HVPO_O_2_NLD6G5_SA_FULLY_ISO  0.475
VARIABLE  HVPO_O_2_NLD9G5  0.6
VARIABLE  HVPO_O_2_NLD9G5_FULLY_ISO  0.6
VARIABLE  HVPO_O_2_NLD12G5  0.5
VARIABLE  HVPO_O_2_NLD12G5_FULLY_ISO  0.5
VARIABLE  HVPO_O_2_NLD16G5  0.55
VARIABLE  HVPO_O_2_NLD16G5_FULLY_ISO  0.55
VARIABLE  HVPO_O_2_NLD20G5  0.7
VARIABLE  HVPO_O_2_NLD20G5_FULLY_ISO  0.7
VARIABLE  HVPO_O_2_NLD24G5_FULLY_ISO  0.8
VARIABLE  HVPO_O_2_NLD24G5_ISO_SWITCH  0.8
VARIABLE HVPO_O_2_NLD24G5 0.8
VARIABLE HVPO_O_2_NLD24G5_SWITCH 0.8
VARIABLE HVPO_O_2_NLD5G5_ISO_SWITCH 0.3
VARIABLE HVPO_O_2_NLD6G5_DE 0.4
VARIABLE HVPO_O_2_NLD6G5_SA 0.475
VARIABLE HVPO_O_7_PA16G5_NBL 0.8
VARIABLE HVPO_O_7_PA9G5_NBL 0.7

VARIABLE  HVPO_O_3_NA6G5_NBL  0.6
VARIABLE  HVPO_O_3_NA20G5  0.8
VARIABLE  HVPO_O_3_NA20G5_NBL  0.8
VARIABLE  HVPO_O_3_NA29G5  1.2
VARIABLE  HVPO_O_3_NA29G5_NBL  1.2
VARIABLE  HVPO_O_3_NA29G3_DEP_NBL  0.8

VARIABLE  HVPO_O_5_PA6G5_DE_BL  0.1
VARIABLE  HVPO_O_5_PA6G5_SA_BL  0.1

VARIABLE  HVPO_O_6_PA6G5_DE_BL  0.6
VARIABLE  HVPO_O_6_PA6G5_SA_BL  0.6

VARIABLE  HVPO_O_7_PA12G5_SLIT_BL  0.8
VARIABLE  HVPO_O_7_PA12G5_NBL  0.8
VARIABLE  HVPO_O_7_PA20G5_BL  1
VARIABLE  HVPO_O_7_PA20G5_SLIT_BL  1
VARIABLE  HVPO_O_7_PA29G5_BL  1.3

VARIABLE  HVPO_O_8_PA36G5_BL_GB  2.7
VARIABLE  HVPO_O_8_PA45G5_BL_GB  2.9

VARIABLE  HVPO_O_9_PA12G5_SLIT_BL 0.8
VARIABLE  HVPO_O_9_PA20G5_SLIT_BL 1

VARIABLE  HVPO_O_10_NLD36G5_GB  0.6
VARIABLE  HVPO_O_10_NLD45G5_GB  0.7
VARIABLE  HVPO_O_10_NA45G3_DEP_GB  0.4

VARIABLE  HVNP_C_1  0.32
VARIABLE  HVNP_C_2  0.23
VARIABLE  HVNP_C_4  0.76
VARIABLE  HVNP_E_1  0.32

VARIABLE  HVNP_C_3_NLD6G5_DE_FULLY_ISO  0.2
VARIABLE  HVNP_C_3_NA6G5_NBL  0.2
VARIABLE  HVNP_C_3_NLD9G5  0.3
VARIABLE  HVNP_C_3_NLD9G5_FULLY_ISO  0.3
VARIABLE  HVNP_C_3_NLD12G5  0.5
VARIABLE  HVNP_C_3_NLD12G5_FULLY_ISO  0.5
VARIABLE  HVNP_C_3_NLD16G5  0.7
VARIABLE  HVNP_C_3_NLD16G5_FULLY_ISO  0.7
VARIABLE  HVNP_C_3_NLD20G5  0.95
VARIABLE  HVNP_C_3_NLD20G5_FULLY_ISO  0.95
VARIABLE  HVNP_C_3_NLD24G5_FULLY_ISO  1.5
VARIABLE  HVNP_C_3_NLD24G5_ISO_SWITCH  1.25
VARIABLE  HVNP_C_3_NA20G5  1.1
VARIABLE  HVNP_C_3_NA20G5_NBL  1.1
VARIABLE  HVNP_C_3_NA29G5  1.9
VARIABLE  HVNP_C_3_NA29G5_NBL  1.9
VARIABLE  HVNP_C_3_NA29G3_DEP_NBL  2.1
VARIABLE  HVNP_C_3_NLD36G5_GB  2.8
VARIABLE  HVNP_C_3_NLD45G5_GB  4.1
VARIABLE  HVNP_C_3_NA45G3_DEP_GB  4.1

VARIABLE  HVNP_O_1_ZENER_NBL  0.18

VARIABLE  HVNP_E_2  0.2

VARIABLE  HVPP_C_2_PA6G5_DE_BL  0.2
VARIABLE  HVPP_C_2_PA12G5_SLIT_BL  0.4
VARIABLE  HVPP_C_2_PA12G5_NBL  0.4
VARIABLE  HVPP_C_2_PA20G5_BL  0.6
VARIABLE  HVPP_C_2_PA20G5_SLIT_BL  0.6
VARIABLE  HVPP_C_2_PA29G5_BL  1.2

VARIABLE  HVPP_O_1_ZENER_NBL  0.18

VARIABLE  HVPP_C_3  0.23

VARIABLE  HVPP_E_1  0.2

VARIABLE HVPP_E_2_PA6G5_SA_BL 0.32
VARIABLE HVPP_E_2_PA6G5_DE_BL 0.32
VARIABLE HVPP_E_2_PA12G5_NBL 0.32
VARIABLE HVPP_E_2_PA20G5_BL 0.32
VARIABLE HVPP_E_2_PA29G5_BL 0.32
VARIABLE HVPP_E_2_PA45G5_BL_GB 0.32

VARIABLE  HVPP_W_1_SBD_12V 0.62
VARIABLE  HVPP_W_1_SBD_16V 0.62
VARIABLE  HVPP_W_1_SBD_24V 0.62

VARIABLE  HVPP_S_1_SBD_12V 0.6
VARIABLE  HVPP_S_1_SBD_16V 0.6
VARIABLE  HVPP_S_1_SBD_24V 0.6

VARIABLE  HVPP_O_2_SBD_12V 0.7
VARIABLE  HVPP_O_2_SBD_16V 0.7
VARIABLE  HVPP_O_2_SBD_24V 0.7

VARIABLE  HVPP_O_3_SBD_12V 0.2
VARIABLE  HVPP_O_3_SBD_16V 0.2
VARIABLE  HVPP_O_3_SBD_24V 0.2

VARIABLE  HVRPO_O_1  0.2
VARIABLE  HVRPO_O_2  0.1
VARIABLE  HVRPO_O_3  0.1
VARIABLE  HVRPO_E_1_SBD_12V 0.6
VARIABLE  HVRPO_E_2_SBD_12V 0.3
VARIABLE  HVRPO_E_1_SBD_16V 0.6
VARIABLE  HVRPO_E_2_SBD_16V 0.4
VARIABLE  HVRPO_E_1_SBD_24V 0.6
VARIABLE  HVRPO_E_2_SBD_24V 0.4
VARIABLE  HVRPO_C_3_SBD_12V 0.12
VARIABLE  HVRPO_C_3_SBD_16V 0.12
VARIABLE  HVRPO_C_3_SBD_24V 0.12
VARIABLE  HVRPO_C_1 0.12

VARIABLE  CFP_W_3_SBD_12V 0.3
VARIABLE  CFP_W_3_SBD_16V 0.3
VARIABLE  CFP_W_3_SBD_24V 0.5

VARIABLE  CFP_S_2_SBD_12V 0.5
VARIABLE  CFP_S_2_SBD_16V 0.5
VARIABLE  CFP_S_2_SBD_24V 0.5

VARIABLE  CFP_E_2_NLD12G5  0.45
VARIABLE  CFP_E_2_NLD12G5_FULLY_ISO  0.45
VARIABLE  CFP_E_2_NLD16G5  0.45
VARIABLE  CFP_E_2_NLD16G5_FULLY_ISO  0.45
VARIABLE  CFP_E_2_NLD20G5  0.45
VARIABLE  CFP_E_2_NLD20G5_FULLY_ISO  0.45
VARIABLE  CFP_E_2_NLD24G5_FULLY_ISO  0.45
VARIABLE  CFP_E_2_NLD24G5_ISO_SWITCH  0.45
VARIABLE  CFP_E_2_NA20G5  0.45
VARIABLE  CFP_E_2_NA20G5_NBL  0.45
VARIABLE  CFP_E_2_NA29G5  0.45
VARIABLE  CFP_E_2_NA29G5_NBL  0.45
VARIABLE  CFP_E_2_NA29G3_DEP_NBL  0.45
VARIABLE  CFP_E_2_NLD36G5_GB  0.45
VARIABLE  CFP_E_2_NLD45G5_GB  0.45
VARIABLE  CFP_E_2_NA45G3_DEP_GB  0.45
VARIABLE  CFP_E_2_PA20G5_BL  0.45
VARIABLE  CFP_E_2_PA20G5_SLIT_BL  0.45
VARIABLE  CFP_E_2_PA29G5_BL  0.45

VARIABLE  CFP_E_3_NLD12G5  0.2
VARIABLE  CFP_E_3_NLD16G5  0.2
VARIABLE  CFP_E_3_NLD16G5_FULLY_ISO  0.2
VARIABLE  CFP_E_3_NLD12G5_FULLY_ISO  0.2
VARIABLE  CFP_E_3_NLD20G5  0.2
VARIABLE  CFP_E_3_NLD20G5_FULLY_ISO  0.2
VARIABLE  CFP_E_3_NLD24G5_FULLY_ISO  0.2
VARIABLE  CFP_E_3_NLD24G5_ISO_SWITCH  0.2
VARIABLE  CFP_E_3_NA20G5  0.2
VARIABLE  CFP_E_3_NA20G5_NBL  0.2
VARIABLE  CFP_E_3_NA29G5  0.2
VARIABLE  CFP_E_3_NA29G5_NBL  0.2
VARIABLE  CFP_E_3_NA29G3_DEP_NBL  0.2
VARIABLE  CFP_E_3_NLD36G5_GB  0.2
VARIABLE  CFP_E_3_NLD45G5_GB  0.2
VARIABLE  CFP_E_3_NA45G3_DEP_GB  0.2
VARIABLE  CFP_E_3_PA20G5_BL  0.2
VARIABLE  CFP_E_3_PA20G5_SLIT_BL  0.2
VARIABLE  CFP_E_3_PA29G5_BL  0.2

VARIABLE  CFP_E_4_NLD12G5  0.06
VARIABLE  CFP_E_4_NLD12G5_FULLY_ISO  0.06
VARIABLE  CFP_E_4_NLD16G5  0.06
VARIABLE  CFP_E_4_NLD16G5_FULLY_ISO  0.06
VARIABLE  CFP_E_4_NLD20G5  0.06
VARIABLE  CFP_E_4_NLD20G5_FULLY_ISO  0.06
VARIABLE  CFP_E_4_NLD24G5_FULLY_ISO  0.06
VARIABLE  CFP_E_4_NLD24G5_ISO_SWITCH  0.06
VARIABLE  CFP_E_4_NA20G5  0.06
VARIABLE  CFP_E_4_NA20G5_NBL  0.06
VARIABLE  CFP_E_4_NA29G5  0.06
VARIABLE  CFP_E_4_NA29G5_NBL  0.06
VARIABLE  CFP_E_4_NA29G3_DEP_NBL  0.06
VARIABLE  CFP_E_4_NLD36G5_GB  0.06
VARIABLE  CFP_E_4_NLD45G5_GB  0.06
VARIABLE  CFP_E_4_NA45G3_DEP_GB  0.06
VARIABLE  CFP_E_4_PA20G5_BL  0.06
VARIABLE  CFP_E_4_PA20G5_SLIT_BL  0.06
VARIABLE  CFP_E_4_PA29G5_BL  0.06

VARIABLE  CFP_E_5_SBD_12V 0.06
VARIABLE  CFP_E_5_SBD_16V 0.06
VARIABLE  CFP_E_5_SBD_24V 0.06


VARIABLE  CFP_O_1_NLD12G5  0.3
VARIABLE  CFP_O_1_NLD12G5_FULLY_ISO  0.3
VARIABLE  CFP_O_1_NLD16G5  0.4
VARIABLE  CFP_O_1_NLD16G5_FULLY_ISO  0.4
VARIABLE  CFP_O_1_NLD20G5  0.6
VARIABLE  CFP_O_1_NLD20G5_FULLY_ISO  0.6
VARIABLE  CFP_O_1_NLD24G5_FULLY_ISO  1.1
VARIABLE  CFP_O_1_NLD24G5_ISO_SWITCH  0.9
VARIABLE  CFP_O_1_NA20G5  0.7
VARIABLE  CFP_O_1_NA20G5_NBL  0.7
VARIABLE  CFP_O_1_NA29G5  1.1
VARIABLE  CFP_O_1_NA29G5_NBL  1.1
VARIABLE  CFP_O_1_NA29G3_DEP_NBL  0.9


VARIABLE  CFP_O_2_PA20G5_BL  0.4
VARIABLE  CFP_O_2_PA20G5_SLIT_BL  0.4
VARIABLE  CFP_O_2_PA29G5_BL  0.8

VARIABLE  CFP_O_3_NLD36G5_GB  1
VARIABLE  CFP_O_3_NLD45G5_GB  1.1
VARIABLE  CFP_O_3_NA45G3_DEP_GB  1.1

VARIABLE  HVDMY_E_1_1	2.42
VARIABLE  HVDMY_E_1_2	3.92
VARIABLE  HVDMY_E_2		0.5

VARIABLE  HVSBD_W_1_SBD_12V 10.14
VARIABLE  HVSBD_W_1_SBD_16V 10.14
VARIABLE  HVSBD_W_1_SBD_24V 10.14

VARIABLE  HVDMY_E_3  0.5
VARIABLE  HVDMY_E_4_NPDD  2
VARIABLE  HVDMY_E_5_NHVPW_GB  2

VARIABLE  HVDMY_E_6_PBSHNNBL  0.5
VARIABLE  HVDMY_E_6_PDDSHNNBL  0.5
VARIABLE  HVDMY_E_6_SHNNBLPSUBSHP  0.5
VARIABLE  HVDMY_E_6_SHNPSUBSHP  0.5
VARIABLE  HVDMY_E_6_ZENER_NBL  2
VARIABLE  HVDMY_E_6_SBD_12V 2
VARIABLE  HVDMY_E_6_SBD_16V 2
VARIABLE  HVDMY_E_6_SBD_24V 2

VARIABLE  HVDMY_E_7_SHPNBLSHN_GB  0.5
VARIABLE  HVDMY_E_7_SHNNBLPSUBSHP_GB  0.5


VARIABLE  HVGA_E_1_NPDD  2
VARIABLE  HVGA_E_3_PBSHNNBL  0.5
VARIABLE  HVGA_E_3_PDDSHNNBL  0.5
VARIABLE  HVGA_E_3_SHNNBLPSUBSHP  0.5
VARIABLE  HVGA_E_3_SHNPSUBSHP  0.5
VARIABLE  HVGA_E_3_ZENER_NBL  2
VARIABLE  HVGA_E_3_SBD_12V  2
VARIABLE  HVGA_E_3_SBD_16V 2
VARIABLE  HVGA_E_3_SBD_24V 2
VARIABLE  HVGA_E_3_NPDDSHNNBL_PO_BOUNDARY 2
VARIABLE  HVGA_E_3_NPWSHNNBL_PO_BOUNDARY  2
VARIABLE  HVGA_E_3_PNDDSHPNBL  2
VARIABLE  HVGA_E_3_NPDDSHNNBL_BGR8  2
VARIABLE  HVGA_E_3_NPWSHNNBL_BGR8  2
VARIABLE  HVGA_E_4  0.5

VARIABLE  HVGB_S_1		1.0
VARIABLE  HVGB_E_1		0.5

VARIABLE  HVGB_E_3_NHVPW_GB  2
VARIABLE  HVGB_E_4_SHPNBLSHN_GB  0.5
VARIABLE  HVGB_E_4_SHNNBLPSUBSHP_GB  0.5

VARIABLE DPW_C_1 1
VARIABLE DPW_C_2 1
VARIABLE DPW_S_1 2
VARIABLE DPW_W_1 3.5
VARIABLE HRI_A_1 0.3844
VARIABLE HRI_C_1 0.26
VARIABLE HRI_C_2 0.26
VARIABLE HRI_C_3 0.32
VARIABLE HRI_C_4 0.32
VARIABLE HRI_E_1 0.26
VARIABLE HRI_S_1 0.44
VARIABLE HRI_W_1 0.44

VARIABLE  HV5DMY_E_1  0.5
VARIABLE  HV6VDMY_E_1  0.5
VARIABLE  HV9VDMY_E_1  0.5
VARIABLE  HV12VDMY_E_1  0.5
VARIABLE  HV16VDMY_E_1  0.5
VARIABLE  HV20VDMY_E_1  0.5
VARIABLE  HV24VDMY_E_1  0.5
VARIABLE  HV36VDMY_E_1  0.5
VARIABLE  HV29VDMY_E_1  0.5
VARIABLE  HV45VDMY_E_1  0.5

VARIABLE  NBLSLOT_W_1_NLD24G5_FULLY_ISO 0.6
VARIABLE  NBLSLOT_W_1_NLD24G5_ISO_SWITCH 0.6
VARIABLE  NBLSLOT_W_1_NA29G3_DEP_NBL 0.6
VARIABLE  NBLSLOT_W_1_NA29G5_NBL 0.6
VARIABLE  NBLSLOT_W_1_NLD36G5_GB 0.6
VARIABLE  NBLSLOT_W_1_NLD45G5_GB 0.6
VARIABLE  NBLSLOT_W_1_NA45G3_DEP_GB 0.6

VARIABLE  NBLSLOT_S_1_NLD24G5_FULLY_ISO 0.6
VARIABLE  NBLSLOT_S_1_NLD24G5_ISO_SWITCH 0.6
VARIABLE  NBLSLOT_S_1_NA29G5_NBL 0.6
VARIABLE  NBLSLOT_S_1_NA29G3_DEP_NBL 0.6
VARIABLE  NBLSLOT_S_1_NLD36G5_GB 0.6
VARIABLE  NBLSLOT_S_1_NLD45G5_GB 0.6
VARIABLE  NBLSLOT_S_1_NA45G3_DEP_GB 0.6
VARIABLE  NBLSLOT_C_1_NLD24G5_ISO_SWITCH 1
VARIABLE  NBLSLOT_C_1_NLD24G5_FULLY_ISO  1
VARIABLE  NBLSLOT_C_1_NA29G5_NBL  1.2
VARIABLE  NBLSLOT_C_1_NA29G3_DEP_NBL  1.2
VARIABLE  NBLSLOT_C_2_NLD24G5_FULLY_ISO 1
VARIABLE  NBLSLOT_C_2_NLD24G5_ISO_SWITCH 1
VARIABLE  NBLSLOT_C_2_NA29G5_NBL 1.2
VARIABLE  NBLSLOT_C_2_NA29G3_DEP_NBL 1.2

VARIABLE  NBLSLOT_C_3_NLD24G5_FULLY_ISO 1.6
VARIABLE  NBLSLOT_C_3_NLD24G5_ISO_SWITCH 1.6
VARIABLE  NBLSLOT_C_3_NA29G5_NBL 1.8
VARIABLE  NBLSLOT_C_3_NA29G3_DEP_NBL 1.8

VARIABLE  NBLSLOT_E_2_NLD36G5_GB 0
VARIABLE  NBLSLOT_E_2_NLD45G5_GB 0
VARIABLE  NBLSLOT_E_4_NA45G3_DEP_GB 0
VARIABLE  NBLSLOT_E_3_NLD36G5_GB 0.6
VARIABLE  NBLSLOT_E_3_NLD45G5_GB 0.6
VARIABLE  NBLSLOT_E_5_NA45G3_DEP_GB 0.6

VARIABLE  SLITDMY_E_1  0

VARIABLE  SLITDMY_E_2  0

VARIABLE  HVLOWR_E_1  0.5

VARIABLE  FGDOD_W_2	0.42
VARIABLE  FGDOD_W_1A 10
VARIABLE  FGDOD_W_1B 15
VARIABLE  FGDOD_S_1  0.44
VARIABLE  FGDOD_S_2  0.44
VARIABLE  FGDPO_W_1A	10
VARIABLE  FGDPO_W_1B	15
VARIABLE  FGDPO_C_1		0.25
VARIABLE  FGDPO_C_2		0.75
VARIABLE  FGDPO_C_4		0.75
VARIABLE  FGDPO_E_1		1.24
VARIABLE  FGDPP_E_1		0.13
VARIABLE  FGDPP_E_2		0.13
VARIABLE  FGDPP_E_3		0.13
VARIABLE  FGDNP_E_1		0.13
VARIABLE  FGDNP_E_2		0.13
VARIABLE  FGDNP_E_3		0.13
VARIABLE  FGD_R_2		0.0
VARIABLE  FGDCO_R_1		2
VARIABLE  FGDOD2_E_1	0.32
VARIABLE  FGDOD2_E_2	0.32
VARIABLE  FGDPO_C_3		0.25

VARIABLE HVISO_S_1	0.6
VARIABLE HVISO_S_2	0.5
VARIABLE HVISO_S_3	1.1
VARIABLE LVTOD_W_1 1.2
VARIABLE LVTOD_W_2 0.42
VARIABLE LVTOD_W_4 1.2
VARIABLE LVTOD_S_1  0.8
VARIABLE LVTOD_S_2  0.8
VARIABLE LVTPO_W_1 1.6
VARIABLE LVTPO_W_2 1.6
VARIABLE LVTPO_E_1  0.92
VARIABLE LVTPO_E_2  0.92
VARIABLE LVTNP_E_1 0.18
VARIABLE LVTPP_E_1  0.18
VARIABLE LVTOD2_E_1 0.8
VARIABLE LVTOD2_E_3 0.8
VARIABLE LVTOD2_E_2 0
VARIABLE LVTOD2_E_4 0
VARIABLE LVTNDD_E_1 0.8
VARIABLE LVTPDD_E_1 0.8
VARIABLE LVTCO_R_1 2
VARIABLE LVTCO_R_2 2
VARIABLE LVTNW_E_1 0.8

VARIABLE SH_N_E_3_NPDDSHNNBL_PO_BOUNDARY  1.7
VARIABLE SH_N_E_3_NPWSHNNBL_PO_BOUNDARY  1.7
VARIABLE SH_N_E_3_PSHNNBLSHP  1.9
VARIABLE SH_N_E_3_NPDDSHNNBL_BGR8  1.7
VARIABLE SH_N_E_3_NPWSHNNBL_BGR8  1.7

VARIABLE HVBJT_W_1 5
VARIABLE HVBJT_W_2 0.42
VARIABLE HVBJT_W_1_PNDDSHPNBL 5
VARIABLE HVBJT_W_2_PNDDSHPNBL 0.42
VARIABLE HVBJT_W_3A 0.42
VARIABLE HVBJT_W_3B 0.48
VARIABLE HVBJT_W_4_NPDDSHNNBL_PO_BOUNDARY 0.42
VARIABLE HVBJT_W_4_NPWSHNNBL_PO_BOUNDARY 0.42
VARIABLE HVBJT_W_4_PNDDSHPNBL 0.42
VARIABLE HVBJT_W_4_NPDDSHNNBL_BGR8 0.42
VARIABLE HVBJT_W_4_NPWSHNNBL_BGR8 0.42
VARIABLE HVBJT_W_6 0.48
VARIABLE HVBJT_W_7 2.88
VARIABLE HVBJT_W_8 0.62
VARIABLE HVBJT_S_2 5.6
VARIABLE HVBJT_S_3_PSHNNBLSHP  2.6
VARIABLE HVBJT_W_7_PNDDSHPNBL 2.88
VARIABLE HVBJT_W_8_PNDDSHPNBL 0.62
VARIABLE HVBJT_S_2_PNDDSHPNBL 5.6
VARIABLE HVBJT_S_3_NPDDSHNNBL_PO_BOUNDARY 2.4 
VARIABLE HVBJT_S_3_NPWSHNNBL_PO_BOUNDARY 2.5
VARIABLE HVBJT_S_3_PNDDSHPNBL  2.6
VARIABLE HVBJT_S_3_NPDDSHNNBL_BGR8  2.4
VARIABLE HVBJT_S_3_NPWSHNNBL_BGR8  2.5
VARIABLE  HVBJT_C_1_NPDDSHNNBL_PO_BOUNDARY  2
VARIABLE  HVBJT_C_1_NPWSHNNBL_PO_BOUNDARY  2
VARIABLE  HVBJT_C_1_NPDDSHNNBL_BGR8  2
VARIABLE  HVBJT_C_1_NPWSHNNBL_BGR8  2
VARIABLE HVBJT_C_4_PNDDPSUB 0.5
VARIABLE HVBJT_C_5_PHVNWPSUB_GB 0.5
VARIABLE HVBJT_C_7_PNDDSHPNBL 0.22
VARIABLE HVBJT_C_8_NPDDSHNNBL_BGR8 2
VARIABLE HVBJT_C_9_NPWSHNNBL_BGR8 2
VARIABLE HVBJT_E_1_PNDDPSUB 0.6
VARIABLE HVBJT_E_3_NPDDSHNNBL_PO_BOUNDARY 2
VARIABLE HVBJT_E_3_NPWSHNNBL_PO_BOUNDARY 2
VARIABLE HVBJT_E_3_NPDDSHNNBL_BGR8 2
VARIABLE HVBJT_E_3_NPWSHNNBL_BGR8 2
VARIABLE HVBJT_E_4 2
VARIABLE HVBJT_E_4_PNDDSHPNBL 2
VARIABLE HVBJT_E_5_PHVNWPSUB_GB 0.6
VARIABLE HVBJT_E_6 0.22
VARIABLE HVBJT_E_7_PNDDPSUB 2
VARIABLE HVBJT_E_7_PHVNWPSUB_GB  2
VARIABLE HVBJT_E_8_NPDDSHNNBL_PO_BOUNDARY 2
VARIABLE HVBJT_E_8_NPWSHNNBL_PO_BOUNDARY 2
VARIABLE HVBJT_E_8_PNDDSHPNBL 2
VARIABLE HVBJT_E_8_NPDDSHNNBL_BGR8 2
VARIABLE HVBJT_E_8_NPWSHNNBL_BGR8 2
VARIABLE HVBJT_E_9_PNDDPSUB  2
VARIABLE HVBJT_E_10_PHVNWPSUB_GB  2
VARIABLE HVBJT_E_9 2
VARIABLE HVBJT_E_10 2
VARIABLE HVBJT_E_13 0.6
VARIABLE HVBJT_E_16 5
VARIABLE HVBJT_E_13_PNDDSHPNBL 0.6
VARIABLE HVBJT_E_16_PNDDSHPNBL 5
VARIABLE  HVBJT_E_21_NPDDSHNNBL_PO_BOUNDARY  0.4
VARIABLE  HVBJT_E_21_NPWSHNNBL_PO_BOUNDARY  0.22
VARIABLE  HVBJT_E_21_NPDDSHNNBL_BGR8  0.4
VARIABLE  HVBJT_E_21_NPWSHNNBL_BGR8  0.22
VARIABLE  HVBJT_E_23_NPDDSHNNBL_PO_BOUNDARY  0.4
VARIABLE  HVBJT_E_23_NPWSHNNBL_PO_BOUNDARY  0.5
VARIABLE  HVBJT_E_23_NPDDSHNNBL_BGR8  0.4
VARIABLE  HVBJT_E_23_NPWSHNNBL_BGR8  0.5
VARIABLE  HVBJT_O_1 0.22
VARIABLE  HVBJT_O_2_NPDDSHNNBL_PO_BOUNDARY  0.4
VARIABLE  HVBJT_O_2_NPWSHNNBL_PO_BOUNDARY  0.22
VARIABLE  HVBJT_O_2_NPDDSHNNBL_BGR8  0.4
VARIABLE  HVBJT_O_2_NPWSHNNBL_BGR8  0.22
VARIABLE HVBJT_O_3 0.22
VARIABLE HVBJT_O_4 2.58
VARIABLE HVBJT_O_5 0.44
VARIABLE HVBJT_O_3_PNDDSHPNBL 0.22
VARIABLE HVBJT_O_4_PNDDSHPNBL 2.58
VARIABLE HVBJT_O_5_PNDDSHPNBL 0.44
VARIABLE HVBJT_O_23_NPDDSHNNBL_PO_BOUNDARY 0.4
VARIABLE HVBJT_O_23_NPDDSHNNBL_BGR8 0.4
VARIABLE HVBJT_O_24_NPDDSHNNBL_PO_BOUNDARY 0.4
VARIABLE HVBJT_O_24_NPDDSHNNBL_BGR8 0.4

VARIABLE LVISO_W_9N_1 0.42
VARIABLE LVISO_W_29N_1 1.42
VARIABLE LVISO_W_45N_1 0.92
VARIABLE LVISO_E_9N  0.5
VARIABLE LVISO_E_9N_1  0.5
VARIABLE LVISO_E_29N  0.5
VARIABLE LVISO_E_29N_1  0.5
VARIABLE LVISO_E_45N  1
VARIABLE LVISO_E_45N_1  1
VARIABLE LVISO_E_9P1 0.5
VARIABLE LVISO_E_9P2 0.5
VARIABLE LVISO_E_29P1 0.5
VARIABLE LVISO_E_29P2 0.5
VARIABLE LVISO_E_45P1 0.5
VARIABLE LVISO_E_45P2 0.5
VARIABLE LVISO_E_1 1.0 
VARIABLE SH_N_C_4	  0.6
VARIABLE SH_N_C_5	  0.6
VARIABLE SH_N_C_6	  0.86
VARIABLE SH_N_C_7	  3.22
VARIABLE SH_N_C_8	  2.0
VARIABLE SH_N_C_9	  5.4
VARIABLE SH_N_C_10	  2.0
VARIABLE SH_N_C_11	  1.4
VARIABLE SH_N_E_2	2.5
VARIABLE SH_N_E_2_GB	4.2
VARIABLE SH_N_E_8  1.2
VARIABLE SH_N_E_9 2.5
VARIABLE SH_N_E_10 4.2
VARIABLE PSUB_W_1	0.65
VARIABLE PSUB_S_1	0.65
VARIABLE PSUB_C_1	0.65
VARIABLE PSUB_E_1	0.65
VARIABLE NDD_S_2	2.0
VARIABLE NDD_C_1	1.0
VARIABLE NDD_C_2	0.0
VARIABLE NDD_E_7	3.5
VARIABLE CFP_W_1	0.3
VARIABLE CFP_W_2	1.1
VARIABLE CFP_S_1	0.5
VARIABLE HVSLITPP_W_1_1 0.47
VARIABLE HVSLITPP_W_1_2 0.63
VARIABLE HVSLITPP_W_2_1 0.47
VARIABLE HVSLITPP_W_2_2 0.56
VARIABLE HVSLITNP_W_1_1 0.47
VARIABLE HVSLITNP_W_1_2 0.63
VARIABLE HVSLITPP_S_1_1 0.94
VARIABLE HVSLITPP_S_1_2 1.26
VARIABLE HVSLITPP_S_2_1 0.47
VARIABLE HVSLITPP_S_2_2 0.56
VARIABLE HVSLITNP_S_1_1 0.94
VARIABLE HVSLITNP_S_1_2 1.26
VARIABLE HVSLITPP_O_1 0.15
VARIABLE HVSLITNP_O_1 0.15
VARIABLE HVSLITPP_R_2 2
VARIABLE HVSLITPP_R_3 1
VARIABLE HVSLITNP_R_1 2
VARIABLE HVSLITPP_C_1 0
VARIABLE HVSLITPP_C_2 0.945
VARIABLE HVSLITPP_C_3 0
VARIABLE HVSLITPP_C_4 0.56
VARIABLE HVSLITNP_C_1 0
VARIABLE HVSLITNP_C_2 0.945
VARIABLE HVPP_C_4   0.76
VARIABLE HVCO_E_1	0.11
VARIABLE HVCO_E_2	0.11
VARIABLE HVPP_E_2	0.32

VARIABLE SERRES_W_1	0.18
VARIABLE SERRES_S_1	0.25
VARIABLE SERRES_L_1	3.6
VARIABLE SERRES_C_2	0.3
VARIABLE SERRES_C_4	0.6
VARIABLE SERRES_C_6	0.32
VARIABLE SERRES_R_6	2.0
VARIABLE SERRES_E_1 0.32
VARIABLE SERRES_E_3 0.32
VARIABLE SERRES_E_4 0
VARIABLE SERRES_E_5 0.32
VARIABLE SERRES_E_6 0.32
VARIABLE SERRES_R_4 88
VARIABLE SERRES_W_2_1	0.45
VARIABLE SERRES_W_2_2	0.55
VARIABLE SERRES_E_7 0.32


VARIABLE M1_DN_1    0.15
VARIABLE M1_DN_1_W  200
VARIABLE M1_DN_1_S  100
VARIABLE M1_DN_1_E  50
VARIABLE M1_DN_2    0.6

VARIABLE M1_DN_2_W  200
VARIABLE M2_DN_1    0.15
VARIABLE M2_DN_1_W  200
VARIABLE M2_DN_1_S  100
VARIABLE M2_DN_1_E  50
VARIABLE M2_DN_2    0.6

VARIABLE M2_DN_2_W  200
VARIABLE M3_DN_1    0.15
VARIABLE M3_DN_1_W  200
VARIABLE M3_DN_1_S  100
VARIABLE M3_DN_1_E  50
VARIABLE M3_DN_2    0.6

VARIABLE M3_DN_2_W  200
VARIABLE M4_DN_1    0.15
VARIABLE M4_DN_1_W  200
VARIABLE M4_DN_1_S  100
VARIABLE M4_DN_1_E  50
VARIABLE M4_DN_2    0.6

VARIABLE M4_DN_2_W  200
VARIABLE M5_DN_1    0.15
VARIABLE M5_DN_1_W  200
VARIABLE M5_DN_1_S  100
VARIABLE M5_DN_1_E  50
VARIABLE M5_DN_2    0.6

VARIABLE M5_DN_2_W  200




// DRAWN LAYER DEFINITIONS
//------------------------
LAYER NWELi	2	// Nwell technology
LAYER DIFFi	3	// Active areas


LAYER EODi	307
LAYER MAP 3   DATATYPE 7 307    //Define extend OD region on drain side
LAYER DOD	1340	// Dummy OD (DIFF)
LAYER MAP 3   DATATYPE 1 1340	// Mapping (3;1) to 1340 for dummy OD
LAYER ODBLK	1350	// DOD blocking for insertion
LAYER MAP 150 DATATYPE 20 1350
LAYER PDIFFi	11	// Active areas
LAYER NDIFFi	12	// Active areas
LAYER OD2i	4	// Define thick gate oxides
LAYER POLYi	13	// Polysilicon gates, interconnect
LAYER DPO	1342	// Dummy Poly
LAYER MAP 13  DATATYPE 1 1342	// Mapping (13;1) to 1342 for dummy PO
LAYER POBLK	1351	// DPO blocking for insertion
LAYER MAP 13  DATATYPE 4 1304	
LAYER FPOi	1304	
LAYER SLITDMY	18212	
LAYER MAP 182 DATATYPE 12 18212
LAYER LVPWRDMY	18213
LAYER MAP 182 DATATYPE 13 18213
LAYER HVSW28BVDMY 18214
LAYER MAP 182 DATATYPE 14 18214
LAYER HVSW40BVDMY 18215
LAYER MAP 182 DATATYPE 15 18215
LAYER HVSW50BVDMY 18216
LAYER MAP 182 DATATYPE 16 18216
LAYER FGDDMY 	18220
LAYER MAP 182 DATATYPE 20 18220
LAYER BIAS25VNDMY 18290
LAYER MAP 182 DATATYPE 90 18290
LAYER YMCCEL 	244
LAYER MAP 244 DATATYPE 1  2441
LAYER YMCCAP	2441
LAYER HVPWELLi  95
LAYER MAP 48 DATATYPE 3     483
LAYER HRI3D3KDMY  483   // Dummy layer for 3.3K HRI definition
LAYER MAP 49 DATATYPE 8 	498
LAYER HVESD1DMY	498
LAYER MAP 49 DATATYPE 9		499
LAYER HVESD2DMY	499
LAYER MAP 179 DATATYPE 1 	1791
LAYER NBLSLOTi	1791
LAYER MAP 15 DATATYPE 2 1522
LAYER CFPi 1522 
LAYER NT_N2i 1292
LAYER MAP 129 DATATYPE 2  1292

LAYER MAP 150 DATATYPE 21 1351
LAYER PPi	7	// P+ S/D imlant
LAYER NPi	8	// N+ S/D imlant


LAYER MCEL	122	//memory area
LAYER MTP_2T2C  1223    //Define 5V N/P WELL region for 2T2C MTP cell
LAYER MAP 122 DATATYPE 3 1223
LAYER H18NWDMY	1224	//a dummy layer to block IO LDNMOS 18V NW area
LAYER MAP 122 DATATYPE 4 1224

LAYER NLVTi	405
LAYER MAP 141 DATATYPE 63 405

LAYER DTi       171     // Deep trench 
LAYER DTBLK  2046  // Deep trench block
LAYER MAP 171 DATATYPE 2 2046
LAYER FLASH	94	// FLASH IP outline


LAYER DSDIO     18250
LAYER MAP 182 DATATYPE 50 18250
LAYER VHRIi	4810
LAYER MAP 48  DATATYPE 10 4810
LAYER MACRODMY  404
LAYER MAP 182 DATATYPE 1 404
LAYER RWDUMMY_PURE5V    525
LAYER MAP 52 DATATYPE 5 525
LAYER RPDUMMY_PURE5V    545
LAYER MAP 54 DATATYPE 5 545
LAYER RES5VDMY	5450
LAYER MAP 54 DATATYPE 50 5450
LAYER RESHVDMY	5451
LAYER MAP 54 DATATYPE 51 5451
LAYER VTDNi     26
LAYER PSUBi	116
LAYER SERPDMY	5420
LAYER MAP 54 DATATYPE 20	5420
LAYER CK3DMY	931
LAYER MAP 93 DATATYPE 1 931
LAYER HVNWi     99
LAYER NBLi      179
LAYER HVPBi     202
LAYER BJT4TDMY	491
LAYER MAP 49 DATATYPE 1 491
LAYER BJT5TDMY	492
LAYER MAP 49 DATATYPE 2 492
LAYER BJT7TDMY	497
LAYER MAP 49 DATATYPE 7 497
LAYER BJTMDDMY	493
LAYER MAP 49 DATATYPE 3 493
LAYER BJTMEDMY	494
LAYER MAP 49 DATATYPE 4 494
LAYER BJTSNDMY	495
LAYER MAP 49 DATATYPE 5 495
LAYER MOMDMY_ALL 14510
LAYER MAP 145 DATATYPE 100 14510
LAYER MAP 145 DATATYPE >=1 <=6 14510
LAYER MOMDMY_100 14511
LAYER MAP 145 DATATYPE 100 14511
LAYER MOMDMY_0 1450
LAYER MAP 145 DATATYPE 0 1450
LAYER MOMDMY_27 14527
LAYER MAP 145 DATATYPE 27 14527
LAYER MOMDMY_1 1451
LAYER MAP 145 DATATYPE 1 1451
LAYER MOMDMY_2 1452
LAYER MAP 145 DATATYPE 2 1452
LAYER MOMDMY_3 1453
LAYER MAP 145 DATATYPE 3 1453
LAYER MOMDMY_4 1454
LAYER MAP 145 DATATYPE 4 1454
LAYER MOMDMY_5 1455
LAYER MAP 145 DATATYPE 5 1455
LAYER PDDi      14149  //P-type drift at drain side used for HV process to get low Rdson
LAYER MAP 141 DATATYPE 49 14149
LAYER MAP 141 DATATYPE 50 14150
LAYER NDDi      14150  //N-type drift at drain side used for HV process to get low Rdson
LAYER RW4TDMY   523
LAYER MAP 52  DATATYPE 3  523
LAYER HVOXi 180
LAYER CSRDMY 1261
LAYER MAP 126 DATATYPE 1 1261
LAYER ROXi	14111
LAYER MAP 141 DATATYPE 101 14111
LAYER SH_Pi     311
LAYER MAP 141 DATATYPE 1 311
LAYER DPWi      400
LAYER MAP 141 DATATYPE 51 400
LAYER HVDMYi    401
LAYER MAP 141 DATATYPE 52 401
LAYER HVGAi	14154
LAYER MAP 141 DATATYPE 54 14154
LAYER HVGBi	14155
LAYER MAP 141 DATATYPE 55 14155
LAYER HV5DMYi	14184
LAYER MAP 141 DATATYPE 84 14184
LAYER HV6DMYi	14172
LAYER MAP 141 DATATYPE 72 14172
LAYER HV7DMYi   14187
LAYER MAP 141 DATATYPE 87 14187
LAYER HV8DMYi	14173
LAYER MAP 141 DATATYPE 73 14173
LAYER MAP 206 DATATYPE 5 2065     
LAYER HVMOSPAIR 2065

LAYER HV9DMYi   14192
LAYER MAP 141 DATATYPE 92 14192
LAYER HV12DMYi  14167
LAYER MAP 141 DATATYPE 67 14167
LAYER HV16DMYi	14174
LAYER MAP 141 DATATYPE 74 14174
LAYER HV20DMYi 	14175
LAYER MAP 141 DATATYPE 75 14175
LAYER HV24DMYi  14176
LAYER MAP 141 DATATYPE 76 14176
LAYER HV29DMYi  14177
LAYER MAP 141 DATATYPE 77 14177 
LAYER HV36DMYi  14179
LAYER MAP 141 DATATYPE 79 14179
LAYER HV45DMYi	14180
LAYER MAP 141 DATATYPE 80 14180
LAYER HV55DMYi	14181
LAYER MAP 141 DATATYPE 81 14181
LAYER HV65DMYi	14182
LAYER MAP 141 DATATYPE 82 14182
LAYER HV70DMYi  14183
LAYER MAP 141 DATATYPE 83 14183
LAYER HVLOWR	41202
LAYER MAP 141 DATATYPE 202 41202
LAYER HV8ISOi	41150
LAYER MAP 141 DATATYPE 150 41150
LAYER HV9ISOi	41155
LAYER MAP 141 DATATYPE 155 41155
LAYER HV29ISOi	41151
LAYER MAP 141 DATATYPE 151 41151	 	
LAYER HV45ISOi	41152
LAYER MAP 141 DATATYPE 152 41152
LAYER HV70ISOi  41153  
LAYER MAP 141 DATATYPE 153 41153	
LAYER EMRDMY  18210  
LAYER MAP 182 DATATYPE 10 18210	
LAYER HVSHNi     312
LAYER MAP 141 DATATYPE 2 312
LAYER DIO3TDMY  561
LAYER MAP 56  DATATYPE 1 561
LAYER DIO4TDMY	562
LAYER MAP 56  DATATYPE 2 562
LAYER SBD3TDMY  1442
LAYER MAP 144 DATATYPE 2 1442
LAYER HVPB2i		2021
LAYER MAP 202 DATATYPE 1 2021
LAYER PDD2i		14189
LAYER MAP 141 DATATYPE 89 14189
LAYER HVNBi		14190
LAYER MAP 141 DATATYPE 90 14190
LAYER G2OXi		410
LAYER MAP 4	  DATATYPE	1	410
LAYER HVG2DMY	14191
LAYER MAP 141 DATATYPE  91	14191
LAYER BJTDUMMY	49	// BJT dummy layer
LAYER DIODUMMY	56	// Diode dummy layer
LAYER RPDUMMY   54
LAYER COi	15	// Define connection from M1 to S/D and Gate
LAYER M1i	16	// First Metal layer
LAYER VIA1i	17	// Define connection from M2 to M1
LAYER M2i	18	// Second Metal layer
LAYER VIA2i	27	// Define connection from M3 to M2
LAYER M3i	28	// Third Metal layer
LAYER VIA3i	29	// Define connection from M4 to M3
LAYER M4i	31	// Fourth Metal layer
LAYER VIA4i	32	// Define connection from M5 to M4
LAYER M5i	33	// Fifth Metal layer
LAYER M1_PIN_TEXT	4000
LAYER MAP 40 TEXTTYPE 0	4000
LAYER M2_PIN_TEXT	4100
LAYER MAP 41 TEXTTYPE 0	4100
LAYER M3_PIN_TEXT	4200
LAYER MAP 42 TEXTTYPE 0	4200
LAYER M4_PIN_TEXT	4300
LAYER MAP 43 TEXTTYPE 0	4300
LAYER M5_PIN_TEXT	4400
LAYER MAP 44 TEXTTYPE 0	4400

LAYER CU_PPI_PIN_TEXT 4211 
LAYER MAP 42 TEXTTYPE 11 4211

LAYER VIADi     167     // Define connect from MD to Top Metal
LAYER MDi       168     // RDL Metal layer above Top Metal
LAYER CB2i      177     // For BiCMOS passivation-2 opening window
LAYER RVi       188     // Define connection from AP to MTOP
LAYER MAP 189 DATATYPE 1 1891
LAYER APi       1891    // AL pad or RDL in SiGe PA and SOI process
LAYER CU_PPIi   4210
LAYER MAP 42 DATATYPE 10 4210
LAYER PM1       1651
LAYER MAP 5 DATATYPE 1 1651
LAYER PM2      1652
LAYER MAP 5 DATATYPE 2 1652
LAYER CBi	19	// Passivation opening for Bond Pad
LAYER CBDi	169	// Definition of passivation window for bump
LAYER UBMi	170	// Bond Pad definition for RDL
LAYER PPIi	189	// Post Passivation RDL
LAYER RPOi	34	// Salicided Block Layer
LAYER NTNi	129	// Native NMOS blocked implantation
LAYER PLMIDEi	89	// Polymide (if drawn)
//LAYER  FUSEi	235	// Fuse window
LAYER DNWi	82	// Deep N-WELL
LAYER VTMPi	23	// Blocking region of PMOS VT implantation
LAYER VTMNi	24	// Blocking region of NMOS VT implantation
LAYER PV_P	71	// PV_P pmos varactor p+ implant layer
LAYER PV_N	72	// PV_N pmos varactor n+ blocking layer
LAYER HRIi	48	// High Resistor implant

// Dummy Metal layers
//-------------------
LAYER MAP 16  DATATYPE 1 316
LAYER M1DMY	316	// Metal1 dummy (if drawn)
LAYER MAP 18  DATATYPE 1 318
LAYER M2DMY	318	// Metal2 dummy (if drawn)
LAYER MAP 28  DATATYPE 1 329
LAYER M3DMY	329	// Metal3 dummy (if drawn)
LAYER MAP 31  DATATYPE 1 331
LAYER M4DMY	331	// Metal4 dummy (if drawn)
LAYER MAP 33  DATATYPE 1 333
LAYER M5DMY	333	// Metal5 dummy (if drawn)
LAYER MAP 168 DATATYPE 1 340
LAYER MDDMY	340    	// MD dummy (if drawn)

// Metal Slot layers
//------------------
LAYER MAP 16  DATATYPE 2 321
LAYER M1SLOTi	321	// Metal1 slot (if drawn)
LAYER MAP 18  DATATYPE 2 322
LAYER M2SLOTi	322	// Metal2 slot (if drawn)
LAYER MAP 28  DATATYPE 2 323
LAYER M3SLOTi	323	// Metal3 slot (if drawn)
LAYER MAP 31  DATATYPE 2 324
LAYER M4SLOTi	324	// Metal4 slot (if drawn)
LAYER MAP 33  DATATYPE 2 325
LAYER M5SLOTi	325	// Metal5 slot (if drawn)
LAYER MAP 168 DATATYPE 2 328
LAYER MDSLOTi	328	// MD slot (if drawn)

// Capacitor Top Metal Layers
//---------------------------


LAYER MAP 67  DATATYPE 1 256
LAYER CTM1i	256	// Capacitor Top Metal-1

LAYER MAP 67  DATATYPE 2 257
LAYER CTM2i	257	// Capacitor Top Metal-2
LAYER MAP 67  DATATYPE 3 258
LAYER CTM3i	258	// Capacitor Top Metal-3
LAYER MAP 67  DATATYPE 4 259
LAYER CTM4i	259	// Capacitor Top Metal-4
LAYER MAP 67  DATATYPE 5 260
LAYER CTM5i	260	// Capacitor Top Metal-5

// Dummy Layers
//-------------
LAYER HOTWL	51	// Hot N-Well (SEE README HOT_NWEL NOTES)
LAYER EXCLi	55	// Exclude layer
LAYER DRCDMY	60	// DRC I/O waiver
LAYER RWDMY	52	// NWEL Resistor dummy layer
LAYER DPDMY	65	// Dummy Pad area dummy layer
LAYER PLDMY	66	// Power Line area dummy layer
LAYER SDI	58	// IO ESD region dummy layer
LAYER ESD1DMY	136	// IO ESD region dummy layer, RPO must enclose whole gate
LAYER ESD2DMY	137	// IO ESD region dummy layer, RPO enclose gate 0.05 for 3.3V
LAYER ESD3DMY	234
LAYER CTMDMY	131	// Cover metal as a capacitor bottom plate
LAYER RLPPDMY	134	// HRI high Poly resistor dummy layer
LAYER DMN2V	184	// Dummy layer to ensure N2V in N+ poly/OD resistor
LAYER DMP2V	149	// Dummy layer to ensure P2V in P+ poly/OD resistor
LAYER VARDMY	138	// Dummy layer to cover varactor device
LAYER PMDMY	236	// Dummy layer to cover fuse window and protection ring structur
LAYER FWi	235	// Fuse window when x, (x+1) = 3 
LAYER LMARK	263	// L target window for bump process
LAYER MAP 63  DATATYPE 1 263
LAYER LWI	363	// L target window for bump process
LAYER MAP 63  DATATYPE 2 363
LAYER WBDMY	183	// Dummy layer to cover the CUP pad
LAYER ESDi	30	// For 0.18um 1.8V/5V on i/o esd's implant only.
LAYER ESDIMPi 2504 // For 0.18um 3.3V esd NMOS only.
LAYER MAP 250 DATATYPE 4 2504
LAYER INDDMY	364	// Dummy layer to define inductor
LAYER MAP 139 DATATYPE 0 364
LAYER SEALRING	126	// SEAL-RING Layer used for SR.S.1 check
LAYER LOGO	178	// Dummy layer for product labels and LOGO
LAYER LUPWDMY     2551     // DRC dummy layer to waive Latch-Up rules for verified IP.
LAYER MAP 255 DATATYPE 1 2551
LAYER LUPWDMY_2	  25518   // Area Array IO LUP rules check
LAYER MAP 255 DATATYPE 18 25518

LAYER SBDDMY     1440 //A layer for DRC,LVS and creating mask logic operation Use "SBDDMY" to fully cover schottky barrier diode.
LAYER MAP 144 DATATYPE 0 1440
LAYER RFDUMMY     1601    // recognize RF dummy layer for LVS purpose.
LAYER MAP 160 DATATYPE 1 1601
LAYER RES200	  2559    // dummy layer to recognize 200 ohm or above resistor
LAYER MAP 255 DATATYPE 9 2559
LAYER MATCHING    1821    // dummy layer to enable pair check
LAYER MAP 182 DATATYPE 11 1821

LAYER RMDUMMY1   6901
LAYER MAP 69 DATATYPE 1  6901
LAYER RMDUMMY2   6902
LAYER MAP 69 DATATYPE 2  6902
LAYER RMDUMMY3   6903
LAYER MAP 69 DATATYPE 3  6903
LAYER RMDUMMY4   6904
LAYER MAP 69 DATATYPE 4  6904
LAYER RMDUMMY5   6905
LAYER MAP 69 DATATYPE 5  6905




LAYER MAP 255 DATATYPE 4   2554
LAYER	VDDDMY 2554
LAYER MAP 255 DATATYPE 5   2555
LAYER	VSSDMY 2555
LAYER TSVi    251      // TSV region define layer.
LAYER MAP 255 DATATYPE 6   2556
LAYER   STRAPDMY 2556

LAYER MAP 127 DATATYPE 3 1273 //define LDDMY
LAYER NONLDDi 1273

LAYER MAP 54 DATATYPE 4 5404
LAYER RSEPDUMMY 5404



LAYER MAP 210 DATATYPE 1 2101
LAYER MSIi	2101
LAYER M0i	210
LAYER MAP 210 DATATYPE 2 2102
LAYER SICR_V1i	2102

LAYOUT TOP LAYER M1i VIA1i M1SLOTi M1DMY
LAYOUT TOP LAYER M2i VIA2i M2SLOTi M2DMY
LAYOUT TOP LAYER M3i VIA3i M3SLOTi M3DMY
LAYOUT TOP LAYER M4i VIA4i M4SLOTi M4DMY

LAYOUT TOP LAYER MDi VIADi MDSLOTi MDDMY M5i M5SLOTi M5DMY CBi 


M1xd = (M1i OR M1DMY) NOT M1SLOTi
M1x  = M1i NOT M1SLOTi

LAYER DM1EXCL	371
LAYER MAP 150 DATATYPE 1 371
M2xd = (M2i OR M2DMY) NOT M2SLOTi
M2x  = M2i NOT M2SLOTi

LAYER DM2EXCL	372
LAYER MAP 150 DATATYPE 2 372
M3xd = (M3i OR M3DMY) NOT M3SLOTi
M3x  = M3i NOT M3SLOTi

LAYER DM3EXCL	373
LAYER MAP 150 DATATYPE 3 373
M4xd = (M4i OR M4DMY) NOT M4SLOTi
M4x  = M4i NOT M4SLOTi

LAYER DM4EXCL	374
LAYER MAP 150 DATATYPE 4 374
M5xd = (M5i OR M5DMY) NOT M5SLOTi
M5x  = M5i NOT M5SLOTi

LAYER DM5EXCL	375
LAYER MAP 150 DATATYPE 5 375
MDxd = (MDi OR MDDMY) NOT MDSLOTi
MDx  = MDi NOT MDSLOTi
LAYER DMDEXCL	380
LAYER MAP 150 DATATYPE 15 380

/////////////////////////////////////////////////////////////////////////////////

// EXCLUDE UNCHECKED REGIONS
//--------------------------
CHIP         = EXTENT


BULK	= SIZE CHIP BY 1.0
EXCL = EXCLi NOT LOGO
#IFDEF CHECK_SRAM_EXCL
EXCL_S	= CHIP NOT BULK	// Use an empty layer to disable the usage of EXCL
#ELSE
EXCL_S	= COPY EXCL	// EXCL_S = EXCL
#ENDIF

// Front-End Layer
//----------------




ODi	= (DIFFi OR NDIFFi) OR PDIFFi

FPO = FPOi NOT EXCL
HVOX = HVOXi NOT EXCL
NDD_Pi = (NDDi INTERACT OD2i) NOT HVDMYi   // nch_lvt nmos 
NDD_Ni = NDDi NOT NDD_Pi
NDD_P = (NDD INTERACT OD2i) NOT HVDMYi   // nch_lvt nmos 
NDD_N = NDD NOT NDD_P
PWELi	= (BULK NOT NWELi) NOT ((HVDMYi OR HVSHNi) OR NDD_Ni)
CTM1	= CTM1i NOT EXCL
VHRI	= VHRIi NOT EXCL
DT      = DTi   NOT EXCL
VTDN	= VTDNi  NOT EXCL
PSUB	= PSUBi	 NOT EXCL
HVNW	= HVNWi  NOT EXCL
HVSHN 	= HVSHNi NOT EXCL
NBL 	= NBLi NOT EXCL
NBLSLOT = NBLSLOTi NOT EXCL
CFP		= CFPi NOT EXCL
NT_N2	= NT_N2i NOT EXCL
NONLDD = NONLDDi NOT EXCL
HVPB    = HVPBi  NOT EXCL
DPW     = DPWi   NOT EXCL
ROX	= ROXi   NOT EXCL
PDD	= PDDi	 NOT EXCL
NDD	= NDDi	 NOT EXCL
SH_P    = SH_Pi  NOT EXCL
HVDMY   = HVDMYi NOT EXCL
HVGA    = HVGAi  NOT EXCL
HVGB	= HVGBi	 NOT EXCL 
HV5DMY	= HV5DMYi NOT EXCL
HV6DMY  = HV6DMYi NOT EXCL
HV7DMY  = HV7DMYi NOT EXCL
HV8DMY  = HV8DMYi NOT EXCL
HV9DMY  = HV9DMYi NOT EXCL
HV12DMY = HV12DMYi NOT EXCL
HV16DMY = HV16DMYi NOT EXCL
HV20DMY = HV20DMYi NOT EXCL
HV24DMY = HV24DMYi NOT EXCL
HV29DMY = HV29DMYi NOT EXCL
HV36DMY = HV36DMYi NOT EXCL
HV45DMY = HV45DMYi NOT EXCL
HV55DMY = HV55DMYi NOT EXCL
HV65DMY = HV65DMYi NOT EXCL
HV70DMY = HV70DMYi NOT EXCL
HV8ISO	= HV8ISOi  NOT EXCL
HV9ISO	= HV9ISOi  NOT EXCL
HV29ISO  = HV29ISOi  NOT EXCL	
HV45ISO  = HV45ISOi  NOT EXCL
HV70ISO  = HV70ISOi  NOT EXCL
EOD 	= EODi NOT EXCL
HVPWi   = HVDMYi NOT ((HVSHN OR HVNW) OR NDD)
HVPWELL  = HVPWELLi NOT EXCL
HVPW    = HVPWi  NOT EXCL
HVPB2	= HVPB2i	NOT EXCL
PDD2	= PDD2i	NOT EXCL
HVNB	= HVNBi NOT EXCL
G2OX	= G2OXi	NOT EXCL
PWEL	= PWELi	NOT EXCL
NWEL	= NWELi	NOT INSIDE EXCL
DNW	= DNWi	NOT EXCL
VTMP	= VTMPi	NOT EXCL
VTMN	= VTMNi	NOT EXCL
#IFDEF CHECK_DUMMY_ODPO
OD	= (ODi	OR  DOD) NOT EXCL
POLY	= (POLYi OR DPO) NOT EXCL
#ELSE
OD	= ODi	NOT EXCL
POLY	= POLYi	NOT EXCL
#ENDIF

OD2	= OD2i	NOT EXCL
PP	= PPi	NOT INSIDE EXCL
NP	= NPi	NOT INSIDE EXCL
CO	= COi	NOT EXCL




NLVT	= NLVTi	 NOT EXCL

// Back-End Layer
//---------------
CTMi = (((CTM1i OR CTM2i) OR CTM3i) OR CTM4i) OR CTM5i
CTM = CTMi NOT EXCL_S

VIA1ii = VIA1i NOT INTERACT CTM1i
CTM_VIA1i = VIA1i AND CTM1i 
CTM_VIA1 = CTM_VIA1i NOT INSIDE EXCL_S

VIA2ii = VIA2i NOT INTERACT CTM2i
CTM_VIA2i = VIA2i AND CTM2i 
CTM_VIA2 = CTM_VIA2i NOT INSIDE EXCL_S

VIA3ii = VIA3i NOT INTERACT CTM3i
CTM_VIA3i = VIA3i AND CTM3i 
CTM_VIA3 = CTM_VIA3i NOT INSIDE EXCL_S

VIA4ii = VIA4i NOT INTERACT CTM4i
CTM_VIA4i = VIA4i AND CTM4i 
CTM_VIA4 = CTM_VIA4i NOT INSIDE EXCL_S





M1	= M1xd	NOT EXCL
M1_A	= M1xd  NOT INSIDE EXCL
VIA1	= VIA1i	NOT EXCL
M2	= M2xd	NOT INSIDE EXCL_S
VIA2	= VIA2i	NOT INSIDE EXCL_S
M3	= M3xd	NOT INSIDE EXCL_S
VIA3	= VIA3i	NOT INSIDE EXCL_S
M4	= M4xd	NOT INSIDE EXCL_S
VIA4	= VIA4i	NOT INSIDE EXCL_S
M5	= M5xd	NOT INSIDE EXCL_S
VIAD	= VIADi	NOT INSIDE EXCL_S
MD	= MDxd	NOT INSIDE EXCL_S
CB	= CBi	NOT EXCL_S
CBD	= CBDi	NOT EXCL_S
RPO	= RPOi	NOT EXCL
NTN	= NTNi	NOT EXCL
PLMIDE	= PLMIDEi NOT EXCL_S
//FUSE	= FUSEi	NOT EXCL
FW	= FWi	NOT EXCL_S
LW	= LWI	NOT EXCL_S
HRI	= HRIi	NOT EXCL
ESD	= ESDi	NOT EXCL_S
ESDIMP = ESDIMPi NOT EXCL_S
CTM2	= CTM2i	NOT EXCL_S
CTM3	= CTM3i	NOT EXCL_S
CTM4	= CTM4i	NOT EXCL_S
CTM5	= CTM5i	NOT EXCL_S








// GLOBAL DERIVED LAYERS FOR RULE CHECKS 
//--------------------------------------

ALL_OD   = ODi     OR  DOD  		//For OD density check
ALL_PO   = POLYi  OR  DPO               //For POLY density check
NRODi	= ODi	NOT RPOi
NPODi	= NPi	AND NRODi
PPODi	= PPi	AND NRODi
NONWRi	= NWELi	NOT INTERACT RWDMY	// NWEL - NWR(OD) - NWR(STI)


PANTi    = (HVPBi OR SH_Pi) OR NDD_Pi
N_WELLSi = NONWRi OR NOHVNWRi
P_WELLSi = (PWELi OR HVPWi) OR PANTi
NOHVNWRi = (HVSHNi OR (NDDi AND HVDMYi)) OR HVNWi
NTAPi   = NPODi AND ((NONWRi OR NOHVNWRi) NOT PANTi) // NWEL/HVNW Pick-Up
NTAPi_NBL = (NPODi AND (((NOHVNWRi NOT PANTi) NOT NDDi) NOT HVNWi)) NOT HVPMOS_S_TAP
NACTi   = NPODi AND ((PWELi  OR HVPWi)OR PANTi)      // NMOS/HV_NMOS Device
PTAPi   = PPODi AND ((PWELi  OR HVPWi) OR PANTi)     // PWEL/HVPW Pick-Up
PACTi   = PPODi AND ((NONWRi OR NOHVNWRi) NOT PANTi) // PMOS/HV_PMOS Device
PSDi	= PACTi	NOT POLYi	// PMOS source/drain,separated
NSDi	= NACTi	NOT POLYi	// NMOS source/drain,separated  
ILP1i	= POLYi	NOT RPOi	// Interconnection poly

NPOD	= NP	AND OD		// N+ OD region
PPOD	= PP	AND OD		// P+ OD region

LV_MOS = DACT OUTSIDE HVDMY
LV_DIO = DIODUMMY OUTSIDE HVDMY
LV_BJT = BJTDUMMY OUTSIDE HVDMY 
LV_VAR = VARDMY OUTSIDE HVDMY
LV_RES = ((((RPDUMMY OR PORES) OR ODRES_ALL) OR RWDMY) OR RNWEL) OUTSIDE HVDMY
LV_DEVICES = (((LV_MOS OR LV_DIO) OR LV_BJT) OR LV_VAR) OR LV_RES
HV_DEVICES = (HVGATE OR HVBJT_DMY ) OR HVDIO_DMY


ALL_GATE = (POLY AND OD) NOT (((((((BJTDUMMY OR BJT4TDMY) OR BJT5TDMY) OR BJT7TDMY) OR BJTMDDMY) OR DIODUMMY) OR DIO3TDMY) OR DIO4TDMY) 
POLY_ISO = POLY NOT OD          // Interconnect POLY
LVGT    = ALL_GATE NOT OD2      // 1.8V gate
HVGT    = ALL_GATE AND OD2      // 3.3V gate




SLIT_HVNMOS = ((((((((((((((((((NLD6G5_SA_FULLY_ISO_CH OR NLD6G5_DE_FULLY_ISO_CH) OR NLD9G5_CH) OR NLD9G5_FULLY_ISO_CH) OR NLD12G5_CH) OR NLD12G5_FULLY_ISO_CH) OR NLD16G5_FULLY_ISO_CH) OR NLD16G5_CH) OR NLD20G5_CH) OR NLD20G5_FULLY_ISO_CH) OR NLD24G5_ISO_SWITCH_CH) OR NLD24G5_FULLY_ISO_CH) OR NLD45G5_GB_CH) OR NLD24G5_CH) OR NLD24G5_SWITCH_CH) OR NLD5G5_ISO_SWITCH_CH) OR NLD6G5_DE_CH) OR NLD6G5_SA_CH) OR NLD36G5_GB_CH) OR NA45G3_DEP_GB_CH
SLIT_HVPMOS = ((PA12G5_SLIT_BL_CH OR PA20G5_SLIT_BL_CH) OR PA9G5_SLIT_NBL_CH) OR PA16G5_SLIT_NBL_CH
HVPGATE  = (HVGATE INTERACT PP) NOT INTERACT SLIT_HVNMOS
HVNGATE  = (HVGATE INTERACT NP) NOT INTERACT SLIT_HVPMOS 
HVOD = (HVSHN OR (HVDMY OR (HVGA OR HVGB))) AND OD
HVPO = HVDMY AND POLY
HVGATE = ALL_GATE AND HVDMY
HVGATE_W = HVGATE NOT COIN INSIDE EDGE OD
HV5DMY_NP = HV5DMY AND NP
HV5DMY_PP = HV5DMY AND PP
HV6DMY_NP = HV6DMY AND NP
HV6DMY_PP = HV6DMY AND PP 
HV9DMY_NP = HV9DMY AND NP
HV9DMY_PP = HV9DMY AND PP
HV12DMY_NP = HV12DMY AND NP
HV12DMY_PP = HV12DMY AND PP
HV16DMY_NP = HV16DMY AND NP
HV16DMY_PP = HV16DMY AND PP
HV20DMY_NP = HV20DMY AND NP
HV20DMY_PP = HV20DMY AND PP
HV24DMY_NP = HV24DMY AND NP
HV24DMY_PP = HV24DMY AND PP
HV29DMY_NP = HV29DMY AND NP
HV29DMY_PP = HV29DMY AND PP
HV36DMY_NP = HV36DMY AND NP
HV36DMY_PP = HV36DMY AND PP
HV45DMY_NP = HV45DMY AND NP
HV45DMY_PP = HV45DMY AND PP
NBL_RING_VOL = (NBL TOUCH (HOLES NBL INNER)) AND ((HVDMY AND (HV45DMY OR HV36DMY)) AND HVGB)

SHN_PDD = PDD AND HVSHN

//MACRO START

//NLD5G5_ISO_SWITCH
NLD5G5_ISO_SWITCH_GATE_pre = ((HVGATE INTERACT HV5DMY_NP) INTERACT HVPB) INTERACT NDD
NLD5G5_ISO_SWITCH_GATE = NLD5G5_ISO_SWITCH_GATE_pre NOT INTERACT RPO	// NLD5G5_ISO_SWITCH GATE
NLD5G5_ISO_SWITCH_CH = OD CUT NLD5G5_ISO_SWITCH_GATE			// OD cut gate, including butted pick-up 
NLD5G5_ISO_SWITCH_GATE_OD = NLD5G5_ISO_SWITCH_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD5G5_ISO_SWITCH_SD = NLD5G5_ISO_SWITCH_GATE_OD NOT POLY			// NLD5G5_ISO_SWITCH's Source and Drain
NLD5G5_ISO_SWITCH_S  = NLD5G5_ISO_SWITCH_SD INTERACT HVPB	// NLD5G5_ISO_SWITCH's Source
NLD5G5_ISO_SWITCH_D  = NLD5G5_ISO_SWITCH_SD NOT INTERACT HVPB	// NLD5G5_ISO_SWITCH's Drain

//NLD6G5_SA_FULLY_ISO
NLD6G5_SA_FULLY_ISO_GATE_pre = ((HVGATE INTERACT HV6DMY_NP) INTERACT HVPB) INTERACT NBL
NLD6G5_SA_FULLY_ISO_GATE = NLD6G5_SA_FULLY_ISO_GATE_pre NOT INTERACT RPO	// NLD6G5_SA_FULLY_ISO GATE
NLD6G5_SA_FULLY_ISO_CH = OD CUT NLD6G5_SA_FULLY_ISO_GATE			// OD cut gate, including butted pick-up 
NLD6G5_SA_FULLY_ISO_GATE_OD = NLD6G5_SA_FULLY_ISO_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD6G5_SA_FULLY_ISO_SD = NLD6G5_SA_FULLY_ISO_GATE_OD NOT POLY			// NLD6G5_SA_FULLY_ISO's Source and Drain
NLD6G5_SA_FULLY_ISO_S  = NLD6G5_SA_FULLY_ISO_SD INTERACT HVPB	// NLD6G5_SA_FULLY_ISO's Source
NLD6G5_SA_FULLY_ISO_D  = NLD6G5_SA_FULLY_ISO_SD NOT INTERACT HVPB	// NLD6G5_SA_FULLY_ISO's Drain

//NLD6G5_SA
NLD6G5_SA_GATE_pre = ((HVGATE INTERACT HV6DMY_NP) INTERACT HVPB) INTERACT NDD
NLD6G5_SA_GATE = (NLD6G5_SA_GATE_pre NOT INTERACT RPO) NOT INTERACT NBL	// NLD6G5_SA GATE
NLD6G5_SA_CH = OD CUT NLD6G5_SA_GATE			// OD cut gate, including butted pick-up 
NLD6G5_SA_GATE_OD = NLD6G5_SA_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD6G5_SA_SD = NLD6G5_SA_GATE_OD NOT POLY			// NLD6G5_SA's Source and Drain
NLD6G5_SA_S  = NLD6G5_SA_SD INTERACT HVPB	// NLD6G5_SA's Source
NLD6G5_SA_D  = NLD6G5_SA_SD NOT INTERACT HVPB	// NLD6G5_SA's Drain

//NLD6G5_DE_FULLY_ISO
NLD6G5_DE_FULLY_ISO_GATE_pre = ((HVGATE INTERACT HV6DMY_NP) INTERACT RPO) INTERACT NBL
NLD6G5_DE_FULLY_ISO_GATE = NLD6G5_DE_FULLY_ISO_GATE_pre NOT INTERACT SH_P	// NLD6G5_DE_FULLY_ISO GATE
NLD6G5_DE_FULLY_ISO_CH = OD CUT NLD6G5_DE_FULLY_ISO_GATE			// OD cut gate, including butted pick-up 
NLD6G5_DE_FULLY_ISO_GATE_OD = NLD6G5_DE_FULLY_ISO_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD6G5_DE_FULLY_ISO_SD = NLD6G5_DE_FULLY_ISO_GATE_OD NOT POLY			// NLD6G5_DE_FULLY_ISO's Source and Drain
NLD6G5_DE_FULLY_ISO_S  = NLD6G5_DE_FULLY_ISO_SD INTERACT HVPB	// NLD6G5_DE_FULLY_ISO's Source
NLD6G5_DE_FULLY_ISO_D  = NLD6G5_DE_FULLY_ISO_SD NOT INTERACT HVPB	// NLD6G5_DE_FULLY_ISO's Drain

//NLD6G5_DE
NLD6G5_DE_GATE_pre = ((HVGATE INTERACT HV6DMY_NP) INTERACT RPO) INTERACT NDD
NLD6G5_DE_GATE = (NLD6G5_DE_GATE_pre NOT INTERACT SH_P) NOT INTERACT NBL	// NLD6G5_DE GATE
NLD6G5_DE_CH = OD CUT NLD6G5_DE_GATE			// OD cut gate, including butted pick-up 
NLD6G5_DE_GATE_OD = NLD6G5_DE_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD6G5_DE_SD = NLD6G5_DE_GATE_OD NOT POLY			// NLD6G5_DE's Source and Drain
NLD6G5_DE_S  = NLD6G5_DE_SD INTERACT HVPB	// NLD6G5_DE's Source
NLD6G5_DE_D  = NLD6G5_DE_SD NOT INTERACT HVPB	// NLD6G5_DE's Drain

NLD6G5_DE_OD_ALL = COPY NLD6G5_DE_CH

//NA6G5_NBL
NA6G5_NBL_GATE_pre = ((HVGATE INTERACT HV6DMY_NP) INTERACT SH_P) INTERACT NDD
NA6G5_NBL_GATE = COPY NA6G5_NBL_GATE_pre	// NA6G5_NBL GATE
NA6G5_NBL_CH = OD CUT NA6G5_NBL_GATE			// OD cut gate, including butted pick-up 
NA6G5_NBL_GATE_OD = NA6G5_NBL_CH NOT PP 		// OD cut gate,exclude butted pick-up

NA6G5_NBL_SD = NA6G5_NBL_GATE_OD NOT POLY			// NA6G5_NBL's Source and Drain
NA6G5_NBL_S  = NA6G5_NBL_SD INTERACT SH_P	// NA6G5_NBL's Source
NA6G5_NBL_D  = NA6G5_NBL_SD NOT INTERACT SH_P	// NA6G5_NBL's Drain

NA6G5_NBL_OD_ALL = NA6G5_NBL_CH OR (SH_P INTERACT NA6G5_NBL_S)

//NLD9G5_FULLY_ISO
NLD9G5_FULLY_ISO_GATE_pre = ((HVGATE INTERACT HV9DMY_NP) INTERACT NBL) INTERACT HVPB
NLD9G5_FULLY_ISO_GATE = COPY NLD9G5_FULLY_ISO_GATE_pre	// NLD9G5_FULLY_ISO GATE
NLD9G5_FULLY_ISO_CH = OD CUT NLD9G5_FULLY_ISO_GATE			// OD cut gate, including butted pick-up 
NLD9G5_FULLY_ISO_GATE_OD = NLD9G5_FULLY_ISO_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD9G5_FULLY_ISO_SD = NLD9G5_FULLY_ISO_GATE_OD NOT POLY			// NLD9G5_FULLY_ISO's Source and Drain
NLD9G5_FULLY_ISO_S  = NLD9G5_FULLY_ISO_SD INTERACT HVPB	// NLD9G5_FULLY_ISO's Source
NLD9G5_FULLY_ISO_D  = NLD9G5_FULLY_ISO_SD NOT INTERACT HVPB	// NLD9G5_FULLY_ISO's Drain

//NLD9G5
NLD9G5_GATE_pre = (HVGATE INTERACT HV9DMY_NP) INTERACT HVPB
NLD9G5_GATE = NLD9G5_GATE_pre NOT INTERACT NBL	// NLD9G5 GATE
NLD9G5_CH = OD CUT NLD9G5_GATE			// OD cut gate, including butted pick-up 
NLD9G5_GATE_OD = NLD9G5_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD9G5_SD = NLD9G5_GATE_OD NOT POLY			// NLD9G5's Source and Drain
NLD9G5_S  = NLD9G5_SD INTERACT HVPB	// NLD9G5's Source
NLD9G5_D  = NLD9G5_SD NOT INTERACT HVPB	// NLD9G5's Drain


//NLD12G5_FULLY_ISO
NLD12G5_FULLY_ISO_GATE_pre = ((HVGATE INTERACT HV12DMY_NP) INTERACT NBL) INTERACT NDD
NLD12G5_FULLY_ISO_GATE = COPY NLD12G5_FULLY_ISO_GATE_pre	// NLD12G5_FULLY_ISO GATE
NLD12G5_FULLY_ISO_CH = OD CUT NLD12G5_FULLY_ISO_GATE			// OD cut gate, including butted pick-up 
NLD12G5_FULLY_ISO_GATE_OD = NLD12G5_FULLY_ISO_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD12G5_FULLY_ISO_SD = NLD12G5_FULLY_ISO_GATE_OD NOT POLY			// NLD12G5_FULLY_ISO's Source and Drain
NLD12G5_FULLY_ISO_S  = NLD12G5_FULLY_ISO_SD INTERACT HVPB	// NLD12G5_FULLY_ISO's Source
NLD12G5_FULLY_ISO_D  = NLD12G5_FULLY_ISO_SD NOT INTERACT HVPB	// NLD12G5_FULLY_ISO's Drain

//NLD12G5
NLD12G5_GATE_pre = HVGATE INTERACT HV12DMY_NP
NLD12G5_GATE = NLD12G5_GATE_pre NOT INTERACT NBL	// NLD12G5 GATE
NLD12G5_CH = OD CUT NLD12G5_GATE			// OD cut gate, including butted pick-up 
NLD12G5_GATE_OD = NLD12G5_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD12G5_SD = NLD12G5_GATE_OD NOT POLY			// NLD12G5's Source and Drain
NLD12G5_S  = NLD12G5_SD INTERACT HVPB	// NLD12G5's Source
NLD12G5_D  = NLD12G5_SD NOT INTERACT HVPB	// NLD12G5's Drain


//NLD16G5_FULLY_ISO
NLD16G5_FULLY_ISO_GATE_pre = ((HVGATE INTERACT HV16DMY_NP) INTERACT NBL) INTERACT NDD
NLD16G5_FULLY_ISO_GATE = COPY NLD16G5_FULLY_ISO_GATE_pre	// NLD16G5_FULLY_ISO GATE
NLD16G5_FULLY_ISO_CH = OD CUT NLD16G5_FULLY_ISO_GATE			// OD cut gate, including butted pick-up 
NLD16G5_FULLY_ISO_GATE_OD = NLD16G5_FULLY_ISO_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD16G5_FULLY_ISO_SD = NLD16G5_FULLY_ISO_GATE_OD NOT POLY			// NLD16G5_FULLY_ISO's Source and Drain
NLD16G5_FULLY_ISO_S  = NLD16G5_FULLY_ISO_SD INTERACT HVPB	// NLD16G5_FULLY_ISO's Source
NLD16G5_FULLY_ISO_D  = NLD16G5_FULLY_ISO_SD NOT INTERACT HVPB	// NLD16G5_FULLY_ISO's Drain

//NLD16G5
NLD16G5_GATE_pre = HVGATE INTERACT HV16DMY_NP
NLD16G5_GATE = NLD16G5_GATE_pre NOT INTERACT NBL	// NLD16G5 GATE
NLD16G5_CH = OD CUT NLD16G5_GATE			// OD cut gate, including butted pick-up 
NLD16G5_GATE_OD = NLD16G5_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD16G5_SD = NLD16G5_GATE_OD NOT POLY			// NLD16G5's Source and Drain
NLD16G5_S  = NLD16G5_SD INTERACT HVPB	// NLD16G5's Source
NLD16G5_D  = NLD16G5_SD NOT INTERACT HVPB	// NLD16G5's Drain


//NLD20G5_FULLY_ISO
NLD20G5_FULLY_ISO_GATE_pre = ((HVGATE INTERACT HV20DMY_NP) INTERACT NBL) INTERACT NDD
NLD20G5_FULLY_ISO_GATE = NLD20G5_FULLY_ISO_GATE_pre NOT INTERACT SH_P	// NLD20G5_FULLY_ISO GATE
NLD20G5_FULLY_ISO_CH = OD CUT NLD20G5_FULLY_ISO_GATE			// OD cut gate, including butted pick-up 
NLD20G5_FULLY_ISO_GATE_OD = NLD20G5_FULLY_ISO_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD20G5_FULLY_ISO_SD = NLD20G5_FULLY_ISO_GATE_OD NOT POLY			// NLD20G5_FULLY_ISO's Source and Drain
NLD20G5_FULLY_ISO_S  = NLD20G5_FULLY_ISO_SD INTERACT HVPB	// NLD20G5_FULLY_ISO's Source
NLD20G5_FULLY_ISO_D  = NLD20G5_FULLY_ISO_SD NOT INTERACT HVPB	// NLD20G5_FULLY_ISO's Drain

//NLD20G5
NLD20G5_GATE_pre = (HVGATE INTERACT HV20DMY_NP) INTERACT NDD
NLD20G5_GATE = (NLD20G5_GATE_pre NOT INTERACT NBL) NOT INTERACT SH_P	// NLD20G5 GATE
NLD20G5_CH = OD CUT NLD20G5_GATE			// OD cut gate, including butted pick-up 
NLD20G5_GATE_OD = NLD20G5_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD20G5_SD = NLD20G5_GATE_OD NOT POLY			// NLD20G5's Source and Drain
NLD20G5_S  = NLD20G5_SD INTERACT HVPB	// NLD20G5's Source
NLD20G5_D  = NLD20G5_SD NOT INTERACT HVPB	// NLD20G5's Drain


//NLD24G5
NLD24G5_GATE_pre = (HVGATE INTERACT HV24DMY_NP) INTERACT NDD
NLD24G5_GATE = (NLD24G5_GATE_pre NOT INTERACT HVLOWR) NOT INTERACT NBL	// NLD24G5 GATE
NLD24G5_CH = OD CUT NLD24G5_GATE			// OD cut gate, including butted pick-up 
NLD24G5_GATE_OD = NLD24G5_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD24G5_SD = NLD24G5_GATE_OD NOT POLY			// NLD24G5's Source and Drain
NLD24G5_S  = NLD24G5_SD INTERACT HVPB	// NLD24G5's Source
NLD24G5_D  = NLD24G5_SD NOT INTERACT HVPB	// NLD24G5's Drain

//NLD24G5_FULLY_ISO
NLD24G5_FULLY_ISO_GATE_pre = (HVGATE INTERACT HV24DMY_NP) INTERACT NBL
NLD24G5_FULLY_ISO_GATE = NLD24G5_FULLY_ISO_GATE_pre NOT INTERACT HVLOWR	// NLD24G5_FULLY_ISO GATE
NLD24G5_FULLY_ISO_CH = OD CUT NLD24G5_FULLY_ISO_GATE			// OD cut gate, including butted pick-up 
NLD24G5_FULLY_ISO_GATE_OD = NLD24G5_FULLY_ISO_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD24G5_FULLY_ISO_SD = NLD24G5_FULLY_ISO_GATE_OD NOT POLY			// NLD24G5_FULLY_ISO's Source and Drain
NLD24G5_FULLY_ISO_S  = NLD24G5_FULLY_ISO_SD INTERACT HVPB	// NLD24G5_FULLY_ISO's Source
NLD24G5_FULLY_ISO_D  = NLD24G5_FULLY_ISO_SD NOT INTERACT HVPB	// NLD24G5_FULLY_ISO's Drain

//NLD24G5_ISO_SWITCH
NLD24G5_ISO_SWITCH_GATE_pre = ((HVGATE INTERACT HV24DMY_NP) INTERACT NBL) INTERACT HVLOWR
NLD24G5_ISO_SWITCH_GATE = COPY NLD24G5_ISO_SWITCH_GATE_pre	// NLD24G5_ISO_SWITCH GATE
NLD24G5_ISO_SWITCH_CH = OD CUT NLD24G5_ISO_SWITCH_GATE			// OD cut gate, including butted pick-up 
NLD24G5_ISO_SWITCH_GATE_OD = NLD24G5_ISO_SWITCH_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD24G5_ISO_SWITCH_SD = NLD24G5_ISO_SWITCH_GATE_OD NOT POLY			// NLD24G5_ISO_SWITCH's Source and Drain
NLD24G5_ISO_SWITCH_S  = NLD24G5_ISO_SWITCH_SD INTERACT HVPB	// NLD24G5_ISO_SWITCH's Source
NLD24G5_ISO_SWITCH_D  = NLD24G5_ISO_SWITCH_SD NOT INTERACT HVPB	// NLD24G5_ISO_SWITCH's Drain

//NLD24G5_SWITCH
NLD24G5_SWITCH_GATE_pre = (HVGATE INTERACT HV24DMY_NP) INTERACT HVLOWR
NLD24G5_SWITCH_GATE = NLD24G5_SWITCH_GATE_pre NOT INTERACT NBL	// NLD24G5_SWITCH GATE
NLD24G5_SWITCH_CH = OD CUT NLD24G5_SWITCH_GATE			// OD cut gate, including butted pick-up 
NLD24G5_SWITCH_GATE_OD = NLD24G5_SWITCH_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD24G5_SWITCH_SD = NLD24G5_SWITCH_GATE_OD NOT POLY			// NLD24G5_SWITCH's Source and Drain
NLD24G5_SWITCH_S  = NLD24G5_SWITCH_SD INTERACT HVPB	// NLD24G5_SWITCH's Source
NLD24G5_SWITCH_D  = NLD24G5_SWITCH_SD NOT INTERACT HVPB	// NLD24G5_SWITCH's Drain


//NA20G5
NA20G5_GATE_pre = (HVGATE INTERACT HV20DMY_NP) INTERACT SH_P
NA20G5_GATE = NA20G5_GATE_pre NOT INTERACT NBL	// NA20G5 GATE
NA20G5_CH = OD CUT NA20G5_GATE			// OD cut gate, including butted pick-up 
NA20G5_GATE_OD = NA20G5_CH NOT PP 		// OD cut gate,exclude butted pick-up

NA20G5_SD = NA20G5_GATE_OD NOT POLY			// NA20G5's Source and Drain
NA20G5_S  = NA20G5_SD INTERACT SH_P	// NA20G5's Source
NA20G5_D  = NA20G5_SD NOT INTERACT SH_P	// NA20G5's Drain

NA20G5_OD_ALL = NA20G5_CH OR (SH_P INTERACT NA20G5_S)
//NA20G5_NBL
NA20G5_NBL_GATE_pre = ((HVGATE INTERACT HV20DMY_NP) INTERACT NBL) INTERACT SH_P
NA20G5_NBL_GATE = NA20G5_NBL_GATE_pre NOT INTERACT VTDN	// NA20G5_NBL GATE
NA20G5_NBL_CH = OD CUT NA20G5_NBL_GATE			// OD cut gate, including butted pick-up 
NA20G5_NBL_GATE_OD = NA20G5_NBL_CH NOT PP 		// OD cut gate,exclude butted pick-up

NA20G5_NBL_SD = NA20G5_NBL_GATE_OD NOT POLY			// NA20G5_NBL's Source and Drain
NA20G5_NBL_S  = NA20G5_NBL_SD INTERACT SH_P	// NA20G5_NBL's Source
NA20G5_NBL_D  = NA20G5_NBL_SD NOT INTERACT SH_P	// NA20G5_NBL's Drain

NA20G5_NBL_OD_ALL = NA20G5_NBL_CH OR (SH_P INTERACT NA20G5_NBL_S)
//NA29G5_NBL
NA29G5_NBL_GATE_pre = (HVGATE INTERACT HV29DMY_NP) INTERACT NBL
NA29G5_NBL_GATE = NA29G5_NBL_GATE_pre NOT INTERACT VTDN	// NA29G5_NBL GATE
NA29G5_NBL_CH = OD CUT NA29G5_NBL_GATE			// OD cut gate, including butted pick-up 
NA29G5_NBL_GATE_OD = NA29G5_NBL_CH NOT PP 		// OD cut gate,exclude butted pick-up

NA29G5_NBL_SD = NA29G5_NBL_GATE_OD NOT POLY			// NA29G5_NBL's Source and Drain
NA29G5_NBL_S  = NA29G5_NBL_SD INTERACT SH_P	// NA29G5_NBL's Source
NA29G5_NBL_D  = NA29G5_NBL_SD NOT INTERACT SH_P	// NA29G5_NBL's Drain

NA29G5_NBL_OD_ALL = NA29G5_NBL_CH OR (SH_P INTERACT NA29G5_NBL_S)
//NA29G3_dep_NBL
NA29G3_dep_NBL_GATE_pre = ((HVGATE INTERACT HV29DMY_NP) INTERACT NBL) INTERACT VTDN
NA29G3_dep_NBL_GATE = COPY NA29G3_dep_NBL_GATE_pre	// NA29G3_dep_NBL GATE
NA29G3_dep_NBL_CH = OD CUT NA29G3_dep_NBL_GATE			// OD cut gate, including butted pick-up 
NA29G3_dep_NBL_GATE_OD = NA29G3_dep_NBL_CH NOT PP 		// OD cut gate,exclude butted pick-up

NA29G3_dep_NBL_SD = NA29G3_dep_NBL_GATE_OD NOT POLY			// NA29G3_dep_NBL's Source and Drain
NA29G3_dep_NBL_S  = NA29G3_dep_NBL_SD INTERACT SH_P	// NA29G3_dep_NBL's Source
NA29G3_dep_NBL_D  = NA29G3_dep_NBL_SD NOT INTERACT SH_P	// NA29G3_dep_NBL's Drain

NA29G3_dep_NBL_OD_ALL = NA29G3_dep_NBL_CH OR (SH_P INTERACT NA29G3_dep_NBL_S)
//NA29G5
NA29G5_GATE_pre = HVGATE INTERACT HV29DMY_NP
NA29G5_GATE = NA29G5_GATE_pre NOT INTERACT NBL	// NA29G5 GATE
NA29G5_CH = OD CUT NA29G5_GATE			// OD cut gate, including butted pick-up 
NA29G5_GATE_OD = NA29G5_CH NOT PP 		// OD cut gate,exclude butted pick-up

NA29G5_SD = NA29G5_GATE_OD NOT POLY			// NA29G5's Source and Drain
NA29G5_S  = NA29G5_SD INTERACT SH_P	// NA29G5's Source
NA29G5_D  = NA29G5_SD NOT INTERACT SH_P	// NA29G5's Drain

NA29G5_OD_ALL = NA29G5_CH OR (SH_P INTERACT NA29G5_S)

//NLD36G5_GB
NLD36G5_GB_GATE_pre = ((HVGATE INTERACT HV36DMY_NP) INTERACT NBL) INTERACT HVPB
NLD36G5_GB_GATE = COPY NLD36G5_GB_GATE_pre	// NLD36G5_GB GATE
NLD36G5_GB_CH = OD CUT NLD36G5_GB_GATE			// OD cut gate, including butted pick-up 
NLD36G5_GB_GATE_OD = NLD36G5_GB_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD36G5_GB_SD = NLD36G5_GB_GATE_OD NOT POLY			// NLD36G5_GB's Source and Drain
NLD36G5_GB_S  = NLD36G5_GB_SD INTERACT HVPB	// NLD36G5_GB's Source
NLD36G5_GB_D  = NLD36G5_GB_SD NOT INTERACT HVPB	// NLD36G5_GB's Drain

//NLD45G5_GB
NLD45G5_GB_GATE_pre = ((HVGATE INTERACT HV45DMY_NP) INTERACT NBL) INTERACT HVPB
NLD45G5_GB_GATE = COPY NLD45G5_GB_GATE_pre	// NLD45G5_GB GATE
NLD45G5_GB_CH = OD CUT NLD45G5_GB_GATE			// OD cut gate, including butted pick-up 
NLD45G5_GB_GATE_OD = NLD45G5_GB_CH NOT PP 		// OD cut gate,exclude butted pick-up

NLD45G5_GB_SD = NLD45G5_GB_GATE_OD NOT POLY			// NLD45G5_GB's Source and Drain
NLD45G5_GB_S  = NLD45G5_GB_SD INTERACT HVPB	// NLD45G5_GB's Source
NLD45G5_GB_D  = NLD45G5_GB_SD NOT INTERACT HVPB	// NLD45G5_GB's Drain

//NA45G3_DEP_GB
NA45G3_DEP_GB_GATE_pre = ((HVGATE INTERACT HV45DMY_NP) INTERACT NBL) INTERACT VTDN
NA45G3_DEP_GB_GATE = COPY NA45G3_DEP_GB_GATE_pre	// NA45G3_DEP_GB GATE
NA45G3_DEP_GB_CH = OD CUT NA45G3_DEP_GB_GATE			// OD cut gate, including butted pick-up 
NA45G3_DEP_GB_GATE_OD = NA45G3_DEP_GB_CH NOT PP 		// OD cut gate,exclude butted pick-up

NA45G3_DEP_GB_SD = NA45G3_DEP_GB_GATE_OD NOT POLY			// NA45G3_DEP_GB's Source and Drain
NA45G3_DEP_GB_S  = NA45G3_DEP_GB_SD INTERACT HVPW_drawing	// NA45G3_DEP_GB's Source
NA45G3_DEP_GB_D  = NA45G3_DEP_GB_SD NOT INTERACT HVPW_drawing	// NA45G3_DEP_GB's Drain

NA45G3_DEP_GB_OD_ALL = NA45G3_DEP_GB_CH OR (SH_P INTERACT NA45G3_DEP_GB_S)

//PCH5_AS_SWITCH_MAC
PCH5_AS_SWITCH_MAC_GATE_pre = HVGATE INTERACT HV5DMY_PP
PCH5_AS_SWITCH_MAC_GATE = (PCH5_AS_SWITCH_MAC_GATE_pre NOT INTERACT RPO) NOT INTERACT SLITDMY	// PCH5_AS_SWITCH_MAC GATE
PCH5_AS_SWITCH_MAC_CH = OD CUT PCH5_AS_SWITCH_MAC_GATE			// OD cut gate, including butted pick-up 
PCH5_AS_SWITCH_MAC_GATE_OD = PCH5_AS_SWITCH_MAC_CH NOT NP 		// OD cut gate,exclude butted pick-up

PCH5_AS_SWITCH_MAC_SD = PCH5_AS_SWITCH_MAC_GATE_OD NOT POLY			// PCH5_AS_SWITCH_MAC's Source and Drain
PCH5_AS_SWITCH_MAC_S  = PCH5_AS_SWITCH_MAC_SD INTERACT NONLDD	// PCH5_AS_SWITCH_MAC's Source
PCH5_AS_SWITCH_MAC_D  = PCH5_AS_SWITCH_MAC_SD NOT INTERACT NONLDD	// PCH5_AS_SWITCH_MAC's Drain

PCH5_AS_SWITCH_MAC_OD_ALL = PCH5_AS_SWITCH_MAC_CH OR PCH5_AS_SWITCH_MAC_S 
//PA6G5_SA_BL
PA6G5_SA_BL_GATE_pre = HVGATE INTERACT HV6DMY_PP
PA6G5_SA_BL_GATE = (PA6G5_SA_BL_GATE_pre NOT INTERACT RPO) NOT INTERACT SLITDMY	// PA6G5_SA_BL GATE
PA6G5_SA_BL_CH = OD CUT PA6G5_SA_BL_GATE			// OD cut gate, including butted pick-up 
PA6G5_SA_BL_GATE_OD = PA6G5_SA_BL_CH NOT NP 		// OD cut gate,exclude butted pick-up

PA6G5_SA_BL_SD = PA6G5_SA_BL_GATE_OD NOT POLY			// PA6G5_SA_BL's Source and Drain
PA6G5_SA_BL_S  = PA6G5_SA_BL_SD INTERACT HVSHN	// PA6G5_SA_BL's Source
PA6G5_SA_BL_D  = PA6G5_SA_BL_SD NOT INTERACT HVSHN	// PA6G5_SA_BL's Drain

PP_PA6G5_SA_BL = PP INTERACT PA6G5_SA_BL_CH
NP_PA6G5_SA_BL = NP TOUCH PP_PA6G5_SA_BL 
PP_NP_PA6G5_SA_BL = NP_PA6G5_SA_BL OR PP_PA6G5_SA_BL 
PA6G5_SA_BL_OD_ALL_PRE = (PP_NP_PA6G5_SA_BL AND HVSHN) OR PA6G5_SA_BL_CH
PA6G5_SA_BL_OD_ALL = PA6G5_SA_BL_OD_ALL_PRE OR (HOLES PA6G5_SA_BL_OD_ALL_PRE INNER) 
NBL_PA6G5_SA_BL = NBL INTERACT PA6G5_SA_BL_GATE
PP_NOT_SHN_PA6G5_SA_BL = (PP INTERACT PA6G5_SA_BL_GATE) NOT HVSHN
MERGE_PP_PA6G5_SA_BL = EXTENTS PP_NOT_SHN_PA6G5_SA_BL INSIDE OF LAYER NBL_PA6G5_SA_BL
PA6G5_SA_BL_OD_ALL_NEW = ((MERGE_PP_PA6G5_SA_BL NOT PP_NOT_SHN_PA6G5_SA_BL) INTERACT PA6G5_SA_BL_CH) OR PA6G5_SA_BL_CH
//PA6G5_DE_BL
PA6G5_DE_BL_GATE_pre = (HVGATE INTERACT HV6DMY_PP) INTERACT RPO
PA6G5_DE_BL_GATE = PA6G5_DE_BL_GATE_pre NOT INTERACT SLITDMY	// PA6G5_DE_BL GATE
PA6G5_DE_BL_CH = OD CUT PA6G5_DE_BL_GATE			// OD cut gate, including butted pick-up 
PA6G5_DE_BL_GATE_OD = PA6G5_DE_BL_CH NOT NP 		// OD cut gate,exclude butted pick-up

PA6G5_DE_BL_SD = PA6G5_DE_BL_GATE_OD NOT POLY			// PA6G5_DE_BL's Source and Drain
PA6G5_DE_BL_S  = PA6G5_DE_BL_SD INTERACT HVSHN	// PA6G5_DE_BL's Source
PA6G5_DE_BL_D  = PA6G5_DE_BL_SD NOT INTERACT HVSHN	// PA6G5_DE_BL's Drain

PP_PA6G5_DE_BL = PP INTERACT PA6G5_DE_BL_CH
NP_PA6G5_DE_BL = NP TOUCH PP_PA6G5_DE_BL 
PP_NP_PA6G5_DE_BL = NP_PA6G5_DE_BL OR PP_PA6G5_DE_BL 
PA6G5_DE_BL_OD_ALL_PRE = (PP_NP_PA6G5_DE_BL AND HVSHN) OR PA6G5_DE_BL_CH
PA6G5_DE_BL_OD_ALL = PA6G5_DE_BL_OD_ALL_PRE OR (HOLES PA6G5_DE_BL_OD_ALL_PRE INNER) 
NBL_PA6G5_DE_BL = NBL INTERACT PA6G5_DE_BL_GATE
PP_NOT_SHN_PA6G5_DE_BL = (PP INTERACT PA6G5_DE_BL_GATE) NOT HVSHN
MERGE_PP_PA6G5_DE_BL = EXTENTS PP_NOT_SHN_PA6G5_DE_BL INSIDE OF LAYER NBL_PA6G5_DE_BL
PA6G5_DE_BL_OD_ALL_NEW = ((MERGE_PP_PA6G5_DE_BL NOT PP_NOT_SHN_PA6G5_DE_BL) INTERACT PA6G5_DE_BL_CH) OR PA6G5_DE_BL_CH

//PA9G5_NBL
PA9G5_NBL_GATE_pre = (HVGATE INTERACT HV9DMY_PP) INTERACT RPO
PA9G5_NBL_GATE = PA9G5_NBL_GATE_pre NOT INTERACT SLITDMY	// PA9G5_NBL GATE
PA9G5_NBL_CH = OD CUT PA9G5_NBL_GATE			// OD cut gate, including butted pick-up 
PA9G5_NBL_GATE_OD = PA9G5_NBL_CH NOT NP 		// OD cut gate,exclude butted pick-up

PA9G5_NBL_SD = PA9G5_NBL_GATE_OD NOT POLY			// PA9G5_NBL's Source and Drain
PA9G5_NBL_S  = PA9G5_NBL_SD INTERACT HVSHN	// PA9G5_NBL's Source
PA9G5_NBL_D  = PA9G5_NBL_SD NOT INTERACT HVSHN	// PA9G5_NBL's Drain

PA9G5_NBL_OD_ALL = PA9G5_NBL_CH OR (SHN_PDD INTERACT PA9G5_NBL_S)

//PA12G5_NBL
PA12G5_NBL_GATE_pre = (HVGATE INTERACT HV12DMY_PP) INTERACT RPO
PA12G5_NBL_GATE = PA12G5_NBL_GATE_pre NOT INTERACT SLITDMY	// PA12G5_NBL GATE
PA12G5_NBL_CH = OD CUT PA12G5_NBL_GATE			// OD cut gate, including butted pick-up 
PA12G5_NBL_GATE_OD = PA12G5_NBL_CH NOT NP 		// OD cut gate,exclude butted pick-up

PA12G5_NBL_SD = PA12G5_NBL_GATE_OD NOT POLY			// PA12G5_NBL's Source and Drain
PA12G5_NBL_S  = PA12G5_NBL_SD INTERACT HVSHN	// PA12G5_NBL's Source
PA12G5_NBL_D  = PA12G5_NBL_SD NOT INTERACT HVSHN	// PA12G5_NBL's Drain

PA12G5_NBL_OD_ALL = PA12G5_NBL_CH OR (SHN_PDD INTERACT PA12G5_NBL_S)
//PA12G5_SLIT_BL
PA12G5_SLIT_BL_GATE_pre = ((HVGATE INTERACT HV12DMY_PP) INTERACT PDD) INTERACT SLITDMY
PA12G5_SLIT_BL_GATE = COPY PA12G5_SLIT_BL_GATE_pre	// PA12G5_SLIT_BL GATE
PA12G5_SLIT_BL_CH = OD CUT PA12G5_SLIT_BL_GATE			// OD cut gate, including butted pick-up 
PA12G5_SLIT_BL_GATE_OD = PA12G5_SLIT_BL_CH NOT NP 		// OD cut gate,exclude butted pick-up

PA12G5_SLIT_BL_SD = PA12G5_SLIT_BL_GATE_OD NOT POLY			// PA12G5_SLIT_BL's Source and Drain
PA12G5_SLIT_BL_S  = PA12G5_SLIT_BL_SD INTERACT HVSHN	// PA12G5_SLIT_BL's Source
PA12G5_SLIT_BL_D  = PA12G5_SLIT_BL_SD NOT INTERACT HVSHN	// PA12G5_SLIT_BL's Drain

//PA9G5_SLIT_NBL
PA9G5_SLIT_NBL_GATE_pre = ((HVGATE INTERACT HV9DMY_PP) INTERACT PDD) INTERACT SLITDMY
PA9G5_SLIT_NBL_GATE = COPY PA9G5_SLIT_NBL_GATE_pre	// PA9G5_SLIT_NBL GATE
PA9G5_SLIT_NBL_CH = OD CUT PA9G5_SLIT_NBL_GATE			// OD cut gate, including butted pick-up 
PA9G5_SLIT_NBL_GATE_OD = PA9G5_SLIT_NBL_CH NOT NP 		// OD cut gate,exclude butted pick-up

PA9G5_SLIT_NBL_SD = PA9G5_SLIT_NBL_GATE_OD NOT POLY			// PA9G5_SLIT_NBL's Source and Drain
PA9G5_SLIT_NBL_S  = PA9G5_SLIT_NBL_SD INTERACT HVSHN	// PA9G5_SLIT_NBL's Source
PA9G5_SLIT_NBL_D  = PA9G5_SLIT_NBL_SD NOT INTERACT HVSHN	// PA9G5_SLIT_NBL's Drain

PA9G5_SLIT_NBL_OD_ALL = COPY PA9G5_SLIT_NBL_CH

//PA16G5_NBL
PA16G5_NBL_GATE_pre = (HVGATE INTERACT HV16DMY_PP) INTERACT RPO
PA16G5_NBL_GATE = PA16G5_NBL_GATE_pre NOT INTERACT SLITDMY	// PA16G5_NBL GATE
PA16G5_NBL_CH = OD CUT PA16G5_NBL_GATE			// OD cut gate, including butted pick-up 
PA16G5_NBL_GATE_OD = PA16G5_NBL_CH NOT NP 		// OD cut gate,exclude butted pick-up

PA16G5_NBL_SD = PA16G5_NBL_GATE_OD NOT POLY			// PA16G5_NBL's Source and Drain
PA16G5_NBL_S  = PA16G5_NBL_SD INTERACT HVSHN	// PA16G5_NBL's Source
PA16G5_NBL_D  = PA16G5_NBL_SD NOT INTERACT HVSHN	// PA16G5_NBL's Drain

PA16G5_NBL_OD_ALL = PA16G5_NBL_CH OR (SHN_PDD INTERACT PA16G5_NBL_S)

//PA20G5_BL
PA20G5_BL_GATE_pre = (HVGATE INTERACT HV20DMY_PP) INTERACT RPO
PA20G5_BL_GATE = PA20G5_BL_GATE_pre NOT INTERACT SLITDMY	// PA20G5_BL GATE
PA20G5_BL_CH = OD CUT PA20G5_BL_GATE			// OD cut gate, including butted pick-up 
PA20G5_BL_GATE_OD = PA20G5_BL_CH NOT NP 		// OD cut gate,exclude butted pick-up

PA20G5_BL_SD = PA20G5_BL_GATE_OD NOT POLY			// PA20G5_BL's Source and Drain
PA20G5_BL_S  = PA20G5_BL_SD INTERACT HVSHN	// PA20G5_BL's Source
PA20G5_BL_D  = PA20G5_BL_SD NOT INTERACT HVSHN	// PA20G5_BL's Drain

PA20G5_BL_OD_ALL = PA20G5_BL_CH OR (SHN_PDD INTERACT PA20G5_BL_S)
//PA16G5_SLIT_NBL
PA16G5_SLIT_NBL_GATE_pre = ((HVGATE INTERACT HV16DMY_PP) INTERACT PDD) INTERACT SLITDMY
PA16G5_SLIT_NBL_GATE = COPY PA16G5_SLIT_NBL_GATE_pre	// PA16G5_SLIT_NBL GATE
PA16G5_SLIT_NBL_CH = OD CUT PA16G5_SLIT_NBL_GATE			// OD cut gate, including butted pick-up 
PA16G5_SLIT_NBL_GATE_OD = PA16G5_SLIT_NBL_CH NOT NP 		// OD cut gate,exclude butted pick-up

PA16G5_SLIT_NBL_SD = PA16G5_SLIT_NBL_GATE_OD NOT POLY			// PA16G5_SLIT_NBL's Source and Drain
PA16G5_SLIT_NBL_S  = PA16G5_SLIT_NBL_SD INTERACT HVSHN	// PA16G5_SLIT_NBL's Source
PA16G5_SLIT_NBL_D  = PA16G5_SLIT_NBL_SD NOT INTERACT HVSHN	// PA16G5_SLIT_NBL's Drain

PA16G5_SLIT_NBL_OD_ALL = COPY PA16G5_SLIT_NBL_CH

//PA20G5_SLIT_BL
PA20G5_SLIT_BL_GATE_pre = ((HVGATE INTERACT HV20DMY_PP) INTERACT PDD) INTERACT SLITDMY
PA20G5_SLIT_BL_GATE = COPY PA20G5_SLIT_BL_GATE_pre	// PA20G5_SLIT_BL GATE
PA20G5_SLIT_BL_CH = OD CUT PA20G5_SLIT_BL_GATE			// OD cut gate, including butted pick-up 
PA20G5_SLIT_BL_GATE_OD = PA20G5_SLIT_BL_CH NOT NP 		// OD cut gate,exclude butted pick-up

PA20G5_SLIT_BL_SD = PA20G5_SLIT_BL_GATE_OD NOT POLY			// PA20G5_SLIT_BL's Source and Drain
PA20G5_SLIT_BL_S  = PA20G5_SLIT_BL_SD INTERACT HVSHN	// PA20G5_SLIT_BL's Source
PA20G5_SLIT_BL_D  = PA20G5_SLIT_BL_SD NOT INTERACT HVSHN	// PA20G5_SLIT_BL's Drain


//PA29G5_BL
PA29G5_BL_GATE_pre = HVGATE INTERACT HV29DMY_PP
PA29G5_BL_GATE = COPY PA29G5_BL_GATE_pre		// PA29G5_BL GATE
PA29G5_BL_CH = OD CUT PA29G5_BL_GATE 				// PA29G5_BL's channel OD,including butted pick-up 	
PA29G5_BL_GATE_OD = PA29G5_BL_CH NOT NP		// PA29G5_BL's Source and Channel
PA29G5_BL_S  = PA29G5_BL_GATE_OD NOT POLY			// PA29G5_BL's Source
PA29G5_BL_D  = (OD INTERACT PP) INSIDE (HVPW CUT PA29G5_BL_GATE )				// PA29G5_BL's Drain
PA29G5_BL_SD = PA29G5_BL_S OR PA29G5_BL_D		// PA29G5_BL's Source and Drain
PA29G5_BL_CSD = PA29G5_BL_GATE_OD OR PA29G5_BL_D		// All active OD related to PA29G5_BL,exclude butted pick-up
PA29G5_BL_ALL_OD = PA29G5_BL_CH OR PA29G5_BL_D		// All OD related to PA29G5_BL,including butted pick-up

PA29G5_BL_region1 = EXPAND EDGE PA29G5_BL_GATE_OD OUTSIDE BY GRID 
PA29G5_BL_region2 = PA29G5_BL_GATE_OD TOUCH EDGE ( PA29G5_BL_region1 INSIDE POLY )
PA29G5_BL_region  = EXPAND EDGE PA29G5_BL_region2 OUTSIDE BY HVOD_S_1_PA29G5_BL 
PA29G5_BL_OD  = (( OD INTERACT PA29G5_BL_GATE ) OR PA29G5_BL_D ) OR PA29G5_BL_region 		// The merged region of the Channel OD and Drain

PA29G5_BL_OD_ALL = PA29G5_BL_OD OR (SHN_PDD INTERACT PA29G5_BL_S)

//PA36G5_BL_GB
PA36G5_BL_GB_GATE_pre = HVGATE INTERACT HV36DMY_PP
PA36G5_BL_GB_GATE = PA36G5_BL_GB_GATE_pre NOT INTERACT HVPB		// PA36G5_BL_GB GATE
PA36G5_BL_GB_CH = OD CUT PA36G5_BL_GB_GATE 				// PA36G5_BL_GB's channel OD,including butted pick-up 	
PA36G5_BL_GB_GATE_OD = PA36G5_BL_GB_CH NOT NP		// PA36G5_BL_GB's Source and Channel
PA36G5_BL_GB_S  = PA36G5_BL_GB_GATE_OD NOT POLY			// PA36G5_BL_GB's Source
PA36G5_BL_GB_D  = (OD INTERACT PP) INSIDE (HVPW CUT PA36G5_BL_GB_GATE )				// PA36G5_BL_GB's Drain
PA36G5_BL_GB_SD = PA36G5_BL_GB_S OR PA36G5_BL_GB_D		// PA36G5_BL_GB's Source and Drain
PA36G5_BL_GB_CSD = PA36G5_BL_GB_GATE_OD OR PA36G5_BL_GB_D		// All active OD related to PA36G5_BL_GB,exclude butted pick-up
PA36G5_BL_GB_ALL_OD = PA36G5_BL_GB_CH OR PA36G5_BL_GB_D		// All OD related to PA36G5_BL_GB,including butted pick-up

PA36G5_BL_GB_region1 = EXPAND EDGE PA36G5_BL_GB_GATE_OD OUTSIDE BY GRID 
PA36G5_BL_GB_region2 = PA36G5_BL_GB_GATE_OD TOUCH EDGE ( PA36G5_BL_GB_region1 INSIDE POLY )
PA36G5_BL_GB_region  = EXPAND EDGE PA36G5_BL_GB_region2 OUTSIDE BY HVOD_S_1_PA36G5_BL_GB 
PA36G5_BL_GB_OD  = (( OD INTERACT PA36G5_BL_GB_GATE ) OR PA36G5_BL_GB_D ) OR PA36G5_BL_GB_region 		// The merged region of the Channel OD and Drain

PA36G5_BL_GB_OD_ALL = PA36G5_BL_GB_OD OR ((HVPWELL AND HVSHN) INTERACT PA36G5_BL_GB_S)
//PA45G5_BL_GB
PA45G5_BL_GB_GATE_pre = HVGATE INTERACT HV45DMY_PP
PA45G5_BL_GB_GATE = (PA45G5_BL_GB_GATE_pre NOT INTERACT HVPB) NOT INTERACT RPO		// PA45G5_BL_GB GATE
PA45G5_BL_GB_CH = OD CUT PA45G5_BL_GB_GATE 				// PA45G5_BL_GB's channel OD,including butted pick-up 	
PA45G5_BL_GB_GATE_OD = PA45G5_BL_GB_CH NOT NP		// PA45G5_BL_GB's Source and Channel
PA45G5_BL_GB_S  = PA45G5_BL_GB_GATE_OD NOT POLY			// PA45G5_BL_GB's Source
PA45G5_BL_GB_D  = (OD INTERACT PP) INSIDE (HVPW CUT PA45G5_BL_GB_GATE )				// PA45G5_BL_GB's Drain
PA45G5_BL_GB_SD = PA45G5_BL_GB_S OR PA45G5_BL_GB_D		// PA45G5_BL_GB's Source and Drain
PA45G5_BL_GB_CSD = PA45G5_BL_GB_GATE_OD OR PA45G5_BL_GB_D		// All active OD related to PA45G5_BL_GB,exclude butted pick-up
PA45G5_BL_GB_ALL_OD = PA45G5_BL_GB_CH OR PA45G5_BL_GB_D		// All OD related to PA45G5_BL_GB,including butted pick-up

PA45G5_BL_GB_region1 = EXPAND EDGE PA45G5_BL_GB_GATE_OD OUTSIDE BY GRID 
PA45G5_BL_GB_region2 = PA45G5_BL_GB_GATE_OD TOUCH EDGE ( PA45G5_BL_GB_region1 INSIDE POLY )
PA45G5_BL_GB_region  = EXPAND EDGE PA45G5_BL_GB_region2 OUTSIDE BY HVOD_S_1_PA45G5_BL_GB 
PA45G5_BL_GB_OD  = (( OD INTERACT PA45G5_BL_GB_GATE ) OR PA45G5_BL_GB_D ) OR PA45G5_BL_GB_region 		// The merged region of the Channel OD and Drain

PA45G5_BL_GB_OD_ALL = PA45G5_BL_GB_OD OR ((HVPWELL AND HVSHN) INTERACT PA45G5_BL_GB_S)

 ALL_HVNMOS_D =  ((((((((((((((((((((((((NLD5G5_ISO_SWITCH_D OR NLD6G5_SA_FULLY_ISO_D) OR NLD6G5_SA_D) OR NLD6G5_DE_FULLY_ISO_D) OR NLD6G5_DE_D) OR NA6G5_NBL_D) OR NLD9G5_FULLY_ISO_D) OR NLD9G5_D) OR NLD12G5_FULLY_ISO_D) OR NLD12G5_D) OR NLD16G5_FULLY_ISO_D) OR NLD16G5_D) OR NLD20G5_FULLY_ISO_D) OR NLD20G5_D) OR NLD24G5_D) OR NLD24G5_FULLY_ISO_D) OR NLD24G5_ISO_SWITCH_D) OR NLD24G5_SWITCH_D) OR NA20G5_D) OR NA20G5_NBL_D) OR NA29G5_NBL_D) OR NA29G3_dep_NBL_D) OR NA29G5_D) OR NLD36G5_GB_D) OR NLD45G5_GB_D) OR NA45G3_DEP_GB_D
 ALL_HVNMOS_S =  ((((((((((((((((((((((((NLD5G5_ISO_SWITCH_S OR NLD6G5_SA_FULLY_ISO_S) OR NLD6G5_SA_S) OR NLD6G5_DE_FULLY_ISO_S) OR NLD6G5_DE_S) OR NA6G5_NBL_S) OR NLD9G5_FULLY_ISO_S) OR NLD9G5_S) OR NLD12G5_FULLY_ISO_S) OR NLD12G5_S) OR NLD16G5_FULLY_ISO_S) OR NLD16G5_S) OR NLD20G5_FULLY_ISO_S) OR NLD20G5_S) OR NLD24G5_S) OR NLD24G5_FULLY_ISO_S) OR NLD24G5_ISO_SWITCH_S) OR NLD24G5_SWITCH_S) OR NA20G5_S) OR NA20G5_NBL_S) OR NA29G5_NBL_S) OR NA29G3_dep_NBL_S) OR NA29G5_S) OR NLD36G5_GB_S) OR NLD45G5_GB_S) OR NA45G3_DEP_GB_S

 ALL_HVNMOS_OD1 =  ((((((((((((((((((((((((NLD5G5_ISO_SWITCH_CH OR NLD6G5_SA_FULLY_ISO_CH) OR NLD6G5_SA_CH) OR NLD6G5_DE_FULLY_ISO_CH) OR NLD6G5_DE_CH) OR NA6G5_NBL_CH) OR NLD9G5_FULLY_ISO_CH) OR NLD9G5_CH) OR NLD12G5_FULLY_ISO_CH) OR NLD12G5_CH) OR NLD16G5_FULLY_ISO_CH) OR NLD16G5_CH) OR NLD20G5_FULLY_ISO_CH) OR NLD20G5_CH) OR NLD24G5_CH) OR NLD24G5_FULLY_ISO_CH) OR NLD24G5_ISO_SWITCH_CH) OR NLD24G5_SWITCH_CH) OR NA20G5_CH) OR NA20G5_NBL_CH) OR NA29G5_NBL_CH) OR NA29G3_dep_NBL_CH) OR NA29G5_CH) OR NLD36G5_GB_CH) OR NLD45G5_GB_CH) OR NA45G3_DEP_GB_CH
 ALL_HVNMOS_OD2 =   ((((((NLD6G5_DE_OD_ALL OR NA6G5_NBL_OD_ALL) OR NA20G5_OD_ALL) OR NA20G5_NBL_OD_ALL) OR NA29G5_NBL_OD_ALL) OR NA29G3_dep_NBL_OD_ALL) OR NA29G5_OD_ALL) OR NA45G3_DEP_GB_OD_ALL
ALL_HVNMOS_OD = ALL_HVNMOS_OD1 OR ALL_HVNMOS_OD2

 ALL_HVPMOS_S =  ((((((((((((PCH5_AS_SWITCH_MAC_S OR PA6G5_SA_BL_S) OR PA6G5_DE_BL_S) OR PA9G5_NBL_S) OR PA12G5_NBL_S) OR PA12G5_SLIT_BL_S) OR PA9G5_SLIT_NBL_S) OR PA16G5_NBL_S) OR PA20G5_BL_S) OR PA16G5_SLIT_NBL_S) OR PA20G5_SLIT_BL_S) OR PA29G5_BL_S) OR PA36G5_BL_GB_S) OR PA45G5_BL_GB_S
 ALL_HVPMOS_D =  ((((((((((((PCH5_AS_SWITCH_MAC_D OR PA6G5_SA_BL_D) OR PA6G5_DE_BL_D) OR PA9G5_NBL_D) OR PA12G5_NBL_D) OR PA12G5_SLIT_BL_D) OR PA9G5_SLIT_NBL_D) OR PA16G5_NBL_D) OR PA20G5_BL_D) OR PA16G5_SLIT_NBL_D) OR PA20G5_SLIT_BL_D) OR PA29G5_BL_D) OR PA36G5_BL_GB_D) OR PA45G5_BL_GB_D
 ALL_HVPMOS_OD1 =  ((((((((((((PCH5_AS_SWITCH_MAC_CH OR PA6G5_SA_BL_CH) OR PA6G5_DE_BL_CH) OR PA9G5_NBL_CH) OR PA12G5_NBL_CH) OR PA12G5_SLIT_BL_CH) OR PA9G5_SLIT_NBL_CH) OR PA16G5_NBL_CH) OR PA20G5_BL_CH) OR PA16G5_SLIT_NBL_CH) OR PA20G5_SLIT_BL_CH) OR PA29G5_BL_CH) OR PA36G5_BL_GB_CH) OR PA45G5_BL_GB_CH
 ALL_HVPMOS_OD2 =  ((((((((((PCH5_AS_SWITCH_MAC_OD_ALL OR PA6G5_SA_BL_OD_ALL) OR PA6G5_DE_BL_OD_ALL) OR PA9G5_NBL_OD_ALL) OR PA12G5_NBL_OD_ALL) OR PA9G5_SLIT_NBL_OD_ALL) OR PA16G5_NBL_OD_ALL) OR PA20G5_BL_OD_ALL) OR PA16G5_SLIT_NBL_OD_ALL) OR PA29G5_BL_OD_ALL) OR PA36G5_BL_GB_OD_ALL) OR PA45G5_BL_GB_OD_ALL
ALL_HVPMOS_OD = ALL_HVPMOS_OD1 OR ALL_HVPMOS_OD2
ALL_HVPMOS_OD_NEW = (ALL_HVPMOS_OD NOT (PA6G5_SA_BL_OD_ALL OR PA6G5_DE_BL_OD_ALL )) OR (PA6G5_SA_BL_OD_ALL_NEW OR PA6G5_DE_BL_OD_ALL_NEW)
ALL_HVMOS_OD = ALL_HVPMOS_OD OR ALL_HVNMOS_OD

//HV N/P MOS source butted pick-up
HVNMOS_S_TAP = PPOD TOUCH ALL_HVNMOS_S
HVPMOS_S_TAP = NPOD TOUCH ALL_HVPMOS_S
HVNMOS_BUT_S = ALL_HVNMOS_S TOUCH PPOD
HVPMOS_BUT_S = ALL_HVPMOS_S TOUCH NPOD

 HVNGATE_6_9_12_45 =  ((((((((((((NLD5G5_ISO_SWITCH_GATE OR NLD6G5_SA_FULLY_ISO_GATE) OR NLD6G5_SA_GATE) OR NLD6G5_DE_FULLY_ISO_GATE) OR NLD6G5_DE_GATE) OR NLD9G5_FULLY_ISO_GATE) OR NLD9G5_GATE) OR NLD12G5_FULLY_ISO_GATE) OR NLD12G5_GATE) OR NLD16G5_FULLY_ISO_GATE) OR NLD16G5_GATE) OR NLD36G5_GB_GATE) OR NLD45G5_GB_GATE) OR NA45G3_DEP_GB_GATE

 HVNGATE_20_24 =   ((((NLD20G5_FULLY_ISO_GATE OR NLD20G5_GATE) OR NLD24G5_GATE) OR NLD24G5_FULLY_ISO_GATE) OR NLD24G5_ISO_SWITCH_GATE) OR NLD24G5_SWITCH_GATE

 HVPGATE_12_20 =   ((PA12G5_SLIT_BL_GATE OR PA9G5_SLIT_NBL_GATE) OR PA16G5_SLIT_NBL_GATE) OR PA20G5_SLIT_BL_GATE

IOLDNMOS_GATE = (ALL_GATE AND NP) AND H18NWDMY
IOLDNMOS_CH = OD CUT IOLDNMOS_GATE
IOLDNMOS_GATE_OD = IOLDNMOS_CH NOT PP
IOLDNMOS_S = IOLDNMOS_GATE_OD NOT POLY
IOLDNMOS_D = (OD INTERACT NP) INSIDE (NWEL CUT IOLDNMOS_GATE)
IOLDNMOS_SD = IOLDNMOS_S OR IOLDNMOS_D
IOLDNMOS_CSD = IOLDNMOS_GATE_OD OR IOLDNMOS_D
IOLDNMOS_ALL_OD = IOLDNMOS_CH OR IOLDNMOS_D

IOLDNMOS_region1 = EXPAND EDGE IOLDNMOS_GATE_OD OUTSIDE BY GRID
IOLDNMOS_region2 = IOLDNMOS_GATE_OD TOUCH EDGE (IOLDNMOS_region1 INSIDE POLY)
IOLDNMOS_region  = EXPAND EDGE IOLDNMOS_region2 OUTSIDE BY LDOD_S_1
IOLDNMOS_OD = (( OD INTERACT IOLDNMOS_GATE) OR IOLDNMOS_D) OR IOLDNMOS_region
//Common layers for Low Ron 5V slit NMOS & 5V slit NMOS(switch)
5V_SLIT_NGATE_W = GATE_W INSIDE EDGE (SLITDMY AND PWEL) 
NACT_SLIT = LV_NACT AND SLITDMY
SLIT_NP = (NP INTERACT POLY) AND SLITDMY
SLIT_PP = (PP INTERACT POLY) AND SLITDMY
SLIT_PP_HV = SLIT_PP AND HVDMY
SLIT_NP_HV = SLIT_NP AND HVDMY
SLIT_PP_LV = SLIT_PP NOT HVDMY
//ESD DIODE
HV_ESD_PNP = (HVDMY AND DIO3TDMY) AND SDI
PP_HVPB = PP AND HVPB
PP_SH_P = PP AND SH_P
NP_SH_N = NP AND HVSHN

CLM_DMY_DIO = HV_ESD_PNP NOT ((((((((HV6DMY OR HV9DMY) OR HV12DMY) OR HV16DMY) OR HV20DMY) OR HV24DMY) OR HV29DMY) OR HV36DMY) OR HV45DMY)
CLM_DMY_DIO_GA = CLM_DMY_DIO AND HVGA
CLM_DMY_DIO_GB = CLM_DMY_DIO AND HVGB
NPOD_CLM_DMY_DIO = NPOD AND CLM_DMY_DIO
PPOD_CLM_DMY_DIO = PPOD AND CLM_DMY_DIO
ANOOD_ESD_DIO_GA = (PP_SH_P AND OD) AND CLM_DMY_DIO_GA  
NPOD_H_ESD_DIO_GA = (HOLES NPOD_CLM_DMY_DIO INNER) ENCLOSE ANOOD_ESD_DIO_GA
NPOD_R_ESD_DIO_GA = NPOD_CLM_DMY_DIO TOUCH NPOD_H_ESD_DIO_GA
CATHOD_ESD_DIO_GA = ((NP_SH_N AND OD) AND CLM_DMY_DIO_GA) NOT NPOD_R_ESD_DIO_GA
ANO_CATH_ESD_DIO_GA = ANOOD_ESD_DIO_GA OR CATHOD_ESD_DIO_GA
PPOD_H_ESD_DIO_GA = (HOLES PPOD_CLM_DMY_DIO INNER) ENCLOSE NPOD_R_ESD_DIO_GA
PPOD_R_ESD_DIO_GA = PPOD_CLM_DMY_DIO TOUCH PPOD_H_ESD_DIO_GA
HVESD_merge_ESD_DIO_GA = NPOD_R_ESD_DIO_GA OR NPOD_H_ESD_DIO_GA
ANOOD_ESD_DIO_GB = (PP_HVPB AND OD) AND CLM_DMY_DIO_GB  
NPOD_H_ESD_DIO_GB = (HOLES NPOD_CLM_DMY_DIO INNER) ENCLOSE ANOOD_ESD_DIO_GB
NPOD_R_ESD_DIO_GB = NPOD_CLM_DMY_DIO TOUCH NPOD_H_ESD_DIO_GB
CATHOD_ESD_DIO_GB = ((NP_SH_N AND OD) AND CLM_DMY_DIO_GB) NOT NPOD_R_ESD_DIO_GB
ANO_CATH_ESD_DIO_GB = ANOOD_ESD_DIO_GB OR CATHOD_ESD_DIO_GB
PPOD_H_ESD_DIO_GB = (HOLES PPOD_CLM_DMY_DIO INNER) ENCLOSE NPOD_R_ESD_DIO_GB
PPOD_R_ESD_DIO_GB = PPOD_CLM_DMY_DIO TOUCH PPOD_H_ESD_DIO_GB
HVESD_merge_ESD_DIO_GB = NPOD_R_ESD_DIO_GB OR NPOD_H_ESD_DIO_GB
ANO_CATH_ESD_merge_DIO_GA = SIZE ANO_CATH_ESD_DIO_GA BY (HVESD_W_20_1_ESDDIO_GA + HVESD_E_25_ESDDIO_GA + HVESD_E_27_ESDDIO_GA)/2 OVERUNDER
ANO_CATH_ESD_merge_DIO_GB = SIZE ANO_CATH_ESD_DIO_GB BY (HVESD_C_8_ESDDIO_GB + HVESD_E_25_ESDDIO_GB + HVESD_E_28_ESDDIO_GB)/2 OVERUNDER
// 5V LVT NMOS
NCH5_LVT_G = (HVGT AND NDD) NOT MTP_2T2C
// 5V LVT PMOS
PCH5_LVT_G = (HVGT AND PDD) NOT MTP_2T2C
//P+ isolation ring
PPOD_ISO_R_1 = ((PPOD AND HVPW) NOT NBL) NOT ALL_HVMOS_OD 
PPOD_ISO_H_1 = (HOLES PPOD_ISO_R_1 INNER) NOT PPOD_ISO_R_1
PPOD_ISO_R_2 = PPOD_ISO_R_1 TOUCH PPOD_ISO_H_1
PPOD_ISO_R_3 = SIZE PPOD_ISO_R_2 BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_ISO_H = HOLES PPOD_ISO_R_3 INNER
PPOD_ISO_R = PPOD_ISO_R_3 TOUCH PPOD_ISO_H
PPOD_ISO_H_CHECK = (HOLES PPOD_ISO_R_1) NOT PPOD_ISO_R_1

PPOD_ISO_H_GB   = ((HOLES PPOD_ISO_R_3 INNER) INSIDE HVGB ) NOT INTERACT NCH5_LVT_G  
PPOD_ISO_H_GA   = (HOLES PPOD_ISO_R_3 INNER) INSIDE HVGA   
PPOD_ISO_R_GB   = (PPOD_ISO_R_3 TOUCH PPOD_ISO_H) AND HVGB 
PPOD_ISO_R_GA   = (PPOD_ISO_R_3 TOUCH PPOD_ISO_H) AND HVGA 

PPOD_ISO_H_HVMOS   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE HVGATE
PPOD_ISO_R_HVMOS   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_HVMOS
//N+ isolation ring for LV isolation
NPOD_HVSHN_NBL = (((( NPOD  AND HVSHN ) AND NBL ) NOT ALL_HVMOS_OD) NOT OD2) OUTSIDE HVDMY
NBL_ISO_HOLE1 = ( HOLES  NPOD_HVSHN_NBL INNER ) NOT NPOD_HVSHN_NBL
NBL_ISO_RING1 = NPOD_HVSHN_NBL TOUCH NBL_ISO_HOLE1
NBL_ISO_RING2 = SIZE NBL_ISO_RING1 BY (HVOD_W_2/2)-GRID UNDEROVER
NBL_ISO_HOLE = HOLES NBL_ISO_RING2 INNER
NBL_ISO_RING = NBL_ISO_RING2 TOUCH NBL_ISO_HOLE
//HV P+ bulk ring(DPW pickup ring)
PPOD_BULK_R_1 = (PPOD AND NBL) NOT ACTIVE_HVMOS
PPOD_BULK_H_1 = (HOLES PPOD_BULK_R_1 INNER) NOT PPOD_BULK_R_1
PPOD_BULK_R_2 = PPOD_BULK_R_1 TOUCH PPOD_BULK_H_1
PPOD_BULK_R_3 = SIZE PPOD_BULK_R_2 BY (HVOD_W_2/2) -GRID UNDEROVER
PPOD_BULK_H = HOLES PPOD_BULK_R_3 INNER
PPOD_BULK_R = PPOD_BULK_R_3 TOUCH PPOD_BULK_H
PPOD_BULK_H_HVMOS = (HOLES PPOD_BULK_R_3 INNER) ENCLOSE HVGATE
PPOD_BULK_R_HVMOS = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_HVMOS
//MACRO START
PPOD_BULK_H_NLD6G5_DE_FULLY_ISO = (HOLES PPOD_BULK_R_3) ENCLOSE NLD6G5_DE_FULLY_ISO_GATE
PPOD_BULK_R_NLD6G5_DE_FULLY_ISO = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NLD6G5_DE_FULLY_ISO

PPOD_BULK_H_NLD6G5_SA_FULLY_ISO = (HOLES PPOD_BULK_R_3) ENCLOSE NLD6G5_SA_FULLY_ISO_GATE
PPOD_BULK_R_NLD6G5_SA_FULLY_ISO = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NLD6G5_SA_FULLY_ISO

PPOD_BULK_H_NA6G5_NBL = (HOLES PPOD_BULK_R_3) ENCLOSE NA6G5_NBL_GATE
PPOD_BULK_R_NA6G5_NBL = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NA6G5_NBL

PPOD_BULK_H_NLD9G5_FULLY_ISO = (HOLES PPOD_BULK_R_3) ENCLOSE NLD9G5_FULLY_ISO_GATE
PPOD_BULK_R_NLD9G5_FULLY_ISO = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NLD9G5_FULLY_ISO

PPOD_BULK_H_NLD12G5_FULLY_ISO = (HOLES PPOD_BULK_R_3) ENCLOSE NLD12G5_FULLY_ISO_GATE
PPOD_BULK_R_NLD12G5_FULLY_ISO = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NLD12G5_FULLY_ISO

PPOD_BULK_H_NLD16G5_FULLY_ISO = (HOLES PPOD_BULK_R_3) ENCLOSE NLD16G5_FULLY_ISO_GATE
PPOD_BULK_R_NLD16G5_FULLY_ISO = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NLD16G5_FULLY_ISO

PPOD_BULK_H_NLD20G5_FULLY_ISO = (HOLES PPOD_BULK_R_3) ENCLOSE NLD20G5_FULLY_ISO_GATE
PPOD_BULK_R_NLD20G5_FULLY_ISO = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NLD20G5_FULLY_ISO

PPOD_BULK_H_NLD24G5_FULLY_ISO = (HOLES PPOD_BULK_R_3) ENCLOSE NLD24G5_FULLY_ISO_GATE
PPOD_BULK_R_NLD24G5_FULLY_ISO = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NLD24G5_FULLY_ISO

PPOD_BULK_H_NLD24G5_ISO_SWITCH = (HOLES PPOD_BULK_R_3) ENCLOSE NLD24G5_ISO_SWITCH_GATE
PPOD_BULK_R_NLD24G5_ISO_SWITCH = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NLD24G5_ISO_SWITCH

PPOD_BULK_H_NA20G5_NBL = (HOLES PPOD_BULK_R_3) ENCLOSE NA20G5_NBL_GATE
PPOD_BULK_R_NA20G5_NBL = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NA20G5_NBL

PPOD_BULK_H_NA29G5_NBL = (HOLES PPOD_BULK_R_3) ENCLOSE NA29G5_NBL_GATE
PPOD_BULK_R_NA29G5_NBL = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NA29G5_NBL

PPOD_BULK_H_NA29G3_DEP_NBL = (HOLES PPOD_BULK_R_3) ENCLOSE NA29G3_DEP_NBL_GATE
PPOD_BULK_R_NA29G3_DEP_NBL = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NA29G3_DEP_NBL

PPOD_BULK_H_NLD5G5_ISO_SWITCH = (HOLES PPOD_BULK_R_3) ENCLOSE NLD5G5_ISO_SWITCH_GATE
PPOD_BULK_R_NLD5G5_ISO_SWITCH = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NLD5G5_ISO_SWITCH

PPOD_BULK_H_NLD6G5_SA = (HOLES PPOD_BULK_R_3) ENCLOSE NLD6G5_SA_GATE
PPOD_BULK_R_NLD6G5_SA = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NLD6G5_SA

PPOD_BULK_H_NLD6G5_DE = (HOLES PPOD_BULK_R_3) ENCLOSE NLD6G5_DE_GATE
PPOD_BULK_R_NLD6G5_DE = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NLD6G5_DE

PPOD_BULK_H_NLD24G5 = (HOLES PPOD_BULK_R_3) ENCLOSE NLD24G5_GATE
PPOD_BULK_R_NLD24G5 = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NLD24G5

PPOD_BULK_H_NLD24G5_SWITCH = (HOLES PPOD_BULK_R_3) ENCLOSE NLD24G5_SWITCH_GATE
PPOD_BULK_R_NLD24G5_SWITCH = PPOD_BULK_R_3 TOUCH PPOD_BULK_H_NLD24G5_SWITCH



//MACRO END

// P+ isolation ring
//MACRO START
PPOD_ISO_H_NLD6G5_DE_FULLY_ISO   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD6G5_DE_FULLY_ISO_GATE
PPOD_ISO_R_NLD6G5_DE_FULLY_ISO   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD6G5_DE_FULLY_ISO

PPOD_ISO_H_NLD6G5_SA_FULLY_ISO   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD6G5_SA_FULLY_ISO_GATE
PPOD_ISO_R_NLD6G5_SA_FULLY_ISO   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD6G5_SA_FULLY_ISO


PPOD_ISO_H_NA6G5_NBL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NA6G5_NBL_GATE
PPOD_ISO_R_NA6G5_NBL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NA6G5_NBL

PPOD_ISO_H_NLD9G5   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD9G5_GATE
PPOD_ISO_R_NLD9G5   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD9G5

PPOD_ISO_H_NLD9G5_FULLY_ISO   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD9G5_FULLY_ISO_GATE
PPOD_ISO_R_NLD9G5_FULLY_ISO   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD9G5_FULLY_ISO

PPOD_ISO_H_NLD12G5   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD12G5_GATE
PPOD_ISO_R_NLD12G5   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD12G5


PPOD_ISO_H_NLD12G5_FULLY_ISO   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD12G5_FULLY_ISO_GATE
PPOD_ISO_R_NLD12G5_FULLY_ISO   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD12G5_FULLY_ISO


PPOD_ISO_H_NLD16G5   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD16G5_GATE
PPOD_ISO_R_NLD16G5   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD16G5

PPOD_ISO_H_NLD16G5_FULLY_ISO   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD16G5_FULLY_ISO_GATE
PPOD_ISO_R_NLD16G5_FULLY_ISO   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD16G5_FULLY_ISO


PPOD_ISO_H_NLD20G5   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD20G5_GATE
PPOD_ISO_R_NLD20G5   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD20G5

PPOD_ISO_H_NLD20G5_FULLY_ISO   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD20G5_FULLY_ISO_GATE
PPOD_ISO_R_NLD20G5_FULLY_ISO   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD20G5_FULLY_ISO

PPOD_ISO_H_NLD24G5_FULLY_ISO   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD24G5_FULLY_ISO_GATE
PPOD_ISO_R_NLD24G5_FULLY_ISO   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD24G5_FULLY_ISO

PPOD_ISO_H_NLD24G5_ISO_SWITCH   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD24G5_ISO_SWITCH_GATE
PPOD_ISO_R_NLD24G5_ISO_SWITCH   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD24G5_ISO_SWITCH

PPOD_ISO_H_NA20G5   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NA20G5_GATE
PPOD_ISO_R_NA20G5   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NA20G5

PPOD_ISO_H_NA20G5_NBL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NA20G5_NBL_GATE
PPOD_ISO_R_NA20G5_NBL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NA20G5_NBL

PPOD_ISO_H_NA29G5   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NA29G5_GATE
PPOD_ISO_R_NA29G5   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NA29G5

PPOD_ISO_H_NA29G5_NBL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NA29G5_NBL_GATE
PPOD_ISO_R_NA29G5_NBL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NA29G5_NBL

PPOD_ISO_H_NA29G3_DEP_NBL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NA29G3_DEP_NBL_GATE
PPOD_ISO_R_NA29G3_DEP_NBL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NA29G3_DEP_NBL

PPOD_ISO_H_NLD36G5_GB   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD36G5_GB_GATE
PPOD_ISO_R_NLD36G5_GB   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD36G5_GB

PPOD_ISO_H_NLD45G5_GB   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD45G5_GB_GATE
PPOD_ISO_R_NLD45G5_GB   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD45G5_GB

PPOD_ISO_H_NA45G3_DEP_GB   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NA45G3_DEP_GB_GATE
PPOD_ISO_R_NA45G3_DEP_GB   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NA45G3_DEP_GB

PPOD_ISO_H_PA6G5_DE_BL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE PA6G5_DE_BL_GATE
PPOD_ISO_R_PA6G5_DE_BL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_PA6G5_DE_BL

PPOD_ISO_H_PA6G5_SA_BL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE PA6G5_SA_BL_GATE
PPOD_ISO_R_PA6G5_SA_BL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_PA6G5_SA_BL

PPOD_ISO_H_PA12G5_SLIT_BL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE PA12G5_SLIT_BL_GATE
PPOD_ISO_R_PA12G5_SLIT_BL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_PA12G5_SLIT_BL

PPOD_ISO_H_PA12G5_NBL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE PA12G5_NBL_GATE
PPOD_ISO_R_PA12G5_NBL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_PA12G5_NBL

PPOD_ISO_H_PA20G5_BL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE PA20G5_BL_GATE
PPOD_ISO_R_PA20G5_BL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_PA20G5_BL

PPOD_ISO_H_PA20G5_SLIT_BL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE PA20G5_SLIT_BL_GATE
PPOD_ISO_R_PA20G5_SLIT_BL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_PA20G5_SLIT_BL

PPOD_ISO_H_PA29G5_BL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE PA29G5_BL_GATE
PPOD_ISO_R_PA29G5_BL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_PA29G5_BL

PPOD_ISO_H_PA36G5_BL_GB   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE PA36G5_BL_GB_GATE
PPOD_ISO_R_PA36G5_BL_GB   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_PA36G5_BL_GB

PPOD_ISO_H_PA45G5_BL_GB   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE PA45G5_BL_GB_GATE
PPOD_ISO_R_PA45G5_BL_GB   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_PA45G5_BL_GB

PPOD_ISO_H_NLD5G5_ISO_SWITCH   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD5G5_ISO_SWITCH_GATE
PPOD_ISO_R_NLD5G5_ISO_SWITCH   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD5G5_ISO_SWITCH

PPOD_ISO_H_NLD6G5_SA   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD6G5_SA_GATE
PPOD_ISO_R_NLD6G5_SA   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD6G5_SA

PPOD_ISO_H_NLD6G5_DE   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD6G5_DE_GATE
PPOD_ISO_R_NLD6G5_DE   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD6G5_DE

PPOD_ISO_H_NLD24G5   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD24G5_GATE
PPOD_ISO_R_NLD24G5   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD24G5

PPOD_ISO_H_NLD24G5_SWITCH   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE NLD24G5_SWITCH_GATE
PPOD_ISO_R_NLD24G5_SWITCH   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_NLD24G5_SWITCH

PPOD_ISO_H_PCH5_AS_SWITCH_MAC   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE PCH5_AS_SWITCH_MAC_GATE
PPOD_ISO_R_PCH5_AS_SWITCH_MAC   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_PCH5_AS_SWITCH_MAC

PPOD_ISO_H_PA9G5_NBL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE PA9G5_NBL_GATE
PPOD_ISO_R_PA9G5_NBL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_PA9G5_NBL

PPOD_ISO_H_PA9G5_SLIT_NBL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE PA9G5_SLIT_NBL_GATE
PPOD_ISO_R_PA9G5_SLIT_NBL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_PA9G5_SLIT_NBL

PPOD_ISO_H_PA16G5_NBL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE PA16G5_NBL_GATE
PPOD_ISO_R_PA16G5_NBL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_PA16G5_NBL

PPOD_ISO_H_PA16G5_SLIT_NBL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE PA16G5_SLIT_NBL_GATE
PPOD_ISO_R_PA16G5_SLIT_NBL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_PA16G5_SLIT_NBL



//MACRO END

//N+ pick-up ring 
NPOD_PICK_R_1 = ((NPOD AND HVSHN) NOT DPW) NOT (ALL_HVNMOS_OD OR ALL_HVPMOS_OD1)
NPOD_PICK_H_1 = (HOLES NPOD_PICK_R_1 INNER) NOT NPOD_PICK_R_1 
NPOD_PICK_R_2 = NPOD_PICK_R_1 TOUCH NPOD_PICK_H_1
NPOD_PICK_R_3 = SIZE NPOD_PICK_R_2 BY (HVOD_W_2/2)-GRID UNDEROVER
NPOD_PICK_H = HOLES NPOD_PICK_R_3 INNER
NPOD_PICK_R = NPOD_PICK_R_3 TOUCH NPOD_PICK_H

PPOD_PICK_R = PPOD AND SH_P

PPOD_PICK_H = HOLES PPOD_PICK_R INNER
//MACRO START
NPOD_PICK_H_NLD6G5_DE_FULLY_ISO = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NLD6G5_DE_FULLY_ISO_GATE
NPOD_PICK_R_NLD6G5_DE_FULLY_ISO = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NLD6G5_DE_FULLY_ISO 


NPOD_PICK_H_NLD6G5_SA_FULLY_ISO = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NLD6G5_SA_FULLY_ISO_GATE
NPOD_PICK_R_NLD6G5_SA_FULLY_ISO = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NLD6G5_SA_FULLY_ISO 


NPOD_PICK_H_NA6G5_NBL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NA6G5_NBL_GATE
NPOD_PICK_R_NA6G5_NBL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NA6G5_NBL 


NPOD_PICK_H_NLD9G5_FULLY_ISO = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NLD9G5_FULLY_ISO_GATE
NPOD_PICK_R_NLD9G5_FULLY_ISO = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NLD9G5_FULLY_ISO 


NPOD_PICK_H_NLD12G5_FULLY_ISO = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NLD12G5_FULLY_ISO_GATE
NPOD_PICK_R_NLD12G5_FULLY_ISO = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NLD12G5_FULLY_ISO 


NPOD_PICK_H_NLD16G5_FULLY_ISO = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NLD16G5_FULLY_ISO_GATE
NPOD_PICK_R_NLD16G5_FULLY_ISO = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NLD16G5_FULLY_ISO 


NPOD_PICK_H_NLD20G5_FULLY_ISO = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NLD20G5_FULLY_ISO_GATE
NPOD_PICK_R_NLD20G5_FULLY_ISO = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NLD20G5_FULLY_ISO 


NPOD_PICK_H_NLD24G5_FULLY_ISO = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NLD24G5_FULLY_ISO_GATE
NPOD_PICK_R_NLD24G5_FULLY_ISO = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NLD24G5_FULLY_ISO 


NPOD_PICK_H_NLD24G5_ISO_SWITCH = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NLD24G5_ISO_SWITCH_GATE
NPOD_PICK_R_NLD24G5_ISO_SWITCH = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NLD24G5_ISO_SWITCH 


NPOD_PICK_H_NA20G5_NBL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NA20G5_NBL_GATE
NPOD_PICK_R_NA20G5_NBL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NA20G5_NBL 


NPOD_PICK_H_NA29G5_NBL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NA29G5_NBL_GATE
NPOD_PICK_R_NA29G5_NBL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NA29G5_NBL 


NPOD_PICK_H_NA29G3_DEP_NBL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NA29G3_DEP_NBL_GATE
NPOD_PICK_R_NA29G3_DEP_NBL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NA29G3_DEP_NBL 


NPOD_PICK_H_PA6G5_DE_BL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE PA6G5_DE_BL_GATE
NPOD_PICK_R_PA6G5_DE_BL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_PA6G5_DE_BL 


NPOD_PICK_H_PA6G5_SA_BL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE PA6G5_SA_BL_GATE
NPOD_PICK_R_PA6G5_SA_BL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_PA6G5_SA_BL 


NPOD_PICK_H_PA12G5_SLIT_BL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE PA12G5_SLIT_BL_GATE
NPOD_PICK_R_PA12G5_SLIT_BL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_PA12G5_SLIT_BL 


NPOD_PICK_H_PA12G5_NBL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE PA12G5_NBL_GATE
NPOD_PICK_R_PA12G5_NBL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_PA12G5_NBL 


NPOD_PICK_H_PA20G5_BL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE PA20G5_BL_GATE
NPOD_PICK_R_PA20G5_BL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_PA20G5_BL 


NPOD_PICK_H_PA20G5_SLIT_BL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE PA20G5_SLIT_BL_GATE
NPOD_PICK_R_PA20G5_SLIT_BL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_PA20G5_SLIT_BL 


NPOD_PICK_H_PA29G5_BL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE PA29G5_BL_GATE
NPOD_PICK_R_PA29G5_BL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_PA29G5_BL 


NPOD_PICK_H_PA36G5_BL_GB = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE PA36G5_BL_GB_GATE
NPOD_PICK_R_PA36G5_BL_GB = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_PA36G5_BL_GB 


NPOD_PICK_H_PA45G5_BL_GB = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE PA45G5_BL_GB_GATE
NPOD_PICK_R_PA45G5_BL_GB = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_PA45G5_BL_GB 


NPOD_PICK_H_NLD5G5_ISO_SWITCH = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NLD5G5_ISO_SWITCH_GATE
NPOD_PICK_R_NLD5G5_ISO_SWITCH = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NLD5G5_ISO_SWITCH 


NPOD_PICK_H_NLD6G5_SA = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NLD6G5_SA_GATE
NPOD_PICK_R_NLD6G5_SA = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NLD6G5_SA 


NPOD_PICK_H_NLD6G5_DE = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NLD6G5_DE_GATE
NPOD_PICK_R_NLD6G5_DE = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NLD6G5_DE 


NPOD_PICK_H_NLD24G5 = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NLD24G5_GATE
NPOD_PICK_R_NLD24G5 = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NLD24G5 


NPOD_PICK_H_NLD24G5_SWITCH = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE NLD24G5_SWITCH_GATE
NPOD_PICK_R_NLD24G5_SWITCH = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_NLD24G5_SWITCH 


NPOD_PICK_H_PCH5_AS_SWITCH_MAC = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE PCH5_AS_SWITCH_MAC_GATE
NPOD_PICK_R_PCH5_AS_SWITCH_MAC = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_PCH5_AS_SWITCH_MAC 


NPOD_PICK_H_PA9G5_NBL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE PA9G5_NBL_GATE
NPOD_PICK_R_PA9G5_NBL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_PA9G5_NBL 


NPOD_PICK_H_PA9G5_SLIT_NBL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE PA9G5_SLIT_NBL_GATE
NPOD_PICK_R_PA9G5_SLIT_NBL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_PA9G5_SLIT_NBL 


NPOD_PICK_H_PA16G5_NBL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE PA16G5_NBL_GATE
NPOD_PICK_R_PA16G5_NBL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_PA16G5_NBL 


NPOD_PICK_H_PA16G5_SLIT_NBL = (HOLES NPOD_PICK_R_3 INNER) ENCLOSE PA16G5_SLIT_NBL_GATE
NPOD_PICK_R_PA16G5_SLIT_NBL = NPOD_PICK_R_3 TOUCH NPOD_PICK_H_PA16G5_SLIT_NBL 




 NPOD_PICK_H_PMOS = ((((((((((((NPOD_PICK_H_PA6G5_DE_BL OR NPOD_PICK_H_PA6G5_SA_BL) OR NPOD_PICK_H_PA12G5_SLIT_BL) OR NPOD_PICK_H_PA12G5_NBL) OR NPOD_PICK_H_PA20G5_BL) OR NPOD_PICK_H_PA20G5_SLIT_BL) OR NPOD_PICK_H_PA29G5_BL) OR NPOD_PICK_H_PA36G5_BL_GB) OR NPOD_PICK_H_PA45G5_BL_GB) OR NPOD_PICK_H_PCH5_AS_SWITCH_MAC) OR NPOD_PICK_H_PA9G5_NBL) OR NPOD_PICK_H_PA9G5_SLIT_NBL) OR NPOD_PICK_H_PA16G5_NBL) OR NPOD_PICK_H_PA16G5_SLIT_NBL
 NPOD_PICK_R_PMOS = ((((((((((((NPOD_PICK_R_PA6G5_DE_BL OR NPOD_PICK_R_PA6G5_SA_BL) OR NPOD_PICK_R_PA12G5_SLIT_BL) OR NPOD_PICK_R_PA12G5_NBL) OR NPOD_PICK_R_PA20G5_BL) OR NPOD_PICK_R_PA20G5_SLIT_BL) OR NPOD_PICK_R_PA29G5_BL) OR NPOD_PICK_R_PA36G5_BL_GB) OR NPOD_PICK_R_PA45G5_BL_GB) OR NPOD_PICK_R_PCH5_AS_SWITCH_MAC) OR NPOD_PICK_R_PA9G5_NBL) OR NPOD_PICK_R_PA9G5_SLIT_NBL) OR NPOD_PICK_R_PA16G5_NBL) OR NPOD_PICK_R_PA16G5_SLIT_NBL
//MACRO END

//NBL-DPW LV ISO pick-up ring
LV_NACT = NACT OUTSIDE HVDMY
LV_PACT = PACT OUTSIDE HVDMY
LV_NTAP = NTAP OUTSIDE HVDMY
LV_PTAP = PTAP OUTSIDE HVDMY
LV_ACT = LV_NACT OR LV_PACT
NBL_DPW_LV = (NBL INTERACT DPW) OUTSIDE HVDMY
PP_DPW    = ((PPOD AND PWEL) AND NBL_DPW_LV ) NOT LV_ACT
PP_DPW_H1 = (HOLES PP_DPW) NOT PP_DPW
PP_DPW_R1 =  PP_DPW  TOUCH PP_DPW_H1
PP_DPW_R2 = SIZE PP_DPW_R1 BY (OD_W_1/2)-GRID UNDEROVER
PP_DPW_H = HOLES PP_DPW_R2 
PP_DPW_R = PP_DPW_R2 TOUCH PP_DPW_H

//NBL-DPW HV ISO pick-up ring
NBL_ISO_R_1 = ((( NPOD  AND HVSHN ) AND NBL) NOT DPW) NOT ALL_HVMOS_OD
NBL_ISO_H_1 = (HOLES NBL_ISO_R_1 INNER) NOT NBL_ISO_R_1
NBL_ISO_R_2 = NBL_ISO_R_1 TOUCH NBL_ISO_H_1
NBL_ISO_R_3 = SIZE NBL_ISO_R_2 BY (HVOD_W_2/2)-GRID UNDEROVER

NBL_ISO_H = (HOLES NBL_ISO_R_3 ) ENCLOSE (((((HVGATE_ISO OR NA6G5_NBL_GATE) OR NA29G5_NBL_GATE) OR NA20G5_NBL_GATE) OR NA29G3_dep_NBL_GATE) OR NLD5G5_ISO_SWITCH_GATE)
NBL_ISO_R = NBL_ISO_R_3 TOUCH NBL_ISO_H

HVGATE_ISO = ((((((NLD6G5_SA_FULLY_ISO_GATE OR NLD6G5_DE_FULLY_ISO_GATE) OR NLD9G5_FULLY_ISO_GATE) OR NLD12G5_FULLY_ISO_GATE) OR NLD16G5_FULLY_ISO_GATE) OR NLD20G5_FULLY_ISO_GATE) OR NLD24G5_FULLY_ISO_GATE) OR NLD24G5_ISO_SWITCH_GATE  

//HVBJT 
//========

HVBJTMDDMY = BJTMDDMY AND HVDMY
HVBJTMEDMY = BJTMEDMY AND HVDMY
HVBJTDMY4 = BJT4TDMY AND HVDMY
HVBJTDMY5 = BJT5TDMY AND HVDMY
HVBJTDMY7 = BJT7TDMY AND HVDMY
HVBJTDMY  = BJTDUMMY AND HVDMY
HVBJT_DMY = (HVBJTDMY4 OR HVBJTDMY) OR HVBJTDMY7
//MACRO START


SH_P_POLY = SH_P INTERACT POLY
SH_N_POLY = HVSHN INTERACT POLY
SH_N_HVPW = HVSHN AND HVPW

//NPDDSHNNBL_PO_BOUNDARY (BJT)
//================
BJT_NPDDSHNNBL_PO_BOUNDARY_E1   = (NPOD AND HVBJTDMY4) AND PDD 
BJT_NPDDSHNNBL_PO_BOUNDARY_E = COPY BJT_NPDDSHNNBL_PO_BOUNDARY_E1
BJT_NPDDSHNNBL_PO_BOUNDARY_B_1 = (PPOD AND HVBJTDMY4) AND SH_P
BJT_NPDDSHNNBL_PO_BOUNDARY_B_H = (HOLES BJT_NPDDSHNNBL_PO_BOUNDARY_B_1 INNER) ENCLOSE BJT_NPDDSHNNBL_PO_BOUNDARY_E
BJT_NPDDSHNNBL_PO_BOUNDARY_B   = BJT_NPDDSHNNBL_PO_BOUNDARY_B_1 TOUCH BJT_NPDDSHNNBL_PO_BOUNDARY_B_H
BJT_NPDDSHNNBL_PO_BOUNDARY_C_1 = (NPOD AND HVBJTDMY4) AND HVSHN
BJT_NPDDSHNNBL_PO_BOUNDARY_C_H = (HOLES BJT_NPDDSHNNBL_PO_BOUNDARY_C_1 INNER) ENCLOSE BJT_NPDDSHNNBL_PO_BOUNDARY_E
BJT_NPDDSHNNBL_PO_BOUNDARY_C   = BJT_NPDDSHNNBL_PO_BOUNDARY_C_1 TOUCH BJT_NPDDSHNNBL_PO_BOUNDARY_C_H
//NPWSHNNBL_PO_BOUNDARY (BJT)
//================
BJT_NPWSHNNBL_PO_BOUNDARY_E1   = (NPOD AND HVBJTDMY4) AND SH_P 
BJT_NPWSHNNBL_PO_BOUNDARY_E = COPY BJT_NPWSHNNBL_PO_BOUNDARY_E1
BJT_NPWSHNNBL_PO_BOUNDARY_B_1 = (PPOD AND HVBJTDMY4) AND SH_P
BJT_NPWSHNNBL_PO_BOUNDARY_B_H = (HOLES BJT_NPWSHNNBL_PO_BOUNDARY_B_1 INNER) ENCLOSE BJT_NPWSHNNBL_PO_BOUNDARY_E
BJT_NPWSHNNBL_PO_BOUNDARY_B   = BJT_NPWSHNNBL_PO_BOUNDARY_B_1 TOUCH BJT_NPWSHNNBL_PO_BOUNDARY_B_H
BJT_NPWSHNNBL_PO_BOUNDARY_C_1 = (NPOD AND HVBJTDMY4) AND HVSHN
BJT_NPWSHNNBL_PO_BOUNDARY_C_H = (HOLES BJT_NPWSHNNBL_PO_BOUNDARY_C_1 INNER) ENCLOSE BJT_NPWSHNNBL_PO_BOUNDARY_E
BJT_NPWSHNNBL_PO_BOUNDARY_C   = BJT_NPWSHNNBL_PO_BOUNDARY_C_1 TOUCH BJT_NPWSHNNBL_PO_BOUNDARY_C_H
//PNDDPSUB (BJT)
//================
BJT_PNDDPSUB_E1   = (PPOD AND HVBJTDMY) AND NDD 
BJT_PNDDPSUB_E = COPY BJT_PNDDPSUB_E1
BJT_PNDDPSUB_B_1 = (NPOD AND HVBJTDMY) AND NDD
BJT_PNDDPSUB_B_H = (HOLES BJT_PNDDPSUB_B_1 INNER) ENCLOSE BJT_PNDDPSUB_E
BJT_PNDDPSUB_B   = BJT_PNDDPSUB_B_1 TOUCH BJT_PNDDPSUB_B_H
BJT_PNDDPSUB_C_1 = PPOD AND HVBJTDMY
BJT_PNDDPSUB_C_H = (HOLES BJT_PNDDPSUB_C_1 INNER) ENCLOSE BJT_PNDDPSUB_E
BJT_PNDDPSUB_C   = BJT_PNDDPSUB_C_1 TOUCH BJT_PNDDPSUB_C_H
//PHVNWPSUB_GB (BJT)
//================
BJT_PHVNWPSUB_GB_E1   = (PPOD AND HVBJTDMY) AND HVNW 
BJT_PHVNWPSUB_GB_E = COPY BJT_PHVNWPSUB_GB_E1
BJT_PHVNWPSUB_GB_B_1 = (NPOD AND HVBJTDMY) AND HVNW
BJT_PHVNWPSUB_GB_B_H = (HOLES BJT_PHVNWPSUB_GB_B_1 INNER) ENCLOSE BJT_PHVNWPSUB_GB_E
BJT_PHVNWPSUB_GB_B   = BJT_PHVNWPSUB_GB_B_1 TOUCH BJT_PHVNWPSUB_GB_B_H
BJT_PHVNWPSUB_GB_C_1 = PPOD AND HVBJTDMY
BJT_PHVNWPSUB_GB_C_H = (HOLES BJT_PHVNWPSUB_GB_C_1 INNER) ENCLOSE BJT_PHVNWPSUB_GB_E
BJT_PHVNWPSUB_GB_C   = BJT_PHVNWPSUB_GB_C_1 TOUCH BJT_PHVNWPSUB_GB_C_H
//PNDDSHPNBL (BJT)
//================
BJT_PNDDSHPNBL_E1   = (PPOD AND HVBJTDMY4) AND NDD 
BJT_PNDDSHPNBL_E = COPY BJT_PNDDSHPNBL_E1
BJT_PNDDSHPNBL_B_1 = (NPOD AND HVBJTDMY4) AND HVSHN
BJT_PNDDSHPNBL_B_H = (HOLES BJT_PNDDSHPNBL_B_1 INNER) ENCLOSE BJT_PNDDSHPNBL_E
BJT_PNDDSHPNBL_B   = BJT_PNDDSHPNBL_B_1 TOUCH BJT_PNDDSHPNBL_B_H
BJT_PNDDSHPNBL_C_1 = (PPOD AND HVBJTDMY4) AND SH_P
BJT_PNDDSHPNBL_C_H = (HOLES BJT_PNDDSHPNBL_C_1 INNER) ENCLOSE BJT_PNDDSHPNBL_E
BJT_PNDDSHPNBL_C   = BJT_PNDDSHPNBL_C_1 TOUCH BJT_PNDDSHPNBL_C_H
//NPDDSHNNBL_BGR8 (BJT)
//================
BJT_NPDDSHNNBL_BGR8_E1   = (NPOD AND HVBJTDMY7) AND PDD 
BJT_NPDDSHNNBL_BGR8_E = COPY BJT_NPDDSHNNBL_BGR8_E1
BJT_NPDDSHNNBL_BGR8_B_1 = (PPOD AND HVBJTDMY7) AND SH_P
BJT_NPDDSHNNBL_BGR8_B_H = (HOLES BJT_NPDDSHNNBL_BGR8_B_1 INNER) ENCLOSE BJT_NPDDSHNNBL_BGR8_E
BJT_NPDDSHNNBL_BGR8_B   = BJT_NPDDSHNNBL_BGR8_B_1 TOUCH BJT_NPDDSHNNBL_BGR8_B_H
BJT_NPDDSHNNBL_BGR8_C_1 = (NPOD AND HVBJTDMY7) AND HVSHN
BJT_NPDDSHNNBL_BGR8_C_H = (HOLES BJT_NPDDSHNNBL_BGR8_C_1 INNER) ENCLOSE BJT_NPDDSHNNBL_BGR8_E
BJT_NPDDSHNNBL_BGR8_C   = BJT_NPDDSHNNBL_BGR8_C_1 TOUCH BJT_NPDDSHNNBL_BGR8_C_H
//NPWSHNNBL_BGR8 (BJT)
//================
BJT_NPWSHNNBL_BGR8_E1   = NPOD AND HVBJTDMY7 
BJT_NPWSHNNBL_BGR8_E = (BJT_NPWSHNNBL_BGR8_E1 NOT INTERACT PDD) NOT INTERACT HVSHN
BJT_NPWSHNNBL_BGR8_B_1 = (PPOD AND HVBJTDMY7) AND SH_P
BJT_NPWSHNNBL_BGR8_B_H = (HOLES BJT_NPWSHNNBL_BGR8_B_1 INNER) ENCLOSE BJT_NPWSHNNBL_BGR8_E
BJT_NPWSHNNBL_BGR8_B   = BJT_NPWSHNNBL_BGR8_B_1 TOUCH BJT_NPWSHNNBL_BGR8_B_H
BJT_NPWSHNNBL_BGR8_C_1 = (NPOD AND HVBJTDMY7) AND HVSHN
BJT_NPWSHNNBL_BGR8_C_H = (HOLES BJT_NPWSHNNBL_BGR8_C_1 INNER) ENCLOSE BJT_NPWSHNNBL_BGR8_E
BJT_NPWSHNNBL_BGR8_C   = BJT_NPWSHNNBL_BGR8_C_1 TOUCH BJT_NPWSHNNBL_BGR8_C_H
//MACRO END
PPOD_ISO_H_BJT_NPDDSHNNBL_PO_BOUNDARY   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE BJT_NPDDSHNNBL_PO_BOUNDARY_E
PPOD_ISO_R_BJT_NPDDSHNNBL_PO_BOUNDARY   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_BJT_NPDDSHNNBL_PO_BOUNDARY
PPOD_ISO_H_BJT_NPWSHNNBL_PO_BOUNDARY   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE BJT_NPWSHNNBL_PO_BOUNDARY_E
PPOD_ISO_R_BJT_NPWSHNNBL_PO_BOUNDARY   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_BJT_NPWSHNNBL_PO_BOUNDARY
PPOD_ISO_H_BJT_PNDDPSUB   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE BJT_PNDDPSUB_E
PPOD_ISO_R_BJT_PNDDPSUB   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_BJT_PNDDPSUB
PPOD_ISO_H_BJT_PHVNWPSUB_GB   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE BJT_PHVNWPSUB_GB_E
PPOD_ISO_R_BJT_PHVNWPSUB_GB   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_BJT_PHVNWPSUB_GB
PPOD_ISO_H_BJT_PNDDSHPNBL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE BJT_PNDDSHPNBL_E
PPOD_ISO_R_BJT_PNDDSHPNBL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_BJT_PNDDSHPNBL
PPOD_ISO_H_BJT_NPDDSHNNBL_BGR8   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE BJT_NPDDSHNNBL_BGR8_E
PPOD_ISO_R_BJT_NPDDSHNNBL_BGR8   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_BJT_NPDDSHNNBL_BGR8
PPOD_ISO_H_BJT_NPWSHNNBL_BGR8   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE BJT_NPWSHNNBL_BGR8_E
PPOD_ISO_R_BJT_NPWSHNNBL_BGR8   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_BJT_NPWSHNNBL_BGR8
 HVBJT_E =  (((((BJT_NPDDSHNNBL_PO_BOUNDARY_E OR BJT_NPWSHNNBL_PO_BOUNDARY_E) OR BJT_PNDDPSUB_E) OR BJT_PHVNWPSUB_GB_E) OR BJT_PNDDSHPNBL_E) OR BJT_NPDDSHNNBL_BGR8_E) OR BJT_NPWSHNNBL_BGR8_E

 HVBJT_B =  (((((BJT_NPDDSHNNBL_PO_BOUNDARY_B OR BJT_NPWSHNNBL_PO_BOUNDARY_B) OR BJT_PNDDPSUB_B) OR BJT_PHVNWPSUB_GB_B) OR BJT_PNDDSHPNBL_B) OR BJT_NPDDSHNNBL_BGR8_B) OR BJT_NPWSHNNBL_BGR8_B

 HVBJT_C =  (((((BJT_NPDDSHNNBL_PO_BOUNDARY_C OR BJT_NPWSHNNBL_PO_BOUNDARY_C) OR BJT_PNDDPSUB_C) OR BJT_PHVNWPSUB_GB_C) OR BJT_PNDDSHPNBL_C) OR BJT_NPDDSHNNBL_BGR8_C) OR BJT_NPWSHNNBL_BGR8_C

 HVBJT_B_H =  (((((BJT_NPDDSHNNBL_PO_BOUNDARY_B_H OR BJT_NPWSHNNBL_PO_BOUNDARY_B_H) OR BJT_PNDDPSUB_B_H) OR BJT_PHVNWPSUB_GB_B_H) OR BJT_PNDDSHPNBL_B_H) OR BJT_NPDDSHNNBL_BGR8_B_H) OR BJT_NPWSHNNBL_BGR8_B_H

 HVBJT_C_H =  (((((BJT_NPDDSHNNBL_PO_BOUNDARY_C_H OR BJT_NPWSHNNBL_PO_BOUNDARY_C_H) OR BJT_PNDDPSUB_C_H) OR BJT_PHVNWPSUB_GB_C_H) OR BJT_PNDDSHPNBL_C_H) OR BJT_NPDDSHNNBL_BGR8_C_H) OR BJT_NPWSHNNBL_BGR8_C_H


 PPOD_ISO_H_BJT =  (((((PPOD_ISO_H_BJT_NPDDSHNNBL_PO_BOUNDARY OR PPOD_ISO_H_BJT_NPWSHNNBL_PO_BOUNDARY) OR PPOD_ISO_H_BJT_PNDDPSUB) OR PPOD_ISO_H_BJT_PHVNWPSUB_GB) OR PPOD_ISO_H_BJT_PNDDSHPNBL) OR PPOD_ISO_H_BJT_NPDDSHNNBL_BGR8) OR PPOD_ISO_H_BJT_NPWSHNNBL_BGR8

 PPOD_ISO_R_BJT =  (((((PPOD_ISO_R_BJT_NPDDSHNNBL_PO_BOUNDARY OR PPOD_ISO_R_BJT_NPWSHNNBL_PO_BOUNDARY) OR PPOD_ISO_R_BJT_PNDDPSUB) OR PPOD_ISO_R_BJT_PHVNWPSUB_GB) OR PPOD_ISO_R_BJT_PNDDSHPNBL) OR PPOD_ISO_R_BJT_NPDDSHNNBL_BGR8) OR PPOD_ISO_R_BJT_NPWSHNNBL_BGR8

//HVDIO
//========
HVDIODMY  = DIODUMMY AND HVDMY
HVDIODMY70  = DIODUMMY AND HV70DMY
HVDIODMY3 = DIO3TDMY AND HVDMY
HVDIODMY4 = DIO4TDMY AND HVDMY
HVSBDDMY = HVDMY AND SBDDMY
HVSBDDMY3 = HVDMY AND SBD3TDMY
HVDIO_DMY = ((HVDIODMY OR HVDIODMY3) OR HVDIODMY4) OR HVSBDDMY3


//MACRO START
DIO_ZENER_NBL_M_1 = ((NPOD AND HVDIODMY4) AND HVPB) AND NBL
DIO_ZENER_NBL_M_2   = COPY DIO_ZENER_NBL_M_1
DIO_ZENER_NBL_M   = OD INTERACT DIO_ZENER_NBL_M_2
DIO_ZENER_NBL_P_1 = PPOD AND SH_P
DIO_ZENER_NBL_H   = (HOLES DIO_ZENER_NBL_P_1 INNER) ENCLOSE DIO_ZENER_NBL_M 
DIO_ZENER_NBL_P   = DIO_ZENER_NBL_P_1 TOUCH DIO_ZENER_NBL_H



DIO_SBD_12V_M_1 = (((PPOD AND HVSBDDMY3) AND NDD) AND NBL) AND HV12DMY
DIO_SBD_12V_M_2   = COPY DIO_SBD_12V_M_1
DIO_SBD_12V_M   = OD INTERACT DIO_SBD_12V_M_2
DIO_SBD_12V_P_1 = NPOD AND NDD
DIO_SBD_12V_H   = (HOLES DIO_SBD_12V_P_1 INNER) ENCLOSE DIO_SBD_12V_M 
DIO_SBD_12V_P   = DIO_SBD_12V_P_1 TOUCH DIO_SBD_12V_H
DIO_SBD_16V_M_1 = (((PPOD AND HVSBDDMY3) AND NDD) AND NBL) AND HV16DMY
DIO_SBD_16V_M_2   = COPY DIO_SBD_16V_M_1
DIO_SBD_16V_M   = OD INTERACT DIO_SBD_16V_M_2
DIO_SBD_16V_P_1 = NPOD AND NDD
DIO_SBD_16V_H   = (HOLES DIO_SBD_16V_P_1 INNER) ENCLOSE DIO_SBD_16V_M 
DIO_SBD_16V_P   = DIO_SBD_16V_P_1 TOUCH DIO_SBD_16V_H
DIO_SBD_24V_M_1 = (((PPOD AND HVSBDDMY3) AND NDD) AND NBL) AND HV24DMY
DIO_SBD_24V_M_2   = COPY DIO_SBD_24V_M_1
DIO_SBD_24V_M   = OD INTERACT DIO_SBD_24V_M_2
DIO_SBD_24V_P_1 = NPOD AND NDD
DIO_SBD_24V_H   = (HOLES DIO_SBD_24V_P_1 INNER) ENCLOSE DIO_SBD_24V_M 
DIO_SBD_24V_P   = DIO_SBD_24V_P_1 TOUCH DIO_SBD_24V_H


DIO_NPDD_M_1 = (NPOD AND HVDIODMY) AND PDD
DIO_NPDD_M_2   = COPY DIO_NPDD_M_1
DIO_NPDD_M   = OD INTERACT DIO_NPDD_M_2
DIO_NPDD_P_1 = PPOD AND PDD
DIO_NPDD_H   = (HOLES DIO_NPDD_P_1 INNER) ENCLOSE DIO_NPDD_M 
DIO_NPDD_P   = DIO_NPDD_P_1 TOUCH DIO_NPDD_H

DIO_NHVPW_GB_M_1 = (NPOD AND HVDIODMY) AND HVPW
DIO_NHVPW_GB_M_2   = DIO_NHVPW_GB_M_1 NOT INTERACT PDD
DIO_NHVPW_GB_M   = OD INTERACT DIO_NHVPW_GB_M_2
DIO_NHVPW_GB_P_1 = PPOD AND HVPW
DIO_NHVPW_GB_H   = (HOLES DIO_NHVPW_GB_P_1 INNER) ENCLOSE DIO_NHVPW_GB_M 
DIO_NHVPW_GB_P   = DIO_NHVPW_GB_P_1 TOUCH DIO_NHVPW_GB_H

DIO_SHNPSUBSHP_M_1 = ((NPOD AND HVDIODMY) AND HVSHN) AND HVGA
DIO_SHNPSUBSHP_M_2   = DIO_SHNPSUBSHP_M_1 NOT INTERACT NBL
DIO_SHNPSUBSHP_M   = OD INTERACT DIO_SHNPSUBSHP_M_2
DIO_SHNPSUBSHP_P_1 = PPOD AND HVDMY
DIO_SHNPSUBSHP_H   = (HOLES DIO_SHNPSUBSHP_P_1 INNER) ENCLOSE DIO_SHNPSUBSHP_M 
DIO_SHNPSUBSHP_P   = DIO_SHNPSUBSHP_P_1 TOUCH DIO_SHNPSUBSHP_H
///###  SHN/PSUB Diode(GA)

DIO_SHNNBLPSUBSHP_M_1 = (((NPOD AND HVDIODMY) AND HVSHN) AND NBL) AND HVGA
DIO_SHNNBLPSUBSHP_M_2   = COPY DIO_SHNNBLPSUBSHP_M_1
DIO_SHNNBLPSUBSHP_M   = OD INTERACT DIO_SHNNBLPSUBSHP_M_2
DIO_SHNNBLPSUBSHP_P_1 = PPOD AND HVDMY
DIO_SHNNBLPSUBSHP_H   = (HOLES DIO_SHNNBLPSUBSHP_P_1 INNER) ENCLOSE DIO_SHNNBLPSUBSHP_M 
DIO_SHNNBLPSUBSHP_P   = DIO_SHNNBLPSUBSHP_P_1 TOUCH DIO_SHNNBLPSUBSHP_H
///### NBL/PSUB Diode(GA)

DIO_SHNNBLPSUBSHP_GB_M_1 = (((NPOD AND HVDIODMY) AND HVSHN) AND NBL) AND HVGB
DIO_SHNNBLPSUBSHP_GB_M_2   = COPY DIO_SHNNBLPSUBSHP_GB_M_1
DIO_SHNNBLPSUBSHP_GB_M   = OD INTERACT DIO_SHNNBLPSUBSHP_GB_M_2
DIO_SHNNBLPSUBSHP_GB_P_1 = PPOD AND HVDMY
DIO_SHNNBLPSUBSHP_GB_H   = (HOLES DIO_SHNNBLPSUBSHP_GB_P_1 INNER) ENCLOSE DIO_SHNNBLPSUBSHP_GB_M 
DIO_SHNNBLPSUBSHP_GB_P   = DIO_SHNNBLPSUBSHP_GB_P_1 TOUCH DIO_SHNNBLPSUBSHP_GB_H
///### NBL/PSUB Diode(GB)

DIO_PBSHNNBL_M_1 = (((PPOD AND HVDIODMY3) AND HVPB) AND NBL) AND HVGA
DIO_PBSHNNBL_M_2   = DIO_PBSHNNBL_M_1 NOT INTERACT HVSHN
DIO_PBSHNNBL_M   = OD INTERACT DIO_PBSHNNBL_M_2
DIO_PBSHNNBL_P_1 = NPOD AND HVSHN
DIO_PBSHNNBL_H   = (HOLES DIO_PBSHNNBL_P_1 INNER) ENCLOSE DIO_PBSHNNBL_M 
DIO_PBSHNNBL_P   = DIO_PBSHNNBL_P_1 TOUCH DIO_PBSHNNBL_H

DIO_PDDSHNNBL_M_1 = (((PPOD AND HVDIODMY3) AND PDD) AND NBL) AND HVGA
DIO_PDDSHNNBL_M_2   = DIO_PDDSHNNBL_M_1 NOT INTERACT HVSHN
DIO_PDDSHNNBL_M   = OD INTERACT DIO_PDDSHNNBL_M_2
DIO_PDDSHNNBL_P_1 = NPOD AND HVSHN
DIO_PDDSHNNBL_H   = (HOLES DIO_PDDSHNNBL_P_1 INNER) ENCLOSE DIO_PDDSHNNBL_M 
DIO_PDDSHNNBL_P   = DIO_PDDSHNNBL_P_1 TOUCH DIO_PDDSHNNBL_H

DIO_SHPNBLSHN_GB_M_1 = (((PPOD AND HVDIODMY3) AND SH_P) AND NBL) AND HVGB
DIO_SHPNBLSHN_GB_M_2   = DIO_SHPNBLSHN_GB_M_1 NOT INTERACT HVPB
DIO_SHPNBLSHN_GB_M   = OD INTERACT DIO_SHPNBLSHN_GB_M_2
DIO_SHPNBLSHN_GB_P_1 = NPOD AND HVSHN
DIO_SHPNBLSHN_GB_H   = (HOLES DIO_SHPNBLSHN_GB_P_1 INNER) ENCLOSE DIO_SHPNBLSHN_GB_M 
DIO_SHPNBLSHN_GB_P   = DIO_SHPNBLSHN_GB_P_1 TOUCH DIO_SHPNBLSHN_GB_H
///### P+SHP in SHN+NBL Diode(GB)
//MACRO END

 HVDIO_M =  ((((((((((DIO_ZENER_NBL_M OR DIO_SBD_12V_M) OR DIO_SBD_16V_M) OR DIO_SBD_24V_M) OR DIO_NPDD_M) OR DIO_NHVPW_GB_M) OR DIO_SHNPSUBSHP_M) OR DIO_SHNNBLPSUBSHP_M) OR DIO_SHNNBLPSUBSHP_GB_M) OR DIO_PBSHNNBL_M) OR DIO_PDDSHNNBL_M) OR DIO_SHPNBLSHN_GB_M

 HVDIO_P =  ((((((((((DIO_ZENER_NBL_P OR DIO_SBD_12V_P) OR DIO_SBD_16V_P) OR DIO_SBD_24V_P) OR DIO_NPDD_P) OR DIO_NHVPW_GB_P) OR DIO_SHNPSUBSHP_P) OR DIO_SHNNBLPSUBSHP_P) OR DIO_SHNNBLPSUBSHP_GB_P) OR DIO_PBSHNNBL_P) OR DIO_PDDSHNNBL_P) OR DIO_SHPNBLSHN_GB_P

 SBD_HVDIO_M =  (DIO_SBD_12V_M OR DIO_SBD_16V_M) OR DIO_SBD_24V_M
 
//MACRO START
PPOD_ISO_H_DIO_ZENER_NBL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE DIO_ZENER_NBL_M
PPOD_ISO_R_DIO_ZENER_NBL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_DIO_ZENER_NBL
PPOD_ISO_H_DIO_SBD_12V   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE DIO_SBD_12V_M
PPOD_ISO_R_DIO_SBD_12V   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_DIO_SBD_12V
PPOD_ISO_H_DIO_SBD_16V   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE DIO_SBD_16V_M
PPOD_ISO_R_DIO_SBD_16V   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_DIO_SBD_16V
PPOD_ISO_H_DIO_SBD_24V   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE DIO_SBD_24V_M
PPOD_ISO_R_DIO_SBD_24V   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_DIO_SBD_24V
PPOD_ISO_H_DIO_NPDD   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE DIO_NPDD_M
PPOD_ISO_R_DIO_NPDD   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_DIO_NPDD
PPOD_ISO_H_DIO_NHVPW_GB   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE DIO_NHVPW_GB_M
PPOD_ISO_R_DIO_NHVPW_GB   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_DIO_NHVPW_GB
PPOD_ISO_H_DIO_SHNPSUBSHP   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE DIO_SHNPSUBSHP_M
PPOD_ISO_R_DIO_SHNPSUBSHP   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_DIO_SHNPSUBSHP
PPOD_ISO_H_DIO_SHNNBLPSUBSHP   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE DIO_SHNNBLPSUBSHP_M
PPOD_ISO_R_DIO_SHNNBLPSUBSHP   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_DIO_SHNNBLPSUBSHP
PPOD_ISO_H_DIO_SHNNBLPSUBSHP_GB   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE DIO_SHNNBLPSUBSHP_GB_M
PPOD_ISO_R_DIO_SHNNBLPSUBSHP_GB   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_DIO_SHNNBLPSUBSHP_GB
PPOD_ISO_H_DIO_PBSHNNBL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE DIO_PBSHNNBL_M
PPOD_ISO_R_DIO_PBSHNNBL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_DIO_PBSHNNBL
PPOD_ISO_H_DIO_PDDSHNNBL   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE DIO_PDDSHNNBL_M
PPOD_ISO_R_DIO_PDDSHNNBL   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_DIO_PDDSHNNBL
PPOD_ISO_H_DIO_SHPNBLSHN_GB   = (HOLES PPOD_ISO_R_3 INNER) ENCLOSE DIO_SHPNBLSHN_GB_M
PPOD_ISO_R_DIO_SHPNBLSHN_GB   = PPOD_ISO_R_3 TOUCH PPOD_ISO_H_DIO_SHPNBLSHN_GB
//MACRO END
RNWEL = NWEL  CUT RWDMY  // NWEL resistor (UNDER OD & STI)
NONWR	= NWEL	NOT RNWEL	// NWEL - NWR(OD) - NWR(STI)

HVPW_drawing = COPY HVPWELL
HLNONWR = ((NONWR OR HVSHN) OR HVNW) OR NDD_N
PANT    = (HVPB OR SH_P) OR NDD_P
ACTIVE_HVNMOS  = (OD INTERACT ALL_HVNMOS_OD) NOT PPOD
ACTIVE_HVPMOS  = (OD INTERACT ALL_HVPMOS_OD) NOT NPOD

ACTIVE_HVMOS   = ACTIVE_HVNMOS OR ACTIVE_HVPMOS

NTAP = (NPOD AND (HLNONWR NOT PANT)) NOT ACTIVE_HVNMOS
NACT = (NPOD AND ((PWEL OR HVPW) OR PANT)) OR ACTIVE_HVNMOS
PTAP = (PPOD AND ((PWEL OR HVPW) OR PANT)) NOT ACTIVE_HVPMOS
PACT = (PPOD AND (HLNONWR NOT PANT)) OR ACTIVE_HVPMOS


HVNTAP = NTAP AND HVDMY
HVNACT = NACT AND HVDMY
HVPTAP = PTAP AND HVDMY
HVPACT = PACT AND HVDMY 

GATE_W	= POLY INSIDE EDGE OD	// Gate width
GATE_L	= OD INSIDE EDGE POLY	// Channel length
GATE_NP	= ALL_GATE AND NP	// N+ Gate
GATE_PP	= ALL_GATE AND PP	// P+ Gate

FPO1	= COPY POLY_ISO		// Field poly
RPO_NOT_SDI = RPO NOT SDI
PORES   = (FPO1 AND RPO_NOT_SDI) NOT INTERACT HVGATE  // POLY resistor region
PORES_ALL = ( FPO1 NOT INTERACT HRI ) INTERACT RPDUMMY
ILP1	= POLY_ISO NOT RPO	// Interconnection poly
FFOD	= ((((((((OD OUTSIDE RWDMY) OUTSIDE ALL_GATE) OUTSIDE HVBJT_DMY) OUTSIDE HVDIO_DMY) OUTSIDE BJTDUMMY) OUTSIDE DIODUMMY ) OUTSIDE RW4TDMY ) OUTSIDE SEALRING_ALL) OUTSIDE PA29G5_BL_OD_ALL
ODRES	= FFOD AND RPO_NOT_SDI	// OD resistor region

ODRES_ALL = FFOD INTERACT RPDUMMY




DACT    = NACT OR PACT          // NMOS and PMOS Device
DSTP    = NTAP OR PTAP          // NWEL and PWEL Pick-Up
IMP     = PP OR NP              // N+ and P+ implant 
HRDMY	= (DMP2V OR DMN2V) OR RLPPDMY	// High resistance poly resistor dummy layer for DRC
HREP	= PORES AND HRDMY		// High precision and resistacne poly resistor

HVN_GOX    = NPOD AND OD2	// Device n-type diffusion for thick gate NMOS
HVP_GOX    = PPOD AND OD2	// Device p-type diffusion for thick gate PMOS
HV_NGATE_W = GATE_W INSIDE EDGE HVN_GOX	// 3.3V NMOS gate edges
HV_PGATE_W = GATE_W INSIDE EDGE HVP_GOX	// 3.3V PMOS gate edges



BUTT_NTAP  = NTAP TOUCH PACT		// NWEL Tap butting p-type active diffusion
NONB_NTAP  = NTAP NOT TOUCH PACT	// Non-butting ntap
BUTT_PTAP  = PTAP TOUCH NACT		// PWEL Tap butting n-type active diffusion
NONB_PTAP  = PTAP NOT TOUCH NACT	// Non-butting ptap 
PP_BEDGE   = BUTT_PTAP COIN EDGE NACT	// PP edge to form butted tap
NP_BEDGE   = BUTT_NTAP COIN EDGE PACT	// NP edge to form butted tap
OD2_BEDGE  = OD2 INSIDE EDGE OD

ACT_OD	= OD INTERACT POLY
PNSD	= ACT_OD NOT ALL_GATE
SDPO2	= PNSD INTERACT POLY == 2	// S/D between two Poly gate

CO_DIFF	= CO OUTSIDE POLY_ISO		// Diffusion contacts + floating contacts
CO_POLY	= CO NOT OUTSIDE POLY_ISO	// POLY contacts
ASD1	= PNSD ENCLOSE CO_DIFF
// For checks such as PP.C.4/C.5, NP.C.4/C.5.



EXGATE_NP  = SIZE ((SIZE GATE_NP BY 0.03) AND POLY) BY NP_C_5
EXGATE_PP  = SIZE ((SIZE GATE_PP BY 0.03) AND POLY) BY PP_C_5

FUSE_LMARK = (CB OR FW) OR LW
RNGX       = PMDMY NOT FUSE_LMARK 




#IFDEF FULL_CHIP
CHIP_CORE	 = SIZE CHIPx BY -(10 + SR_S_1)		// sealring + assembly isolation
#ELSE
CHIP_CORE    = COPY CHIPx
#ENDIF

ALL_PAD = CB OR CBD
PADH      = HOLES ALL_PAD 


SCORE     = CHIP_CORE INSIDE PADH
SR_CHIP   = CHIP INTERACT SCORE
SR = SR_CHIP NOT (SIZE SR_CHIP BY -10)
SEALRING_ALL = SR OR SEALRING
SR_CB = CB AND SR
SR_CO     = CO AND SR


SR_VIA1     = VIA1 AND SR
SR_VIA2     = VIA2 AND SR
SR_VIA3     = VIA3 AND SR
SR_VIA4     = VIA4 AND SR
SR_M1 		= M1 AND SR
SR_M2 		= M2 AND SR
SR_M3 		= M3 AND SR
SR_M4 		= M4 AND SR
SR_M5 		= M5 AND SR

// For SEAL-RING and CHIP CORNER checks.
CHIP_WISR    = CHIPx INTERACT SCORE
SR_EDGE      = CHIP_WISR NOT SCORE 
CHIP_NOSR    = CHIPx NOT INTERACT SR_EDGE
CHIP_NOSR1   = COPY CHIP_NOSR
CHIP_NOSR2   = COPY CHIP_NOSR
CHIP_NOSR3   = COPY CHIP_NOSR
SR_EDGE1     = COPY SR_EDGE 
SR_EDGE2     = COPY SR_EDGE 
SR_EDGE3     = COPY SR_EDGE 
#IFDEF FULL_CHIP
#IFDEF BigSealringCorner
// without seal-ring
EMPTY_AREA     = INT CHIP_NOSR1 < 350 ABUT == 90 REGION INTERSECTING ONLY
// with seal-ring
SR_EXC  = EXT SR_EDGE1 < 350 ABUT == 90 REGION INTERSECTING ONLY
#ELSE
#IFDEF SmallSealringCorner
// without seal-ring
EMPTY_AREA     = INT CHIP_NOSR2 < 125 ABUT == 90 REGION INTERSECTING ONLY
// with seal-ring
SR_EXC  = EXT SR_EDGE2 < 125 ABUT == 90 REGION INTERSECTING ONLY 
#ELSE  // not specify seal-ring structure, use BigSealringCorner
// without seal-ring
EMPTY_AREA     = INT CHIP_NOSR3 < 350 ABUT == 90 REGION INTERSECTING ONLY
// with seal-ring
SR_EXC  = EXT SR_EDGE3 < 350 ABUT == 90 REGION INTERSECTING ONLY 
#ENDIF
#ENDIF
SRCSR   = SR_EDGE OR SR_EXC   // Sealring + Corner + Assembly isolation
CHIP_CHAMFERED = (CHIPx NOT EMPTY_AREA) NOT SRCSR
CHIP_EDGE = CHIPx NOT SR_EDGE
ASS_REGION = (SIZE CHIP_EDGE BY SR_S_1) NOT CHIP_EDGE
#ENDIF  //FULL_CHIP
#IFNDEF FULL_CHIP
ASS_REGION = COPY EMPTYi 
#ENDIF
SR_VIAD     = VIAD AND SR

SBDOD    = ( OD AND SBDDMY ) AND NWEL

NW_SBD   = NWEL INTERACT SBDOD
DNW_SBD   = DNW INTERACT SBDOD

PP_SBD   = PP INTERACT SBDOD 
PP_SBD_HOLE = HOLES PP_SBD INNER
PP_SBD_ALL = PP_SBD OR PP_SBD_HOLE

PP_NSBD = PP NOT PP_SBD

PPOD_SBD = SBDOD INTERACT PP
NPOD_SBD = SBDOD AND NP

PPOD_SBD_GAP = EXPAND EDGE PPOD_SBD OUTSIDE BY 0.48
PPOD_SBD_G   = PPOD_SBD_GAP TOUCH NPOD_SBD
NPOD_SBD_GAP = EXPAND EDGE NPOD_SBD OUTSIDE BY 0.48
NPOD_SBD_G   = NPOD_SBD_GAP TOUCH PPOD_SBD

SBDOD_ALL = ( PPOD_SBD OR NPOD_SBD ) OR PPOD_SBD_G 

PPOD_SBD_W = PPOD_SBD TOUCH OUTSIDE EDGE NPOD_SBD_G
PPOD_SBD_L = PPOD_SBD NOT TOUCH OUTSIDE EDGE NPOD_SBD_G
NPOD_SBD_W = NPOD_SBD TOUCH OUTSIDE EDGE PPOD_SBD_G


CHIPx        = MERGE CHIP

// BUILD CONNECTION FOR RULE CHECKS 
//---------------------------------
CONNECT	NTAPi N_WELLSi
CONNECT	NTAPi NWELi
CONNECT   NTAPi HVNWi
CONNECT   NTAPi HVSHNi
CONNECT   PTAPi P_WELLSi
CONNECT   PTAPi HVPWi
CONNECT    NBLi NTAPi_NBL
CONNECT    NTAPi NTAPi_NBL
CONNECT	NTAPi PSDi
CONNECT	PTAPi NSDi
CONNECT	M1xd ILP1i NTAPi PTAPi PSDi NSDi BY COi
CONNECT	M1xd M2xd BY VIA1ii
CONNECT CTM1i M2xd BY CTM_VIA1i
CONNECT	M2xd M3xd BY VIA2ii
CONNECT CTM2i M3xd BY CTM_VIA2i
CONNECT	M3xd M4xd BY VIA3ii
CONNECT CTM3i M4xd BY CTM_VIA3i
CONNECT	M4xd M5xd BY VIA4ii
CONNECT CTM4i M5xd BY CTM_VIA4i
CONNECT	M5xd  MDxd BY VIADi







EMPTY_w = CHIP NOT (SIZE CHIP BY 9.0) 
NBL_w = NBLu OR EMPTY_w
NTAP_w_NBL = NTAPu_NBL OR EMPTY_w
NWEL_w = NWELu  OR EMPTY_w 
NTAP_w = NTAPu OR EMPTY_w
PTAP_w = PTAPu OR EMPTY_w
PSD_w = PSDu OR EMPTY_w
NSD_w = NSDu OR EMPTY_w
ILP1_w = ILP1u OR EMPTY_w
CO_w = COu OR EMPTY_w
M1_w = M1u OR EMPTY_w
M0_w = M0u OR EMPTY_w
MSI_w = MSIu OR EMPTY_w
SICR_V1_w = SICR_V1u OR EMPTY_w
VIA1_w =  VIA1uu OR EMPTY_w
M2_w   =  M2u OR EMPTY_w
VIA2_w =  VIA2uu OR EMPTY_w
M3_w   =  M3u OR EMPTY_w
VIA3_w =  VIA3uu OR EMPTY_w
M4_w   =  M4u OR EMPTY_w
VIA4_w =  VIA4uu OR EMPTY_w
M5_w   =  M5u OR EMPTY_w
MD_w = MDu OR EMPTY_w
VIAD_w  = VIADu OR EMPTY_w
CTM1_w = CTM1u OR EMPTY_w
CTM_VIA1_w = CTM_VIA1u OR EMPTY_w
CTM2_w = CTM2u OR EMPTY_w
CTM_VIA2_w = CTM_VIA2u OR EMPTY_w
CTM3_w = CTM3u OR EMPTY_w
CTM_VIA3_w = CTM_VIA3u OR EMPTY_w
CTM4_w = CTM4u OR EMPTY_w
CTM_VIA4_w = CTM_VIA4u OR EMPTY_w
CB_w = CBu OR EMPTY_w
CBD_w = CBDu OR EMPTY_w
PPI_w = PPIu OR EMPTY_w
UBMn_w = UBMnu OR EMPTY_w
UBMd_w = UBMdu OR EMPTY_w

CONNECT    NBL_w NTAP_w_NBL
CONNECT    NTAP_w NTAP_w_NBL
CONNECT	NTAP_w NWEL_w
CONNECT	NTAP_w PSD_w
CONNECT	PTAP_w NSD_w
CONNECT	M1_w ILP1_w NTAP_w PTAP_w PSD_w NSD_w BY CO_w
CONNECT M2_w M0_w BY SICR_V1_w
CONNECT MSI_w M0_w
CONNECT	M1_w M2_w BY VIA1_w
CONNECT CTM1_w M2_w BY CTM_VIA1_w
CONNECT	M2_w M3_w BY VIA2_w
CONNECT CTM2_w M3_w BY CTM_VIA2_w
CONNECT	M3_w M4_w BY VIA3_w
CONNECT CTM3_w M4_w BY CTM_VIA3_w
CONNECT	M4_w M5_w BY VIA4_w
CONNECT CTM4_w M5_w BY CTM_VIA4_w
CONNECT	M5_w  MD_w BY VIAD_w
CONNECT M5_w CB_w
CONNECT M5_w UBMn_w BY CBD_w
CONNECT MD_w UBMd_w
CONNECT M5_w PPI_w BY CBD_w
CONNECT PPI_w UBMd_w







































































































VARIABLE CellsFor1nmGrid " "      // Specify Cells for 1nm grid check
#IFDEF Recommend
G.1:UBMi { @ grid must be an integer multiple of ^Grid um
           @ waive polygon with vertex number >= 100
  X = NOT INSIDE CELL UBMi CellsFor1nmGrid
  A = VERTEX X < 100
  OFFGRID A G_1
}
G.1:CBDi { @ grid must be an integer multiple of ^Grid um
           @ waive polygon with vertex number >= 100
  X = NOT INSIDE CELL CBDi CellsFor1nmGrid
  A = VERTEX X < 100	    
  OFFGRID A G_1
}
G.1:PLMIDEi { @ grid must be an integer multiple of ^GRID um
          @ waive polygon with vertex number >= 100
  X = NOT INSIDE CELL PLMIDEi CellsFor1nmGrid
  A = VERTEX X < 100
  OFFGRID A G_1
}
G.1:PM1i { @ grid must be an integer multiple of ^Grid um
          @ waive polygon with vertex number >= 100
  X = NOT INSIDE CELL PM1 CellsFor1nmGrid
  A = VERTEX X < 100
  OFFGRID A G_1
}
G.1:Cu_PPIi { @ grid must be an integer multiple of ^Grid um
          @ waive polygon with vertex number >= 100
  X = NOT INSIDE CELL Cu_PPIi CellsFor1nmGrid
  A = VERTEX X < 100
  OFFGRID A G_1
}
G.1:NWELi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL NWELi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DIFFi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DIFFi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:EODi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL EODi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DOD { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DOD CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:ODBLK { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL ODBLK CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:PDIFFi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL PDIFFi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:NDIFFi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL NDIFFi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:OD2i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL OD2i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:POLYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL POLYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DPO { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DPO CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:POBLK { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL POBLK CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:FPOi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL FPOi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:SLITDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL SLITDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:LVPWRDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL LVPWRDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVSW28BVDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVSW28BVDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVSW40BVDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVSW40BVDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVSW50BVDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVSW50BVDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:FGDDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL FGDDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:BIAS25VNDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL BIAS25VNDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:YMCCEL { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL YMCCEL CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:YMCCAP { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL YMCCAP CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVPWELLi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVPWELLi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HRI3D3KDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HRI3D3KDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVESD1DMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVESD1DMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVESD2DMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVESD2DMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:NBLSLOTi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL NBLSLOTi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:CFPi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL CFPi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:NT_N2i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL NT_N2i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:PPi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL PPi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:NPi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL NPi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MCEL { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MCEL CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MTP_2T2C { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MTP_2T2C CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:H18NWDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL H18NWDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:NLVTi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL NLVTi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DTi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DTi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DTBLK { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DTBLK CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:FLASH { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL FLASH CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DSDIO { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DSDIO CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:VHRIi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL VHRIi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MACRODMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MACRODMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RWDUMMY_PURE5V { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RWDUMMY_PURE5V CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RPDUMMY_PURE5V { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RPDUMMY_PURE5V CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RES5VDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RES5VDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RESHVDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RESHVDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:VTDNi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL VTDNi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:PSUBi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL PSUBi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:SERPDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL SERPDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:CK3DMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL CK3DMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVNWi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVNWi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:NBLi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL NBLi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVPBi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVPBi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:BJT4TDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL BJT4TDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:BJT5TDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL BJT5TDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:BJT7TDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL BJT7TDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:BJTMDDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL BJTMDDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:BJTMEDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL BJTMEDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:BJTSNDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL BJTSNDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MOMDMY_ALL { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MOMDMY_ALL CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MOMDMY_100 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MOMDMY_100 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MOMDMY_0 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MOMDMY_0 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MOMDMY_27 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MOMDMY_27 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MOMDMY_1 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MOMDMY_1 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MOMDMY_2 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MOMDMY_2 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MOMDMY_3 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MOMDMY_3 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MOMDMY_4 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MOMDMY_4 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MOMDMY_5 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MOMDMY_5 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:PDDi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL PDDi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:NDDi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL NDDi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RW4TDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RW4TDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVOXi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVOXi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:CSRDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL CSRDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:ROXi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL ROXi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:SH_Pi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL SH_Pi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DPWi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DPWi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVDMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVDMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVGAi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVGAi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVGBi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVGBi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV5DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV5DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV6DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV6DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV7DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV7DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV8DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV8DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVMOSPAIR { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVMOSPAIR CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV9DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV9DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV12DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV12DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV16DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV16DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV20DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV20DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV24DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV24DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV29DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV29DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV36DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV36DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV45DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV45DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV55DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV55DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV65DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV65DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV70DMYi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV70DMYi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVLOWR { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVLOWR CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV8ISOi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV8ISOi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV9ISOi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV9ISOi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV29ISOi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV29ISOi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV45ISOi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV45ISOi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HV70ISOi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HV70ISOi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:EMRDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL EMRDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVSHNi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVSHNi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DIO3TDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DIO3TDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DIO4TDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DIO4TDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:SBD3TDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL SBD3TDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVPB2i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVPB2i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:PDD2i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL PDD2i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVNBi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVNBi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:G2OXi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL G2OXi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HVG2DMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HVG2DMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:BJTDUMMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL BJTDUMMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DIODUMMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DIODUMMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RPDUMMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RPDUMMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:COi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL COi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M1i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M1i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:VIA1i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL VIA1i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M2i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M2i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:VIA2i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL VIA2i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M3i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M3i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:VIA3i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL VIA3i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M4i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M4i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:VIA4i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL VIA4i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M5i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M5i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:VIADi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL VIADi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MDi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MDi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:CB2i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL CB2i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RVi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RVi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:APi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL APi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:PM2 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL PM2 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:CBi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL CBi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:PPIi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL PPIi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RPOi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RPOi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:NTNi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL NTNi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DNWi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DNWi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:VTMPi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL VTMPi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:VTMNi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL VTMNi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:PV_P { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL PV_P CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:PV_N { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL PV_N CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HRIi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HRIi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M1DMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M1DMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M2DMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M2DMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M3DMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M3DMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M4DMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M4DMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M5DMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M5DMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MDDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MDDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M1SLOTi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M1SLOTi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M2SLOTi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M2SLOTi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M3SLOTi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M3SLOTi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M4SLOTi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M4SLOTi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M5SLOTi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M5SLOTi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MDSLOTi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MDSLOTi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:CTM1i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL CTM1i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:CTM2i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL CTM2i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:CTM3i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL CTM3i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:CTM4i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL CTM4i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:CTM5i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL CTM5i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:HOTWL { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL HOTWL CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:EXCLi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL EXCLi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DRCDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DRCDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RWDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RWDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DPDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DPDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:PLDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL PLDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:SDI { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL SDI CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:ESD1DMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL ESD1DMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:ESD2DMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL ESD2DMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:ESD3DMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL ESD3DMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:CTMDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL CTMDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RLPPDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RLPPDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DMN2V { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DMN2V CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DMP2V { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DMP2V CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:VARDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL VARDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:PMDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL PMDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:FWi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL FWi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:LMARK { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL LMARK CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:LWI { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL LWI CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:WBDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL WBDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:ESDi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL ESDi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:ESDIMPi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL ESDIMPi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:INDDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL INDDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:SEALRING { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL SEALRING CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:LOGO { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL LOGO CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:LUPWDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL LUPWDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:LUPWDMY_2 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL LUPWDMY_2 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:SBDDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL SBDDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RFDUMMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RFDUMMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RES200 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RES200 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MATCHING { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MATCHING CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RMDUMMY1 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RMDUMMY1 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RMDUMMY2 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RMDUMMY2 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RMDUMMY3 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RMDUMMY3 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RMDUMMY4 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RMDUMMY4 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RMDUMMY5 { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RMDUMMY5 CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:VDDDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL VDDDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:VSSDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL VSSDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:TSVi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL TSVi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:STRAPDMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL STRAPDMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:NONLDDi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL NONLDDi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:RSEPDUMMY { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL RSEPDUMMY CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:MSIi { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL MSIi CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:M0i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL M0i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:SICR_V1i { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL SICR_V1i CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DM1EXCL { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DM1EXCL CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DM2EXCL { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DM2EXCL CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DM3EXCL { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DM3EXCL CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DM4EXCL { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DM4EXCL CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DM5EXCL { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DM5EXCL CellsFor1nmGrid  
  OFFGRID X G_1
}
G.1:DMDEXCL { @ grid must be an integer multiple of ^GRID um, excluding the cell-list of CellsFor1nmGrid.
  X = NOT INSIDE CELL DMDEXCL CellsFor1nmGrid  
  OFFGRID X G_1
}
G.2:NWELi { @ NWELi shapes with acute angles between line segments are not allowed.
  INT NWELi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT NWELi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DIFFi { @ DIFFi shapes with acute angles between line segments are not allowed.
  INT DIFFi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DIFFi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:EODi { @ EODi shapes with acute angles between line segments are not allowed.
  INT EODi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT EODi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DOD { @ DOD shapes with acute angles between line segments are not allowed.
  INT DOD < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DOD < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:ODBLK { @ ODBLK shapes with acute angles between line segments are not allowed.
  INT ODBLK < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT ODBLK < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:PDIFFi { @ PDIFFi shapes with acute angles between line segments are not allowed.
  INT PDIFFi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT PDIFFi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:NDIFFi { @ NDIFFi shapes with acute angles between line segments are not allowed.
  INT NDIFFi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT NDIFFi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:OD2i { @ OD2i shapes with acute angles between line segments are not allowed.
  INT OD2i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT OD2i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:POLYi { @ POLYi shapes with acute angles between line segments are not allowed.
  INT POLYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT POLYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DPO { @ DPO shapes with acute angles between line segments are not allowed.
  INT DPO < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DPO < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:POBLK { @ POBLK shapes with acute angles between line segments are not allowed.
  INT POBLK < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT POBLK < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:FPOi { @ FPOi shapes with acute angles between line segments are not allowed.
  INT FPOi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT FPOi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:SLITDMY { @ SLITDMY shapes with acute angles between line segments are not allowed.
  INT SLITDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT SLITDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:LVPWRDMY { @ LVPWRDMY shapes with acute angles between line segments are not allowed.
  INT LVPWRDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT LVPWRDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVSW28BVDMY { @ HVSW28BVDMY shapes with acute angles between line segments are not allowed.
  INT HVSW28BVDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVSW28BVDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVSW40BVDMY { @ HVSW40BVDMY shapes with acute angles between line segments are not allowed.
  INT HVSW40BVDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVSW40BVDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVSW50BVDMY { @ HVSW50BVDMY shapes with acute angles between line segments are not allowed.
  INT HVSW50BVDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVSW50BVDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:FGDDMY { @ FGDDMY shapes with acute angles between line segments are not allowed.
  INT FGDDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT FGDDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:BIAS25VNDMY { @ BIAS25VNDMY shapes with acute angles between line segments are not allowed.
  INT BIAS25VNDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT BIAS25VNDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:YMCCEL { @ YMCCEL shapes with acute angles between line segments are not allowed.
  INT YMCCEL < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT YMCCEL < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:YMCCAP { @ YMCCAP shapes with acute angles between line segments are not allowed.
  INT YMCCAP < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT YMCCAP < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVPWELLi { @ HVPWELLi shapes with acute angles between line segments are not allowed.
  INT HVPWELLi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVPWELLi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HRI3D3KDMY { @ HRI3D3KDMY shapes with acute angles between line segments are not allowed.
  INT HRI3D3KDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HRI3D3KDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVESD1DMY { @ HVESD1DMY shapes with acute angles between line segments are not allowed.
  INT HVESD1DMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVESD1DMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVESD2DMY { @ HVESD2DMY shapes with acute angles between line segments are not allowed.
  INT HVESD2DMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVESD2DMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:NBLSLOTi { @ NBLSLOTi shapes with acute angles between line segments are not allowed.
  INT NBLSLOTi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT NBLSLOTi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:CFPi { @ CFPi shapes with acute angles between line segments are not allowed.
  INT CFPi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT CFPi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:NT_N2i { @ NT_N2i shapes with acute angles between line segments are not allowed.
  INT NT_N2i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT NT_N2i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:PPi { @ PPi shapes with acute angles between line segments are not allowed.
  INT PPi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT PPi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:NPi { @ NPi shapes with acute angles between line segments are not allowed.
  INT NPi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT NPi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MCEL { @ MCEL shapes with acute angles between line segments are not allowed.
  INT MCEL < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MCEL < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MTP_2T2C { @ MTP_2T2C shapes with acute angles between line segments are not allowed.
  INT MTP_2T2C < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MTP_2T2C < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:H18NWDMY { @ H18NWDMY shapes with acute angles between line segments are not allowed.
  INT H18NWDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT H18NWDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:NLVTi { @ NLVTi shapes with acute angles between line segments are not allowed.
  INT NLVTi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT NLVTi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DTi { @ DTi shapes with acute angles between line segments are not allowed.
  INT DTi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DTi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DTBLK { @ DTBLK shapes with acute angles between line segments are not allowed.
  INT DTBLK < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DTBLK < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:FLASH { @ FLASH shapes with acute angles between line segments are not allowed.
  INT FLASH < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT FLASH < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DSDIO { @ DSDIO shapes with acute angles between line segments are not allowed.
  INT DSDIO < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DSDIO < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:VHRIi { @ VHRIi shapes with acute angles between line segments are not allowed.
  INT VHRIi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT VHRIi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MACRODMY { @ MACRODMY shapes with acute angles between line segments are not allowed.
  INT MACRODMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MACRODMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RWDUMMY_PURE5V { @ RWDUMMY_PURE5V shapes with acute angles between line segments are not allowed.
  INT RWDUMMY_PURE5V < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RWDUMMY_PURE5V < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RPDUMMY_PURE5V { @ RPDUMMY_PURE5V shapes with acute angles between line segments are not allowed.
  INT RPDUMMY_PURE5V < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RPDUMMY_PURE5V < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RES5VDMY { @ RES5VDMY shapes with acute angles between line segments are not allowed.
  INT RES5VDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RES5VDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RESHVDMY { @ RESHVDMY shapes with acute angles between line segments are not allowed.
  INT RESHVDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RESHVDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:VTDNi { @ VTDNi shapes with acute angles between line segments are not allowed.
  INT VTDNi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT VTDNi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:PSUBi { @ PSUBi shapes with acute angles between line segments are not allowed.
  INT PSUBi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT PSUBi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:SERPDMY { @ SERPDMY shapes with acute angles between line segments are not allowed.
  INT SERPDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT SERPDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:CK3DMY { @ CK3DMY shapes with acute angles between line segments are not allowed.
  INT CK3DMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT CK3DMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVNWi { @ HVNWi shapes with acute angles between line segments are not allowed.
  INT HVNWi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVNWi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:NBLi { @ NBLi shapes with acute angles between line segments are not allowed.
  INT NBLi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT NBLi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVPBi { @ HVPBi shapes with acute angles between line segments are not allowed.
  INT HVPBi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVPBi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:BJT4TDMY { @ BJT4TDMY shapes with acute angles between line segments are not allowed.
  INT BJT4TDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT BJT4TDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:BJT5TDMY { @ BJT5TDMY shapes with acute angles between line segments are not allowed.
  INT BJT5TDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT BJT5TDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:BJT7TDMY { @ BJT7TDMY shapes with acute angles between line segments are not allowed.
  INT BJT7TDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT BJT7TDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:BJTMDDMY { @ BJTMDDMY shapes with acute angles between line segments are not allowed.
  INT BJTMDDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT BJTMDDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:BJTMEDMY { @ BJTMEDMY shapes with acute angles between line segments are not allowed.
  INT BJTMEDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT BJTMEDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:BJTSNDMY { @ BJTSNDMY shapes with acute angles between line segments are not allowed.
  INT BJTSNDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT BJTSNDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MOMDMY_ALL { @ MOMDMY_ALL shapes with acute angles between line segments are not allowed.
  INT MOMDMY_ALL < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MOMDMY_ALL < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MOMDMY_100 { @ MOMDMY_100 shapes with acute angles between line segments are not allowed.
  INT MOMDMY_100 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MOMDMY_100 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MOMDMY_0 { @ MOMDMY_0 shapes with acute angles between line segments are not allowed.
  INT MOMDMY_0 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MOMDMY_0 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MOMDMY_27 { @ MOMDMY_27 shapes with acute angles between line segments are not allowed.
  INT MOMDMY_27 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MOMDMY_27 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MOMDMY_1 { @ MOMDMY_1 shapes with acute angles between line segments are not allowed.
  INT MOMDMY_1 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MOMDMY_1 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MOMDMY_2 { @ MOMDMY_2 shapes with acute angles between line segments are not allowed.
  INT MOMDMY_2 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MOMDMY_2 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MOMDMY_3 { @ MOMDMY_3 shapes with acute angles between line segments are not allowed.
  INT MOMDMY_3 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MOMDMY_3 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MOMDMY_4 { @ MOMDMY_4 shapes with acute angles between line segments are not allowed.
  INT MOMDMY_4 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MOMDMY_4 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MOMDMY_5 { @ MOMDMY_5 shapes with acute angles between line segments are not allowed.
  INT MOMDMY_5 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MOMDMY_5 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:PDDi { @ PDDi shapes with acute angles between line segments are not allowed.
  INT PDDi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT PDDi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:NDDi { @ NDDi shapes with acute angles between line segments are not allowed.
  INT NDDi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT NDDi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RW4TDMY { @ RW4TDMY shapes with acute angles between line segments are not allowed.
  INT RW4TDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RW4TDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVOXi { @ HVOXi shapes with acute angles between line segments are not allowed.
  INT HVOXi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVOXi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:CSRDMY { @ CSRDMY shapes with acute angles between line segments are not allowed.
  INT CSRDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT CSRDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:ROXi { @ ROXi shapes with acute angles between line segments are not allowed.
  INT ROXi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT ROXi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:SH_Pi { @ SH_Pi shapes with acute angles between line segments are not allowed.
  INT SH_Pi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT SH_Pi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DPWi { @ DPWi shapes with acute angles between line segments are not allowed.
  INT DPWi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DPWi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVDMYi { @ HVDMYi shapes with acute angles between line segments are not allowed.
  INT HVDMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVDMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVGAi { @ HVGAi shapes with acute angles between line segments are not allowed.
  INT HVGAi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVGAi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVGBi { @ HVGBi shapes with acute angles between line segments are not allowed.
  INT HVGBi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVGBi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV5DMYi { @ HV5DMYi shapes with acute angles between line segments are not allowed.
  INT HV5DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV5DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV6DMYi { @ HV6DMYi shapes with acute angles between line segments are not allowed.
  INT HV6DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV6DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV7DMYi { @ HV7DMYi shapes with acute angles between line segments are not allowed.
  INT HV7DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV7DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV8DMYi { @ HV8DMYi shapes with acute angles between line segments are not allowed.
  INT HV8DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV8DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVMOSPAIR { @ HVMOSPAIR shapes with acute angles between line segments are not allowed.
  INT HVMOSPAIR < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVMOSPAIR < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV9DMYi { @ HV9DMYi shapes with acute angles between line segments are not allowed.
  INT HV9DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV9DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV12DMYi { @ HV12DMYi shapes with acute angles between line segments are not allowed.
  INT HV12DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV12DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV16DMYi { @ HV16DMYi shapes with acute angles between line segments are not allowed.
  INT HV16DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV16DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV20DMYi { @ HV20DMYi shapes with acute angles between line segments are not allowed.
  INT HV20DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV20DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV24DMYi { @ HV24DMYi shapes with acute angles between line segments are not allowed.
  INT HV24DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV24DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV29DMYi { @ HV29DMYi shapes with acute angles between line segments are not allowed.
  INT HV29DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV29DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV36DMYi { @ HV36DMYi shapes with acute angles between line segments are not allowed.
  INT HV36DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV36DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV45DMYi { @ HV45DMYi shapes with acute angles between line segments are not allowed.
  INT HV45DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV45DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV55DMYi { @ HV55DMYi shapes with acute angles between line segments are not allowed.
  INT HV55DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV55DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV65DMYi { @ HV65DMYi shapes with acute angles between line segments are not allowed.
  INT HV65DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV65DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV70DMYi { @ HV70DMYi shapes with acute angles between line segments are not allowed.
  INT HV70DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV70DMYi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVLOWR { @ HVLOWR shapes with acute angles between line segments are not allowed.
  INT HVLOWR < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVLOWR < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV8ISOi { @ HV8ISOi shapes with acute angles between line segments are not allowed.
  INT HV8ISOi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV8ISOi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV9ISOi { @ HV9ISOi shapes with acute angles between line segments are not allowed.
  INT HV9ISOi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV9ISOi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV29ISOi { @ HV29ISOi shapes with acute angles between line segments are not allowed.
  INT HV29ISOi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV29ISOi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV45ISOi { @ HV45ISOi shapes with acute angles between line segments are not allowed.
  INT HV45ISOi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV45ISOi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HV70ISOi { @ HV70ISOi shapes with acute angles between line segments are not allowed.
  INT HV70ISOi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HV70ISOi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:EMRDMY { @ EMRDMY shapes with acute angles between line segments are not allowed.
  INT EMRDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT EMRDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVSHNi { @ HVSHNi shapes with acute angles between line segments are not allowed.
  INT HVSHNi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVSHNi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DIO3TDMY { @ DIO3TDMY shapes with acute angles between line segments are not allowed.
  INT DIO3TDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DIO3TDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DIO4TDMY { @ DIO4TDMY shapes with acute angles between line segments are not allowed.
  INT DIO4TDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DIO4TDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:SBD3TDMY { @ SBD3TDMY shapes with acute angles between line segments are not allowed.
  INT SBD3TDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT SBD3TDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVPB2i { @ HVPB2i shapes with acute angles between line segments are not allowed.
  INT HVPB2i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVPB2i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:PDD2i { @ PDD2i shapes with acute angles between line segments are not allowed.
  INT PDD2i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT PDD2i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVNBi { @ HVNBi shapes with acute angles between line segments are not allowed.
  INT HVNBi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVNBi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:G2OXi { @ G2OXi shapes with acute angles between line segments are not allowed.
  INT G2OXi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT G2OXi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HVG2DMY { @ HVG2DMY shapes with acute angles between line segments are not allowed.
  INT HVG2DMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HVG2DMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:BJTDUMMY { @ BJTDUMMY shapes with acute angles between line segments are not allowed.
  INT BJTDUMMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT BJTDUMMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DIODUMMY { @ DIODUMMY shapes with acute angles between line segments are not allowed.
  INT DIODUMMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DIODUMMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RPDUMMY { @ RPDUMMY shapes with acute angles between line segments are not allowed.
  INT RPDUMMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RPDUMMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:COi { @ COi shapes with acute angles between line segments are not allowed.
  INT COi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT COi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M1i { @ M1i shapes with acute angles between line segments are not allowed.
  INT M1i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M1i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:VIA1i { @ VIA1i shapes with acute angles between line segments are not allowed.
  INT VIA1i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT VIA1i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M2i { @ M2i shapes with acute angles between line segments are not allowed.
  INT M2i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M2i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:VIA2i { @ VIA2i shapes with acute angles between line segments are not allowed.
  INT VIA2i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT VIA2i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M3i { @ M3i shapes with acute angles between line segments are not allowed.
  INT M3i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M3i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:VIA3i { @ VIA3i shapes with acute angles between line segments are not allowed.
  INT VIA3i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT VIA3i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M4i { @ M4i shapes with acute angles between line segments are not allowed.
  INT M4i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M4i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:VIA4i { @ VIA4i shapes with acute angles between line segments are not allowed.
  INT VIA4i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT VIA4i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M5i { @ M5i shapes with acute angles between line segments are not allowed.
  INT M5i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M5i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:VIADi { @ VIADi shapes with acute angles between line segments are not allowed.
  INT VIADi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT VIADi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MDi { @ MDi shapes with acute angles between line segments are not allowed.
  INT MDi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MDi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:CB2i { @ CB2i shapes with acute angles between line segments are not allowed.
  INT CB2i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT CB2i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RVi { @ RVi shapes with acute angles between line segments are not allowed.
  INT RVi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RVi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:APi { @ APi shapes with acute angles between line segments are not allowed.
  INT APi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT APi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:CU_PPIi { @ CU_PPIi shapes with acute angles between line segments are not allowed.
  INT CU_PPIi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT CU_PPIi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:PM1 { @ PM1 shapes with acute angles between line segments are not allowed.
  INT PM1 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT PM1 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:PM2 { @ PM2 shapes with acute angles between line segments are not allowed.
  INT PM2 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT PM2 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:CBi { @ CBi shapes with acute angles between line segments are not allowed.
  INT CBi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT CBi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:CBDi { @ CBDi shapes with acute angles between line segments are not allowed.
  INT CBDi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT CBDi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:UBMi { @ UBMi shapes with acute angles between line segments are not allowed.
  INT UBMi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT UBMi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:PPIi { @ PPIi shapes with acute angles between line segments are not allowed.
  INT PPIi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT PPIi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RPOi { @ RPOi shapes with acute angles between line segments are not allowed.
  INT RPOi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RPOi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:NTNi { @ NTNi shapes with acute angles between line segments are not allowed.
  INT NTNi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT NTNi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:PLMIDEi { @ PLMIDEi shapes with acute angles between line segments are not allowed.
  INT PLMIDEi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT PLMIDEi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DNWi { @ DNWi shapes with acute angles between line segments are not allowed.
  INT DNWi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DNWi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:VTMPi { @ VTMPi shapes with acute angles between line segments are not allowed.
  INT VTMPi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT VTMPi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:VTMNi { @ VTMNi shapes with acute angles between line segments are not allowed.
  INT VTMNi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT VTMNi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:PV_P { @ PV_P shapes with acute angles between line segments are not allowed.
  INT PV_P < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT PV_P < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:PV_N { @ PV_N shapes with acute angles between line segments are not allowed.
  INT PV_N < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT PV_N < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HRIi { @ HRIi shapes with acute angles between line segments are not allowed.
  INT HRIi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HRIi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M1DMY { @ M1DMY shapes with acute angles between line segments are not allowed.
  INT M1DMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M1DMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M2DMY { @ M2DMY shapes with acute angles between line segments are not allowed.
  INT M2DMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M2DMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M3DMY { @ M3DMY shapes with acute angles between line segments are not allowed.
  INT M3DMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M3DMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M4DMY { @ M4DMY shapes with acute angles between line segments are not allowed.
  INT M4DMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M4DMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M5DMY { @ M5DMY shapes with acute angles between line segments are not allowed.
  INT M5DMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M5DMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MDDMY { @ MDDMY shapes with acute angles between line segments are not allowed.
  INT MDDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MDDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M1SLOTi { @ M1SLOTi shapes with acute angles between line segments are not allowed.
  INT M1SLOTi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M1SLOTi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M2SLOTi { @ M2SLOTi shapes with acute angles between line segments are not allowed.
  INT M2SLOTi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M2SLOTi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M3SLOTi { @ M3SLOTi shapes with acute angles between line segments are not allowed.
  INT M3SLOTi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M3SLOTi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M4SLOTi { @ M4SLOTi shapes with acute angles between line segments are not allowed.
  INT M4SLOTi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M4SLOTi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M5SLOTi { @ M5SLOTi shapes with acute angles between line segments are not allowed.
  INT M5SLOTi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M5SLOTi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MDSLOTi { @ MDSLOTi shapes with acute angles between line segments are not allowed.
  INT MDSLOTi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MDSLOTi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:CTM1i { @ CTM1i shapes with acute angles between line segments are not allowed.
  INT CTM1i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT CTM1i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:CTM2i { @ CTM2i shapes with acute angles between line segments are not allowed.
  INT CTM2i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT CTM2i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:CTM3i { @ CTM3i shapes with acute angles between line segments are not allowed.
  INT CTM3i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT CTM3i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:CTM4i { @ CTM4i shapes with acute angles between line segments are not allowed.
  INT CTM4i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT CTM4i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:CTM5i { @ CTM5i shapes with acute angles between line segments are not allowed.
  INT CTM5i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT CTM5i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:HOTWL { @ HOTWL shapes with acute angles between line segments are not allowed.
  INT HOTWL < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT HOTWL < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:EXCLi { @ EXCLi shapes with acute angles between line segments are not allowed.
  INT EXCLi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT EXCLi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DRCDMY { @ DRCDMY shapes with acute angles between line segments are not allowed.
  INT DRCDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DRCDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RWDMY { @ RWDMY shapes with acute angles between line segments are not allowed.
  INT RWDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RWDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DPDMY { @ DPDMY shapes with acute angles between line segments are not allowed.
  INT DPDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DPDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:PLDMY { @ PLDMY shapes with acute angles between line segments are not allowed.
  INT PLDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT PLDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:SDI { @ SDI shapes with acute angles between line segments are not allowed.
  INT SDI < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT SDI < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:ESD1DMY { @ ESD1DMY shapes with acute angles between line segments are not allowed.
  INT ESD1DMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT ESD1DMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:ESD2DMY { @ ESD2DMY shapes with acute angles between line segments are not allowed.
  INT ESD2DMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT ESD2DMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:ESD3DMY { @ ESD3DMY shapes with acute angles between line segments are not allowed.
  INT ESD3DMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT ESD3DMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:CTMDMY { @ CTMDMY shapes with acute angles between line segments are not allowed.
  INT CTMDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT CTMDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RLPPDMY { @ RLPPDMY shapes with acute angles between line segments are not allowed.
  INT RLPPDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RLPPDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DMN2V { @ DMN2V shapes with acute angles between line segments are not allowed.
  INT DMN2V < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DMN2V < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DMP2V { @ DMP2V shapes with acute angles between line segments are not allowed.
  INT DMP2V < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DMP2V < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:VARDMY { @ VARDMY shapes with acute angles between line segments are not allowed.
  INT VARDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT VARDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:PMDMY { @ PMDMY shapes with acute angles between line segments are not allowed.
  INT PMDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT PMDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:FWi { @ FWi shapes with acute angles between line segments are not allowed.
  INT FWi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT FWi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:LMARK { @ LMARK shapes with acute angles between line segments are not allowed.
  INT LMARK < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT LMARK < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:LWI { @ LWI shapes with acute angles between line segments are not allowed.
  INT LWI < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT LWI < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:WBDMY { @ WBDMY shapes with acute angles between line segments are not allowed.
  INT WBDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT WBDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:ESDi { @ ESDi shapes with acute angles between line segments are not allowed.
  INT ESDi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT ESDi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:ESDIMPi { @ ESDIMPi shapes with acute angles between line segments are not allowed.
  INT ESDIMPi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT ESDIMPi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:INDDMY { @ INDDMY shapes with acute angles between line segments are not allowed.
  INT INDDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT INDDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:SEALRING { @ SEALRING shapes with acute angles between line segments are not allowed.
  INT SEALRING < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT SEALRING < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:LOGO { @ LOGO shapes with acute angles between line segments are not allowed.
  INT LOGO < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT LOGO < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:LUPWDMY { @ LUPWDMY shapes with acute angles between line segments are not allowed.
  INT LUPWDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT LUPWDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:LUPWDMY_2 { @ LUPWDMY_2 shapes with acute angles between line segments are not allowed.
  INT LUPWDMY_2 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT LUPWDMY_2 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:SBDDMY { @ SBDDMY shapes with acute angles between line segments are not allowed.
  INT SBDDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT SBDDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RFDUMMY { @ RFDUMMY shapes with acute angles between line segments are not allowed.
  INT RFDUMMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RFDUMMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RES200 { @ RES200 shapes with acute angles between line segments are not allowed.
  INT RES200 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RES200 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MATCHING { @ MATCHING shapes with acute angles between line segments are not allowed.
  INT MATCHING < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MATCHING < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RMDUMMY1 { @ RMDUMMY1 shapes with acute angles between line segments are not allowed.
  INT RMDUMMY1 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RMDUMMY1 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RMDUMMY2 { @ RMDUMMY2 shapes with acute angles between line segments are not allowed.
  INT RMDUMMY2 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RMDUMMY2 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RMDUMMY3 { @ RMDUMMY3 shapes with acute angles between line segments are not allowed.
  INT RMDUMMY3 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RMDUMMY3 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RMDUMMY4 { @ RMDUMMY4 shapes with acute angles between line segments are not allowed.
  INT RMDUMMY4 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RMDUMMY4 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RMDUMMY5 { @ RMDUMMY5 shapes with acute angles between line segments are not allowed.
  INT RMDUMMY5 < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RMDUMMY5 < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:VDDDMY { @ VDDDMY shapes with acute angles between line segments are not allowed.
  INT VDDDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT VDDDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:VSSDMY { @ VSSDMY shapes with acute angles between line segments are not allowed.
  INT VSSDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT VSSDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:TSVi { @ TSVi shapes with acute angles between line segments are not allowed.
  INT TSVi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT TSVi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:STRAPDMY { @ STRAPDMY shapes with acute angles between line segments are not allowed.
  INT STRAPDMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT STRAPDMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:NONLDDi { @ NONLDDi shapes with acute angles between line segments are not allowed.
  INT NONLDDi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT NONLDDi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:RSEPDUMMY { @ RSEPDUMMY shapes with acute angles between line segments are not allowed.
  INT RSEPDUMMY < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT RSEPDUMMY < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:MSIi { @ MSIi shapes with acute angles between line segments are not allowed.
  INT MSIi < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT MSIi < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:M0i { @ M0i shapes with acute angles between line segments are not allowed.
  INT M0i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT M0i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:SICR_V1i { @ SICR_V1i shapes with acute angles between line segments are not allowed.
  INT SICR_V1i < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT SICR_V1i < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DM1EXCL { @ DM1EXCL shapes with acute angles between line segments are not allowed.
  INT DM1EXCL < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DM1EXCL < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DM2EXCL { @ DM2EXCL shapes with acute angles between line segments are not allowed.
  INT DM2EXCL < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DM2EXCL < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DM3EXCL { @ DM3EXCL shapes with acute angles between line segments are not allowed.
  INT DM3EXCL < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DM3EXCL < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DM4EXCL { @ DM4EXCL shapes with acute angles between line segments are not allowed.
  INT DM4EXCL < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DM4EXCL < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DM5EXCL { @ DM5EXCL shapes with acute angles between line segments are not allowed.
  INT DM5EXCL < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DM5EXCL < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.2:DMDEXCL { @ DMDEXCL shapes with acute angles between line segments are not allowed.
  INT DMDEXCL < 0.1 ABUT < 90 INTERSECTING ONLY
  EXT DMDEXCL < 0.1 ABUT < 90 INTERSECTING ONLY
}
G.3:NWELi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE NWELi >0 <90
  NOT ANGLE Y == 45
}
G.3:DIFFi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DIFFi >0 <90
  NOT ANGLE Y == 45
}
G.3:EODi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE EODi >0 <90
  NOT ANGLE Y == 45
}
G.3:DOD { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DOD >0 <90
  NOT ANGLE Y == 45
}
G.3:ODBLK { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE ODBLK >0 <90
  NOT ANGLE Y == 45
}
G.3:PDIFFi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE PDIFFi >0 <90
  NOT ANGLE Y == 45
}
G.3:NDIFFi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE NDIFFi >0 <90
  NOT ANGLE Y == 45
}
G.3:OD2i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE OD2i >0 <90
  NOT ANGLE Y == 45
}
G.3:POLYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE POLYi >0 <90
  NOT ANGLE Y == 45
}
G.3:DPO { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DPO >0 <90
  NOT ANGLE Y == 45
}
G.3:POBLK { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE POBLK >0 <90
  NOT ANGLE Y == 45
}
G.3:FPOi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE FPOi >0 <90
  NOT ANGLE Y == 45
}
G.3:SLITDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE SLITDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:LVPWRDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE LVPWRDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:HVSW28BVDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVSW28BVDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:HVSW40BVDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVSW40BVDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:HVSW50BVDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVSW50BVDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:FGDDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE FGDDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:BIAS25VNDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE BIAS25VNDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:YMCCEL { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE YMCCEL >0 <90
  NOT ANGLE Y == 45
}
G.3:YMCCAP { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE YMCCAP >0 <90
  NOT ANGLE Y == 45
}
G.3:HVPWELLi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVPWELLi >0 <90
  NOT ANGLE Y == 45
}
G.3:HRI3D3KDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HRI3D3KDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:HVESD1DMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVESD1DMY >0 <90
  NOT ANGLE Y == 45
}
G.3:HVESD2DMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVESD2DMY >0 <90
  NOT ANGLE Y == 45
}
G.3:NBLSLOTi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE NBLSLOTi >0 <90
  NOT ANGLE Y == 45
}
G.3:CFPi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE CFPi >0 <90
  NOT ANGLE Y == 45
}
G.3:NT_N2i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE NT_N2i >0 <90
  NOT ANGLE Y == 45
}
G.3:PPi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE PPi >0 <90
  NOT ANGLE Y == 45
}
G.3:NPi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE NPi >0 <90
  NOT ANGLE Y == 45
}
G.3:MCEL { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MCEL >0 <90
  NOT ANGLE Y == 45
}
G.3:MTP_2T2C { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MTP_2T2C >0 <90
  NOT ANGLE Y == 45
}
G.3:H18NWDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE H18NWDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:NLVTi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE NLVTi >0 <90
  NOT ANGLE Y == 45
}
G.3:DTi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DTi >0 <90
  NOT ANGLE Y == 45
}
G.3:DTBLK { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DTBLK >0 <90
  NOT ANGLE Y == 45
}
G.3:FLASH { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE FLASH >0 <90
  NOT ANGLE Y == 45
}
G.3:DSDIO { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DSDIO >0 <90
  NOT ANGLE Y == 45
}
G.3:VHRIi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE VHRIi >0 <90
  NOT ANGLE Y == 45
}
G.3:MACRODMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MACRODMY >0 <90
  NOT ANGLE Y == 45
}
G.3:RWDUMMY_PURE5V { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RWDUMMY_PURE5V >0 <90
  NOT ANGLE Y == 45
}
G.3:RPDUMMY_PURE5V { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RPDUMMY_PURE5V >0 <90
  NOT ANGLE Y == 45
}
G.3:RES5VDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RES5VDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:RESHVDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RESHVDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:VTDNi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE VTDNi >0 <90
  NOT ANGLE Y == 45
}
G.3:PSUBi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE PSUBi >0 <90
  NOT ANGLE Y == 45
}
G.3:SERPDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE SERPDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:CK3DMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE CK3DMY >0 <90
  NOT ANGLE Y == 45
}
G.3:HVNWi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVNWi >0 <90
  NOT ANGLE Y == 45
}
G.3:NBLi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE NBLi >0 <90
  NOT ANGLE Y == 45
}
G.3:HVPBi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVPBi >0 <90
  NOT ANGLE Y == 45
}
G.3:BJT4TDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE BJT4TDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:BJT5TDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE BJT5TDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:BJT7TDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE BJT7TDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:BJTMDDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE BJTMDDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:BJTMEDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE BJTMEDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:BJTSNDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE BJTSNDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:MOMDMY_ALL { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MOMDMY_ALL >0 <90
  NOT ANGLE Y == 45
}
G.3:MOMDMY_100 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MOMDMY_100 >0 <90
  NOT ANGLE Y == 45
}
G.3:MOMDMY_0 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MOMDMY_0 >0 <90
  NOT ANGLE Y == 45
}
G.3:MOMDMY_27 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MOMDMY_27 >0 <90
  NOT ANGLE Y == 45
}
G.3:MOMDMY_1 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MOMDMY_1 >0 <90
  NOT ANGLE Y == 45
}
G.3:MOMDMY_2 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MOMDMY_2 >0 <90
  NOT ANGLE Y == 45
}
G.3:MOMDMY_3 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MOMDMY_3 >0 <90
  NOT ANGLE Y == 45
}
G.3:MOMDMY_4 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MOMDMY_4 >0 <90
  NOT ANGLE Y == 45
}
G.3:MOMDMY_5 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MOMDMY_5 >0 <90
  NOT ANGLE Y == 45
}
G.3:PDDi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE PDDi >0 <90
  NOT ANGLE Y == 45
}
G.3:NDDi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE NDDi >0 <90
  NOT ANGLE Y == 45
}
G.3:RW4TDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RW4TDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:HVOXi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVOXi >0 <90
  NOT ANGLE Y == 45
}
G.3:CSRDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE CSRDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:ROXi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE ROXi >0 <90
  NOT ANGLE Y == 45
}
G.3:SH_Pi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE SH_Pi >0 <90
  NOT ANGLE Y == 45
}
G.3:DPWi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DPWi >0 <90
  NOT ANGLE Y == 45
}
G.3:HVDMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVDMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HVGAi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVGAi >0 <90
  NOT ANGLE Y == 45
}
G.3:HVGBi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVGBi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV5DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV5DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV6DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV6DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV7DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV7DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV8DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV8DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HVMOSPAIR { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVMOSPAIR >0 <90
  NOT ANGLE Y == 45
}
G.3:HV9DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV9DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV12DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV12DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV16DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV16DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV20DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV20DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV24DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV24DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV29DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV29DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV36DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV36DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV45DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV45DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV55DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV55DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV65DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV65DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV70DMYi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV70DMYi >0 <90
  NOT ANGLE Y == 45
}
G.3:HVLOWR { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVLOWR >0 <90
  NOT ANGLE Y == 45
}
G.3:HV8ISOi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV8ISOi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV9ISOi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV9ISOi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV29ISOi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV29ISOi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV45ISOi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV45ISOi >0 <90
  NOT ANGLE Y == 45
}
G.3:HV70ISOi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HV70ISOi >0 <90
  NOT ANGLE Y == 45
}
G.3:EMRDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE EMRDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:HVSHNi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVSHNi >0 <90
  NOT ANGLE Y == 45
}
G.3:DIO3TDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DIO3TDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:DIO4TDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DIO4TDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:SBD3TDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE SBD3TDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:HVPB2i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVPB2i >0 <90
  NOT ANGLE Y == 45
}
G.3:PDD2i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE PDD2i >0 <90
  NOT ANGLE Y == 45
}
G.3:HVNBi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVNBi >0 <90
  NOT ANGLE Y == 45
}
G.3:G2OXi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE G2OXi >0 <90
  NOT ANGLE Y == 45
}
G.3:HVG2DMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HVG2DMY >0 <90
  NOT ANGLE Y == 45
}
G.3:BJTDUMMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE BJTDUMMY >0 <90
  NOT ANGLE Y == 45
}
G.3:DIODUMMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DIODUMMY >0 <90
  NOT ANGLE Y == 45
}
G.3:RPDUMMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RPDUMMY >0 <90
  NOT ANGLE Y == 45
}
G.3:COi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE COi >0 <90
  NOT ANGLE Y == 45
}
G.3:M1i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M1i >0 <90
  NOT ANGLE Y == 45
}
G.3:VIA1i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE VIA1i >0 <90
  NOT ANGLE Y == 45
}
G.3:M2i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M2i >0 <90
  NOT ANGLE Y == 45
}
G.3:VIA2i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE VIA2i >0 <90
  NOT ANGLE Y == 45
}
G.3:M3i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M3i >0 <90
  NOT ANGLE Y == 45
}
G.3:VIA3i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE VIA3i >0 <90
  NOT ANGLE Y == 45
}
G.3:M4i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M4i >0 <90
  NOT ANGLE Y == 45
}
G.3:VIA4i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE VIA4i >0 <90
  NOT ANGLE Y == 45
}
G.3:M5i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M5i >0 <90
  NOT ANGLE Y == 45
}
G.3:VIADi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE VIADi >0 <90
  NOT ANGLE Y == 45
}
G.3:MDi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MDi >0 <90
  NOT ANGLE Y == 45
}
G.3:CB2i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE CB2i >0 <90
  NOT ANGLE Y == 45
}
G.3:RVi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RVi >0 <90
  NOT ANGLE Y == 45
}
G.3:APi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE APi >0 <90
  NOT ANGLE Y == 45
}
G.3:CU_PPIi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE CU_PPIi >0 <90
  NOT ANGLE Y == 45
}
G.3:PM1 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE PM1 >0 <90
  NOT ANGLE Y == 45
}
G.3:PM2 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE PM2 >0 <90
  NOT ANGLE Y == 45
}
G.3:CBi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE CBi >0 <90
  NOT ANGLE Y == 45
}
G.3:CBDi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE CBDi >0 <90
  NOT ANGLE Y == 45
}
G.3:UBMi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE UBMi >0 <90
  NOT ANGLE Y == 45
}
G.3:PPIi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE PPIi >0 <90
  NOT ANGLE Y == 45
}
G.3:RPOi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RPOi >0 <90
  NOT ANGLE Y == 45
}
G.3:NTNi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE NTNi >0 <90
  NOT ANGLE Y == 45
}
G.3:PLMIDEi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE PLMIDEi >0 <90
  NOT ANGLE Y == 45
}
G.3:DNWi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DNWi >0 <90
  NOT ANGLE Y == 45
}
G.3:VTMPi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE VTMPi >0 <90
  NOT ANGLE Y == 45
}
G.3:VTMNi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE VTMNi >0 <90
  NOT ANGLE Y == 45
}
G.3:PV_P { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE PV_P >0 <90
  NOT ANGLE Y == 45
}
G.3:PV_N { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE PV_N >0 <90
  NOT ANGLE Y == 45
}
G.3:HRIi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HRIi >0 <90
  NOT ANGLE Y == 45
}
G.3:M1DMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M1DMY >0 <90
  NOT ANGLE Y == 45
}
G.3:M2DMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M2DMY >0 <90
  NOT ANGLE Y == 45
}
G.3:M3DMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M3DMY >0 <90
  NOT ANGLE Y == 45
}
G.3:M4DMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M4DMY >0 <90
  NOT ANGLE Y == 45
}
G.3:M5DMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M5DMY >0 <90
  NOT ANGLE Y == 45
}
G.3:MDDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MDDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:M1SLOTi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M1SLOTi >0 <90
  NOT ANGLE Y == 45
}
G.3:M2SLOTi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M2SLOTi >0 <90
  NOT ANGLE Y == 45
}
G.3:M3SLOTi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M3SLOTi >0 <90
  NOT ANGLE Y == 45
}
G.3:M4SLOTi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M4SLOTi >0 <90
  NOT ANGLE Y == 45
}
G.3:M5SLOTi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M5SLOTi >0 <90
  NOT ANGLE Y == 45
}
G.3:MDSLOTi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MDSLOTi >0 <90
  NOT ANGLE Y == 45
}
G.3:CTM1i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE CTM1i >0 <90
  NOT ANGLE Y == 45
}
G.3:CTM2i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE CTM2i >0 <90
  NOT ANGLE Y == 45
}
G.3:CTM3i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE CTM3i >0 <90
  NOT ANGLE Y == 45
}
G.3:CTM4i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE CTM4i >0 <90
  NOT ANGLE Y == 45
}
G.3:CTM5i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE CTM5i >0 <90
  NOT ANGLE Y == 45
}
G.3:HOTWL { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE HOTWL >0 <90
  NOT ANGLE Y == 45
}
G.3:EXCLi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE EXCLi >0 <90
  NOT ANGLE Y == 45
}
G.3:DRCDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DRCDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:RWDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RWDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:DPDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DPDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:PLDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE PLDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:SDI { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE SDI >0 <90
  NOT ANGLE Y == 45
}
G.3:ESD1DMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE ESD1DMY >0 <90
  NOT ANGLE Y == 45
}
G.3:ESD2DMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE ESD2DMY >0 <90
  NOT ANGLE Y == 45
}
G.3:ESD3DMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE ESD3DMY >0 <90
  NOT ANGLE Y == 45
}
G.3:CTMDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE CTMDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:RLPPDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RLPPDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:DMN2V { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DMN2V >0 <90
  NOT ANGLE Y == 45
}
G.3:DMP2V { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DMP2V >0 <90
  NOT ANGLE Y == 45
}
G.3:VARDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE VARDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:PMDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE PMDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:FWi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE FWi >0 <90
  NOT ANGLE Y == 45
}
G.3:LMARK { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE LMARK >0 <90
  NOT ANGLE Y == 45
}
G.3:LWI { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE LWI >0 <90
  NOT ANGLE Y == 45
}
G.3:WBDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE WBDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:ESDi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE ESDi >0 <90
  NOT ANGLE Y == 45
}
G.3:ESDIMPi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE ESDIMPi >0 <90
  NOT ANGLE Y == 45
}
G.3:INDDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE INDDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:SEALRING { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE SEALRING >0 <90
  NOT ANGLE Y == 45
}
G.3:LOGO { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE LOGO >0 <90
  NOT ANGLE Y == 45
}
G.3:LUPWDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE LUPWDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:LUPWDMY_2 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE LUPWDMY_2 >0 <90
  NOT ANGLE Y == 45
}
G.3:SBDDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE SBDDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:RFDUMMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RFDUMMY >0 <90
  NOT ANGLE Y == 45
}
G.3:RES200 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RES200 >0 <90
  NOT ANGLE Y == 45
}
G.3:MATCHING { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MATCHING >0 <90
  NOT ANGLE Y == 45
}
G.3:RMDUMMY1 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RMDUMMY1 >0 <90
  NOT ANGLE Y == 45
}
G.3:RMDUMMY2 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RMDUMMY2 >0 <90
  NOT ANGLE Y == 45
}
G.3:RMDUMMY3 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RMDUMMY3 >0 <90
  NOT ANGLE Y == 45
}
G.3:RMDUMMY4 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RMDUMMY4 >0 <90
  NOT ANGLE Y == 45
}
G.3:RMDUMMY5 { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RMDUMMY5 >0 <90
  NOT ANGLE Y == 45
}
G.3:VDDDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE VDDDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:VSSDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE VSSDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:TSVi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE TSVi >0 <90
  NOT ANGLE Y == 45
}
G.3:STRAPDMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE STRAPDMY >0 <90
  NOT ANGLE Y == 45
}
G.3:NONLDDi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE NONLDDi >0 <90
  NOT ANGLE Y == 45
}
G.3:RSEPDUMMY { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE RSEPDUMMY >0 <90
  NOT ANGLE Y == 45
}
G.3:MSIi { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE MSIi >0 <90
  NOT ANGLE Y == 45
}
G.3:M0i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M0i >0 <90
  NOT ANGLE Y == 45
}
G.3:SICR_V1i { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE SICR_V1i >0 <90
  NOT ANGLE Y == 45
}
G.3:DM1EXCL { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DM1EXCL >0 <90
  NOT ANGLE Y == 45
}
G.3:DM2EXCL { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DM2EXCL >0 <90
  NOT ANGLE Y == 45
}
G.3:DM3EXCL { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DM3EXCL >0 <90
  NOT ANGLE Y == 45
}
G.3:DM4EXCL { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DM4EXCL >0 <90
  NOT ANGLE Y == 45
}
G.3:DM5EXCL { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DM5EXCL >0 <90
  NOT ANGLE Y == 45
}
G.3:DMDEXCL { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE DMDEXCL >0 <90
  NOT ANGLE Y == 45
}
G.3:M1x { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M1x >0 <90
  NOT ANGLE Y == 45
}
G.3:M2x { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M2x >0 <90
  NOT ANGLE Y == 45
}
G.3:M3x { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M3x >0 <90
  NOT ANGLE Y == 45
}
G.3:M4x { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M4x >0 <90
  NOT ANGLE Y == 45
}
G.3:M5x { @ Only shapes that are orthogonal or on a 45-degree angle are allowed.
  Y = ANGLE M5x >0 <90
  NOT ANGLE Y == 45
}
#ENDIF




//==============MACRO rules check================================================
//*********MACRO HVNMOS and HVPMOS **********
ALL_HVNMOS_OD_M = COPY ALL_HVNMOS_OD
ALL_HVPMOS_OD_M = COPY ALL_HVPMOS_OD
ALL_HVMOS_OD_M  = ALL_HVNMOS_OD_M OR ALL_HVPMOS_OD_M
ALL_HVMOS_GATE_M = COPY HVGATE
ALL_HVNMOS_S_M   = COPY ALL_HVNMOS_S
ALL_HVNMOS_D_M   = COPY ALL_HVNMOS_D
ALL_HVPMOS_D_M   = COPY ALL_HVPMOS_D
ALL_HVPMOS_S_M   = COPY ALL_HVPMOS_S
MOD_HVMOS_ALL	 = COPY ALL_HVMOS_OD_M 
OD_HVMOS_A       = MOD_HVMOS_ALL NOT POLY
OD_HVMOS_B	 = OD_HVMOS_A TOUCH ALL_GATE == 1

//=======MACRO NLDMOS===========================
//MACRO.R.1 is un-checkable rule
//MACRO.R.2 is checked by HVMOS.R.2
//MACRO.R.3 is checked by HVMOS.R.3
MACRO.R.4 { @ MACRODMY must cover the hole of the P+ iso ring and P+ iso ring for HVMOS
	PPOD_ISO_H_HVMOS NOT MACRODMY
	PPOD_ISO_R_HVMOS NOT MACRODMY
}
HVMOS.R.1 { @ The finger number of HVMOS must >= 2.
      MOD_HVMOS_ALL INTERACT ALL_GATE < 2	
}
HVMOS.R.2 { @ The finger number of HVMOS must be even numbers.
        A = OD_HVMOS_B INTERACT ALL_HVPMOS_D_M
        B = OD_HVMOS_B INTERACT ALL_HVPMOS_S_M
        (MOD_HVMOS_ALL INTERACT A) INTERACT B
        C = OD_HVMOS_B INTERACT ALL_HVNMOS_D_M
        D = OD_HVMOS_B INTERACT ALL_HVNMOS_S_M 
        (MOD_HVMOS_ALL INTERACT C) INTERACT D
        MOD_HVMOS_ALL CUT ALL_GATE > 0 ODD
}
HVMOS.R.3 { @ The layout of HVNMOS and HVPMOS must be drain-outward.
        OD_HVMOS_B INTERACT ALL_HVNMOS_S_M
        OD_HVMOS_B INTERACT ALL_HVPMOS_S_M
}
//HVMOS.R.4 is checked by HVMOS.R.4a and HVMOS.R.4b
HVMOS.R.4a { @ Each I/O HVNMOS should follow butted-source and source-bulk-source type structure:(except Slit type HVNMOS)
			 @ DRC will flag I/O HVMOS without below condition : 
			 @ Each I/O HVMOS source region need strap type bulk node in chanel length direction.
	     X = SLIT_HVNMOS OR SLIT_HVPMOS
         A = (ALL_HVNMOS_OD_M NOT INTERACT X) INTERACT HV_POST_DRIVER_NACT
		 B = (A NOT (ALL_HVNMOS_D OR HVGATE)) INTERACT ALL_HVNMOS_S
		 B NOT ENCLOSE PPOD
}

HVMOS.R.4b { @ Each I/O HVPMOS should follow butted-source and source-bulk-source type structure:(except Slit type HVPMOS)
             @ DRC will flag I/O HVMOS without below condition : 
			 @ Each I/O HVMOS source region need strap type bulk node in chanel length direction.
	     X = (SLIT_HVNMOS OR SLIT_HVPMOS) OR PCH5_AS_SWITCH_MAC_CH
         A = (ALL_HVPMOS_OD_M NOT INTERACT X) INTERACT HV_POST_DRIVER_PACT
		 B = (A NOT (ALL_HVPMOS_D OR HVGATE)) INTERACT ALL_HVPMOS_S
		 (B AND NPOD_PICK_H) NOT ENCLOSE NPOD
}


 NSH_P_pre =   (((((NA6G5_NBL_S OR NA20G5_S) OR NA20G5_NBL_S) OR NA29G5_NBL_S) OR NA29G3_dep_NBL_S) OR NA29G5_S) OR NA45G3_DEP_GB_S
NSH_P = SH_P INTERACT NSH_P_pre
 NHVPB_pre =   (((((((((((((((((NLD5G5_ISO_SWITCH_S OR NLD6G5_SA_FULLY_ISO_S) OR NLD6G5_SA_S) OR NLD6G5_DE_FULLY_ISO_S) OR NLD6G5_DE_S) OR NLD9G5_FULLY_ISO_S) OR NLD9G5_S) OR NLD12G5_FULLY_ISO_S) OR NLD12G5_S) OR NLD16G5_FULLY_ISO_S) OR NLD16G5_S) OR NLD20G5_FULLY_ISO_S) OR NLD20G5_S) OR NLD24G5_S) OR NLD24G5_FULLY_ISO_S) OR NLD24G5_ISO_SWITCH_S) OR NLD24G5_SWITCH_S) OR NLD36G5_GB_S) OR NLD45G5_GB_S
NHVPB = HVPB INTERACT NSH_P_pre
ALL_HVNMOS_S_SP = ALL_HVNMOS_S OR NSH_P 
ALL_HVNMOS_S_HB = ALL_HVNMOS_S OR NHVPB
ALL_HVNMOS_S_CON = ALL_HVNMOS_S_SP OR ALL_HVNMOS_S_HB

 ALL_HVPMOS_S_SH_N_pre =  ((((((((((((PCH5_AS_SWITCH_MAC_S OR PA6G5_SA_BL_S) OR PA6G5_DE_BL_S) OR PA9G5_NBL_S) OR PA12G5_NBL_S) OR PA12G5_SLIT_BL_S) OR PA9G5_SLIT_NBL_S) OR PA16G5_NBL_S) OR PA20G5_BL_S) OR PA16G5_SLIT_NBL_S) OR PA20G5_SLIT_BL_S) OR PA29G5_BL_S) OR PA36G5_BL_GB_S) OR PA45G5_BL_GB_S
ALL_HVPMOS_S_SH_N = (HVSHN INTERACT ALL_HVPMOS_S_SH_N_pre) AND ALL_HVPMOS_OD_NEW
ALL_HVPMOS_S_CON = ALL_HVPMOS_S OR ALL_HVPMOS_S_SH_N

CONNECT ALL_HVNMOS_S_CON
CONNECT ALL_HVPMOS_S_CON
POLYc = STAMP POLY BY ILP1_mf
HVMOS.R.5a{ @ Multi finger structure HVNMOS don't allow single poly operation for matching and uniformity concern, DRC only flag HVNMOS common source interact different potential gate poly is not allowed.
        A = ALL_HVNMOS_S_CON INTERACT POLYc BY NET != 1
        POLY INTERACT A
}

HVMOS.R.5b{ @ Multi finger structure HVPMOS don't allow single poly operation for matching and uniformity concern, DRC only flag HVPMOS common source interact different potential gate poly is noyt allowed.
        A = ALL_HVPMOS_S_CON INTERACT POLYc BY NET !=1
        POLY INTERACT A
}

// ;------------ NBL -------------------
// ;


NBL.W.1 { @ Min.width of NBL > ^NBL_W_1 um 
  A = NBL NOT INTERACT (NPOD_GR_H_L_HVDMY_45_GB OR NPOD_GR_H_L_HVDMY_36_GB)
  INT A < NBL_W_1 ABUT<90 SINGULAR REGION
}
NBL.S.1 { @ Min soace between to NBL region(except NBL.S.2) >= ^NBL_S_1
   A = EXT NBLi < NBL_S_1 ABUT < 90 SINGULAR REGION
   A NOT INSIDE ((HV9ISO OR HV6DMY) OR HV9DMY)
}

NBL.S.2 { @ Min space between two {NBL INSIDE (HV9ISO OR HV6DMY OR HV9DMY)} region >= ^NBL_S_2 
		  @ NBL must be interact with same {HV9ISO OR HV6DMY OR HV9DMY}
   NBL_HV9ISO = NBLi INSIDE HV9ISO
   NBL_HV6DMY = NBLi INSIDE HV6DMY
   NBL_HV9DMY = NBLi INSIDE HV9DMY
   A1 = EXT NBL_HV9ISO < NBL_S_2 ABUT < 90 SINGULAR REGION
   A1 INTERACT HV9ISO == 1
   A2 = EXT NBL_HV6DMY < NBL_S_2 ABUT < 90 SINGULAR REGION
   A2 INTERACT HV6DMY == 1
   A3 = EXT NBL_HV9DMY < NBL_S_2 ABUT < 90 SINGULAR REGION
   A3 INTERACT HV9DMY == 1
}

NBL.S.3 { @ Min space between two {NBL INSIDE (HV45ISO OR HV45DMY OR HVGB)} region >= ^NBL_S_3 
		  @ NBL must be interact with same {HV9ISO OR HV6DMY OR HV9DMY}
   NBL_HV45ISO = NBLi INSIDE HV45ISO
   NBL_HV45DMY = NBLi INSIDE HV45DMY
   NBL_HVGB = NBLi INSIDE HVGB
   A1 = EXT NBL_HV45ISO < NBL_S_3 ABUT < 90 SINGULAR REGION
   A1 INTERACT HV45ISO == 1
   A2 = EXT NBL_HV45DMY < NBL_S_3 ABUT < 90 SINGULAR REGION
   A2 INTERACT HV45DMY == 1
   A3 = EXT NBL_HVGB < NBL_S_3 ABUT < 90 SINGULAR REGION
   A3 INTERACT HVGB == 1
}

NBL_RING = DONUT NBL
NBL_RING_IN_NP_GUARD_RING = NBL_RING INTERACT NPOD_GR_R_L
NBL.R.3 { @ NBL must be surrounded by P+OD isolation ring, except ring-type NBL of N+HVLUP guard ring
    A = NBL NOT NBL_RING_IN_NP_GUARD_RING
    LV_NBL = A INTERACT LV_DEVICES
    HV_NBL = A NOT LV_NBL
    HV_NBL NOT PPOD_ISO_H
    PPOD_ISO_H INTERACT NBL >1
    LV_NBL NOT PPOD_ISO_H_CHECK
    PPOD_ISO_H_CHECK INTERACT NBL >1
}

NBL.R.3.1{@ Ring Type NBL of N+HVLUP guard ring must be surrounded by P+SHP isolation Ring
    NBL_RING_IN_NP_GUARD_RING NOT PPOD_ISO_OUT_H
}

MOS_NO_NBL = ((((((((NLD9G5_GATE OR NLD12G5_GATE) OR NLD16G5_GATE) OR NLD20G5_GATE) OR NA29G5_GATE) OR NLD6G5_SA_GATE) OR NLD6G5_DE_GATE) OR NLD24G5_GATE) OR NLD24G5_SWITCH_GATE) OR NA20G5_GATE 
BJT_NO_NBL = BJT_PNDDPSUB_E OR BJT_PHVNWPSUB_GB_E
RES_NO_NBL = COPY EMPTYi
DIO_NO_NBL = (DIO_NPDD_M OR DIO_SHNPSUBSHP_M) OR DIO_NHVPW_GB_M
NBL.R.4 { @ NBL is must for all HV DEVICE(EXCEPT NLD9G5(GA),NLD12G5(GA),NLD16G5(GA),NLD20G5(GA),NA29G5(GA),PNP(HVBJT)
		  @ (P+/NDD/Psub)(GA),PNP(HVBJT)(P+/HVNW/Psub)(GB),N+PDD Diode(GB),SHN/PSUB Diode(GA),N+/HVPW Diode(GB))
    A = (((HV_DEVICES NOT INTERACT MOS_NO_NBL ) NOT INTERACT BJT_NO_NBL) NOT INTERACT RES_NO_NBL) NOT INTERACT DIO_NO_NBL
    A NOT INTERACT NBL
}

NBL.R.8 { @ NBL should be rectangle for HV devices
    A = (NBL INTERACT HV_DEVICES) NOT INTERACT (NPOD_GR_H_L_HVDMY_45_GB OR NPOD_GR_H_L_HVDMY_36_GB)
	NOT RECTANGLE A
}

NBLSLOT.W.1_NLD24G5_FULLY_ISO{ @ min and max width NBL slot in channel length direction within NBL == ^NBLSLOT_W_1_NLD24G5_FULLY_ISO
   A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NLD24G5_FULLY_ISO_CH)
   INT A < NBLSLOT_W_1_NLD24G5_FULLY_ISO ABUT < 90 SINGULAR REGION  
   SIZE A BY NBLSLOT_W_1_NLD24G5_FULLY_ISO/2 UNDEROVER 
}
NBLSLOT.W.1_NLD24G5_ISO_SWITCH{ @ min and max width NBL slot in channel length direction within NBL == ^NBLSLOT_W_1_NLD24G5_ISO_SWITCH
   A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NLD24G5_ISO_SWITCH_CH)
   INT A < NBLSLOT_W_1_NLD24G5_ISO_SWITCH ABUT < 90 SINGULAR REGION  
   SIZE A BY NBLSLOT_W_1_NLD24G5_ISO_SWITCH/2 UNDEROVER 
}
NBLSLOT.W.1_NA29G3_DEP_NBL{ @ min and max width NBL slot in channel length direction within NBL == ^NBLSLOT_W_1_NA29G3_DEP_NBL
   A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NA29G3_DEP_NBL_CH)
   INT A < NBLSLOT_W_1_NA29G3_DEP_NBL ABUT < 90 SINGULAR REGION  
   SIZE A BY NBLSLOT_W_1_NA29G3_DEP_NBL/2 UNDEROVER 
}
NBLSLOT.W.1_NA29G5_NBL{ @ min and max width NBL slot in channel length direction within NBL == ^NBLSLOT_W_1_NA29G5_NBL
   A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NA29G5_NBL_CH)
   INT A < NBLSLOT_W_1_NA29G5_NBL ABUT < 90 SINGULAR REGION  
   SIZE A BY NBLSLOT_W_1_NA29G5_NBL/2 UNDEROVER 
}
NBLSLOT.W.1_NLD36G5_GB{ @ min and max width NBL slot in channel length direction within NBL == ^NBLSLOT_W_1_NLD36G5_GB
   A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NLD36G5_GB_CH)
   INT A < NBLSLOT_W_1_NLD36G5_GB ABUT < 90 SINGULAR REGION  
   SIZE A BY NBLSLOT_W_1_NLD36G5_GB/2 UNDEROVER 
}
NBLSLOT.W.1_NLD45G5_GB{ @ min and max width NBL slot in channel length direction within NBL == ^NBLSLOT_W_1_NLD45G5_GB
   A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NLD45G5_GB_CH)
   INT A < NBLSLOT_W_1_NLD45G5_GB ABUT < 90 SINGULAR REGION  
   SIZE A BY NBLSLOT_W_1_NLD45G5_GB/2 UNDEROVER 
}
NBLSLOT.W.1_NA45G3_DEP_GB{ @ min and max width NBL slot in channel length direction within NBL == ^NBLSLOT_W_1_NA45G3_DEP_GB
   A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NA45G3_DEP_GB_CH)
   INT A < NBLSLOT_W_1_NA45G3_DEP_GB ABUT < 90 SINGULAR REGION  
   SIZE A BY NBLSLOT_W_1_NA45G3_DEP_GB/2 UNDEROVER 
}

NBLSLOT.S.1_NLD24G5_FULLY_ISO{ @ min and max space between NBL slot in channel length direction within NBL == ^ NBLSLOT_S_1_NLD24G5_FULLY_ISO
   A = (HOLES HVSHN INNER) INTERACT NLD24G5_FULLY_ISO_CH
   B = NBLSLOT INTERACT A
   EXT B < NBLSLOT_S_1_NLD24G5_FULLY_ISO ABUT < 90 SINGULAR REGION
   C = SIZE B BY NBLSLOT_S_1_NLD24G5_FULLY_ISO/2 OVERUNDER
   ERR = A INTERACT C > 1
   C INTERACT ERR
}
NBLSLOT.S.1_NLD24G5_ISO_SWITCH{ @ min and max space between NBL slot in channel length direction within NBL == ^ NBLSLOT_S_1_NLD24G5_ISO_SWITCH
   A = (HOLES HVSHN INNER) INTERACT NLD24G5_ISO_SWITCH_CH
   B = NBLSLOT INTERACT A
   EXT B < NBLSLOT_S_1_NLD24G5_ISO_SWITCH ABUT < 90 SINGULAR REGION
   C = SIZE B BY NBLSLOT_S_1_NLD24G5_ISO_SWITCH/2 OVERUNDER
   ERR = A INTERACT C > 1
   C INTERACT ERR
}
NBLSLOT.S.1_NA29G5_NBL{ @ min and max space between NBL slot in channel length direction within NBL == ^ NBLSLOT_S_1_NA29G5_NBL
   A = (HOLES HVSHN INNER) INTERACT NA29G5_NBL_CH
   B = NBLSLOT INTERACT A
   EXT B < NBLSLOT_S_1_NA29G5_NBL ABUT < 90 SINGULAR REGION
   C = SIZE B BY NBLSLOT_S_1_NA29G5_NBL/2 OVERUNDER
   ERR = A INTERACT C > 1
   C INTERACT ERR
}
NBLSLOT.S.1_NA29G3_DEP_NBL{ @ min and max space between NBL slot in channel length direction within NBL == ^ NBLSLOT_S_1_NA29G3_DEP_NBL
   A = (HOLES HVSHN INNER) INTERACT NA29G3_DEP_NBL_CH
   B = NBLSLOT INTERACT A
   EXT B < NBLSLOT_S_1_NA29G3_DEP_NBL ABUT < 90 SINGULAR REGION
   C = SIZE B BY NBLSLOT_S_1_NA29G3_DEP_NBL/2 OVERUNDER
   ERR = A INTERACT C > 1
   C INTERACT ERR
}
NBLSLOT.S.1_NLD36G5_GB{ @ min and max space between NBL slot in channel length direction within NBL == ^ NBLSLOT_S_1_NLD36G5_GB
   A = (HOLES HVSHN INNER) INTERACT NLD36G5_GB_CH
   B = NBLSLOT INTERACT A
   EXT B < NBLSLOT_S_1_NLD36G5_GB ABUT < 90 SINGULAR REGION
   C = SIZE B BY NBLSLOT_S_1_NLD36G5_GB/2 OVERUNDER
   ERR = A INTERACT C > 1
   C INTERACT ERR
}
NBLSLOT.S.1_NLD45G5_GB{ @ min and max space between NBL slot in channel length direction within NBL == ^ NBLSLOT_S_1_NLD45G5_GB
   A = (HOLES HVSHN INNER) INTERACT NLD45G5_GB_CH
   B = NBLSLOT INTERACT A
   EXT B < NBLSLOT_S_1_NLD45G5_GB ABUT < 90 SINGULAR REGION
   C = SIZE B BY NBLSLOT_S_1_NLD45G5_GB/2 OVERUNDER
   ERR = A INTERACT C > 1
   C INTERACT ERR
}
NBLSLOT.S.1_NA45G3_DEP_GB{ @ min and max space between NBL slot in channel length direction within NBL == ^ NBLSLOT_S_1_NA45G3_DEP_GB
   A = (HOLES HVSHN INNER) INTERACT NA45G3_DEP_GB_CH
   B = NBLSLOT INTERACT A
   EXT B < NBLSLOT_S_1_NA45G3_DEP_GB ABUT < 90 SINGULAR REGION
   C = SIZE B BY NBLSLOT_S_1_NA45G3_DEP_GB/2 OVERUNDER
   ERR = A INTERACT C > 1
   C INTERACT ERR
}

NBLSLOT.E.1_NLD36G5_GB { @ min and max extension of HVNW beyond NBL slot in channel width direction within { HVNW AND NBL} == 0
   A = HVNW INTERACT NLD36G5_GB_CH
   B = NBLSLOT INTERACT A
   C = LENGTH B == 0.6
   C NOT TOUCH EDGE A
}
NBLSLOT.E.1_NLD45G5_GB { @ min and max extension of HVNW beyond NBL slot in channel width direction within { HVNW AND NBL} == 0
   A = HVNW INTERACT NLD45G5_GB_CH
   B = NBLSLOT INTERACT A
   C = LENGTH B == 0.6
   C NOT TOUCH EDGE A
}
NBLSLOT.E.1_NA45G3_DEP_GB { @ min and max extension of HVNW beyond NBL slot in channel width direction within { HVNW AND NBL} == 0
   A = HVNW INTERACT NA45G3_DEP_GB_CH
   B = NBLSLOT INTERACT A
   C = LENGTH B == 0.6
   C NOT TOUCH EDGE A
}

NBLSLOT.E.2_NLD36G5_GB { @ min extension of HVNW beyond NBL slot in channel length direction within { HVNW AND NBL} >= ^NBLSLOT_E_2_NLD36G5_GB
   A = HVNW INTERACT NLD36G5_GB_CH
   B = NBLSLOT INTERACT A
   B NOT INSIDE A
}
NBLSLOT.E.2_NLD45G5_GB { @ min extension of HVNW beyond NBL slot in channel length direction within { HVNW AND NBL} >= ^NBLSLOT_E_2_NLD45G5_GB
   A = HVNW INTERACT NLD45G5_GB_CH
   B = NBLSLOT INTERACT A
   B NOT INSIDE A
}

NBLSLOT.E.3_NLD36G5_GB { @ max extension of HVNW beyond NBL slot in channel length direction within { HVNW AND NBL} <= ^NBLSLOT_E_3_NLD36G5_GB
   A = HVNW INTERACT NLD36G5_GB_CH
   B = A NOT TOUCH EDGE NBLSLOT
   C = EXPAND EDGE B INSIDE BY NBLSLOT_E_3_NLD36G5_GB
   C NOT INTERACT NBLSLOT
}
NBLSLOT.E.3_NLD45G5_GB { @ max extension of HVNW beyond NBL slot in channel length direction within { HVNW AND NBL} <= ^NBLSLOT_E_3_NLD45G5_GB
   A = HVNW INTERACT NLD45G5_GB_CH
   B = A NOT TOUCH EDGE NBLSLOT
   C = EXPAND EDGE B INSIDE BY NBLSLOT_E_3_NLD45G5_GB
   C NOT INTERACT NBLSLOT
}

NBLSLOT.E.4_NA45G3_DEP_GB { @ min extension of outermost HVNW beyond outermost NBL slot in channel length direction within { HVNW AND NBL} >= ^NBLSLOT_E_4_NA45G3_DEP_GB
   A = SIZE (HVNW INTERACT NA45G3_DEP_GB_CH) BY (HVPW_C_1_NA45G3_DEP_GB + HVPO_S_5_NA45G3_DEP_GB/2 + HVPW_O_1_NA45G3_DEP_GB ) OVERUNDER
   B = NBLSLOT INTERACT A
   B NOT INSIDE A
}

NBLSLOT.E.5_NA45G3_DEP_GB { @ min extension of outermost HVNW beyond outermost NBL slot in channel length direction within { HVNW AND NBL} <= ^NBLSLOT_E_5_NA45G3_DEP_GB
   A = SIZE (HVNW INTERACT NA45G3_DEP_GB_CH) BY (HVPW_C_1_NA45G3_DEP_GB + HVPO_S_5_NA45G3_DEP_GB/2 + HVPW_O_1_NA45G3_DEP_GB ) OVERUNDER
   B = A NOT TOUCH EDGE NBLSLOT
   C = EXPAND EDGE B INSIDE BY NBLSLOT_E_5_NA45G3_DEP_GB
   C NOT INTERACT NBLSLOT
}

NBLSLOT.C.1_NLD24G5_FULLY_ISO{ @ min and max clearance between NBL slot and SHN in channel width direction  within NBL ==^ NBLSLOT_C_1_NLD24G5_FULLY_ISO
    A = NBLSLOT INSIDE ((HOLES HVSHN INNER) INTERACT NLD24G5_FULLY_ISO_CH)
    B = SIZE A BY NBLSLOT_S_1_NLD24G5_FULLY_ISO/2 OVERUNDER
    C = EXPAND EDGE B OUTSIDE BY GRID
	D = B TOUCH EDGE (C INTERACT A > 1) 
    E = EXPAND EDGE D OUTSIDE BY NBLSLOT_C_1_NLD24G5_FULLY_ISO
	E NOT TOUCH HVSHN
}

NBLSLOT.C.1_NA29G5_NBL{ @ min and max clearance between NBL slot and SHN in channel width direction  within NBL ==^ NBLSLOT_C_1_NA29G5_NBL
    A = NBLSLOT INSIDE ((HOLES HVSHN INNER) INTERACT NA29G5_NBL_CH)
    B = SIZE A BY NBLSLOT_S_1_NA29G5_NBL/2 OVERUNDER
    C = EXPAND EDGE B OUTSIDE BY GRID
	D = B TOUCH EDGE (C INTERACT A > 1) 
    E = EXPAND EDGE D OUTSIDE BY NBLSLOT_C_1_NA29G5_NBL
	E NOT TOUCH HVSHN
}

NBLSLOT.C.1_NA29G3_DEP_NBL{ @ min and max clearance between NBL slot and SHN in channel width direction  within NBL ==^ NBLSLOT_C_1_NA29G3_DEP_NBL
    A = NBLSLOT INSIDE ((HOLES HVSHN INNER) INTERACT NA29G3_DEP_NBL_CH)
    B = SIZE A BY NBLSLOT_S_1_NA29G3_DEP_NBL/2 OVERUNDER
    C = EXPAND EDGE B OUTSIDE BY GRID
	D = B TOUCH EDGE (C INTERACT A > 1) 
    E = EXPAND EDGE D OUTSIDE BY NBLSLOT_C_1_NA29G3_DEP_NBL
	E NOT TOUCH HVSHN
}

NBLSLOT.C.1_NLD24G5_ISO_SWITCH{ @ min and max clearance between NBL slot and SHN in channel width direction  within NBL ==^ NBLSLOT_C_1_NLD24G5_ISO_SWITCH
    A = NBLSLOT INSIDE ((HOLES HVSHN INNER) INTERACT NLD24G5_ISO_SWITCH_CH)
    B = SIZE A BY NBLSLOT_S_1_NLD24G5_ISO_SWITCH/2 OVERUNDER
    C = EXPAND EDGE B OUTSIDE BY GRID
	D = B TOUCH EDGE (C INTERACT A > 1) 
    E = EXPAND EDGE D OUTSIDE BY NBLSLOT_C_1_NLD24G5_ISO_SWITCH
	E NOT TOUCH HVSHN
}

NBLSLOT.C.2_NLD24G5_FULLY_ISO{ @ min clearance between NBL slot and SHN in channel length direction within NBL >=^ NBLSLOT_C_2_NLD24G5_FULLY_ISO 
    A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NLD24G5_FULLY_ISO_CH)
    B = SIZE A BY NBLSLOT_S_1_NLD24G5_FULLY_ISO/2 OVERUNDER
    C = EXPAND EDGE B OUTSIDE BY GRID
	D = B TOUCH EDGE (C INTERACT A == 1)  
    EXT D HVSHN < NBLSLOT_C_2_NLD24G5_FULLY_ISO ABUT < 90 REGION
}
NBLSLOT.C.2_NLD24G5_ISO_SWITCH{ @ min clearance between NBL slot and SHN in channel length direction within NBL >=^ NBLSLOT_C_2_NLD24G5_ISO_SWITCH 
    A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NLD24G5_ISO_SWITCH_CH)
    B = SIZE A BY NBLSLOT_S_1_NLD24G5_ISO_SWITCH/2 OVERUNDER
    C = EXPAND EDGE B OUTSIDE BY GRID
	D = B TOUCH EDGE (C INTERACT A == 1)  
    EXT D HVSHN < NBLSLOT_C_2_NLD24G5_ISO_SWITCH ABUT < 90 REGION
}
NBLSLOT.C.2_NA29G5_NBL{ @ min clearance between NBL slot and SHN in channel length direction within NBL >=^ NBLSLOT_C_2_NA29G5_NBL 
    A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NA29G5_NBL_CH)
    B = SIZE A BY NBLSLOT_S_1_NA29G5_NBL/2 OVERUNDER
    C = EXPAND EDGE B OUTSIDE BY GRID
	D = B TOUCH EDGE (C INTERACT A == 1)  
    EXT D HVSHN < NBLSLOT_C_2_NA29G5_NBL ABUT < 90 REGION
}
NBLSLOT.C.2_NA29G3_DEP_NBL{ @ min clearance between NBL slot and SHN in channel length direction within NBL >=^ NBLSLOT_C_2_NA29G3_DEP_NBL 
    A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NA29G3_DEP_NBL_CH)
    B = SIZE A BY NBLSLOT_S_1_NA29G3_DEP_NBL/2 OVERUNDER
    C = EXPAND EDGE B OUTSIDE BY GRID
	D = B TOUCH EDGE (C INTERACT A == 1)  
    EXT D HVSHN < NBLSLOT_C_2_NA29G3_DEP_NBL ABUT < 90 REGION
}
NBLSLOT.C.3_NLD24G5_FULLY_ISO{ @ max clearance between NBL slot and SHN in channel length direction within NBL <=^ NBLSLOT_C_3_NLD24G5_FULLY_ISO 
    A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NLD24G5_FULLY_ISO_CH)
    B = SIZE A BY NBLSLOT_S_1_NLD24G5_FULLY_ISO/2 OVERUNDER
    C = EXPAND EDGE B OUTSIDE BY GRID
	D = B TOUCH EDGE (C INTERACT A == 1)
	E = EXPAND EDGE D OUTSIDE BY NBLSLOT_C_3_NLD24G5_FULLY_ISO
	E NOT INTERACT HVSHN  
}
NBLSLOT.C.3_NLD24G5_ISO_SWITCH{ @ max clearance between NBL slot and SHN in channel length direction within NBL <=^ NBLSLOT_C_3_NLD24G5_ISO_SWITCH 
    A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NLD24G5_ISO_SWITCH_CH)
    B = SIZE A BY NBLSLOT_S_1_NLD24G5_ISO_SWITCH/2 OVERUNDER
    C = EXPAND EDGE B OUTSIDE BY GRID
	D = B TOUCH EDGE (C INTERACT A == 1)
	E = EXPAND EDGE D OUTSIDE BY NBLSLOT_C_3_NLD24G5_ISO_SWITCH
	E NOT INTERACT HVSHN  
}
NBLSLOT.C.3_NA29G5_NBL{ @ max clearance between NBL slot and SHN in channel length direction within NBL <=^ NBLSLOT_C_3_NA29G5_NBL 
    A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NA29G5_NBL_CH)
    B = SIZE A BY NBLSLOT_S_1_NA29G5_NBL/2 OVERUNDER
    C = EXPAND EDGE B OUTSIDE BY GRID
	D = B TOUCH EDGE (C INTERACT A == 1)
	E = EXPAND EDGE D OUTSIDE BY NBLSLOT_C_3_NA29G5_NBL
	E NOT INTERACT HVSHN  
}
NBLSLOT.C.3_NA29G3_DEP_NBL{ @ max clearance between NBL slot and SHN in channel length direction within NBL <=^ NBLSLOT_C_3_NA29G3_DEP_NBL 
    A = NBLSLOT INTERACT ((HOLES HVSHN INNER) INTERACT NA29G3_DEP_NBL_CH)
    B = SIZE A BY NBLSLOT_S_1_NA29G3_DEP_NBL/2 OVERUNDER
    C = EXPAND EDGE B OUTSIDE BY GRID
	D = B TOUCH EDGE (C INTERACT A == 1)
	E = EXPAND EDGE D OUTSIDE BY NBLSLOT_C_3_NA29G3_DEP_NBL
	E NOT INTERACT HVSHN  
}








HVISO.S.1 { @ min space between ((HVGA NOT PSUB) NOT INTERACT HVGB) and HVGB, butted is allowed >=^HVISO_S_1
	A = (HVGA NOT PSUB) NOT INTERACT HVGB
	EXT A HVGB < HVISO_S_1 ABUT > 0 < 90 SINGULAR REGION
}

HVISO.S.2_3 { @ min space between ((HVGA AND PSUB) NOT INTERACT HVGB) and HVGB, butted is allowed >=^HVISO_S_3 or <= ^HVISO_S_2
	A = (HVGA AND PSUB) NOT INTERACT HVGB
	ERR = EXT A HVGB > HVISO_S_2 < HVISO_S_3 ABUT > 0 < 90 SINGULAR REGION
	ERR_W = EXT A HVGB <= HVISO_S_2 ABUT > 0 < 90 SINGULAR REGION
	ERR NOT INTERACT ERR_W
}

HVISO.R.1 { @ (HVGA AND SH_N) is not allowed to overlap HVGB
	A = HVGA AND HVSHN
	A AND HVGB
}

HVISO.R.2 { @ (HVGB AND SH_N) is not allowed to overlap HVGA
	A = HVGB AND HVSHN
	A AND HVGA
}

HVISO.R.3A { @ P+/NDD/Psub(GA) and P+/HVNW/Psub(GB) are not allowed to share P+ isolation ring .
	A = BJT_PNDDPSUB_E OR BJT_PHVNWPSUB_GB_E
	PPOD_ISO_H INTERACT A > 1
}

NBL_ISO_R_9V  = NBL_ISO_RING INTERACT HV9ISO
NBL_ISO_H_9V  = NBL_ISO_HOLE INTERACT HV9ISO
SH_N_NBL_ISO_R_9V  = HVSHN INTERACT NBL_ISO_R_9V
NBL_ISO_R_29V = NBL_ISO_RING INTERACT HV29ISO
NBL_ISO_H_29V = NBL_ISO_HOLE INTERACT HV29ISO
SH_N_NBL_ISO_R_29V  = HVSHN INTERACT NBL_ISO_R_29V
NBL_ISO_R_45V = NBL_ISO_RING INTERACT HV45ISO
NBL_ISO_H_45V = NBL_ISO_HOLE INTERACT HV45ISO
SH_N_NBL_ISO_R_45V  = HVSHN INTERACT NBL_ISO_R_45V

LVISO.W.9N.1 { @ min width of SH_N N+ isolation ring OD for 9v LV isolation>= ^LVISO_W_9N_1
    INT NBL_ISO_R_9V < LVISO_W_9N_1 ABUT < 90 SINGULAR REGION
}

LVISO.W.29N.1 { @ min width of SH_N N+ isolation ring OD for 9v LV isolation>= ^LVISO_W_29N_1
    INT NBL_ISO_R_29V < LVISO_W_29N_1 ABUT < 90 SINGULAR REGION
}

LVISO.W.45N.1 { @ min width of SH_N N+ isolation ring OD for 45v LV isolation>= ^LVISO_W_45N_1
    INT NBL_ISO_R_45V < LVISO_W_45N_1 ABUT < 90 SINGULAR REGION
}

LVISO.E.9N { @ min extension of SH_N beyond inward N+ isolation-ring for LV isolation >= ^LVISO_E_9N
	A = NBL_ISO_R_9V TOUCH EDGE (HOLES NBL_ISO_R_9V INNER)
    ENC A HVSHN < LVISO_E_9N ABUT <90 REGION  
}
LVISO.E.9N.1 { @ min extension of SH_N beyond outward N+ isolation-ring for LV isolation >= ^LVISO_E_9N_1
	A = (HOLES NBL_ISO_R_9V INNER) OR NBL_ISO_R_9V
    ENC A HVSHN < LVISO_E_9N_1 ABUT <90 SINGULAR REGION  
}

LVISO.E.29N { @ min extension of SH_N beyond inward N+ isolation-ring for LV isolation >= ^LVISO_E_29N
	A = NBL_ISO_R_29V TOUCH EDGE (HOLES NBL_ISO_R_29V INNER)
      ENC A HVSHN < LVISO_E_29N ABUT <90 REGION  
}
LVISO.E.29N.1 { @ min extension of SH_N beyond outward N+ isolation-ring for LV isolation >= ^LVISO_E_29N_1
	A = (HOLES NBL_ISO_R_29V INNER) OR NBL_ISO_R_29V
      ENC A HVSHN < LVISO_E_29N_1 ABUT <90 SINGULAR REGION  
}
LVISO.E.45N { @ min extension of SH_N beyond inward N+ isolation-ring for LV isolation >= ^LVISO_E_45N
	A = NBL_ISO_R_45V TOUCH EDGE (HOLES NBL_ISO_R_45V INNER)
      ENC A HVSHN < LVISO_E_45N ABUT <90 REGION  
}
LVISO.E.45N.1 { @ min extension of SH_N beyond outward N+ isolation-ring for LV isolation >= ^LVISO_E_45N_1
	A = (HOLES NBL_ISO_R_45V INNER) OR NBL_ISO_R_45V
      ENC A HVSHN < LVISO_E_45N_1 ABUT <90 SINGULAR REGION  
}

PPOD_ISO_R_9V = PPOD_ISO_R AND HV9ISO
PPOD_ISO_R_29V = PPOD_ISO_R AND HV29ISO
PPOD_ISO_R_45V = PPOD_ISO_R AND HV45ISO

LVISO.E.9P1 { @ min extension of HVDMY beyond P+ isolation-ring for LV isolation >= ^LVISO_E_9P1
      ENC PPOD_ISO_R_9V HVDMY < LVISO_E_9P1 ABUT <90 SINGULAR REGION
}
LVISO.E.9P2 { @ min extension of PSUB beyond P+ isolation-ring for LV isolation >= ^LVISO_E_9P2
      EXT PPOD_ISO_R_9V PSUB < LVISO_E_9P2 ABUT <90 SINGULAR REGION
}
LVISO.E.29P1 { @ min extension of HVDMY beyond P+ isolation-ring for LV isolation >= ^LVISO_E_29P1
      ENC PPOD_ISO_R_29V HVDMY < LVISO_E_29P1 ABUT <90 SINGULAR REGION
}
LVISO.E.29P2 { @ min extension of PSUB beyond P+ isolation-ring for LV isolation >= ^LVISO_E_29P2
      EXT PPOD_ISO_R_29V PSUB < LVISO_E_29P2 ABUT <90 SINGULAR REGION
}
LVISO.E.45P1 { @ min extension of HVDMY beyond P+ isolation-ring for LV isolation >= ^LVISO_E_45P1
      ENC PPOD_ISO_R_45V HVDMY < LVISO_E_45P1 ABUT <90 SINGULAR REGION
}
LVISO.E.45P2 { @ min extension of PSUB beyond P+ isolation-ring for LV isolation >= ^LVISO_E_45P2
      EXT PPOD_ISO_R_45V PSUB < LVISO_E_45P2 ABUT <90 SINGULAR REGION
}

LVISO.E.1 { @ Minimum extension of OD2 beyond P+ isolation-ring for LV isolation with NBL and DPW structure (OD2 outside 
    @ butted with SH_N) >= ^LVISO_E_1 
    ENC PP_DPW_R OD2 < LVISO_E_1 ABUT < 90 SINGULAR REGION
}

HV9ISO.R.2 { @ PSUB is must for 9V LV isolation
	A = (NBL NOT HVDMYi) INTERACT HV9ISO
	A NOT PSUB
}
HV29ISO.R.2 { @ PSUB is must for 29V LV isolation
	A = (NBL NOT HVDMYi) INTERACT HV29ISO
	A NOT PSUB
}
HV45ISO.R.2 { @ PSUB is must for 45V LV isolation
	A = (NBL NOT HVDMYi) INTERACT HV45ISO
	A NOT PSUB
}

NBL_NDPW = (NBL NOT DPW) INTERACT LV_DEVICES
NBL_NO_NW = NBL_NDPW NOT NWELi
NBL_NO_NWi = STAMP NBL_NO_NW BY HVSHNi 
NWEL_NOT_BUT_HVNW = NWELi NOT INTERACT HVSHNi 
LVISO.R.2 { @ NBL for LV isolation, i.e. NBL not HV, must be picked up using SH_N and N+
            @ isolation ring. Please note that N+ isolation ring must be connected to the
            @ same potential of all NW inside the N+ isolation ring.
      (NBL NOT HVDMY ) NOT INTERACT NBL_ISO_RING
      EXT NWEL_NOT_BUT_HVNW NBL_NO_NWi < 0.005 ABUT ==0  NOT CONNECTED REGION	
}

COLD_NWEL = NWEL NOT HOT_NWEL
LVISO.R.4 { @ Each hot NW has to be isolated in separate NBL, except (NBL AND DPW).
            @ And hot NW and cold NW have to be isolated in separate NBL, except (NBL AND DPW).
      (NBL NOT DPW) INTERACT HOT_NWEL >1
      A = (NBL NOT DPW) INTERACT COLD_NWEL
      B = A INTERACT HOT_NWEL
      NWEL INTERACT B
}

LVISO.R.6 { @ HVDMY or HVGA or HVGB is not allowed inside LV isolation ring
	A = (HVDMY OR HVGA) OR HVGB 
	A AND NBL_ISO_HOLE

}

LVISO.R.7 { @ P+isolation ring is must for LV device isolation with NBL and DPW structure
    A = HOLES (((PP AND OD) AND DPW) AND NBL) INNER
    B = SIZE ((PP AND OD) TOUCH A) BY OD_W_1/2 - 0.001 UNDEROVER
    C = DPW INTERACT (NBL INTERACT ((HV9ISO OR HV29ISO) OR HV45ISO))
    C NOT INTERACT B
}

LVISO.R.8 { @ 1.8/5V Native NMOS are not allowed to use LV device isolation with NBL, except 1.8V Native NMOS Bulk ISO and 5V Native NMOS Bulk ISO (w/o NLDD2) in (NBL AND DPW)     
	NTN_GATE INTERACT (NBL NOT DPW)
    NTN_5VNMOS_NLDD2_GATE INTERACT (NBL AND DPW)       
}


#IFNDEF SubToGround
NBL.R.1 { @ LV device must be isolated by NBL combine with SH_N.
  B = (PP AND NWEL) AND BJTDUMMY
  A = (( LV_DEVICES NOT INTERACT NTN_GATE) NOT INTERACT RNWEL) NOT INTERACT B 
  A NOT INSIDE NBLi
}
#ENDIF

NBL.R.2 { @ 5V Native NMOS Bulk ISO (w/i NLDD2) OR NW resistor OR 1.8V/5V PNP BJT(P+/NW/PEPI) inside NBL is not allowed(overlap is not allowed).    
   RNWEL AND NBLi
   A = NWEL AND BJTDUMMY
   A AND NBLi
   NTN_5VNMOS_NLDD2_GATE AND NBLi 
}

SH_N_NW = HVSHN OR HVNW
OD2_PPOD = PPOD AND (OD2 NOT SH_N_NW)
OD2_PPOD_H = HOLES (OD2_PPOD NOT SEALRING) 
OD2_PPOD_R = OD2_PPOD TOUCH OD2_PPOD_H
#IFDEF Recommend 
LVISO.R.1.1 { @ Each LV device region must be surrounded by 5V PW isolation ring or P+ iso ring
			@ Please note that P+ isolation ring must be connected to the most negative voltage.
	(LV_DEVICES NOT INSIDE PPOD_ISO_H_CHECK) NOT INSIDE OD2_PPOD_H
}
#ENDIF

// connection building for NW (Only metal connection)
//**************************************
// start connection building for _nw
//**************************************
EMPTY_nw = CHIP NOT (SIZE CHIP BY 30)
HVSHN_nw   = HVSHNi  NOT EMPTY_nw
NWEL_nw   = (NWELi NOT (NWELi AND RWDMY)) NOT EMPTY_nw     //broke NW resistor
ILP1_nw   = (POLYi NOT RPO_RPDMY) NOT EMPTY_nw	           //broke poly resistor
NSD_nw  = (NSDc NOT RPO_RPDMY) NOT EMPTY_nw                //broke od resistor
PSD_nw  = (PSDc NOT RPO_RPDMY) NOT EMPTY_nw                //broke od resistor
NTAP_nw = NTAPc NOT EMPTY_nw
PTAP_nw =  PTAPc NOT EMPTY_nw
PWEL_nw = PWELi NOT EMPTY_nw

NWR_nwT = NWRiT NOT EMPTY_nw
CO_nw   =  COi NOT EMPTY_nw
M1_nw = M1x NOT EMPTY_nw
VIA1_nw = VIA1i NOT EMPTY_nw
M2_nw = M2x NOT EMPTY_nw
VIA2_nw = VIA2i NOT EMPTY_nw
M3_nw = M3x NOT EMPTY_nw
VIA3_nw = VIA3i NOT EMPTY_nw
M4_nw = M4x NOT EMPTY_nw
VIA4_nw = VIA4i NOT EMPTY_nw
M5_nw = M5x NOT EMPTY_nw
VIAD_nw = VIADi NOT EMPTY_nw
MD_nw = MDx NOT EMPTY_nw



CTM1_nw = CTM1i NOT EMPTY_nw
VIA1k_nw = VIA1_nw NOT INTERACT CTM1_nw
CTM_VIA1_nw = VIA1_nw AND CTM1_nw
CTM2_nw = CTM2i NOT EMPTY_nw
VIA2k_nw = VIA2_nw NOT INTERACT CTM2_nw
CTM_VIA2_nw = VIA2_nw AND CTM2_nw
CTM3_nw = CTM3i NOT EMPTY_nw
VIA3k_nw = VIA3_nw NOT INTERACT CTM3_nw
CTM_VIA3_nw = VIA3_nw AND CTM3_nw
CTM4_nw = CTM4i NOT EMPTY_nw
VIA4k_nw = VIA4_nw NOT INTERACT CTM4_nw
CTM_VIA4_nw = VIA4_nw AND CTM4_nw
CB_nw =  CBi NOT EMPTY_nw
CBD_nw =  CBDi NOT EMPTY_nw
PPI_nw =  PPIi NOT EMPTY_nw
UBMn_nw =  UBMn NOT EMPTY_nw
UBMd_nw =  UBMd NOT EMPTY_nw

CONNECT NWEL_nw HVSHN_nw
CONNECT NTAP_nw HVSHN_nw
CONNECT	NTAP_nw NWEL_nw
CONNECT	NTAP_nw PSD_nw        //For butted pickup
CONNECT	PTAP_nw NSD_nw        //For butted pickup
CONNECT CO_nw PSD_nw          //For butted CO
CONNECT CO_nw NSD_nw          //For butted CO
CONNECT CO_nw ILP1_nw         //For butted CO
CONNECT	M1_nw ILP1_nw NTAP_nw PTAP_nw PSD_nw NSD_nw BY CO_nw
CONNECT M1_nw NWR_nwT BY CO_nw      // for NW resistor terminal


CONNECT	M1_nw M2_nw BY VIA1k_nw
CONNECT CTM1_nw M2_nw BY CTM_VIA1_nw
CONNECT	M2_nw M3_nw BY VIA2k_nw
CONNECT CTM2_nw M3_nw BY CTM_VIA2_nw
CONNECT	M3_nw M4_nw BY VIA3k_nw
CONNECT CTM3_nw M4_nw BY CTM_VIA3_nw
CONNECT	M4_nw M5_nw BY VIA4k_nw
CONNECT CTM4_nw M5_nw BY CTM_VIA4_nw
CONNECT	M5_nw  MD_nw BY VIAD_nw
// Wire-Bond
CONNECT M5_nw CB_nw
// Flip-chip
// 1_Ground up
CONNECT M5_nw UBMn_nw BY CBD_nw       
// 2_RDL (before passivation)
CONNECT MD_nw UBMd_nw
// 3_PPI (After passivation)
CONNECT M5_nw PPI_nw BY CBD_nw
CONNECT PPI_nw UBMd_nw
// end connection building for _nw
NBL.R.5 { @( NW OR SH_N)  interact with same NBL must bias at the same net except((NW OR SH_N) AND DPW region,except NLD6G5_DE_FULLY_ISO(GA) device
NBL_NO_DPW = NBL NOT DPW
NBL_NO_NW_DPW = NBL_NO_DPW NOT NWELi
NBL_NO_NW_nw = STAMP NBL_NO_NW_DPW BY HVSHN_nw
NWEL_NOT_BUT_HVSHN_nw = NWEL_nw NOT INTERACT HVSHNi
   EXT NWEL_NOT_BUT_HVSHN_nw NBL_NO_NW_nw < 0.005 ABUT  == 0  NOT CONNECTED REGION   // used to check which NW pickup not with same net with SH_N pickup ( if more than 1 SH_N pickup, stamp will cause missing )
   HVSHN_nw_NONDPW = (HVSHN_nw NOT INTERACT (NDD INTERACT NLD6G5_DE_FULLY_ISO_GATE)) NOT DPW
   NW_nw_NONDPW = NWEL_nw NOT DPW
   NBL INTERACT HVSHN_nw_NONDPW BY NET > 1               // used to highlight one NBL with more than 1 SH_N
   NBL INTERACT NW_nw_NONDPW BY NET > 1                 // used to highlight one NBL with more than 1 NW
   }   

        

// OD CHECKS
//==============
OD.W.1_OD.W.2 { @ Min. OD width for MOS and interconnect < 0.22
  INT OD < 0.22 ABUT < 90 SINGULAR REGION
}
OD.S.1 { @ Min. OD space < 0.28
  EXT OD < 0.28 ABUT < 90 SINGULAR REGION 
}

OD.C.1 { @ Min. NWEL olap NPOD tie down < 0.12
  ENC NPOD NONWR < 0.12 ABUT < 90 SINGULAR REGION
  A = NPOD CUT NONWR
  A NOT INTERACT IOLDNMOS_GATE

}
OD.C.2_OD.C.3 { @ Min. NWEL to NPOD space < 0.43
  A = NPOD NOT INSIDE NWEL
  X = A NOT ODWR
  EXT X NWEL < 0.43 ABUT < 90 SINGULAR REGION
  B =  X CUT NWEL
  B NOT INTERACT IOLDNMOS_GATE
}
OD.C.4 { @ NWEL overlap PPOD < 0.43
  A = ENC PPOD NWEL < 0.43 ABUT < 90 SINGULAR REGION
  A NOT INTERACT (MTP_2T2C AND MCEL)
  PPOD CUT NWEL    
}
OD.C.5 { @ NWEL space PPOD outside NW < 0.12
  EXT PTAP NWEL < 0.12 ABUT < 90 SINGULAR REGION
}
// OD.C.6 is checked by PP.C.5 and NP.C.5


#IFDEF Recommend
OD.C.7 { @ Min. clearance between parallel NW strap and PW strap < ^OD_C_7 um
	EXT NTAP PTAP < OD_C_7 PARALLEL ONLY OPPOSITE REGION
}
#ENDIF
// OD.S.2 is not necessary to check
OD.W.3 { @ Length of active with width < ^OD_W_3_J um, connected to butted strap > ^OD_W_3_T um
  SD = (DACT INTERACT ALL_GATE) NOT ALL_GATE
  NP_PP_BTE = NPOD COIN OUTSIDE EDGE PPOD  
  BUTTED_EDGE = LENGTH NP_PP_BTE < OD_W_3_J
  CHECK_SD = SD WITH EDGE BUTTED_EDGE
  NARROW_SD = INT (CHECK_SD COIN INSIDE EDGE OD) < OD_W_3_J ABUT < 90 OPPOSITE REGION 
  CHECK_OD = (NARROW_SD WITH EDGE BUTTED_EDGE) OR (NARROW_SD WITH EDGE GATE_W)
  PATH LENGTH (OD COIN INSIDE EDGE CHECK_OD) > OD_W_3_T
}
OD.A.1 { @ Min. area of stand-alone OD region < 0.202
  OD AREA < 0.202
}



OD.R.5 { @ 1.8v 5v native NMOS, 5v lvt NMOS GB must be surrounded by its unique bulk ring
	A = NTN_GATE OR NCH5_LVT_G
	B = HOLES PPOD INNER
	A NOT INSIDE B
	(B INTERACT A) INTERACT ((OTHER_DEVICE NOT A) OR PORES)
    C = STAMP A BY ILP1_mf
	D = (OD INTERACT A) NOT POLY
    E = STAMP D BY NSD_mf
	B INTERACT C BY NET > 1
	B INTERACT E BY NET > 2
}

OD.R.6 { @ 5v lvt PMOS must be surrounded by its unique N+ OD ring
	A = HVGT AND PDD
	B = HOLES (NPOD AND NWEL) INNER
	A NOT INSIDE B
	(B INTERACT A) INTERACT ((OTHER_DEVICE NOT A) OR PORES)
	B INTERACT (PPOD INTERACT A) > 1
}
#IFDEF Recommend
OD.EX.1 { @ Min. extension of NW beyond NPOD which is parallel NW strap and PW strap >= ^OD_EX_1
   A = EXT NTAP PTAP < 0.72 OPPOSITE PARALLEL REGION
   B = NTAP COINCIDENT EDGE A
   ENC B NWEL < OD_EX_1	ABUT < 90 OPPOSITE REGION
}

#ENDIF


OD.C.8 { @ Min clearance from NW to {(OD INTERACT (OD NOT (NP OR PP))) NOT INTERACT CO} >= ^OD_C_8
  A = (OD INTERACT (OD NOT (NP OR PP))) NOT INTERACT CO
  EXT NWEL A < OD_C_8 ABUT < 90 SINGULAR REGION
}

OD.E.1 { @ Min extension of NW beyond {(OD INTERACT (OD NOT (NP OR PP))) NOT INTERACT CO} >= ^OD_E_1
  A = (OD INTERACT (OD NOT (NP OR PP))) NOT INTERACT CO
  ENC A NWEL < OD_E_1 ABUT < 90 SINGULAR REGION
}

OD.R.7 { @ {(OD INTERACT (OD NOT (NP OR PP))) NOT INTERACT CO} cut NW is not allowed .
  A = (OD INTERACT (OD NOT (NP OR PP))) NOT INTERACT CO
  A CUT NWEL
}



HVOD.W.1 { @ min width of active OD in channel width direction of HV devices >= ^HVOD_W_1
  PATH LENGTH HVGATE_W < HVOD_W_1 
}

HVOD.W.2 { @ min width of HVOD >= ^HVOD_W_2
  INT HVOD < HVOD_W_2 ABUT < 90 SINGULAR REGION
}

HVOD.W.3 { @ Min width of HVMOS OD Bulk ring >= ^HVOD_W_3
  INT PPOD_BULK_R_HVMOS < HVOD_W_3 ABUT < 90 SINGULAR REGION
}

//HVOD.W.5 is checked by HVOD.W.2


HVOD.A.1 { @ min area of HVOD >= ^HVOD_A_1
  AREA HVOD < HVOD_A_1
}

HVOD.W.4_NLD6G5_DE_FULLY_ISO { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_NLD6G5_DE_FULLY_ISO
    INT NPOD_PICK_R_NLD6G5_DE_FULLY_ISO < HVOD_W_4_NLD6G5_DE_FULLY_ISO ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_NLD6G5_SA_FULLY_ISO { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_NLD6G5_SA_FULLY_ISO
    INT NPOD_PICK_R_NLD6G5_SA_FULLY_ISO < HVOD_W_4_NLD6G5_SA_FULLY_ISO ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_NA6G5_NBL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_NA6G5_NBL
    INT NPOD_PICK_R_NA6G5_NBL < HVOD_W_4_NA6G5_NBL ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_NLD9G5_FULLY_ISO { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_NLD9G5_FULLY_ISO
    INT NPOD_PICK_R_NLD9G5_FULLY_ISO < HVOD_W_4_NLD9G5_FULLY_ISO ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_NLD12G5_FULLY_ISO { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_NLD12G5_FULLY_ISO
    INT NPOD_PICK_R_NLD12G5_FULLY_ISO < HVOD_W_4_NLD12G5_FULLY_ISO ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_NLD16G5_FULLY_ISO { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_NLD16G5_FULLY_ISO
    INT NPOD_PICK_R_NLD16G5_FULLY_ISO < HVOD_W_4_NLD16G5_FULLY_ISO ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_NLD20G5_FULLY_ISO { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_NLD20G5_FULLY_ISO
    INT NPOD_PICK_R_NLD20G5_FULLY_ISO < HVOD_W_4_NLD20G5_FULLY_ISO ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_NLD24G5_FULLY_ISO { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_NLD24G5_FULLY_ISO
    INT NPOD_PICK_R_NLD24G5_FULLY_ISO < HVOD_W_4_NLD24G5_FULLY_ISO ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_NLD24G5_ISO_SWITCH { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_NLD24G5_ISO_SWITCH
    INT NPOD_PICK_R_NLD24G5_ISO_SWITCH < HVOD_W_4_NLD24G5_ISO_SWITCH ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_NA20G5_NBL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_NA20G5_NBL
    INT NPOD_PICK_R_NA20G5_NBL < HVOD_W_4_NA20G5_NBL ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_NA29G5_NBL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_NA29G5_NBL
    INT NPOD_PICK_R_NA29G5_NBL < HVOD_W_4_NA29G5_NBL ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_NA29G3_DEP_NBL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_NA29G3_DEP_NBL
    INT NPOD_PICK_R_NA29G3_DEP_NBL < HVOD_W_4_NA29G3_DEP_NBL ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_PA6G5_DE_BL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_PA6G5_DE_BL
    INT NPOD_PICK_R_PA6G5_DE_BL < HVOD_W_4_PA6G5_DE_BL ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_PA6G5_SA_BL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_PA6G5_SA_BL
    INT NPOD_PICK_R_PA6G5_SA_BL < HVOD_W_4_PA6G5_SA_BL ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_PA12G5_SLIT_BL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_PA12G5_SLIT_BL
    INT NPOD_PICK_R_PA12G5_SLIT_BL < HVOD_W_4_PA12G5_SLIT_BL ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_PA12G5_NBL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_PA12G5_NBL
    INT NPOD_PICK_R_PA12G5_NBL < HVOD_W_4_PA12G5_NBL ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_PA20G5_BL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_PA20G5_BL
    INT NPOD_PICK_R_PA20G5_BL < HVOD_W_4_PA20G5_BL ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_PA20G5_SLIT_BL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_PA20G5_SLIT_BL
    INT NPOD_PICK_R_PA20G5_SLIT_BL < HVOD_W_4_PA20G5_SLIT_BL ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_PA29G5_BL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_PA29G5_BL
    INT NPOD_PICK_R_PA29G5_BL < HVOD_W_4_PA29G5_BL ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_PA36G5_BL_GB { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_PA36G5_BL_GB
    INT NPOD_PICK_R_PA36G5_BL_GB < HVOD_W_4_PA36G5_BL_GB ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_PA45G5_BL_GB { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_PA45G5_BL_GB
    INT NPOD_PICK_R_PA45G5_BL_GB < HVOD_W_4_PA45G5_BL_GB ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_PCH5_AS_SWITCH_MAC { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_PCH5_AS_SWITCH_MAC
    INT NPOD_PICK_R_PCH5_AS_SWITCH_MAC < HVOD_W_4_PCH5_AS_SWITCH_MAC ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_NLD5G5_ISO_SWITCH { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_NLD5G5_ISO_SWITCH
    INT NPOD_PICK_R_NLD5G5_ISO_SWITCH < HVOD_W_4_NLD5G5_ISO_SWITCH ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_PA9G5_NBL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_PA9G5_NBL
    INT NPOD_PICK_R_PA9G5_NBL < HVOD_W_4_PA9G5_NBL ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_PA9G5_SLIT_NBL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_PA9G5_SLIT_NBL
    INT NPOD_PICK_R_PA9G5_SLIT_NBL < HVOD_W_4_PA9G5_SLIT_NBL ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_PA16G5_NBL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_PA16G5_NBL
    INT NPOD_PICK_R_PA16G5_NBL < HVOD_W_4_PA16G5_NBL ABUT < 90 SINGULAR REGION	
}
HVOD.W.4_PA16G5_SLIT_NBL { @ min width of HVMOS N+ pickup-ring >= ^HVOD_W_4_PA16G5_SLIT_NBL
    INT NPOD_PICK_R_PA16G5_SLIT_NBL < HVOD_W_4_PA16G5_SLIT_NBL ABUT < 90 SINGULAR REGION	
}


HVOD.W.6_SBD_12V { @ min width of P+ pickup ring OD for HV SBD_12V diode >= ^HVOD_W_6_SBD_12V
    A = PPOD_PICK_R TOUCH (PPOD_PICK_H ENCLOSE DIO_SBD_12V_M)
	INT A < HVOD_W_6_SBD_12V ABUT < 90 SINGULAR REGION
}

HVOD.W.7_SBD_12V { @ min width of N+ pickup ring OD for HV SBD_12V diode >= ^HVOD_W_7_SBD_12V
    A = NPOD_PICK_R TOUCH (NPOD_PICK_H ENCLOSE DIO_SBD_12V_M)
	INT A < HVOD_W_7_SBD_12V ABUT < 90 SINGULAR REGION
}

HVOD.W.6_SBD_16V { @ min width of P+ pickup ring OD for HV SBD_16V diode >= ^HVOD_W_6_SBD_16V
    A = PPOD_PICK_R TOUCH (PPOD_PICK_H ENCLOSE DIO_SBD_16V_M)
	INT A < HVOD_W_6_SBD_16V ABUT < 90 SINGULAR REGION
}

HVOD.W.7_SBD_16V { @ min width of N+ pickup ring OD for HV SBD_16V diode >= ^HVOD_W_7_SBD_16V
    A = NPOD_PICK_R TOUCH (NPOD_PICK_H ENCLOSE DIO_SBD_16V_M)
	INT A < HVOD_W_7_SBD_16V ABUT < 90 SINGULAR REGION
}

HVOD.W.6_SBD_24V { @ min width of P+ pickup ring OD for HV SBD_24V diode >= ^HVOD_W_6_SBD_24V
    A = PPOD_PICK_R TOUCH (PPOD_PICK_H ENCLOSE DIO_SBD_24V_M)
	INT A < HVOD_W_6_SBD_24V ABUT < 90 SINGULAR REGION
}

HVOD.W.7_SBD_24V { @ min width of N+ pickup ring OD for HV SBD_24V diode >= ^HVOD_W_7_SBD_24V
    A = NPOD_PICK_R TOUCH (NPOD_PICK_H ENCLOSE DIO_SBD_24V_M)
	INT A < HVOD_W_7_SBD_24V ABUT < 90 SINGULAR REGION
}

//HVOD.W.8 is checked by HVOD.W.2



HVOD.C.3.7_NPDDSHNNBL_PO_BOUNDARY { @ min and max clearance from P+ isolation-ring to PSUB == ^HVOD_C_3_7_NPDDSHNNBL_PO_BOUNDARY 
	A = PSUB INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_E
    B = SIZE A BY HVOD_C_3_7_NPDDSHNNBL_PO_BOUNDARY
    PPOD_ISO_H_BJT_NPDDSHNNBL_PO_BOUNDARY XOR B
}
HVOD.C.3.7_NPWSHNNBL_PO_BOUNDARY { @ min and max clearance from P+ isolation-ring to PSUB == ^HVOD_C_3_7_NPWSHNNBL_PO_BOUNDARY 
	A = PSUB INTERACT BJT_NPWSHNNBL_PO_BOUNDARY_E
    B = SIZE A BY HVOD_C_3_7_NPWSHNNBL_PO_BOUNDARY
    PPOD_ISO_H_BJT_NPWSHNNBL_PO_BOUNDARY XOR B
}
HVOD.C.3.7_PNDDSHPNBL { @ min and max clearance from P+ isolation-ring to PSUB == ^HVOD_C_3_7_PNDDSHPNBL 
	A = PSUB INTERACT BJT_PNDDSHPNBL_E
    B = SIZE A BY HVOD_C_3_7_PNDDSHPNBL
    PPOD_ISO_H_BJT_PNDDSHPNBL XOR B
}

HVDIO_M_1 = COPY HVDIO_M 
HVDIO_P_1 = COPY HVDIO_P 

HVOD.S.2_NPDD { @ min  space between Anode OD and Cathode OD for HV diodes >= ^HVOD_S_2_NPDD
   EXT DIO_NPDD_M DIO_NPDD_P < HVOD_S_2_NPDD ABUT < 90 SINGULAR REGION
}
HVOD.S.2_PBSHNNBL { @ min  space between Anode OD and Cathode OD for HV diodes >= ^HVOD_S_2_PBSHNNBL
   EXT DIO_PBSHNNBL_M DIO_PBSHNNBL_P < HVOD_S_2_PBSHNNBL ABUT < 90 SINGULAR REGION
}
HVOD.S.2_PDDSHNNBL { @ min  space between Anode OD and Cathode OD for HV diodes >= ^HVOD_S_2_PDDSHNNBL
   EXT DIO_PDDSHNNBL_M DIO_PDDSHNNBL_P < HVOD_S_2_PDDSHNNBL ABUT < 90 SINGULAR REGION
}
HVOD.S.2_NHVPW_GB { @ min  space between Anode OD and Cathode OD for HV diodes >= ^HVOD_S_2_NHVPW_GB
   EXT DIO_NHVPW_GB_M DIO_NHVPW_GB_P < HVOD_S_2_NHVPW_GB ABUT < 90 SINGULAR REGION
}
HVOD.S.2_SHPNBLSHN_GB { @ min  space between Anode OD and Cathode OD for HV diodes >= ^HVOD_S_2_SHPNBLSHN_GB
   EXT DIO_SHPNBLSHN_GB_M DIO_SHPNBLSHN_GB_P < HVOD_S_2_SHPNBLSHN_GB ABUT < 90 SINGULAR REGION
}


HVPPOD = (OD AND PP) INSIDE HVDMY
HVNPOD = (OD AND NP) INSIDE HVDMY
NEW_HVMOS_IN_V12 = (((((NLD5G5_ISO_SWITCH_GATE OR NLD6G5_DE_GATE) OR PCH5_AS_SWITCH_MAC_GATE) OR PA9G5_NBL_GATE) OR PA9G5_SLIT_NBL_GATE) OR PA16G5_NBL_GATE) OR PA16G5_SLIT_NBL_GATE
HVOD.C.1 { @ Min clearance from a {HV P+OD OUTSIDE SH_N} to SH_N(except GA HVMOS) >= ^HVOD_C_1
   X1 = PPOD_ISO_H ENCLOSE ((((((((((((DIO_SBD_12V_M OR DIO_SBD_16V_M) OR DIO_SBD_24V_M) OR BJT_PNDDSHPNBL_E) OR HVESD_merge_PNP_6) OR HVESD_merge_PNP_9) OR HVESD_merge_PNP_12_PDD) OR HVESD_merge_PNP_16) OR HVESD_merge_PNP_20_PDD) OR HVESD_merge_PNP_20) OR HVESD_merge_PNP_24) OR HVESD_merge_PNP_29) OR HVESD_merge_PNP_36)
   X = ((((((BJT_NPDDSHNNBL_PO_BOUNDARY_C_H OR BJT_NPWSHNNBL_PO_BOUNDARY_C_H) OR BJT_NPDDSHNNBL_BGR8_C_H) OR BJT_NPWSHNNBL_BGR8_C_H) OR DIO_PBSHNNBL_H) OR DIO_PDDSHNNBL_H) OR ANO_CATH_ESD_DIO_GA) OR DIO_SHPNBLSHN_GB_M
   X2 = PPOD_ISO_H_HVMOS INTERACT ((((((((((((((((NLD6G5_DE_FULLY_ISO_GATE OR NLD6G5_SA_FULLY_ISO_GATE) OR NA6G5_NBL_GATE) OR PA6G5_DE_BL_GATE) OR PA6G5_SA_BL_GATE) OR NLD9G5_FULLY_ISO_GATE) OR NLD12G5_FULLY_ISO_GATE) OR NLD16G5_FULLY_ISO_GATE) OR PA12G5_SLIT_BL_GATE) OR PA12G5_NBL_GATE) OR NLD20G5_FULLY_ISO_GATE) OR PA20G5_BL_GATE) OR PA20G5_SLIT_BL_GATE) OR PA29G5_BL_GATE) OR NEW_HVMOS_IN_V12) OR NA20G5_GATE) OR NA20G5_NBL_GATE)
   POWER_DEVICE_BULK_OD = PTAP INSIDE (PPOD_ISO_H INTERACT POWER_DEVICES)
   A = ((((HVPPOD OUTSIDE HVSHN) NOT X2) NOT POWER_DEVICE_BULK_OD) NOT INTERACT X) NOT INTERACT X1
   B = (HVSHN NOT X2) NOT INTERACT ((NBL_ISO_R_9V OR NBL_ISO_R_29V) OR NBL_ISO_R_45V)
   EXT A B < HVOD_C_1 ABUT < 90 SINGULAR REGION
}

HVOD.C.1.1 { @ Min clearance from a {HV P+OD OUTSIDE SH_N} to {PSUB OUTSIDE SH_N} >= ^HVOD_C_1_1
   A = HVPPOD OUTSIDE HVSHN
   B = PSUB OUTSIDE HVSHN
   EXT A B < HVOD_C_1_1 ABUT < 90 SINGULAR REGION
}

HVOD.C.1_GB { @ Min clearance from a {(HV P+OD INTERACT HVGB) OUTSIDE SH_N} to SH_N >= ^HVOD_C_1_GB
			  @ (except NLD45G5_NBL(GB),PA45G5_NBL(GB),P+SHP in SHN+NBL Diode(GB),45V_ESD_GB,GB_HVESD_Diode)
   X1 = PPOD_ISO_H ENCLOSE DIO_SHPNBLSHN_GB_M
   X = ((((((NLD45G5_GB_CH OR NLD36G5_GB_CH ) OR NA45G3_DEP_GB_CH) OR PA36G5_BL_GB_OD_ALL) OR PA45G5_BL_GB_OD_ALL) OR COL_EMI_ESD_merge_PNP_45) OR COL_EMI_ESD_merge_PNP_36) OR ANO_CATH_ESD_DIO_GB 
   A = ((((HVPPOD INTERACT HVGB) OUTSIDE HVSHN) NOT INTERACT X) NOT INTERACT X1) NOT INTERACT PPOD_ISO_R_45V
   B = (HVSHN NOT INTERACT X) NOT INTERACT X1
   EXT A B < HVOD_C_1_GB ABUT < 90 SINGULAR REGION
}

HVOD.C.2.1 { @ Min clearance from a {HV P+OD OUTSIDE NDD} to {{PSUB INTERACT NDD} NOT NDD} >= ^HVOD_C_2_1
   X = (PPOD_ISO_H ENCLOSE ((((BJT_PNDDSHPNBL_E OR DIO_SBD_12V_M) OR DIO_SBD_16V_M) OR DIO_SBD_24V_M) OR (NCH5_LVT_G INTERACT (((HOLES PPOD_ISO_R_9V INNER) OR (HOLES PPOD_ISO_R_29V INNER)) OR (HOLES PPOD_ISO_R_45V INNER))))) OR PPOD_ISO_R_45V
   A = (HVPPOD OUTSIDE NDD) NOT INTERACT X
   B = ((PSUB INTERACT NDD) NOT NDD) NOT INTERACT X
   EXT A B < HVOD_C_2_1 ABUT < 90 SINGULAR REGION
}

HVOD.C.5 { @ Min clearance from  a HV N+ACTIVE outside SH_N to SH_N edge >= ^HVOD_C_5
   X = ((BJT_NPDDSHNNBL_PO_BOUNDARY_C_H OR BJT_NPWSHNNBL_PO_BOUNDARY_C_H) OR BJT_NPDDSHNNBL_BGR8_C_H) OR BJT_NPWSHNNBL_BGR8_C_H
   A = (HVNACT OUTSIDE HVSHN) NOT INTERACT X
   B = HVSHN NOT INTERACT X
   EXT A B < HVOD_C_5 ABUT < 90 SINGULAR REGION
}

HVOD.C.6 { @ Min clearance from {(HV N+OD INTERACT HVGB) OUTSIDE SH_N} to SH_N edge >= ^HVOD_C_6
   A = ((HVNPOD INTERACT HVGB) OUTSIDE HVSHN) NOT INTERACT NLD36G5_GB_GATE
   B = HVSHN  NOT INTERACT NLD36G5_GB_GATE
   EXT A B < HVOD_C_6 ABUT < 90 SINGULAR REGION
}

HVOD.C.9 { @ Min clearance from SH_N to {(OD INTERACT (OD NOT (NP OR PP))) NOT INTERACT CO} >= ^HVOD_C_9
   A = (OD INTERACT (OD NOT (NP OR PP))) NOT INTERACT CO
   EXT HVSHN A < HVOD_C_9 ABUT < 90 SINGULAR REGION
   EXT HVNW A < HVOD_C_9 ABUT < 90 SINGULAR REGION
}

HVOD.E.1 { @ Min extension of SH_N beyond SH_N pickup >= ^HVOD_E_1
   X1 = PPOD_ISO_H ENCLOSE (ANO_CATH_ESD_DIO_GA OR ANO_CATH_ESD_DIO_GB)
   X = (((((((NLD6G5_DE_FULLY_ISO_CH OR PA12G5_SLIT_BL_CH) OR PA20G5_SLIT_BL_CH) OR NLD45G5_GB_CH) OR PA16G5_SLIT_NBL_CH) OR PA9G5_SLIT_NBL_CH) OR NLD6G5_DE_CH) OR NLD36G5_GB_CH) OR NA45G3_DEP_GB_CH 
   A = (NPOD NOT INTERACT X) NOT INTERACT X1
   B = (HVSHN NOT INTERACT X) NOT INTERACT X1
   ENC A B < HVOD_E_1 ABUT < 90 SINGULAR REGION
}

HVOD.E.1_GB { @ Min extension of SH_N beyond SH_N pickup >= ^HVOD_E_1_GB
   X1 = PPOD_ISO_H ENCLOSE ANO_CATH_ESD_DIO_GB
   X = ((((NLD45G5_GB_CH OR PA45G5_BL_GB_OD_ALL) OR PA36G5_BL_GB_OD_ALL) OR DIO_SHPNBLSHN_GB_H) OR NLD36G5_GB_CH) OR NA45G3_DEP_GB_CH
   A = ((NPOD AND HVGB) NOT INTERACT X) NOT INTERACT X1
   B = ((HVSHN AND HVGB) NOT INTERACT X) NOT INTERACT X1
   ENC A B < HVOD_E_1_GB ABUT < 90 SINGULAR REGION
}

HVOD.E.2 { @ Min extension of SH_N beyond {HV P+ACTIVE INSIDE SH_N} >= ^HVOD_E_2
   X = ((((((((((((((((PA6G5_DE_BL_OD_ALL OR PA6G5_SA_BL_OD_ALL) OR PA12G5_NBL_OD_ALL) OR PA20G5_BL_OD_ALL) OR PA29G5_BL_OD_ALL) OR PA45G5_BL_GB_OD_ALL) OR HVESD_merge_PNP_12_PDD) OR HVESD_merge_PNP_16) OR HVESD_merge_PNP_20_PDD) OR HVESD_merge_PNP_20) OR HVESD_merge_PNP_24) OR HVESD_merge_PNP_29) OR ANO_CATH_ESD_DIO_GB) OR HVESD_merge_PNP_45) OR HVESD_merge_PNP_36) OR PA16G5_NBL_OD_ALL) OR PA9G5_NBL_OD_ALL) OR PA36G5_BL_GB_OD_ALL
   Y = NBL INTERACT (PA16G5_NBL_OD_ALL OR PA9G5_NBL_OD_ALL) 
   A = (HVPACT INSIDE HVSHN) NOT INTERACT (X OR Y)
   B = HVSHN NOT INTERACT (X OR Y)
   ENC A B < HVOD_E_2 ABUT < 90 SINGULAR REGION
}

HVOD.E.3 { @ Min extension of SH_N beyond {(HV P+OD INTERACT HVGB) INSIDE SH_N} >= ^HVOD_E_3
   X =  HVESD_merge_PNP_45 OR HVESD_merge_PNP_36
   A = ((HVPPOD INTERACT HVGB) INSIDE HVSHN) NOT INTERACT X
   B = HVSHN NOT INTERACT X
   ENC A B < HVOD_E_3 ABUT < 90 SINGULAR REGION
}

HVOD.E.5_SBD_12V { @ Min extension of OD beyond RPO(Cathode OD) for HV SBD_12V diode >= ^HVOD_E_5_SBD_12V
   ENC RPO DIO_SBD_12V_M < HVOD_E_5_SBD_12V ABUT < 90 SINGULAR REGION
}
HVOD.E.5_SBD_16V { @ Min extension of OD beyond RPO(Cathode OD) for HV SBD_16V diode >= ^HVOD_E_5_SBD_16V
   ENC RPO DIO_SBD_16V_M < HVOD_E_5_SBD_16V ABUT < 90 SINGULAR REGION
}
HVOD.E.5_SBD_24V { @ Min extension of OD beyond RPO(Cathode OD) for HV SBD_24V diode >= ^HVOD_E_5_SBD_24V
   ENC RPO DIO_SBD_24V_M < HVOD_E_5_SBD_24V ABUT < 90 SINGULAR REGION
}

HVOD.E.6 { @ Min extension of SH_N beyond {(OD INTERACT (OD NOT (NP OR PP))) NOT INTERACT CO} >= ^HVOD_E_6
   A = (OD INTERACT (OD NOT (NP OR PP))) NOT INTERACT CO
   ENC A HVSHN < HVOD_E_6 ABUT < 90 SINGULAR REGION
   ENC A HVNW < HVOD_E_6 ABUT < 90 SINGULAR REGION

}

POWER_DEVICES_pre = ((((((((((NLD6G5_SA_FULLY_ISO_GATE OR NLD6G5_DE_FULLY_ISO_GATE) OR NLD9G5_FULLY_ISO_GATE) OR NLD12G5_FULLY_ISO_GATE) OR NLD16G5_FULLY_ISO_GATE) OR NLD20G5_FULLY_ISO_GATE) OR NLD24G5_FULLY_ISO_GATE) OR NLD36G5_GB_GATE) OR NLD45G5_GB_GATE) OR PA6G5_SA_BL_GATE) OR PA6G5_DE_BL_GATE) OR PA12G5_SLIT_BL_GATE
NPOWER_DEVICES = (((((((((((((((NLD6G5_SA_FULLY_ISO_GATE OR NLD6G5_DE_FULLY_ISO_GATE) OR NLD9G5_FULLY_ISO_GATE) OR NLD12G5_FULLY_ISO_GATE) OR NLD16G5_FULLY_ISO_GATE) OR NLD20G5_FULLY_ISO_GATE) OR NLD24G5_FULLY_ISO_GATE) OR NLD36G5_GB_GATE) OR NLD45G5_GB_GATE) OR NLD5G5_ISO_SWITCH_GATE) OR NLD6G5_SA_GATE) OR NLD6G5_DE_GATE) OR NLD24G5_GATE) OR NLD24G5_SWITCH_GATE) OR NLD12G5_GATE) OR NLD9G5_GATE) OR NLD16G5_GATE 
PPOWER_DEVICES = ((PA20G5_SLIT_BL_GATE OR PA9G5_SLIT_NBL_GATE) OR PA16G5_SLIT_NBL_GATE) OR PA12G5_SLIT_BL_GATE
POWER_DEVICES = (NPOWER_DEVICES OR PPOWER_DEVICES) OR POWER_DEVICES_pre
HVNMOS_SRC = ((( OD INTERACT NPOWER_DEVICES ) NOT POLY ) AND NP ) AND HVPB  
HVNMOS_TAP = ((( OD INTERACT NPOWER_DEVICES ) NOT POLY ) AND PP) AND HVPB  
HVPMOS_SRC = ((( OD INTERACT PPOWER_DEVICES ) NOT POLY ) AND PP ) AND HVSHN  
HVPMOS_TAP = ((( OD INTERACT PPOWER_DEVICES ) NOT POLY ) AND NP) AND HVSHN


HVOD.R.1 { @ The source OD and Bulk OD of Power Device must be butted together .
   HVNMOS_TAP NOT TOUCH HVNMOS_SRC
   HVNMOS_SRC NOT TOUCH HVNMOS_TAP
   HVPMOS_TAP NOT TOUCH HVPMOS_SRC
   HVPMOS_SRC NOT TOUCH HVPMOS_TAP
}

HVOD.R.2a { @ each HVPMOS must be surrounded by its own N+ isolation ring and P+ isolation ring
  ALL_HVPMOS_OD1 NOT INSIDE NPOD_PICK_H_PMOS
  ALL_HVPMOS_OD NOT INSIDE PPOD_ISO_H
}

HVOD.R.2b { @ two or more HV PMOS share one N+ isolation ring and P+ isolation ring is not allowed .exclude common source/drain structure (Two or more HVPMOS are defined that they don't share one NBL.)
  A = COPY ALL_HVPMOS_OD
  B = NBL INTERACT A
  NPOD_PICK_H_PMOS INTERACT A > 1 
  PPOD_ISO_H INTERACT B > 1 
}

HV_B_N = PTAP INSIDE (PPOD_ISO_H INTERACT HVGATE)

HV_S_N_AN  = HV_S_N NOT HVMOSPAIR
HV_D_N_AN  = HV_D_N NOT HVMOSPAIR
HV_B_N_AN  = HV_B_N NOT HVMOSPAIR
HV_G_N_AN  = HV_GATE_N NOT HVMOSPAIR

HV_S_N_C = STAMP HV_S_N_AN BY NSD_mf
HV_D_N_C = STAMP HV_D_N_AN BY NTAP_mf
HV_B_N_C = STAMP HV_B_N_AN BY PTAP_mf
HV_G_N_C = STAMP HV_G_N_AN BY ILP1_mf


HV_B_P = NTAP INSIDE (NPOD_PICK_H_PMOS INTERACT HVGATE)

HV_S_P_C = STAMP HV_S_P BY PSD_mf
HV_D_P_C = STAMP HV_D_P BY PTAP_mf
HV_B_P_C = STAMP HV_B_P BY NTAP_mf
HV_G_P_C = STAMP HV_GATE_P BY ILP1_mf


HVOD.R.2c { @ All Source ODS, Bulk ODS in the same multi-finger structure must be connected together through metal connection.
  NPOD_PICK_H_PMOS INTERACT HV_S_P_C BY NET > 1
  NPOD_PICK_H_PMOS INTERACT HV_B_P_C BY NET > 1
}


//HVOD.R.2 is checked by HVOD.R.2a
//HVOD.R.2 is checked by HVOD.R.2b
//HVOD.R.2 is checked by HVOD.R.2c


HVOD.R.3a { @ each HVNMOS must be surrounded by its own P+ isolation ring.
           @ common source/drain structure may share the same P+isolation ring
  ALL_HVNMOS_OD NOT INSIDE PPOD_ISO_H
}

HVOD.R.3b { @ Two or more HV NMOS share one P+ isolation ring(exclude common source/drain structure)
  A = COPY ALL_HVNMOS_OD
  B = NBL INTERACT 	A
  A1 = (((((((NLD9G5_CH OR NLD12G5_CH) OR NLD16G5_CH) OR NLD20G5_CH) OR NLD6G5_SA_CH) OR NLD6G5_DE_CH) OR NLD24G5_SWITCH_CH) OR NLD24G5_CH) OR NLD5G5_ISO_SWITCH_CH
  B1 = NDD INTERACT A1
  B2 = A NOT (B OR B1)
  PPOD_ISO_H INTERACT B > 1
  PPOD_ISO_H INTERACT B1 > 1
  PPOD_ISO_H INTERACT B2 > 1
}

HVOD.R.3c { @ All HVNMOS Source ODS,GATES,Drain ODS,Bulk ODS in the same multi-finger structure must together through metal connection.
  PPOD_ISO_H INTERACT HV_S_N_C BY NET > 1
  PPOD_ISO_H INTERACT HV_D_N_C BY NET > 1
  PPOD_ISO_H INTERACT HV_B_N_C BY NET > 1
  PPOD_ISO_H INTERACT HV_G_N_C BY NET > 1
}

HVOD.R.4 { @ (HVOD AND PO)must be a rectangle. A concave (HVOD AND PO) is not allowed
  A = HVOD AND ALL_GATE
  NOT RECTANGLE A
}

HVOD.R.6 { @ HVNMOS or HVPMOS sharing one P+ isolation ring is not allowed.
  A = (PPOD_ISO_H INTERACT ALL_HVPMOS_OD) INTERACT ALL_HVNMOS_OD
  ALL_HVPMOS_OD INTERACT A
  ALL_HVNMOS_OD INTERACT A
}


HVDIO_P_WITH_ISO = HVDIO_P NOT ((((DIO_NPDD_P OR DIO_SHNNBLPSUBSHP_P) OR DIO_SHNPSUBSHP_P) OR DIO_NHVPW_GB_P) OR DIO_SHNNBLPSUBSHP_GB_P)
HVDIO_M_WITH_ISO = HVDIO_M NOT ((((DIO_NPDD_M OR DIO_SHNNBLPSUBSHP_M) OR DIO_SHNPSUBSHP_M) OR DIO_NHVPW_GB_M) OR DIO_SHNNBLPSUBSHP_GB_M)

HVOD.R.7a { @ HV DIODE without P+ iso ring
  HVDIO_M_WITH_ISO NOT INSIDE PPOD_ISO_H
  HVDIO_P_WITH_ISO NOT INSIDE PPOD_ISO_H
}

HVOD.R.7b { @ (OD AND DIODMY), (OD AND DIO3TDMY), (OD AND DIO4TDMY), (OD AND SBDDMY), (OD AND SBD3TDMY)  share one P iso ring
  A = OD AND HVDIODMY
  B = OD AND HVDIODMY3
  C = OD AND HVDIODMY4
  D = OD AND HVSBDDMY
  E = OD AND HVSBDDMY3
  F = PPOD_ISO_H ENCLOSE HVDIO_M_WITH_ISO
  (F INTERACT A) INTERACT B
  (F INTERACT A) INTERACT C
  (F INTERACT A) INTERACT D
  (F INTERACT A) INTERACT E
  (F INTERACT B) INTERACT C
  (F INTERACT B) INTERACT D
  (F INTERACT B) INTERACT E
  (F INTERACT C) INTERACT D
  (F INTERACT C) INTERACT E
  (F INTERACT D) INTERACT E
}

HVOD.R.7c { @ OD without HVDIO inside P iso ring of HVDIO
  OD_W_HVDIO = (HVOD AND ((((HVDIODMY OR HVDIODMY3) OR HVDIODMY4) OR HVSBDDMY) OR HVSBDDMY3)) NOT SDI
  OD_WO_HVDIO = OD NOT OD_W_HVDIO
  E = PPOD_ISO_H ENCLOSE HVDIO_M_WITH_ISO
  (E INTERACT OD_W_HVDIO) INTERACT OD_WO_HVDIO
}


#IFDEF Recommend
HVOD.R.9 { @ Each isolation ring OR pick-up ring OR bulk ring only consist of one OD ring 
  PPOD_ISO_R_1_R    = ((PPOD_ISO_R_1 TOUCH ((HOLES PPOD_ISO_R_1) NOT PPOD_ISO_R_1)) NOT PPOD_ISO_R_LU) NOT INTERACT SEALRING_ALL
  PPOD_ISO_R_1_H_S  = HOLES PPOD_ISO_R_1_R INNER
  PPOD_ISO_R_1_H_L  = HOLES PPOD_ISO_R_1_R
  PPOD_ISO_R_1_H_LNS = PPOD_ISO_R_1_H_L NOT PPOD_ISO_R_1_H_S
  PPOD_ISO_R_1_R INTERACT PPOD_ISO_R_1_H_LNS 
  PPOD_BULK_R_1_R    = ((PPOD_BULK_R_1 TOUCH ((HOLES PPOD_BULK_R_1) NOT PPOD_BULK_R_1)) NOT SBD_HVDIO_M) NOT INTERACT SEALRING_ALL
  PPOD_BULK_R_1_H_S  = HOLES PPOD_BULK_R_1_R INNER
  PPOD_BULK_R_1_H_L  = HOLES PPOD_BULK_R_1_R
  PPOD_BULK_R_1_H_LNS = PPOD_BULK_R_1_H_L NOT PPOD_BULK_R_1_H_S
  PPOD_BULK_R_1_R INTERACT PPOD_BULK_R_1_H_LNS 
  NPOD_PICK_R_1_R    = ((NPOD_PICK_R_1 TOUCH ((HOLES NPOD_PICK_R_1) NOT NPOD_PICK_R_1)) NOT NPOD_GR_R) NOT INTERACT SEALRING_ALL
  NPOD_PICK_R_1_H_S  = HOLES NPOD_PICK_R_1_R INNER
  NPOD_PICK_R_1_H_L  = HOLES NPOD_PICK_R_1_R
  NPOD_PICK_R_1_H_LNS = NPOD_PICK_R_1_H_L NOT NPOD_PICK_R_1_H_S
  NPOD_PICK_R_1_R INTERACT NPOD_PICK_R_1_H_LNS 
  NPOD_GR_R_1_R    = (NPOD_GR_R_1 TOUCH ((HOLES NPOD_GR_R_1) NOT NPOD_GR_R_1)) NOT INTERACT SEALRING_ALL
  NPOD_GR_R_1_H_S  = HOLES NPOD_GR_R_1_R INNER
  NPOD_GR_R_1_H_L  = HOLES NPOD_GR_R_1_R
  NPOD_GR_R_1_H_LNS = NPOD_GR_R_1_H_L NOT NPOD_GR_R_1_H_S
  NPOD_GR_R_1_R INTERACT NPOD_GR_R_1_H_LNS 
  PPOD_GR_R_R    = (PPOD_GR_R TOUCH ((HOLES PPOD_GR_R) NOT PPOD_GR_R)) NOT INTERACT SEALRING_ALL
  PPOD_GR_R_H_S  = HOLES PPOD_GR_R_R INNER
  PPOD_GR_R_H_L  = HOLES PPOD_GR_R_R
  PPOD_GR_R_H_LNS = PPOD_GR_R_H_L NOT PPOD_GR_R_H_S
  PPOD_GR_R_R INTERACT PPOD_GR_R_H_LNS 
  PPOD_ISO_R_LU_R    = (PPOD_ISO_R_LU TOUCH ((HOLES PPOD_ISO_R_LU) NOT PPOD_ISO_R_LU)) NOT INTERACT SEALRING_ALL
  PPOD_ISO_R_LU_H_S  = HOLES PPOD_ISO_R_LU_R INNER
  PPOD_ISO_R_LU_H_L  = HOLES PPOD_ISO_R_LU_R
  PPOD_ISO_R_LU_H_LNS = PPOD_ISO_R_LU_H_L NOT PPOD_ISO_R_LU_H_S
  PPOD_ISO_R_LU_R INTERACT PPOD_ISO_R_LU_H_LNS 
}
#ENDIF

LV_NTAP_mf = (NTAP_mf AND NWELi) NOT ((((((HVDMYi OR NBLi) OR BJTDUMMY) OR DIODUMMY) OR RPDUMMY) OR RLPPDMY) OR HV6DMY) 
LV_PTAP_mf = (PTAP_mf AND PWELi) NOT (HVDMYi OR NBLi)
RES3T_NTAP_mf = (NTAP_mf AND (NWELi CUT (RPDUMMY OR RLPPDMY))) NOT NBLi
LV_PSD_mf  = (PSD_mf NOT HVDMYi) NOT NBLi


HVOD.R.17_NLD16G5_FULLY_ISO { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NLD16G5_FULLY_ISO is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NLD16G5_FULLY_ISO_Drain = NTAP_mf AND NLD16G5_FULLY_ISO_D
  NLD16G5_FULLY_ISO_Source = NSD_mf AND NLD16G5_FULLY_ISO_S
  A = NET AREA RATIO LV_NTAP_mf NLD16G5_FULLY_ISO_Drain NLD16G5_FULLY_ISO_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NLD16G5_FULLY_ISO_Drain) + !! AREA(NLD16G5_FULLY_ISO_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NLD16G5_FULLY_ISO

HVOD.R.17_NLD16G5 { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NLD16G5 is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NLD16G5_Drain = NTAP_mf AND NLD16G5_D
  NLD16G5_Source = NSD_mf AND NLD16G5_S
  A = NET AREA RATIO LV_NTAP_mf NLD16G5_Drain NLD16G5_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NLD16G5_Drain) + !! AREA(NLD16G5_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NLD16G5

HVOD.R.17_NLD20G5_FULLY_ISO { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NLD20G5_FULLY_ISO is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NLD20G5_FULLY_ISO_Drain = NTAP_mf AND NLD20G5_FULLY_ISO_D
  NLD20G5_FULLY_ISO_Source = NSD_mf AND NLD20G5_FULLY_ISO_S
  A = NET AREA RATIO LV_NTAP_mf NLD20G5_FULLY_ISO_Drain NLD20G5_FULLY_ISO_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NLD20G5_FULLY_ISO_Drain) + !! AREA(NLD20G5_FULLY_ISO_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NLD20G5_FULLY_ISO

HVOD.R.17_NLD20G5 { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NLD20G5 is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NLD20G5_Drain = NTAP_mf AND NLD20G5_D
  NLD20G5_Source = NSD_mf AND NLD20G5_S
  A = NET AREA RATIO LV_NTAP_mf NLD20G5_Drain NLD20G5_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NLD20G5_Drain) + !! AREA(NLD20G5_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NLD20G5

HVOD.R.17_NLD24G5 { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NLD24G5 is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NLD24G5_Drain = NTAP_mf AND NLD24G5_D
  NLD24G5_Source = NSD_mf AND NLD24G5_S
  A = NET AREA RATIO LV_NTAP_mf NLD24G5_Drain NLD24G5_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NLD24G5_Drain) + !! AREA(NLD24G5_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NLD24G5

HVOD.R.17_NLD24G5_FULLY_ISO { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NLD24G5_FULLY_ISO is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NLD24G5_FULLY_ISO_Drain = NTAP_mf AND NLD24G5_FULLY_ISO_D
  NLD24G5_FULLY_ISO_Source = NSD_mf AND NLD24G5_FULLY_ISO_S
  A = NET AREA RATIO LV_NTAP_mf NLD24G5_FULLY_ISO_Drain NLD24G5_FULLY_ISO_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NLD24G5_FULLY_ISO_Drain) + !! AREA(NLD24G5_FULLY_ISO_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NLD24G5_FULLY_ISO

HVOD.R.17_NLD24G5_ISO_SWITCH { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NLD24G5_ISO_SWITCH is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NLD24G5_ISO_SWITCH_Drain = NTAP_mf AND NLD24G5_ISO_SWITCH_D
  NLD24G5_ISO_SWITCH_Source = NSD_mf AND NLD24G5_ISO_SWITCH_S
  A = NET AREA RATIO LV_NTAP_mf NLD24G5_ISO_SWITCH_Drain NLD24G5_ISO_SWITCH_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NLD24G5_ISO_SWITCH_Drain) + !! AREA(NLD24G5_ISO_SWITCH_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NLD24G5_ISO_SWITCH

HVOD.R.17_NLD24G5_SWITCH { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NLD24G5_SWITCH is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NLD24G5_SWITCH_Drain = NTAP_mf AND NLD24G5_SWITCH_D
  NLD24G5_SWITCH_Source = NSD_mf AND NLD24G5_SWITCH_S
  A = NET AREA RATIO LV_NTAP_mf NLD24G5_SWITCH_Drain NLD24G5_SWITCH_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NLD24G5_SWITCH_Drain) + !! AREA(NLD24G5_SWITCH_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NLD24G5_SWITCH

HVOD.R.17_NA20G5 { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NA20G5 is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NA20G5_Drain = NTAP_mf AND NA20G5_D
  NA20G5_Source = NSD_mf AND NA20G5_S
  A = NET AREA RATIO LV_NTAP_mf NA20G5_Drain NA20G5_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NA20G5_Drain) + !! AREA(NA20G5_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NA20G5

HVOD.R.17_NA20G5_NBL { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NA20G5_NBL is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NA20G5_NBL_Drain = NTAP_mf AND NA20G5_NBL_D
  NA20G5_NBL_Source = NSD_mf AND NA20G5_NBL_S
  A = NET AREA RATIO LV_NTAP_mf NA20G5_NBL_Drain NA20G5_NBL_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NA20G5_NBL_Drain) + !! AREA(NA20G5_NBL_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NA20G5_NBL

HVOD.R.17_NA29G5_NBL { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NA29G5_NBL is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NA29G5_NBL_Drain = NTAP_mf AND NA29G5_NBL_D
  NA29G5_NBL_Source = NSD_mf AND NA29G5_NBL_S
  A = NET AREA RATIO LV_NTAP_mf NA29G5_NBL_Drain NA29G5_NBL_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NA29G5_NBL_Drain) + !! AREA(NA29G5_NBL_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NA29G5_NBL

HVOD.R.17_NA29G3_dep_NBL { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NA29G3_dep_NBL is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NA29G3_dep_NBL_Drain = NTAP_mf AND NA29G3_dep_NBL_D
  NA29G3_dep_NBL_Source = NSD_mf AND NA29G3_dep_NBL_S
  A = NET AREA RATIO LV_NTAP_mf NA29G3_dep_NBL_Drain NA29G3_dep_NBL_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NA29G3_dep_NBL_Drain) + !! AREA(NA29G3_dep_NBL_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NA29G3_dep_NBL

HVOD.R.17_NA29G5 { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NA29G5 is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NA29G5_Drain = NTAP_mf AND NA29G5_D
  NA29G5_Source = NSD_mf AND NA29G5_S
  A = NET AREA RATIO LV_NTAP_mf NA29G5_Drain NA29G5_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NA29G5_Drain) + !! AREA(NA29G5_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NA29G5

HVOD.R.17_NLD36G5_GB { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NLD36G5_GB is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NLD36G5_GB_Drain = NTAP_mf AND NLD36G5_GB_D
  NLD36G5_GB_Source = NSD_mf AND NLD36G5_GB_S
  A = NET AREA RATIO LV_NTAP_mf NLD36G5_GB_Drain NLD36G5_GB_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NLD36G5_GB_Drain) + !! AREA(NLD36G5_GB_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NLD36G5_GB

HVOD.R.17_NLD45G5_GB { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NLD45G5_GB is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NLD45G5_GB_Drain = NTAP_mf AND NLD45G5_GB_D
  NLD45G5_GB_Source = NSD_mf AND NLD45G5_GB_S
  A = NET AREA RATIO LV_NTAP_mf NLD45G5_GB_Drain NLD45G5_GB_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NLD45G5_GB_Drain) + !! AREA(NLD45G5_GB_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NLD45G5_GB

HVOD.R.17_NA45G3_DEP_GB { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of NA45G3_DEP_GB is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LV PACT also
  NA45G3_DEP_GB_Drain = NTAP_mf AND NA45G3_DEP_GB_D
  NA45G3_DEP_GB_Source = NSD_mf AND NA45G3_DEP_GB_S
  A = NET AREA RATIO LV_NTAP_mf NA45G3_DEP_GB_Drain NA45G3_DEP_GB_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(NA45G3_DEP_GB_Drain) + !! AREA(NA45G3_DEP_GB_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_NA45G3_DEP_GB


HVOD.R.17_PA16G5_NBL { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of PA16G5_NBL is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LVPMOS also
  PA16G5_NBL_Drain = PTAP_mf AND PA16G5_NBL_D
  PA16G5_NBL_Source = PSD_mf AND PA16G5_NBL_S
  A = NET AREA RATIO LV_NTAP_mf PA16G5_NBL_Drain PA16G5_NBL_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(PA16G5_NBL_Drain) + !!AREA(PA16G5_NBL_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_PA16G5_NBL

HVOD.R.17_PA20G5_BL { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of PA20G5_BL is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LVPMOS also
  PA20G5_BL_Drain = PTAP_mf AND PA20G5_BL_D
  PA20G5_BL_Source = PSD_mf AND PA20G5_BL_S
  A = NET AREA RATIO LV_NTAP_mf PA20G5_BL_Drain PA20G5_BL_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(PA20G5_BL_Drain) + !!AREA(PA20G5_BL_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_PA20G5_BL

HVOD.R.17_PA16G5_SLIT_NBL { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of PA16G5_SLIT_NBL is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LVPMOS also
  PA16G5_SLIT_NBL_Drain = PTAP_mf AND PA16G5_SLIT_NBL_D
  PA16G5_SLIT_NBL_Source = PSD_mf AND PA16G5_SLIT_NBL_S
  A = NET AREA RATIO LV_NTAP_mf PA16G5_SLIT_NBL_Drain PA16G5_SLIT_NBL_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(PA16G5_SLIT_NBL_Drain) + !!AREA(PA16G5_SLIT_NBL_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_PA16G5_SLIT_NBL

HVOD.R.17_PA20G5_SLIT_BL { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of PA20G5_SLIT_BL is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LVPMOS also
  PA20G5_SLIT_BL_Drain = PTAP_mf AND PA20G5_SLIT_BL_D
  PA20G5_SLIT_BL_Source = PSD_mf AND PA20G5_SLIT_BL_S
  A = NET AREA RATIO LV_NTAP_mf PA20G5_SLIT_BL_Drain PA20G5_SLIT_BL_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(PA20G5_SLIT_BL_Drain) + !!AREA(PA20G5_SLIT_BL_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_PA20G5_SLIT_BL

HVOD.R.17_PA29G5_BL { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of PA29G5_BL is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LVPMOS also
  PA29G5_BL_Drain = PTAP_mf AND PA29G5_BL_D
  PA29G5_BL_Source = PSD_mf AND PA29G5_BL_S
  A = NET AREA RATIO LV_NTAP_mf PA29G5_BL_Drain PA29G5_BL_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(PA29G5_BL_Drain) + !!AREA(PA29G5_BL_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_PA29G5_BL

HVOD.R.17_PA36G5_BL_GB { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of PA36G5_BL_GB is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LVPMOS also
  PA36G5_BL_GB_Drain = PTAP_mf AND PA36G5_BL_GB_D
  PA36G5_BL_GB_Source = PSD_mf AND PA36G5_BL_GB_S
  A = NET AREA RATIO LV_NTAP_mf PA36G5_BL_GB_Drain PA36G5_BL_GB_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(PA36G5_BL_GB_Drain) + !!AREA(PA36G5_BL_GB_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_PA36G5_BL_GB

HVOD.R.17_PA45G5_BL_GB { @ {(NP AND OD) INTERACT NW} connect to Drain/Source OD of PA45G5_BL_GB is not allowed
                         @ except connect to LVPW pickup or resistor NW pickup or LVPMOS also
  PA45G5_BL_GB_Drain = PTAP_mf AND PA45G5_BL_GB_D
  PA45G5_BL_GB_Source = PSD_mf AND PA45G5_BL_GB_S
  A = NET AREA RATIO LV_NTAP_mf PA45G5_BL_GB_Drain PA45G5_BL_GB_Source LV_PTAP_mf RES3T_NTAP_mf LV_PSD_mf> 0 [(!!AREA(PA45G5_BL_GB_Drain) + !!AREA(PA45G5_BL_GB_Source))*!AREA(LV_PTAP_mf)*!AREA(RES3T_NTAP_mf)*!AREA(LV_PSD_mf)]
  (NWEL INTERACT A) INTERACT (PWEL INTERACT LV_PTAP_mf)
}
// HVOD.R.17 is checked by HVOD.R.17_PA45G5_BL_GB


HVOD.R.18 { @ {(OD INTERACT (OD NOT (NP OR PP))) NOT INTERACT CO} cut SH_N is not allowed.
  A = (OD INTERACT (OD NOT (NP OR PP))) NOT INTERACT CO
  A CUT HVSHN
  A CUT HVNW

}

HVOD.S.1_PA29G5_BL{ @ min and max space between channel OD and Drain OD ==^ HVOD_S_1_PA29G5_BL
    PA29G5_BL_region NOT TOUCH PA29G5_BL_D
}

HVOD.S.1_PA36G5_BL_GB { @ min and max space between channel OD and drain OD == ^ HVOD_S_1_PA36G5_BL_GB
	PA36G5_BL_GB_region NOT TOUCH PA36G5_BL_GB_D
}

HVOD.S.1_PA45G5_BL_GB { @ min and max space between channel OD and drain OD == ^ HVOD_S_1_PA45G5_BL_GB
	PA45G5_BL_GB_region NOT TOUCH PA45G5_BL_GB_D
}
HVOD.S.3_PCH5_AS_SWITCH_MAC { @ Active OD space to switch N+Bulk ring in channel length direction >= ^HVOD_S_3_PCH5_AS_SWITCH_MAC
   A = PCH5_AS_SWITCH_MAC_OD_ALL NOT TOUCH EDGE (PCH5_AS_SWITCH_MAC_OD_ALL INSIDE EDGE POLY)
   EXT A NPOD_PICK_R_PCH5_AS_SWITCH_MAC < HVOD_S_3_PCH5_AS_SWITCH_MAC ABUT < 90 REGION
}
HVOD.C.3.3_NLD6G5_DE_FULLY_ISO{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD6G5_DE_FULLY_ISO
   A = PSUB AND PPOD_ISO_H_NLD6G5_DE_FULLY_ISO
   EXT PPOD_ISO_R_NLD6G5_DE_FULLY_ISO A < HVOD_C_3_3_NLD6G5_DE_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NLD6G5_SA_FULLY_ISO{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD6G5_SA_FULLY_ISO
   A = PSUB AND PPOD_ISO_H_NLD6G5_SA_FULLY_ISO
   EXT PPOD_ISO_R_NLD6G5_SA_FULLY_ISO A < HVOD_C_3_3_NLD6G5_SA_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NA6G5_NBL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NA6G5_NBL
   A = PSUB AND PPOD_ISO_H_NA6G5_NBL
   EXT PPOD_ISO_R_NA6G5_NBL A < HVOD_C_3_3_NA6G5_NBL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NLD9G5{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD9G5
   A = PSUB AND PPOD_ISO_H_NLD9G5
   EXT PPOD_ISO_R_NLD9G5 A < HVOD_C_3_3_NLD9G5 ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NLD9G5_FULLY_ISO{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD9G5_FULLY_ISO
   A = PSUB AND PPOD_ISO_H_NLD9G5_FULLY_ISO
   EXT PPOD_ISO_R_NLD9G5_FULLY_ISO A < HVOD_C_3_3_NLD9G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NLD12G5{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD12G5
   A = PSUB AND PPOD_ISO_H_NLD12G5
   EXT PPOD_ISO_R_NLD12G5 A < HVOD_C_3_3_NLD12G5 ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NLD12G5_FULLY_ISO{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD12G5_FULLY_ISO
   A = PSUB AND PPOD_ISO_H_NLD12G5_FULLY_ISO
   EXT PPOD_ISO_R_NLD12G5_FULLY_ISO A < HVOD_C_3_3_NLD12G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NLD16G5{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD16G5
   A = PSUB AND PPOD_ISO_H_NLD16G5
   EXT PPOD_ISO_R_NLD16G5 A < HVOD_C_3_3_NLD16G5 ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NLD16G5_FULLY_ISO{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD16G5_FULLY_ISO
   A = PSUB AND PPOD_ISO_H_NLD16G5_FULLY_ISO
   EXT PPOD_ISO_R_NLD16G5_FULLY_ISO A < HVOD_C_3_3_NLD16G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NLD20G5{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD20G5
   A = PSUB AND PPOD_ISO_H_NLD20G5
   EXT PPOD_ISO_R_NLD20G5 A < HVOD_C_3_3_NLD20G5 ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NLD20G5_FULLY_ISO{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD20G5_FULLY_ISO
   A = PSUB AND PPOD_ISO_H_NLD20G5_FULLY_ISO
   EXT PPOD_ISO_R_NLD20G5_FULLY_ISO A < HVOD_C_3_3_NLD20G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NLD24G5_FULLY_ISO{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD24G5_FULLY_ISO
   A = PSUB AND PPOD_ISO_H_NLD24G5_FULLY_ISO
   EXT PPOD_ISO_R_NLD24G5_FULLY_ISO A < HVOD_C_3_3_NLD24G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NLD24G5_ISO_SWITCH{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD24G5_ISO_SWITCH
   A = PSUB AND PPOD_ISO_H_NLD24G5_ISO_SWITCH
   EXT PPOD_ISO_R_NLD24G5_ISO_SWITCH A < HVOD_C_3_3_NLD24G5_ISO_SWITCH ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NA20G5{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NA20G5
   A = PSUB AND PPOD_ISO_H_NA20G5
   EXT PPOD_ISO_R_NA20G5 A < HVOD_C_3_3_NA20G5 ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NA20G5_NBL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NA20G5_NBL
   A = PSUB AND PPOD_ISO_H_NA20G5_NBL
   EXT PPOD_ISO_R_NA20G5_NBL A < HVOD_C_3_3_NA20G5_NBL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NA29G5{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NA29G5
   A = PSUB AND PPOD_ISO_H_NA29G5
   EXT PPOD_ISO_R_NA29G5 A < HVOD_C_3_3_NA29G5 ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NA29G5_NBL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NA29G5_NBL
   A = PSUB AND PPOD_ISO_H_NA29G5_NBL
   EXT PPOD_ISO_R_NA29G5_NBL A < HVOD_C_3_3_NA29G5_NBL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NA29G3_DEP_NBL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NA29G3_DEP_NBL
   A = PSUB AND PPOD_ISO_H_NA29G3_DEP_NBL
   EXT PPOD_ISO_R_NA29G3_DEP_NBL A < HVOD_C_3_3_NA29G3_DEP_NBL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NLD36G5_GB{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD36G5_GB
   A = PSUB AND PPOD_ISO_H_NLD36G5_GB
   EXT PPOD_ISO_R_NLD36G5_GB A < HVOD_C_3_3_NLD36G5_GB ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NLD45G5_GB{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD45G5_GB
   A = PSUB AND PPOD_ISO_H_NLD45G5_GB
   EXT PPOD_ISO_R_NLD45G5_GB A < HVOD_C_3_3_NLD45G5_GB ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NA45G3_DEP_GB{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NA45G3_DEP_GB
   A = PSUB AND PPOD_ISO_H_NA45G3_DEP_GB
   EXT PPOD_ISO_R_NA45G3_DEP_GB A < HVOD_C_3_3_NA45G3_DEP_GB ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_PA6G5_DE_BL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_PA6G5_DE_BL
   A = PSUB AND PPOD_ISO_H_PA6G5_DE_BL
   EXT PPOD_ISO_R_PA6G5_DE_BL A < HVOD_C_3_3_PA6G5_DE_BL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_PA6G5_SA_BL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_PA6G5_SA_BL
   A = PSUB AND PPOD_ISO_H_PA6G5_SA_BL
   EXT PPOD_ISO_R_PA6G5_SA_BL A < HVOD_C_3_3_PA6G5_SA_BL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_PA12G5_SLIT_BL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_PA12G5_SLIT_BL
   A = PSUB AND PPOD_ISO_H_PA12G5_SLIT_BL
   EXT PPOD_ISO_R_PA12G5_SLIT_BL A < HVOD_C_3_3_PA12G5_SLIT_BL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_PA12G5_NBL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_PA12G5_NBL
   A = PSUB AND PPOD_ISO_H_PA12G5_NBL
   EXT PPOD_ISO_R_PA12G5_NBL A < HVOD_C_3_3_PA12G5_NBL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_PA20G5_BL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_PA20G5_BL
   A = PSUB AND PPOD_ISO_H_PA20G5_BL
   EXT PPOD_ISO_R_PA20G5_BL A < HVOD_C_3_3_PA20G5_BL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_PA20G5_SLIT_BL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_PA20G5_SLIT_BL
   A = PSUB AND PPOD_ISO_H_PA20G5_SLIT_BL
   EXT PPOD_ISO_R_PA20G5_SLIT_BL A < HVOD_C_3_3_PA20G5_SLIT_BL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_PA29G5_BL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_PA29G5_BL
   A = PSUB AND PPOD_ISO_H_PA29G5_BL
   EXT PPOD_ISO_R_PA29G5_BL A < HVOD_C_3_3_PA29G5_BL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_PA36G5_BL_GB{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_PA36G5_BL_GB
   A = PSUB AND PPOD_ISO_H_PA36G5_BL_GB
   EXT PPOD_ISO_R_PA36G5_BL_GB A < HVOD_C_3_3_PA36G5_BL_GB ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_PA45G5_BL_GB{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_PA45G5_BL_GB
   A = PSUB AND PPOD_ISO_H_PA45G5_BL_GB
   EXT PPOD_ISO_R_PA45G5_BL_GB A < HVOD_C_3_3_PA45G5_BL_GB ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.3_NLD6G5_SA{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD6G5_SA
   A = PSUB AND PPOD_ISO_H_NLD6G5_SA
   EXT PPOD_ISO_R_NLD6G5_SA A < HVOD_C_3_3_NLD6G5_SA ABUT < 90 SINGULAR REGION 
}

HVOD.C.3.3_NLD6G5_DE{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD6G5_DE
   A = PSUB AND PPOD_ISO_H_NLD6G5_DE
   EXT PPOD_ISO_R_NLD6G5_DE A < HVOD_C_3_3_NLD6G5_DE ABUT < 90 SINGULAR REGION 
}

HVOD.C.3.3_NLD24G5{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD24G5
   A = PSUB AND PPOD_ISO_H_NLD24G5
   EXT PPOD_ISO_R_NLD24G5 A < HVOD_C_3_3_NLD24G5 ABUT < 90 SINGULAR REGION 
}

HVOD.C.3.3_NLD24G5_SWITCH{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_NLD24G5_SWITCH
   A = PSUB AND PPOD_ISO_H_NLD24G5_SWITCH
   EXT PPOD_ISO_R_NLD24G5_SWITCH A < HVOD_C_3_3_NLD24G5_SWITCH ABUT < 90 SINGULAR REGION 
}

HVOD.C.3.3_PA9G5_NBL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_PA9G5_NBL
   A = PSUB AND PPOD_ISO_H_PA9G5_NBL
   EXT PPOD_ISO_R_PA9G5_NBL A < HVOD_C_3_3_PA9G5_NBL ABUT < 90 SINGULAR REGION 
}

HVOD.C.3.3_PA9G5_SLIT_NBL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_PA9G5_SLIT_NBL
   A = PSUB AND PPOD_ISO_H_PA9G5_SLIT_NBL
   EXT PPOD_ISO_R_PA9G5_SLIT_NBL A < HVOD_C_3_3_PA9G5_SLIT_NBL ABUT < 90 SINGULAR REGION 
}

HVOD.C.3.3_PA16G5_NBL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_PA16G5_NBL
   A = PSUB AND PPOD_ISO_H_PA16G5_NBL
   EXT PPOD_ISO_R_PA16G5_NBL A < HVOD_C_3_3_PA16G5_NBL ABUT < 90 SINGULAR REGION 
}

HVOD.C.3.3_PA16G5_SLIT_NBL{ @ min clearance from P+ isolation-ring to PSUB for HVMOS >= ^HVOD_C_3_3_PA16G5_SLIT_NBL
   A = PSUB AND PPOD_ISO_H_PA16G5_SLIT_NBL
   EXT PPOD_ISO_R_PA16G5_SLIT_NBL A < HVOD_C_3_3_PA16G5_SLIT_NBL ABUT < 90 SINGULAR REGION 
}



HVOD.C.3.4_NLD5G5_ISO_SWITCH{ @ min clearance from PSUB to outward P+ bulk ring >= ^HVOD_C_3_4_NLD5G5_ISO_SWITCH
    A = PSUB NOT INTERACT NPOD_PICK_R_NLD5G5_ISO_SWITCH 
    EXT PPOD_BULK_R_NLD5G5_ISO_SWITCH A < HVOD_C_3_4_NLD5G5_ISO_SWITCH ABUT < 90 SINGULAR REGION 
}

HVOD.C.3.8_NLD5G5_ISO_SWITCH{ @ min clearance from P+ bulk ring to SH_N >= ^HVOD_C_3_8_NLD5G5_ISO_SWITCH
    EXT PPOD_BULK_R_NLD5G5_ISO_SWITCH HVSHN < HVOD_C_3_8_NLD5G5_ISO_SWITCH ABUT < 90 SINGULAR REGION 
}

HVOD.C.3.4_NLD6G5_DE_FULLY_ISO{ @ min clearance from PSUB to outward P+ bulk ring >= ^HVOD_C_3_4_NLD6G5_DE_FULLY_ISO
    A = PSUB NOT INTERACT NPOD_PICK_R_NLD6G5_DE_FULLY_ISO 
    EXT PPOD_BULK_R_NLD6G5_DE_FULLY_ISO A < HVOD_C_3_4_NLD6G5_DE_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.4_NLD6G5_SA_FULLY_ISO{ @ min clearance from PSUB to outward P+ bulk ring >= ^HVOD_C_3_4_NLD6G5_SA_FULLY_ISO
    A = PSUB NOT INTERACT NPOD_PICK_R_NLD6G5_SA_FULLY_ISO 
    EXT PPOD_BULK_R_NLD6G5_SA_FULLY_ISO A < HVOD_C_3_4_NLD6G5_SA_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.4_NA6G5_NBL{ @ min clearance from PSUB to outward P+ bulk ring >= ^HVOD_C_3_4_NA6G5_NBL
    A = PSUB NOT INTERACT NPOD_PICK_R_NA6G5_NBL 
    EXT PPOD_BULK_R_NA6G5_NBL A < HVOD_C_3_4_NA6G5_NBL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.4_NLD9G5_FULLY_ISO{ @ min clearance from PSUB to outward P+ bulk ring >= ^HVOD_C_3_4_NLD9G5_FULLY_ISO
    A = PSUB NOT INTERACT NPOD_PICK_R_NLD9G5_FULLY_ISO 
    EXT PPOD_BULK_R_NLD9G5_FULLY_ISO A < HVOD_C_3_4_NLD9G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.4_NLD12G5_FULLY_ISO{ @ min clearance from PSUB to outward P+ bulk ring >= ^HVOD_C_3_4_NLD12G5_FULLY_ISO
    A = PSUB NOT INTERACT NPOD_PICK_R_NLD12G5_FULLY_ISO 
    EXT PPOD_BULK_R_NLD12G5_FULLY_ISO A < HVOD_C_3_4_NLD12G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.4_NLD16G5_FULLY_ISO{ @ min clearance from PSUB to outward P+ bulk ring >= ^HVOD_C_3_4_NLD16G5_FULLY_ISO
    A = PSUB NOT INTERACT NPOD_PICK_R_NLD16G5_FULLY_ISO 
    EXT PPOD_BULK_R_NLD16G5_FULLY_ISO A < HVOD_C_3_4_NLD16G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.4_NLD20G5_FULLY_ISO{ @ min clearance from PSUB to outward P+ bulk ring >= ^HVOD_C_3_4_NLD20G5_FULLY_ISO
    A = PSUB NOT INTERACT NPOD_PICK_R_NLD20G5_FULLY_ISO 
    EXT PPOD_BULK_R_NLD20G5_FULLY_ISO A < HVOD_C_3_4_NLD20G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.4_NLD24G5_FULLY_ISO{ @ min clearance from PSUB to outward P+ bulk ring >= ^HVOD_C_3_4_NLD24G5_FULLY_ISO
    A = PSUB NOT INTERACT NPOD_PICK_R_NLD24G5_FULLY_ISO 
    EXT PPOD_BULK_R_NLD24G5_FULLY_ISO A < HVOD_C_3_4_NLD24G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.4_NLD24G5_ISO_SWITCH{ @ min clearance from PSUB to outward P+ bulk ring >= ^HVOD_C_3_4_NLD24G5_ISO_SWITCH
    A = PSUB NOT INTERACT NPOD_PICK_R_NLD24G5_ISO_SWITCH 
    EXT PPOD_BULK_R_NLD24G5_ISO_SWITCH A < HVOD_C_3_4_NLD24G5_ISO_SWITCH ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.4_NA20G5_NBL{ @ min clearance from PSUB to outward P+ bulk ring >= ^HVOD_C_3_4_NA20G5_NBL
    A = PSUB NOT INTERACT NPOD_PICK_R_NA20G5_NBL 
    EXT PPOD_BULK_R_NA20G5_NBL A < HVOD_C_3_4_NA20G5_NBL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.4_NA29G5_NBL{ @ min clearance from PSUB to outward P+ bulk ring >= ^HVOD_C_3_4_NA29G5_NBL
    A = PSUB NOT INTERACT NPOD_PICK_R_NA29G5_NBL 
    EXT PPOD_BULK_R_NA29G5_NBL A < HVOD_C_3_4_NA29G5_NBL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.4_NA29G3_DEP_NBL{ @ min clearance from PSUB to outward P+ bulk ring >= ^HVOD_C_3_4_NA29G3_DEP_NBL
    A = PSUB NOT INTERACT NPOD_PICK_R_NA29G3_DEP_NBL 
    EXT PPOD_BULK_R_NA29G3_DEP_NBL A < HVOD_C_3_4_NA29G3_DEP_NBL ABUT < 90 SINGULAR REGION 
}


HVOD.C.3.5_NLD6G5_DE_FULLY_ISO{ @ min clearance from PSUB to inward P+ bulk ring >= ^HVOD_C_3_5_NLD6G5_DE_FULLY_ISO
    A = PSUB INTERACT NPOD_PICK_R_NLD6G5_DE_FULLY_ISO 
    EXT PPOD_BULK_R_NLD6G5_DE_FULLY_ISO A < HVOD_C_3_5_NLD6G5_DE_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.5_NLD6G5_SA_FULLY_ISO{ @ min clearance from PSUB to inward P+ bulk ring >= ^HVOD_C_3_5_NLD6G5_SA_FULLY_ISO
    A = PSUB INTERACT NPOD_PICK_R_NLD6G5_SA_FULLY_ISO 
    EXT PPOD_BULK_R_NLD6G5_SA_FULLY_ISO A < HVOD_C_3_5_NLD6G5_SA_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.5_NA6G5_NBL{ @ min clearance from PSUB to inward P+ bulk ring >= ^HVOD_C_3_5_NA6G5_NBL
    A = PSUB INTERACT NPOD_PICK_R_NA6G5_NBL 
    EXT PPOD_BULK_R_NA6G5_NBL A < HVOD_C_3_5_NA6G5_NBL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.5_NLD9G5_FULLY_ISO{ @ min clearance from PSUB to inward P+ bulk ring >= ^HVOD_C_3_5_NLD9G5_FULLY_ISO
    A = PSUB INTERACT NPOD_PICK_R_NLD9G5_FULLY_ISO 
    EXT PPOD_BULK_R_NLD9G5_FULLY_ISO A < HVOD_C_3_5_NLD9G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.5_NLD12G5_FULLY_ISO{ @ min clearance from PSUB to inward P+ bulk ring >= ^HVOD_C_3_5_NLD12G5_FULLY_ISO
    A = PSUB INTERACT NPOD_PICK_R_NLD12G5_FULLY_ISO 
    EXT PPOD_BULK_R_NLD12G5_FULLY_ISO A < HVOD_C_3_5_NLD12G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.5_NLD16G5_FULLY_ISO{ @ min clearance from PSUB to inward P+ bulk ring >= ^HVOD_C_3_5_NLD16G5_FULLY_ISO
    A = PSUB INTERACT NPOD_PICK_R_NLD16G5_FULLY_ISO 
    EXT PPOD_BULK_R_NLD16G5_FULLY_ISO A < HVOD_C_3_5_NLD16G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.5_NLD20G5_FULLY_ISO{ @ min clearance from PSUB to inward P+ bulk ring >= ^HVOD_C_3_5_NLD20G5_FULLY_ISO
    A = PSUB INTERACT NPOD_PICK_R_NLD20G5_FULLY_ISO 
    EXT PPOD_BULK_R_NLD20G5_FULLY_ISO A < HVOD_C_3_5_NLD20G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.5_NLD24G5_FULLY_ISO{ @ min clearance from PSUB to inward P+ bulk ring >= ^HVOD_C_3_5_NLD24G5_FULLY_ISO
    A = PSUB INTERACT NPOD_PICK_R_NLD24G5_FULLY_ISO 
    EXT PPOD_BULK_R_NLD24G5_FULLY_ISO A < HVOD_C_3_5_NLD24G5_FULLY_ISO ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.5_NLD24G5_ISO_SWITCH{ @ min clearance from PSUB to inward P+ bulk ring >= ^HVOD_C_3_5_NLD24G5_ISO_SWITCH
    A = PSUB INTERACT NPOD_PICK_R_NLD24G5_ISO_SWITCH 
    EXT PPOD_BULK_R_NLD24G5_ISO_SWITCH A < HVOD_C_3_5_NLD24G5_ISO_SWITCH ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.5_NA20G5_NBL{ @ min clearance from PSUB to inward P+ bulk ring >= ^HVOD_C_3_5_NA20G5_NBL
    A = PSUB INTERACT NPOD_PICK_R_NA20G5_NBL 
    EXT PPOD_BULK_R_NA20G5_NBL A < HVOD_C_3_5_NA20G5_NBL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.5_NA29G5_NBL{ @ min clearance from PSUB to inward P+ bulk ring >= ^HVOD_C_3_5_NA29G5_NBL
    A = PSUB INTERACT NPOD_PICK_R_NA29G5_NBL 
    EXT PPOD_BULK_R_NA29G5_NBL A < HVOD_C_3_5_NA29G5_NBL ABUT < 90 SINGULAR REGION 
}
HVOD.C.3.5_NA29G3_DEP_NBL{ @ min clearance from PSUB to inward P+ bulk ring >= ^HVOD_C_3_5_NA29G3_DEP_NBL
    A = PSUB INTERACT NPOD_PICK_R_NA29G3_DEP_NBL 
    EXT PPOD_BULK_R_NA29G3_DEP_NBL A < HVOD_C_3_5_NA29G3_DEP_NBL ABUT < 90 SINGULAR REGION 
}

HVOD.C.3.6_PBSHNNBL { @ min clearance from P+ isolation-ring to PSUB for HV diode >= ^ HVOD_C_3_6_PBSHNNBL
   A = PSUB INTERACT DIO_PBSHNNBL_M
   EXT PPOD_ISO_R_DIO_PBSHNNBL A < HVOD_C_3_6_PBSHNNBL ABUT < 90 SINGULAR REGION
}
HVOD.C.3.6_PDDSHNNBL { @ min clearance from P+ isolation-ring to PSUB for HV diode >= ^ HVOD_C_3_6_PDDSHNNBL
   A = PSUB INTERACT DIO_PDDSHNNBL_M
   EXT PPOD_ISO_R_DIO_PDDSHNNBL A < HVOD_C_3_6_PDDSHNNBL ABUT < 90 SINGULAR REGION
}
HVOD.C.3.6_SHNNBLPSUBSHP { @ min clearance from P+ isolation-ring to PSUB for HV diode >= ^ HVOD_C_3_6_SHNNBLPSUBSHP
   A = PSUB INTERACT DIO_SHNNBLPSUBSHP_M
   EXT PPOD_ISO_R_DIO_SHNNBLPSUBSHP A < HVOD_C_3_6_SHNNBLPSUBSHP ABUT < 90 SINGULAR REGION
}
HVOD.C.3.6_SHNPSUBSHP { @ min clearance from P+ isolation-ring to PSUB for HV diode >= ^ HVOD_C_3_6_SHNPSUBSHP
   A = PSUB INTERACT DIO_SHNPSUBSHP_M
   EXT PPOD_ISO_R_DIO_SHNPSUBSHP A < HVOD_C_3_6_SHNPSUBSHP ABUT < 90 SINGULAR REGION
}
HVOD.C.3.6_SHPNBLSHN_GB { @ min clearance from P+ isolation-ring to PSUB for HV diode >= ^ HVOD_C_3_6_SHPNBLSHN_GB
   A = PSUB INTERACT DIO_SHPNBLSHN_GB_M
   EXT PPOD_ISO_R_DIO_SHPNBLSHN_GB A < HVOD_C_3_6_SHPNBLSHN_GB ABUT < 90 SINGULAR REGION
}
HVOD.C.3.6_SHNNBLPSUBSHP_GB { @ min clearance from P+ isolation-ring to PSUB for HV diode >= ^ HVOD_C_3_6_SHNNBLPSUBSHP_GB
   A = PSUB INTERACT DIO_SHNNBLPSUBSHP_GB_M
   EXT PPOD_ISO_R_DIO_SHNNBLPSUBSHP_GB A < HVOD_C_3_6_SHNNBLPSUBSHP_GB ABUT < 90 SINGULAR REGION
}
HVOD.C.3.6_ZENER_NBL { @ min clearance from P+ isolation-ring to PSUB for HV diode >= ^ HVOD_C_3_6_ZENER_NBL
   A = PSUB INTERACT DIO_ZENER_NBL_M
   EXT PPOD_ISO_R_DIO_ZENER_NBL A < HVOD_C_3_6_ZENER_NBL ABUT < 90 SINGULAR REGION
}

HVOD.C.3.6_SBD_12V { @ min clearance from P+ isolation-ring to PSUB for HV diode >= ^ HVOD_C_3_6_SBD_12V
   A = PSUB INTERACT DIO_SBD_12V_M
   EXT PPOD_ISO_R A < HVOD_C_3_6_SBD_12V ABUT < 90 SINGULAR REGION
}
HVOD.C.3.6_SBD_16V { @ min clearance from P+ isolation-ring to PSUB for HV diode >= ^ HVOD_C_3_6_SBD_16V
   A = PSUB INTERACT DIO_SBD_16V_M
   EXT PPOD_ISO_R A < HVOD_C_3_6_SBD_16V ABUT < 90 SINGULAR REGION
}
HVOD.C.3.6_SBD_24V { @ min clearance from P+ isolation-ring to PSUB for HV diode >= ^ HVOD_C_3_6_SBD_24V
   A = PSUB INTERACT DIO_SBD_24V_M
   EXT PPOD_ISO_R A < HVOD_C_3_6_SBD_24V ABUT < 90 SINGULAR REGION
}

HVOD.C.4_NA6G5_NBL { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_NA6G5_NBL
    A = NA6G5_NBL_GATE_OD NOT TOUCH PTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE SH_P
	D = NA6G5_NBL_GATE_OD TOUCH EDGE C
	EXT D PPOD < HVOD_C_4_NA6G5_NBL ABUT <90 OPPOSITE REGION
}
HVOD.C.4_NA20G5 { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_NA20G5
    A = NA20G5_GATE_OD NOT TOUCH PTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE SH_P
	D = NA20G5_GATE_OD TOUCH EDGE C
	EXT D PPOD < HVOD_C_4_NA20G5 ABUT <90 OPPOSITE REGION
}
HVOD.C.4_NA20G5_NBL { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_NA20G5_NBL
    A = NA20G5_NBL_GATE_OD NOT TOUCH PTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE SH_P
	D = NA20G5_NBL_GATE_OD TOUCH EDGE C
	EXT D PPOD < HVOD_C_4_NA20G5_NBL ABUT <90 OPPOSITE REGION
}
HVOD.C.4_NA29G5 { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_NA29G5
    A = NA29G5_GATE_OD NOT TOUCH PTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE SH_P
	D = NA29G5_GATE_OD TOUCH EDGE C
	EXT D PPOD < HVOD_C_4_NA29G5 ABUT <90 OPPOSITE REGION
}
HVOD.C.4_NA29G5_NBL { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_NA29G5_NBL
    A = NA29G5_NBL_GATE_OD NOT TOUCH PTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE SH_P
	D = NA29G5_NBL_GATE_OD TOUCH EDGE C
	EXT D PPOD < HVOD_C_4_NA29G5_NBL ABUT <90 OPPOSITE REGION
}
HVOD.C.4_NA29G3_DEP_NBL { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_NA29G3_DEP_NBL
    A = NA29G3_DEP_NBL_GATE_OD NOT TOUCH PTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE SH_P
	D = NA29G3_DEP_NBL_GATE_OD TOUCH EDGE C
	EXT D PPOD < HVOD_C_4_NA29G3_DEP_NBL ABUT <90 OPPOSITE REGION
}
HVOD.C.4_PA6G5_DE_BL { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_PA6G5_DE_BL
    A = PA6G5_DE_BL_GATE_OD NOT TOUCH NTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE HVSHN 
	D = PA6G5_DE_BL_GATE_OD TOUCH EDGE C
	EXT D (NPOD NOT NPOD_PICK_R_PA6G5_DE_BL) < HVOD_C_4_PA6G5_DE_BL ABUT <90 OPPOSITE REGION
}
HVOD.C.4_PA6G5_SA_BL { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_PA6G5_SA_BL
    A = PA6G5_SA_BL_GATE_OD NOT TOUCH NTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE HVSHN 
	D = PA6G5_SA_BL_GATE_OD TOUCH EDGE C
	EXT D (NPOD NOT NPOD_PICK_R_PA6G5_SA_BL) < HVOD_C_4_PA6G5_SA_BL ABUT <90 OPPOSITE REGION
}
HVOD.C.4_PA12G5_NBL { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_PA12G5_NBL
    A = PA12G5_NBL_GATE_OD NOT TOUCH NTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE HVSHN 
	D = PA12G5_NBL_GATE_OD TOUCH EDGE C
	EXT D (NPOD NOT NPOD_PICK_R_PA12G5_NBL) < HVOD_C_4_PA12G5_NBL ABUT <90 OPPOSITE REGION
}
HVOD.C.4_PA20G5_BL { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_PA20G5_BL
    A = PA20G5_BL_GATE_OD NOT TOUCH NTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE HVSHN 
	D = PA20G5_BL_GATE_OD TOUCH EDGE C
	EXT D (NPOD NOT NPOD_PICK_R_PA20G5_BL) < HVOD_C_4_PA20G5_BL ABUT <90 OPPOSITE REGION
}
HVOD.C.4_PA29G5_BL { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_PA29G5_BL
    A = PA29G5_BL_GATE_OD NOT TOUCH NTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE HVSHN 
	D = PA29G5_BL_GATE_OD TOUCH EDGE C
	EXT D (NPOD NOT NPOD_PICK_R_PA29G5_BL) < HVOD_C_4_PA29G5_BL ABUT <90 OPPOSITE REGION
}
HVOD.C.4_PA36G5_BL_GB { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_PA36G5_BL_GB
    A = PA36G5_BL_GB_GATE_OD NOT TOUCH NTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE HVSHN 
	D = PA36G5_BL_GB_GATE_OD TOUCH EDGE C
	EXT D (NPOD NOT NPOD_PICK_R_PA36G5_BL_GB) < HVOD_C_4_PA36G5_BL_GB ABUT <90 OPPOSITE REGION
}
HVOD.C.4_PA45G5_BL_GB { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_PA45G5_BL_GB
    A = PA45G5_BL_GB_GATE_OD NOT TOUCH NTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE HVSHN 
	D = PA45G5_BL_GB_GATE_OD TOUCH EDGE C
	EXT D (NPOD NOT NPOD_PICK_R_PA45G5_BL_GB) < HVOD_C_4_PA45G5_BL_GB ABUT <90 OPPOSITE REGION
}
HVOD.C.4_PA9G5_NBL { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_PA9G5_NBL
    A = PA9G5_NBL_GATE_OD NOT TOUCH NTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE HVSHN 
	D = PA9G5_NBL_GATE_OD TOUCH EDGE C
	EXT D (NPOD NOT NPOD_PICK_R_PA9G5_NBL) < HVOD_C_4_PA9G5_NBL ABUT <90 OPPOSITE REGION
}

HVOD.C.4_PA16G5_NBL { @ min clearance from source OD to Bulk OD in channel length direction for HVNAMOS and HVPMOS non_butted structure >=^ HVOD_C_4_PA16G5_NBL
    A = PA16G5_NBL_GATE_OD NOT TOUCH NTAPi
    B = EXPAND EDGE A OUTSIDE BY GRID
	C = B INSIDE HVSHN 
	D = PA16G5_NBL_GATE_OD TOUCH EDGE C
	EXT D (NPOD NOT NPOD_PICK_R_PA16G5_NBL) < HVOD_C_4_PA16G5_NBL ABUT <90 OPPOSITE REGION
}



HVOD.E.7_NLD6G5_DE_FULLY_ISO {  @ min extension of SH_N to N+ pickup-ring for HVNMOS >=^HVOD_E_7_NLD6G5_DE_FULLY_ISO
    ENC	NPOD_PICK_R_NLD6G5_DE_FULLY_ISO HVSHN < HVOD_E_7_NLD6G5_DE_FULLY_ISO ABUT < 90 SINGULAR REGION
}
HVOD.E.7_NLD6G5_SA_FULLY_ISO {  @ min extension of SH_N to N+ pickup-ring for HVNMOS >=^HVOD_E_7_NLD6G5_SA_FULLY_ISO
    ENC	NPOD_PICK_R_NLD6G5_SA_FULLY_ISO HVSHN < HVOD_E_7_NLD6G5_SA_FULLY_ISO ABUT < 90 SINGULAR REGION
}
HVOD.E.7_NA6G5_NBL {  @ min extension of SH_N to N+ pickup-ring for HVNMOS >=^HVOD_E_7_NA6G5_NBL
    ENC	NPOD_PICK_R_NA6G5_NBL HVSHN < HVOD_E_7_NA6G5_NBL ABUT < 90 SINGULAR REGION
}
HVOD.E.7_NLD9G5_FULLY_ISO {  @ min extension of SH_N to N+ pickup-ring for HVNMOS >=^HVOD_E_7_NLD9G5_FULLY_ISO
    ENC	NPOD_PICK_R_NLD9G5_FULLY_ISO HVSHN < HVOD_E_7_NLD9G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
HVOD.E.7_NLD12G5_FULLY_ISO {  @ min extension of SH_N to N+ pickup-ring for HVNMOS >=^HVOD_E_7_NLD12G5_FULLY_ISO
    ENC	NPOD_PICK_R_NLD12G5_FULLY_ISO HVSHN < HVOD_E_7_NLD12G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
HVOD.E.7_NLD16G5_FULLY_ISO {  @ min extension of SH_N to N+ pickup-ring for HVNMOS >=^HVOD_E_7_NLD16G5_FULLY_ISO
    ENC	NPOD_PICK_R_NLD16G5_FULLY_ISO HVSHN < HVOD_E_7_NLD16G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
HVOD.E.7_NLD20G5_FULLY_ISO {  @ min extension of SH_N to N+ pickup-ring for HVNMOS >=^HVOD_E_7_NLD20G5_FULLY_ISO
    ENC	NPOD_PICK_R_NLD20G5_FULLY_ISO HVSHN < HVOD_E_7_NLD20G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
HVOD.E.7_NLD24G5_FULLY_ISO {  @ min extension of SH_N to N+ pickup-ring for HVNMOS >=^HVOD_E_7_NLD24G5_FULLY_ISO
    ENC	NPOD_PICK_R_NLD24G5_FULLY_ISO HVSHN < HVOD_E_7_NLD24G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
HVOD.E.7_NLD24G5_ISO_SWITCH {  @ min extension of SH_N to N+ pickup-ring for HVNMOS >=^HVOD_E_7_NLD24G5_ISO_SWITCH
    ENC	NPOD_PICK_R_NLD24G5_ISO_SWITCH HVSHN < HVOD_E_7_NLD24G5_ISO_SWITCH ABUT < 90 SINGULAR REGION
}
HVOD.E.7_NA20G5_NBL {  @ min extension of SH_N to N+ pickup-ring for HVNMOS >=^HVOD_E_7_NA20G5_NBL
    ENC	NPOD_PICK_R_NA20G5_NBL HVSHN < HVOD_E_7_NA20G5_NBL ABUT < 90 SINGULAR REGION
}
HVOD.E.7_NA29G5_NBL {  @ min extension of SH_N to N+ pickup-ring for HVNMOS >=^HVOD_E_7_NA29G5_NBL
    ENC	NPOD_PICK_R_NA29G5_NBL HVSHN < HVOD_E_7_NA29G5_NBL ABUT < 90 SINGULAR REGION
}
HVOD.E.7_NA29G3_DEP_NBL {  @ min extension of SH_N to N+ pickup-ring for HVNMOS >=^HVOD_E_7_NA29G3_DEP_NBL
    ENC	NPOD_PICK_R_NA29G3_DEP_NBL HVSHN < HVOD_E_7_NA29G3_DEP_NBL ABUT < 90 SINGULAR REGION
}
HVOD.E.7_NLD5G5_ISO_SWITCH {  @ min extension of SH_N to N+ pickup-ring for HVNMOS >=^HVOD_E_7_NLD5G5_ISO_SWITCH
    ENC	NPOD_PICK_R_NLD5G5_ISO_SWITCH HVSHN < HVOD_E_7_NLD5G5_ISO_SWITCH ABUT < 90 SINGULAR REGION
}


HVOD.E.8_PA6G5_DE_BL { @ min extension of SH_N to outward N+ pickup-ring for HVPMOS >=^HVOD_E_8_PA6G5_DE_BL
	A =  HVSHN INTERACT PA6G5_DE_BL_GATE
    ENC NPOD_PICK_R_PA6G5_DE_BL A < HVOD_E_8_PA6G5_DE_BL
}
HVOD.E.8_PA6G5_SA_BL { @ min extension of SH_N to outward N+ pickup-ring for HVPMOS >=^HVOD_E_8_PA6G5_SA_BL
	A =  HVSHN INTERACT PA6G5_SA_BL_GATE
    ENC NPOD_PICK_R_PA6G5_SA_BL A < HVOD_E_8_PA6G5_SA_BL
}
HVOD.E.8_PA12G5_SLIT_BL { @ min extension of SH_N to outward N+ pickup-ring for HVPMOS >=^HVOD_E_8_PA12G5_SLIT_BL
	A =  HVSHN INTERACT PA12G5_SLIT_BL_GATE
    ENC NPOD_PICK_R_PA12G5_SLIT_BL A < HVOD_E_8_PA12G5_SLIT_BL
}
HVOD.E.8_PA12G5_NBL { @ min extension of SH_N to outward N+ pickup-ring for HVPMOS >=^HVOD_E_8_PA12G5_NBL
	A =  HVSHN INTERACT PA12G5_NBL_GATE
    ENC NPOD_PICK_R_PA12G5_NBL A < HVOD_E_8_PA12G5_NBL
}
HVOD.E.8_PA20G5_BL { @ min extension of SH_N to outward N+ pickup-ring for HVPMOS >=^HVOD_E_8_PA20G5_BL
	A =  HVSHN INTERACT PA20G5_BL_GATE
    ENC NPOD_PICK_R_PA20G5_BL A < HVOD_E_8_PA20G5_BL
}
HVOD.E.8_PA20G5_SLIT_BL { @ min extension of SH_N to outward N+ pickup-ring for HVPMOS >=^HVOD_E_8_PA20G5_SLIT_BL
	A =  HVSHN INTERACT PA20G5_SLIT_BL_GATE
    ENC NPOD_PICK_R_PA20G5_SLIT_BL A < HVOD_E_8_PA20G5_SLIT_BL
}
HVOD.E.8_PA29G5_BL { @ min extension of SH_N to outward N+ pickup-ring for HVPMOS >=^HVOD_E_8_PA29G5_BL
	A =  HVSHN INTERACT PA29G5_BL_GATE
    ENC NPOD_PICK_R_PA29G5_BL A < HVOD_E_8_PA29G5_BL
}
HVOD.E.8_PA36G5_BL_GB { @ min extension of SH_N to outward N+ pickup-ring for HVPMOS >=^HVOD_E_8_PA36G5_BL_GB
	A =  HVSHN INTERACT PA36G5_BL_GB_GATE
    ENC NPOD_PICK_R_PA36G5_BL_GB A < HVOD_E_8_PA36G5_BL_GB
}
HVOD.E.8_PA45G5_BL_GB { @ min extension of SH_N to outward N+ pickup-ring for HVPMOS >=^HVOD_E_8_PA45G5_BL_GB
	A =  HVSHN INTERACT PA45G5_BL_GB_GATE
    ENC NPOD_PICK_R_PA45G5_BL_GB A < HVOD_E_8_PA45G5_BL_GB
}
HVOD.E.8_PCH5_AS_SWITCH_MAC { @ min extension of SH_N to outward N+ pickup-ring for HVPMOS >=^HVOD_E_8_PCH5_AS_SWITCH_MAC
	A =  HVSHN INTERACT PCH5_AS_SWITCH_MAC_GATE
    ENC NPOD_PICK_R_PCH5_AS_SWITCH_MAC A < HVOD_E_8_PCH5_AS_SWITCH_MAC
}

HVOD.E.8_PA9G5_NBL { @ min extension of SH_N to outward N+ pickup-ring for HVPMOS >=^HVOD_E_8_PA9G5_NBL
	A =  HVSHN INTERACT PA9G5_NBL_GATE
    ENC NPOD_PICK_R_PA9G5_NBL A < HVOD_E_8_PA9G5_NBL
}

HVOD.E.8_PA9G5_SLIT_NBL { @ min extension of SH_N to outward N+ pickup-ring for HVPMOS >=^HVOD_E_8_PA9G5_SLIT_NBL
	A =  HVSHN INTERACT PA9G5_SLIT_NBL_GATE
    ENC NPOD_PICK_R_PA9G5_SLIT_NBL A < HVOD_E_8_PA9G5_SLIT_NBL
}

HVOD.E.8_PA16G5_NBL { @ min extension of SH_N to outward N+ pickup-ring for HVPMOS >=^HVOD_E_8_PA16G5_NBL
	A =  HVSHN INTERACT PA16G5_NBL_GATE
    ENC NPOD_PICK_R_PA16G5_NBL A < HVOD_E_8_PA16G5_NBL
}

HVOD.E.8_PA16G5_SLIT_NBL { @ min extension of SH_N to outward N+ pickup-ring for HVPMOS >=^HVOD_E_8_PA16G5_SLIT_NBL
	A =  HVSHN INTERACT PA16G5_SLIT_NBL_GATE
    ENC NPOD_PICK_R_PA16G5_SLIT_NBL A < HVOD_E_8_PA16G5_SLIT_NBL
}


HVOD.E.9_PA6G5_DE_BL { @ min extension of SH_N to inward N+ pickup-ring for HVPMOS >=^HVOD_E_9_PA6G5_DE_BL
	A =  HVSHN AND (NPOD_PICK_H_PA6G5_DE_BL OR NPOD_PICK_R_PA6G5_DE_BL)
    ENC NPOD_PICK_R_PA6G5_DE_BL A < HVOD_E_9_PA6G5_DE_BL
}
HVOD.E.9_PA6G5_SA_BL { @ min extension of SH_N to inward N+ pickup-ring for HVPMOS >=^HVOD_E_9_PA6G5_SA_BL
	A =  HVSHN AND (NPOD_PICK_H_PA6G5_SA_BL OR NPOD_PICK_R_PA6G5_SA_BL)
    ENC NPOD_PICK_R_PA6G5_SA_BL A < HVOD_E_9_PA6G5_SA_BL
}
HVOD.E.9_PA12G5_SLIT_BL { @ min extension of SH_N to inward N+ pickup-ring for HVPMOS >=^HVOD_E_9_PA12G5_SLIT_BL
	A =  HVSHN AND (NPOD_PICK_H_PA12G5_SLIT_BL OR NPOD_PICK_R_PA12G5_SLIT_BL)
    ENC NPOD_PICK_R_PA12G5_SLIT_BL A < HVOD_E_9_PA12G5_SLIT_BL
}
HVOD.E.9_PA12G5_NBL { @ min extension of SH_N to inward N+ pickup-ring for HVPMOS >=^HVOD_E_9_PA12G5_NBL
	A =  HVSHN AND (NPOD_PICK_H_PA12G5_NBL OR NPOD_PICK_R_PA12G5_NBL)
    ENC NPOD_PICK_R_PA12G5_NBL A < HVOD_E_9_PA12G5_NBL
}
HVOD.E.9_PA20G5_BL { @ min extension of SH_N to inward N+ pickup-ring for HVPMOS >=^HVOD_E_9_PA20G5_BL
	A =  HVSHN AND (NPOD_PICK_H_PA20G5_BL OR NPOD_PICK_R_PA20G5_BL)
    ENC NPOD_PICK_R_PA20G5_BL A < HVOD_E_9_PA20G5_BL
}
HVOD.E.9_PA20G5_SLIT_BL { @ min extension of SH_N to inward N+ pickup-ring for HVPMOS >=^HVOD_E_9_PA20G5_SLIT_BL
	A =  HVSHN AND (NPOD_PICK_H_PA20G5_SLIT_BL OR NPOD_PICK_R_PA20G5_SLIT_BL)
    ENC NPOD_PICK_R_PA20G5_SLIT_BL A < HVOD_E_9_PA20G5_SLIT_BL
}
HVOD.E.9_PA29G5_BL { @ min extension of SH_N to inward N+ pickup-ring for HVPMOS >=^HVOD_E_9_PA29G5_BL
	A =  HVSHN AND (NPOD_PICK_H_PA29G5_BL OR NPOD_PICK_R_PA29G5_BL)
    ENC NPOD_PICK_R_PA29G5_BL A < HVOD_E_9_PA29G5_BL
}
HVOD.E.9_PA36G5_BL_GB { @ min extension of SH_N to inward N+ pickup-ring for HVPMOS >=^HVOD_E_9_PA36G5_BL_GB
	A =  HVSHN AND (NPOD_PICK_H_PA36G5_BL_GB OR NPOD_PICK_R_PA36G5_BL_GB)
    ENC NPOD_PICK_R_PA36G5_BL_GB A < HVOD_E_9_PA36G5_BL_GB
}
HVOD.E.9_PA45G5_BL_GB { @ min extension of SH_N to inward N+ pickup-ring for HVPMOS >=^HVOD_E_9_PA45G5_BL_GB
	A =  HVSHN AND (NPOD_PICK_H_PA45G5_BL_GB OR NPOD_PICK_R_PA45G5_BL_GB)
    ENC NPOD_PICK_R_PA45G5_BL_GB A < HVOD_E_9_PA45G5_BL_GB
}
HVOD.E.9_PA9G5_NBL { @ min extension of SH_N to inward N+ pickup-ring for HVPMOS >=^HVOD_E_9_PA9G5_NBL
	A =  HVSHN AND (NPOD_PICK_H_PA9G5_NBL OR NPOD_PICK_R_PA9G5_NBL)
    ENC NPOD_PICK_R_PA9G5_NBL A < HVOD_E_9_PA9G5_NBL
}

HVOD.E.9_PA9G5_SLIT_NBL { @ min extension of SH_N to inward N+ pickup-ring for HVPMOS >=^HVOD_E_9_PA9G5_SLIT_NBL
	A =  HVSHN AND (NPOD_PICK_H_PA9G5_SLIT_NBL OR NPOD_PICK_R_PA9G5_SLIT_NBL)
    ENC NPOD_PICK_R_PA9G5_SLIT_NBL A < HVOD_E_9_PA9G5_SLIT_NBL
}

HVOD.E.9_PA16G5_NBL { @ min extension of SH_N to inward N+ pickup-ring for HVPMOS >=^HVOD_E_9_PA16G5_NBL
	A =  HVSHN AND (NPOD_PICK_H_PA16G5_NBL OR NPOD_PICK_R_PA16G5_NBL)
    ENC NPOD_PICK_R_PA16G5_NBL A < HVOD_E_9_PA16G5_NBL
}

HVOD.E.9_PA16G5_SLIT_NBL { @ min extension of SH_N to inward N+ pickup-ring for HVPMOS >=^HVOD_E_9_PA16G5_SLIT_NBL
	A =  HVSHN AND (NPOD_PICK_H_PA16G5_SLIT_NBL OR NPOD_PICK_R_PA16G5_SLIT_NBL)
    ENC NPOD_PICK_R_PA16G5_SLIT_NBL A < HVOD_E_9_PA16G5_SLIT_NBL
}


HVOD.E.10_SHNNBLPSUBSHP{ @ min extension of SH_N beyond N+OD for HV diode >= ^HVOD_E_10_SHNNBLPSUBSHP
   A = HVSHN INTERACT DIO_SHNNBLPSUBSHP_M
   ENC NPOD A < HVOD_E_10_SHNNBLPSUBSHP ABUT < 90 SINGULAR REGION
}
HVOD.E.10_SHNPSUBSHP{ @ min extension of SH_N beyond N+OD for HV diode >= ^HVOD_E_10_SHNPSUBSHP
   A = HVSHN INTERACT DIO_SHNPSUBSHP_M
   ENC NPOD A < HVOD_E_10_SHNPSUBSHP ABUT < 90 SINGULAR REGION
}
HVOD.E.10_SHNNBLPSUBSHP_GB{ @ min extension of SH_N beyond N+OD for HV diode >= ^HVOD_E_10_SHNNBLPSUBSHP_GB
   A = HVSHN INTERACT DIO_SHNNBLPSUBSHP_GB_M
   ENC NPOD A < HVOD_E_10_SHNNBLPSUBSHP_GB ABUT < 90 SINGULAR REGION
}

HVOD.E.11_PBSHNNBL{ @ min and max extension of SH_N beyond N+ pickup ring for HV Diode == ^ HVOD_E_11_PBSHNNBL
   A = HVSHN INTERACT DIO_PBSHNNBL_P
   B = SIZE DIO_PBSHNNBL_P BY HVOD_E_11_PBSHNNBL
   A XOR B
}
HVOD.E.11_PDDSHNNBL{ @ min and max extension of SH_N beyond N+ pickup ring for HV Diode == ^ HVOD_E_11_PDDSHNNBL
   A = HVSHN INTERACT DIO_PDDSHNNBL_P
   B = SIZE DIO_PDDSHNNBL_P BY HVOD_E_11_PDDSHNNBL
   A XOR B
}
HVOD.E.11_SHPNBLSHN_GB{ @ min and max extension of SH_N beyond N+ pickup ring for HV Diode == ^ HVOD_E_11_SHPNBLSHN_GB
   A = HVSHN INTERACT DIO_SHPNBLSHN_GB_P
   B = SIZE DIO_SHPNBLSHN_GB_P BY HVOD_E_11_SHPNBLSHN_GB
   A XOR B
}
HVOD.E.11_ZENER_NBL{ @ min and max extension of SH_N beyond N+ pickup ring for HV Diode == ^ HVOD_E_11_ZENER_NBL
   A = (HOLES HVSHN INNER) ENCLOSE DIO_ZENER_NBL_M
   B = HVSHN TOUCH A
   C = NPOD_PICK_R INTERACT B
   D = SIZE C BY HVOD_E_11_ZENER_NBL
   B XOR D
}

HVOD.E.11_SBD_12V { @ min and max extension of SH_N beyond N+ pickup-ring for HV Diode == ^HVOD_E_11_SBD_12V
   A = NPOD_PICK_H ENCLOSE DIO_SBD_12V_M
   B = NPOD_PICK_R TOUCH A
   C = SIZE B BY HVOD_E_11_SBD_12V
   D = HVSHN INTERACT B
   C XOR D
}
HVOD.E.11_SBD_16V { @ min and max extension of SH_N beyond N+ pickup-ring for HV Diode == ^HVOD_E_11_SBD_16V
   A = NPOD_PICK_H ENCLOSE DIO_SBD_16V_M
   B = NPOD_PICK_R TOUCH A
   C = SIZE B BY HVOD_E_11_SBD_16V
   D = HVSHN INTERACT B
   C XOR D
}
HVOD.E.11_SBD_24V { @ min and max extension of SH_N beyond N+ pickup-ring for HV Diode == ^HVOD_E_11_SBD_24V
   A = NPOD_PICK_H ENCLOSE DIO_SBD_24V_M
   B = NPOD_PICK_R TOUCH A
   C = SIZE B BY HVOD_E_11_SBD_24V
   D = HVSHN INTERACT B
   C XOR D
}

HVEOD.E.1_NLD20G5{ @ min and max extension of EOD beyond OD in channel width direction on drain side == ^HVEOD_E_1_NLD20G5
    A = EOD INTERACT NLD20G5_D
	B = A TOUCH EDGE (A INSIDE EDGE NLD20G5_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (A TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NLD20G5_D)
	E = EXPAND EDGE D INSIDE BY HVEOD_E_1_NLD20G5
	E NOT TOUCH NLD20G5_D
}
HVEOD.E.1_NLD20G5_FULLY_ISO{ @ min and max extension of EOD beyond OD in channel width direction on drain side == ^HVEOD_E_1_NLD20G5_FULLY_ISO
    A = EOD INTERACT NLD20G5_FULLY_ISO_D
	B = A TOUCH EDGE (A INSIDE EDGE NLD20G5_FULLY_ISO_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (A TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NLD20G5_FULLY_ISO_D)
	E = EXPAND EDGE D INSIDE BY HVEOD_E_1_NLD20G5_FULLY_ISO
	E NOT TOUCH NLD20G5_FULLY_ISO_D
}
HVEOD.E.1_NLD24G5_FULLY_ISO{ @ min and max extension of EOD beyond OD in channel width direction on drain side == ^HVEOD_E_1_NLD24G5_FULLY_ISO
    A = EOD INTERACT NLD24G5_FULLY_ISO_D
	B = A TOUCH EDGE (A INSIDE EDGE NLD24G5_FULLY_ISO_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (A TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NLD24G5_FULLY_ISO_D)
	E = EXPAND EDGE D INSIDE BY HVEOD_E_1_NLD24G5_FULLY_ISO
	E NOT TOUCH NLD24G5_FULLY_ISO_D
}
HVEOD.E.1_NLD24G5_ISO_SWITCH{ @ min and max extension of EOD beyond OD in channel width direction on drain side == ^HVEOD_E_1_NLD24G5_ISO_SWITCH
    A = EOD INTERACT NLD24G5_ISO_SWITCH_D
	B = A TOUCH EDGE (A INSIDE EDGE NLD24G5_ISO_SWITCH_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (A TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NLD24G5_ISO_SWITCH_D)
	E = EXPAND EDGE D INSIDE BY HVEOD_E_1_NLD24G5_ISO_SWITCH
	E NOT TOUCH NLD24G5_ISO_SWITCH_D
}
HVEOD.E.1_NA20G5{ @ min and max extension of EOD beyond OD in channel width direction on drain side == ^HVEOD_E_1_NA20G5
    A = EOD INTERACT NA20G5_D
	B = A TOUCH EDGE (A INSIDE EDGE NA20G5_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (A TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NA20G5_D)
	E = EXPAND EDGE D INSIDE BY HVEOD_E_1_NA20G5
	E NOT TOUCH NA20G5_D
}
HVEOD.E.1_NA20G5_NBL{ @ min and max extension of EOD beyond OD in channel width direction on drain side == ^HVEOD_E_1_NA20G5_NBL
    A = EOD INTERACT NA20G5_NBL_D
	B = A TOUCH EDGE (A INSIDE EDGE NA20G5_NBL_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (A TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NA20G5_NBL_D)
	E = EXPAND EDGE D INSIDE BY HVEOD_E_1_NA20G5_NBL
	E NOT TOUCH NA20G5_NBL_D
}
HVEOD.E.1_NA29G5{ @ min and max extension of EOD beyond OD in channel width direction on drain side == ^HVEOD_E_1_NA29G5
    A = EOD INTERACT NA29G5_D
	B = A TOUCH EDGE (A INSIDE EDGE NA29G5_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (A TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NA29G5_D)
	E = EXPAND EDGE D INSIDE BY HVEOD_E_1_NA29G5
	E NOT TOUCH NA29G5_D
}
HVEOD.E.1_NA29G5_NBL{ @ min and max extension of EOD beyond OD in channel width direction on drain side == ^HVEOD_E_1_NA29G5_NBL
    A = EOD INTERACT NA29G5_NBL_D
	B = A TOUCH EDGE (A INSIDE EDGE NA29G5_NBL_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (A TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NA29G5_NBL_D)
	E = EXPAND EDGE D INSIDE BY HVEOD_E_1_NA29G5_NBL
	E NOT TOUCH NA29G5_NBL_D
}
HVEOD.E.1_NA29G3_DEP_NBL{ @ min and max extension of EOD beyond OD in channel width direction on drain side == ^HVEOD_E_1_NA29G3_DEP_NBL
    A = EOD INTERACT NA29G3_DEP_NBL_D
	B = A TOUCH EDGE (A INSIDE EDGE NA29G3_DEP_NBL_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (A TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NA29G3_DEP_NBL_D)
	E = EXPAND EDGE D INSIDE BY HVEOD_E_1_NA29G3_DEP_NBL
	E NOT TOUCH NA29G3_DEP_NBL_D
}
HVEOD.E.1_NLD24G5{ @ min and max extension of EOD beyond OD in channel width direction on drain side == ^HVEOD_E_1_NLD24G5
    A = EOD INTERACT NLD24G5_D
	B = A TOUCH EDGE (A INSIDE EDGE NLD24G5_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (A TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NLD24G5_D)
	E = EXPAND EDGE D INSIDE BY HVEOD_E_1_NLD24G5
	E NOT TOUCH NLD24G5_D
}

HVEOD.E.1_NLD24G5_SWITCH{ @ min and max extension of EOD beyond OD in channel width direction on drain side == ^HVEOD_E_1_NLD24G5_SWITCH
    A = EOD INTERACT NLD24G5_SWITCH_D
	B = A TOUCH EDGE (A INSIDE EDGE NLD24G5_SWITCH_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (A TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NLD24G5_SWITCH_D)
	E = EXPAND EDGE D INSIDE BY HVEOD_E_1_NLD24G5_SWITCH
	E NOT TOUCH NLD24G5_SWITCH_D
}


HVEOD.E.2_NLD20G5{ @ min and max extension of EOD beyond OD in channel length direction on drain side == ^HVEOD_E_2_NLD20G5
    A = EOD INTERACT NLD20G5_D
	B = A TOUCH EDGE (A INSIDE EDGE NLD20G5_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY HVEOD_E_2_NLD20G5
	E NOT TOUCH NLD20G5_D
}
HVEOD.E.2_NLD20G5_FULLY_ISO{ @ min and max extension of EOD beyond OD in channel length direction on drain side == ^HVEOD_E_2_NLD20G5_FULLY_ISO
    A = EOD INTERACT NLD20G5_FULLY_ISO_D
	B = A TOUCH EDGE (A INSIDE EDGE NLD20G5_FULLY_ISO_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY HVEOD_E_2_NLD20G5_FULLY_ISO
	E NOT TOUCH NLD20G5_FULLY_ISO_D
}
HVEOD.E.2_NLD24G5_FULLY_ISO{ @ min and max extension of EOD beyond OD in channel length direction on drain side == ^HVEOD_E_2_NLD24G5_FULLY_ISO
    A = EOD INTERACT NLD24G5_FULLY_ISO_D
	B = A TOUCH EDGE (A INSIDE EDGE NLD24G5_FULLY_ISO_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY HVEOD_E_2_NLD24G5_FULLY_ISO
	E NOT TOUCH NLD24G5_FULLY_ISO_D
}
HVEOD.E.2_NLD24G5_ISO_SWITCH{ @ min and max extension of EOD beyond OD in channel length direction on drain side == ^HVEOD_E_2_NLD24G5_ISO_SWITCH
    A = EOD INTERACT NLD24G5_ISO_SWITCH_D
	B = A TOUCH EDGE (A INSIDE EDGE NLD24G5_ISO_SWITCH_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY HVEOD_E_2_NLD24G5_ISO_SWITCH
	E NOT TOUCH NLD24G5_ISO_SWITCH_D
}
HVEOD.E.2_NA20G5{ @ min and max extension of EOD beyond OD in channel length direction on drain side == ^HVEOD_E_2_NA20G5
    A = EOD INTERACT NA20G5_D
	B = A TOUCH EDGE (A INSIDE EDGE NA20G5_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY HVEOD_E_2_NA20G5
	E NOT TOUCH NA20G5_D
}
HVEOD.E.2_NA20G5_NBL{ @ min and max extension of EOD beyond OD in channel length direction on drain side == ^HVEOD_E_2_NA20G5_NBL
    A = EOD INTERACT NA20G5_NBL_D
	B = A TOUCH EDGE (A INSIDE EDGE NA20G5_NBL_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY HVEOD_E_2_NA20G5_NBL
	E NOT TOUCH NA20G5_NBL_D
}
HVEOD.E.2_NA29G5{ @ min and max extension of EOD beyond OD in channel length direction on drain side == ^HVEOD_E_2_NA29G5
    A = EOD INTERACT NA29G5_D
	B = A TOUCH EDGE (A INSIDE EDGE NA29G5_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY HVEOD_E_2_NA29G5
	E NOT TOUCH NA29G5_D
}
HVEOD.E.2_NA29G5_NBL{ @ min and max extension of EOD beyond OD in channel length direction on drain side == ^HVEOD_E_2_NA29G5_NBL
    A = EOD INTERACT NA29G5_NBL_D
	B = A TOUCH EDGE (A INSIDE EDGE NA29G5_NBL_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY HVEOD_E_2_NA29G5_NBL
	E NOT TOUCH NA29G5_NBL_D
}
HVEOD.E.2_NA29G3_DEP_NBL{ @ min and max extension of EOD beyond OD in channel length direction on drain side == ^HVEOD_E_2_NA29G3_DEP_NBL
    A = EOD INTERACT NA29G3_DEP_NBL_D
	B = A TOUCH EDGE (A INSIDE EDGE NA29G3_DEP_NBL_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY HVEOD_E_2_NA29G3_DEP_NBL
	E NOT TOUCH NA29G3_DEP_NBL_D
}
HVEOD.E.2_NLD24G5{ @ min and max extension of EOD beyond OD in channel length direction on drain side == ^HVEOD_E_2_NLD24G5
    A = EOD INTERACT NLD24G5_D
	B = A TOUCH EDGE (A INSIDE EDGE NLD24G5_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY HVEOD_E_2_NLD24G5
	E NOT TOUCH NLD24G5_D
}

HVEOD.E.2_NLD24G5_SWITCH{ @ min and max extension of EOD beyond OD in channel length direction on drain side == ^HVEOD_E_2_NLD24G5_SWITCH
    A = EOD INTERACT NLD24G5_SWITCH_D
	B = A TOUCH EDGE (A INSIDE EDGE NLD24G5_SWITCH_D)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY HVEOD_E_2_NLD24G5_SWITCH
	E NOT TOUCH NLD24G5_SWITCH_D
}

HVEOD.E.3_NLD20G5{ @ min and max extension of EOD beyond NP in channel length direction on drain side == ^HVEOD_E_3_NLD20G5
    A = EOD INTERACT NLD20G5_D
    B = (A NOT INSIDE EDGE NP) TOUCH EDGE (EOD INSIDE EDGE NLD20G5_D)
	C = EXPAND EDGE B INSIDE BY HVEOD_E_3_NLD20G5 EXTEND BY -GRID 
    C NOT TOUCH NP	
}
HVEOD.E.3_NLD20G5_FULLY_ISO{ @ min and max extension of EOD beyond NP in channel length direction on drain side == ^HVEOD_E_3_NLD20G5_FULLY_ISO
    A = EOD INTERACT NLD20G5_FULLY_ISO_D
    B = (A NOT INSIDE EDGE NP) TOUCH EDGE (EOD INSIDE EDGE NLD20G5_FULLY_ISO_D)
	C = EXPAND EDGE B INSIDE BY HVEOD_E_3_NLD20G5_FULLY_ISO EXTEND BY -GRID 
    C NOT TOUCH NP	
}
HVEOD.E.3_NLD24G5_FULLY_ISO{ @ min and max extension of EOD beyond NP in channel length direction on drain side == ^HVEOD_E_3_NLD24G5_FULLY_ISO
    A = EOD INTERACT NLD24G5_FULLY_ISO_D
    B = (A NOT INSIDE EDGE NP) TOUCH EDGE (EOD INSIDE EDGE NLD24G5_FULLY_ISO_D)
	C = EXPAND EDGE B INSIDE BY HVEOD_E_3_NLD24G5_FULLY_ISO EXTEND BY -GRID 
    C NOT TOUCH NP	
}
HVEOD.E.3_NLD24G5_ISO_SWITCH{ @ min and max extension of EOD beyond NP in channel length direction on drain side == ^HVEOD_E_3_NLD24G5_ISO_SWITCH
    A = EOD INTERACT NLD24G5_ISO_SWITCH_D
    B = (A NOT INSIDE EDGE NP) TOUCH EDGE (EOD INSIDE EDGE NLD24G5_ISO_SWITCH_D)
	C = EXPAND EDGE B INSIDE BY HVEOD_E_3_NLD24G5_ISO_SWITCH EXTEND BY -GRID 
    C NOT TOUCH NP	
}
HVEOD.E.3_NA20G5{ @ min and max extension of EOD beyond NP in channel length direction on drain side == ^HVEOD_E_3_NA20G5
    A = EOD INTERACT NA20G5_D
    B = (A NOT INSIDE EDGE NP) TOUCH EDGE (EOD INSIDE EDGE NA20G5_D)
	C = EXPAND EDGE B INSIDE BY HVEOD_E_3_NA20G5 EXTEND BY -GRID 
    C NOT TOUCH NP	
}
HVEOD.E.3_NA20G5_NBL{ @ min and max extension of EOD beyond NP in channel length direction on drain side == ^HVEOD_E_3_NA20G5_NBL
    A = EOD INTERACT NA20G5_NBL_D
    B = (A NOT INSIDE EDGE NP) TOUCH EDGE (EOD INSIDE EDGE NA20G5_NBL_D)
	C = EXPAND EDGE B INSIDE BY HVEOD_E_3_NA20G5_NBL EXTEND BY -GRID 
    C NOT TOUCH NP	
}
HVEOD.E.3_NA29G5{ @ min and max extension of EOD beyond NP in channel length direction on drain side == ^HVEOD_E_3_NA29G5
    A = EOD INTERACT NA29G5_D
    B = (A NOT INSIDE EDGE NP) TOUCH EDGE (EOD INSIDE EDGE NA29G5_D)
	C = EXPAND EDGE B INSIDE BY HVEOD_E_3_NA29G5 EXTEND BY -GRID 
    C NOT TOUCH NP	
}
HVEOD.E.3_NA29G5_NBL{ @ min and max extension of EOD beyond NP in channel length direction on drain side == ^HVEOD_E_3_NA29G5_NBL
    A = EOD INTERACT NA29G5_NBL_D
    B = (A NOT INSIDE EDGE NP) TOUCH EDGE (EOD INSIDE EDGE NA29G5_NBL_D)
	C = EXPAND EDGE B INSIDE BY HVEOD_E_3_NA29G5_NBL EXTEND BY -GRID 
    C NOT TOUCH NP	
}
HVEOD.E.3_NA29G3_DEP_NBL{ @ min and max extension of EOD beyond NP in channel length direction on drain side == ^HVEOD_E_3_NA29G3_DEP_NBL
    A = EOD INTERACT NA29G3_DEP_NBL_D
    B = (A NOT INSIDE EDGE NP) TOUCH EDGE (EOD INSIDE EDGE NA29G3_DEP_NBL_D)
	C = EXPAND EDGE B INSIDE BY HVEOD_E_3_NA29G3_DEP_NBL EXTEND BY -GRID 
    C NOT TOUCH NP	
}
HVEOD.E.3_NLD24G5{ @ min and max extension of EOD beyond NP in channel length direction on drain side == ^HVEOD_E_3_NLD24G5
    A = EOD INTERACT NLD24G5_D
    B = (A NOT INSIDE EDGE NP) TOUCH EDGE (EOD INSIDE EDGE NLD24G5_D)
	C = EXPAND EDGE B INSIDE BY HVEOD_E_3_NLD24G5 EXTEND BY -GRID 
    C NOT TOUCH NP	
}

HVEOD.E.3_NLD24G5_SWITCH{ @ min and max extension of EOD beyond NP in channel length direction on drain side == ^HVEOD_E_3_NLD24G5_SWITCH
    A = EOD INTERACT NLD24G5_SWITCH_D
    B = (A NOT INSIDE EDGE NP) TOUCH EDGE (EOD INSIDE EDGE NLD24G5_SWITCH_D)
	C = EXPAND EDGE B INSIDE BY HVEOD_E_3_NLD24G5_SWITCH EXTEND BY -GRID 
    C NOT TOUCH NP	
}

HVEOD.E.4_SBD_24V { @ min and max extension of EOD ring beyond {Anode OD AND Cathode OD} for 24V SBD == ^ HVEOD_E_4_SBD_24V
   A = SIZE DIO_SBD_24V_M BY HVEOD_E_4_SBD_24V
   B = EOD INTERACT DIO_SBD_24V_M
   C = B OR (HOLES B INNER)
   C XOR A
}

HVEOD.O.1_SBD_24V { @ min and max overlap  of EOD ring and {Anode OD AND Cathod OD} for HV 24V SBD == ^ HVEOD_O_1_SBD_24V
   INT EOD DIO_SBD_24V_M < HVEOD_O_1_SBD_24V ABUT < 90 SINGULAR REGION
   A = EOD AND DIO_SBD_24V_M
   SIZE A BY HVEOD_O_1_SBD_24V/2 UNDEROVER
}

HVEOD.O.2_SBD_24V {@ min and max overlap of EOD and RPO for HV 24V SBD == ^HVEOD_O_2_SBD_24V
   A = (HOLES EOD INNER) INTERACT DIO_SBD_24V_M
   B = EOD TOUCH A
   C = (HOLES RPO INNER) INTERACT DIO_SBD_24V_M
   D = RPO TOUCH C
   INT B D < HVEOD_O_2_SBD_24V ABUT < 90 SINGULAR REGION
   E = B AND D
   SIZE E BY HVEOD_O_2_SBD_24V/2 UNDEROVER
}

HVEOD.R.1 { @ EOD is must for NLD20G5(GA),NLD20G5_fully_iso(GA),NLD24G5_iso_switch(GA),NLD24G5_fully_iso(GA),NA29G5(GA),
			@ NA29G5_NBL(GA),NA29G3_dep_NBL(GA)
   NLD20G5_CH NOT INTERACT EOD
   NLD20G5_FULLY_ISO_CH NOT INTERACT EOD
   NLD24G5_ISO_SWITCH_CH NOT INTERACT EOD
   NLD24G5_FULLY_ISO_CH NOT INTERACT EOD
   NA29G5_CH NOT INTERACT EOD
   NA29G5_NBL_CH NOT INTERACT EOD
   NA20G5_CH NOT INTERACT EOD
   NA20G5_NBL_CH NOT INTERACT EOD
   NA29G3_dep_NBL_CH NOT INTERACT EOD
   NLD24G5_CH NOT INTERACT EOD
   NLD24G5_SWITCH_CH NOT INTERACT EOD
}

HVOD.R.19 { @ Each HV SBD diode must be surrounded by its own N+ pickup-ring,P+ pickup-ring,and P+ isolation ring.
		    @ HV SBD diode with multi-structure may share the same N+ pickup-ring,P+ pickup-ring and P+ isolation ring .
   PPOD_PICK_H INTERACT SBD_HVDIO_M > 1
   SBD_HVDIO_M NOT PPOD_PICK_H
}

HVOD.R.20_SBD_12V { @ The N+ pickup-ring, P+ pickup-ring of HV SBD diode must be connected with Anode OD of itself
  DIO_SBD_12V_Mc = STAMP DIO_SBD_12V_M BY PSD_mf
  PPOD_PICK_H_SBD_12V = PPOD_PICK_H ENCLOSE DIO_SBD_12V_M
  PPOD_PICK_R_SBD_12V = PPOD_PICK_R TOUCH PPOD_PICK_H_SBD_12V
  NPOD_PICK_H_SBD_12V = NPOD_PICK_H ENCLOSE DIO_SBD_12V_M
  NPOD_PICK_R_SBD_12V = NPOD_PICK_R TOUCH NPOD_PICK_H_SBD_12V
  PPOD_PICK_Rc = STAMP PPOD_PICK_R_SBD_12V BY PTAP_mf
  NPOD_PICK_Rc = STAMP NPOD_PICK_R_SBD_12V BY NTAP_mf
  NET AREA RATIO DIO_SBD_12V_Mc PPOD_PICK_Rc NPOD_PICK_Rc == 0
  [
    !!AREA(DIO_SBD_12V_Mc)*!!AREA(PPOD_PICK_Rc)*!!AREA(NPOD_PICK_Rc)
  ] RDB HVOD.R.20_SBD_12V.rep DIO_SBD_12V_Mc PPOD_PICK_Rc NPOD_PICK_Rc
}


HVOD.R.20_SBD_16V { @ The N+ pickup-ring, P+ pickup-ring of HV SBD diode must be connected with Anode OD of itself
  DIO_SBD_16V_Mc = STAMP DIO_SBD_16V_M BY PSD_mf
  PPOD_PICK_H_SBD_16V = PPOD_PICK_H ENCLOSE DIO_SBD_16V_M
  PPOD_PICK_R_SBD_16V = PPOD_PICK_R TOUCH PPOD_PICK_H_SBD_16V
  NPOD_PICK_H_SBD_16V = NPOD_PICK_H ENCLOSE DIO_SBD_16V_M
  NPOD_PICK_R_SBD_16V = NPOD_PICK_R TOUCH NPOD_PICK_H_SBD_16V
  PPOD_PICK_Rc = STAMP PPOD_PICK_R_SBD_16V BY PTAP_mf
  NPOD_PICK_Rc = STAMP NPOD_PICK_R_SBD_16V BY NTAP_mf
  NET AREA RATIO DIO_SBD_16V_Mc PPOD_PICK_Rc NPOD_PICK_Rc == 0
  [
    !!AREA(DIO_SBD_16V_Mc)*!!AREA(PPOD_PICK_Rc)*!!AREA(NPOD_PICK_Rc)
  ] RDB HVOD.R.20_SBD_16V.rep DIO_SBD_16V_Mc PPOD_PICK_Rc NPOD_PICK_Rc
}


HVOD.R.20_SBD_24V { @ The N+ pickup-ring, P+ pickup-ring of HV SBD diode must be connected with Anode OD of itself
  DIO_SBD_24V_Mc = STAMP DIO_SBD_24V_M BY PSD_mf
  PPOD_PICK_H_SBD_24V = PPOD_PICK_H ENCLOSE DIO_SBD_24V_M
  PPOD_PICK_R_SBD_24V = PPOD_PICK_R TOUCH PPOD_PICK_H_SBD_24V
  NPOD_PICK_H_SBD_24V = NPOD_PICK_H ENCLOSE DIO_SBD_24V_M
  NPOD_PICK_R_SBD_24V = NPOD_PICK_R TOUCH NPOD_PICK_H_SBD_24V
  PPOD_PICK_Rc = STAMP PPOD_PICK_R_SBD_24V BY PTAP_mf
  NPOD_PICK_Rc = STAMP NPOD_PICK_R_SBD_24V BY NTAP_mf
  NET AREA RATIO DIO_SBD_24V_Mc PPOD_PICK_Rc NPOD_PICK_Rc == 0
  [
    !!AREA(DIO_SBD_24V_Mc)*!!AREA(PPOD_PICK_Rc)*!!AREA(NPOD_PICK_Rc)
  ] RDB HVOD.R.20_SBD_24V.rep DIO_SBD_24V_Mc PPOD_PICK_Rc NPOD_PICK_Rc
}




EMPTY_mf = CHIP NOT (SIZE CHIP BY 10.0) 
NTAP_mf = NTAPi OR EMPTY_mf
PTAP_mf = PTAPi OR EMPTY_mf
PSD_mf = PSDi OR EMPTY_mf
NSD_mf = NSDi OR EMPTY_mf
ILP1_mf = ILP1i OR EMPTY_mf
CO_mf = COi OR EMPTY_mf
M1_mf = M1xd OR EMPTY_mf
VIA1_mf =  VIA1ii OR EMPTY_mf
M2_mf   =  M2xd OR EMPTY_mf
VIA2_mf =  VIA2ii OR EMPTY_mf
M3_mf   =  M3xd OR EMPTY_mf
VIA3_mf =  VIA3ii OR EMPTY_mf
M4_mf   =  M4xd OR EMPTY_mf
VIA4_mf =  VIA4ii OR EMPTY_mf
M5_mf   =  M5xd OR EMPTY_mf
MD_mf = MDxd OR EMPTY_mf
VIAD_mf  = VIADi OR EMPTY_mf
CTM1_mf = CTM1i OR EMPTY_mf
CTM_VIA1_mf = CTM_VIA1i OR EMPTY_mf
CTM2_mf = CTM2i OR EMPTY_mf
CTM_VIA2_mf = CTM_VIA2i OR EMPTY_mf
CTM3_mf = CTM3i OR EMPTY_mf
CTM_VIA3_mf = CTM_VIA3i OR EMPTY_mf
CTM4_mf = CTM4i OR EMPTY_mf
CTM_VIA4_mf = CTM_VIA4i OR EMPTY_mf
CB_mf = CBi OR EMPTY_mf
CBD_mf = CBDi OR EMPTY_mf
PPI_mf = PPIi OR EMPTY_mf
UBMn_mf = UBMn OR EMPTY_mf
UBMd_mf = UBMd OR EMPTY_mf


CONNECT	NTAP_mf PSD_mf
CONNECT	PTAP_mf NSD_mf
CONNECT	M1_mf ILP1_mf NTAP_mf PTAP_mf PSD_mf NSD_mf BY CO_mf
CONNECT	M1_mf M2_mf BY VIA1_mf
CONNECT CTM1_mf M2_mf BY CTM_VIA1_mf
CONNECT	M2_mf M3_mf BY VIA2_mf
CONNECT CTM2_mf M3_mf BY CTM_VIA2_mf
CONNECT	M3_mf M4_mf BY VIA3_mf
CONNECT CTM3_mf M4_mf BY CTM_VIA3_mf
CONNECT	M4_mf M5_mf BY VIA4_mf
CONNECT CTM4_mf M5_mf BY CTM_VIA4_mf
CONNECT	M5_mf  MD_mf BY VIAD_mf
CONNECT M5_mf CB_mf
CONNECT M5_mf UBMn_mf BY CBD_mf
CONNECT MD_mf UBMd_mf
CONNECT M5_mf PPI_mf BY CBD_mf
CONNECT PPI_mf UBMd_mf


NLD6G5_DE_S_pre = STAMP NLD6G5_DE_S BY NSD_mf
PPOD_ISO_R_NLD6G5_DE_pre =  STAMP PPOD_ISO_R_NLD6G5_DE BY PTAP_mf 
PPOD_ISO_R_NLD6G5_DE_merge = PPOD_ISO_R_NLD6G5_DE OR PPOD_ISO_H_NLD6G5_DE
HVOD.R.21_NLD6G5_DE { @ All source/bulk OD in the same multi-finger structure of low side slit MOS must be connected to its own P+ isolation ring , This rule is DRC checkable through metal connection. 
	NET AREA RATIO NLD6G5_DE_S_pre PPOD_ISO_R_NLD6G5_DE_pre ==0  INSIDE  OF LAYER  PPOD_ISO_R_NLD6G5_DE_merge
}
NLD6G5_SA_S_pre = STAMP NLD6G5_SA_S BY NSD_mf
PPOD_ISO_R_NLD6G5_SA_pre =  STAMP PPOD_ISO_R_NLD6G5_SA BY PTAP_mf 
PPOD_ISO_R_NLD6G5_SA_merge = PPOD_ISO_R_NLD6G5_SA OR PPOD_ISO_H_NLD6G5_SA
HVOD.R.21_NLD6G5_SA { @ All source/bulk OD in the same multi-finger structure of low side slit MOS must be connected to its own P+ isolation ring , This rule is DRC checkable through metal connection. 
	NET AREA RATIO NLD6G5_SA_S_pre PPOD_ISO_R_NLD6G5_SA_pre ==0  INSIDE  OF LAYER  PPOD_ISO_R_NLD6G5_SA_merge
}
NLD9G5_S_pre = STAMP NLD9G5_S BY NSD_mf
PPOD_ISO_R_NLD9G5_pre =  STAMP PPOD_ISO_R_NLD9G5 BY PTAP_mf 
PPOD_ISO_R_NLD9G5_merge = PPOD_ISO_R_NLD9G5 OR PPOD_ISO_H_NLD9G5
HVOD.R.21_NLD9G5 { @ All source/bulk OD in the same multi-finger structure of low side slit MOS must be connected to its own P+ isolation ring , This rule is DRC checkable through metal connection. 
	NET AREA RATIO NLD9G5_S_pre PPOD_ISO_R_NLD9G5_pre ==0  INSIDE  OF LAYER  PPOD_ISO_R_NLD9G5_merge
}
NLD12G5_S_pre = STAMP NLD12G5_S BY NSD_mf
PPOD_ISO_R_NLD12G5_pre =  STAMP PPOD_ISO_R_NLD12G5 BY PTAP_mf 
PPOD_ISO_R_NLD12G5_merge = PPOD_ISO_R_NLD12G5 OR PPOD_ISO_H_NLD12G5
HVOD.R.21_NLD12G5 { @ All source/bulk OD in the same multi-finger structure of low side slit MOS must be connected to its own P+ isolation ring , This rule is DRC checkable through metal connection. 
	NET AREA RATIO NLD12G5_S_pre PPOD_ISO_R_NLD12G5_pre ==0  INSIDE  OF LAYER  PPOD_ISO_R_NLD12G5_merge
}
NLD16G5_S_pre = STAMP NLD16G5_S BY NSD_mf
PPOD_ISO_R_NLD16G5_pre =  STAMP PPOD_ISO_R_NLD16G5 BY PTAP_mf 
PPOD_ISO_R_NLD16G5_merge = PPOD_ISO_R_NLD16G5 OR PPOD_ISO_H_NLD16G5
HVOD.R.21_NLD16G5 { @ All source/bulk OD in the same multi-finger structure of low side slit MOS must be connected to its own P+ isolation ring , This rule is DRC checkable through metal connection. 
	NET AREA RATIO NLD16G5_S_pre PPOD_ISO_R_NLD16G5_pre ==0  INSIDE  OF LAYER  PPOD_ISO_R_NLD16G5_merge
}
NLD20G5_S_pre = STAMP NLD20G5_S BY NSD_mf
PPOD_ISO_R_NLD20G5_pre =  STAMP PPOD_ISO_R_NLD20G5 BY PTAP_mf 
PPOD_ISO_R_NLD20G5_merge = PPOD_ISO_R_NLD20G5 OR PPOD_ISO_H_NLD20G5
HVOD.R.21_NLD20G5 { @ All source/bulk OD in the same multi-finger structure of low side slit MOS must be connected to its own P+ isolation ring , This rule is DRC checkable through metal connection. 
	NET AREA RATIO NLD20G5_S_pre PPOD_ISO_R_NLD20G5_pre ==0  INSIDE  OF LAYER  PPOD_ISO_R_NLD20G5_merge
}
NLD24G5_SWITCH_S_pre = STAMP NLD24G5_SWITCH_S BY NSD_mf
PPOD_ISO_R_NLD24G5_SWITCH_pre =  STAMP PPOD_ISO_R_NLD24G5_SWITCH BY PTAP_mf 
PPOD_ISO_R_NLD24G5_SWITCH_merge = PPOD_ISO_R_NLD24G5_SWITCH OR PPOD_ISO_H_NLD24G5_SWITCH
HVOD.R.21_NLD24G5_SWITCH { @ All source/bulk OD in the same multi-finger structure of low side slit MOS must be connected to its own P+ isolation ring , This rule is DRC checkable through metal connection. 
	NET AREA RATIO NLD24G5_SWITCH_S_pre PPOD_ISO_R_NLD24G5_SWITCH_pre ==0  INSIDE  OF LAYER  PPOD_ISO_R_NLD24G5_SWITCH_merge
}
NLD24G5_S_pre = STAMP NLD24G5_S BY NSD_mf
PPOD_ISO_R_NLD24G5_pre =  STAMP PPOD_ISO_R_NLD24G5 BY PTAP_mf 
PPOD_ISO_R_NLD24G5_merge = PPOD_ISO_R_NLD24G5 OR PPOD_ISO_H_NLD24G5
HVOD.R.21_NLD24G5 { @ All source/bulk OD in the same multi-finger structure of low side slit MOS must be connected to its own P+ isolation ring , This rule is DRC checkable through metal connection. 
	NET AREA RATIO NLD24G5_S_pre PPOD_ISO_R_NLD24G5_pre ==0  INSIDE  OF LAYER  PPOD_ISO_R_NLD24G5_merge
}


HVOD.S.4 {@ Space of any point [inside {{PP AND OD} INSIDE SH_N}] to nearest N+ pickup-ring or N+ bulk pickup in the same SH_N for 5V Asymmetric Switch PMOS (GA) <= ^HVOD_S_4
    NPOD_PICK_PCH5_AS_SWITCH_NPODRING_PRE = (HOLES ( OD AND NP_SH_N) INNER) NOT ( OD AND NP_SH_N)    //ring not NP AND OD
    NPOD_PICK_PCH5_AS_SWITCH_NPODRING = NPOD_PICK_PCH5_AS_SWITCH_NPODRING_PRE ENCLOSE PCH5_AS_SWITCH_MAC_GATE_OD  // distinguish this device
    NPOD_PICK_PCH5_AS_SWITCH = (NTAPi INTERACT NPOD_PICK_PCH5_AS_SWITCH_NPODRING) INTERACT CO_PACT         //N pick up
    NPOD_PICK_OS = SIZE NPOD_PICK_PCH5_AS_SWITCH BY HVOD_S_4 INSIDE OF HVSHN STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7
    PCH5_AS_SWITCH_MAC_GATE_CHECKOD = PCH5_AS_SWITCH_MAC_GATE_OD INTERACT COi
    PCH5_AS_SWITCH_MAC_GATE_CHECKOD NOT NPOD_PICK_OS
}


// ;------------ HVNW rules check-------------------
// ;
HVNW.W.1 { @ Min width of HVNW (except 45V_ESD_GB) >= ^HVNW_W_1 um
  A = HVNW NOT INTERACT (COL_EMI_ESD_merge_PNP_45 OR COL_EMI_ESD_merge_PNP_36)
  INT A < HVNW_W_1  ABUT < 90 SINGULAR REGION
}

HVNW.S.1 { @ Min space between two HVNW(except 45V_ESD_GB and GB HV ESD Diode) >= ^HVNW_S_1
  A = HVNW NOT INTERACT (((COL_EMI_ESD_merge_PNP_45 OR ANO_CATH_ESD_DIO_GB) OR NA45G3_DEP_GB_GATE) OR COL_EMI_ESD_merge_PNP_36)
  EXT A < HVNW_S_1 ABUT < 90 SINGULAR REGION
}
HVNW.E.1_NLD36G5_GB { @ min extension of HVNW beyond Active OD in channel length for GB HVNMOS >=^ HVNW_E_1_NLD36G5_GB
    A = NLD36G5_GB_CH NOT TOUCH EDGE NLD36G5_GB_GATE 	
	B = HVNW INTERACT NLD36G5_GB_GATE
	ENC A B < HVNW_E_1_NLD36G5_GB ABUT < 90 REGION   	
}
HVNW.E.1_NLD45G5_GB { @ min extension of HVNW beyond Active OD in channel length for GB HVNMOS >=^ HVNW_E_1_NLD45G5_GB
    A = NLD45G5_GB_CH NOT TOUCH EDGE NLD45G5_GB_GATE 	
	B = HVNW INTERACT NLD45G5_GB_GATE
	ENC A B < HVNW_E_1_NLD45G5_GB ABUT < 90 REGION   	
}
HVNW.E.1_NA45G3_DEP_GB { @ min extension of HVNW beyond Active OD in channel length for GB HVNMOS >=^ HVNW_E_1_NA45G3_DEP_GB
    A = NA45G3_DEP_GB_CH NOT TOUCH EDGE NA45G3_DEP_GB_GATE 	
	B = HVNW INTERACT NA45G3_DEP_GB_GATE
	ENC A B < HVNW_E_1_NA45G3_DEP_GB ABUT < 90 REGION   	
}

HVNW.E.2_NLD36G5_GB { @ min extension of HVNW beyond Active OD in channel width >=^ HVNW_E_2_NLD36G5_GB
    A = NLD36G5_GB_CH TOUCH EDGE NLD36G5_GB_GATE 	
	B = HVNW INTERACT NLD36G5_GB_GATE
	ENC A B < HVNW_E_2_NLD36G5_GB ABUT < 90 REGION   	
}
HVNW.E.2_NLD45G5_GB { @ min extension of HVNW beyond Active OD in channel width >=^ HVNW_E_2_NLD45G5_GB
    A = NLD45G5_GB_CH TOUCH EDGE NLD45G5_GB_GATE 	
	B = HVNW INTERACT NLD45G5_GB_GATE
	ENC A B < HVNW_E_2_NLD45G5_GB ABUT < 90 REGION   	
}
HVNW.E.2_NA45G3_DEP_GB { @ min extension of HVNW beyond Active OD in channel width >=^ HVNW_E_2_NA45G3_DEP_GB
    A = NA45G3_DEP_GB_CH TOUCH EDGE NA45G3_DEP_GB_GATE 	
	B = HVNW INTERACT NA45G3_DEP_GB_GATE
	ENC A B < HVNW_E_2_NA45G3_DEP_GB ABUT < 90 REGION   	
}

HVNW.R.2 { @ HVNW must within {HVDMY AND HVGB}
    HVNW NOT (HVDMY AND HVGB)
}

// HVPW CHECKS
//=============

HVPW.W.1 { @ Min width of HVPW >= ^HVPW_W_1
  A = HVPW_drawing NOT INTERACT NA45G3_DEP_GB_GATE
  INT A < HVPW_W_1 ABUT < 90 SINGULAR REGION
}

HVPW.S.1 { @ Min space between two HVPW regions >= ^HVPW_S_1
  EXT HVPW_drawing < HVPW_S_1 ABUT < 90 SINGULAR REGION
}

HVPW.R.1 { @ HVPW is must for PA45G5_NBL(GB) and N+/HVPW diode(GB)
  NA45G3_DEP_GB_CH NOT INTERACT HVPW_drawing 
  PA36G5_BL_GB_OD NOT INTERACT HVPW_drawing
  PA45G5_BL_GB_OD NOT INTERACT HVPW_drawing
  DIO_NHVPW_GB_M NOT INTERACT HVPW_drawing
}

HVPW.R.2 { @ HVPW must be fully inside {HVDMY AND HVGB}
  HVPW_drawing NOT (HVDMY AND HVGB)
}

HVPW.E.2_NHVPW_GB { @ min and max extension of HVPW beyond Anode OD for HV diode ==^HVPW_E_2_NHVPW_GB
    A = DIO_NHVPW_GB_P OR (HOLES DIO_NHVPW_GB_P INNER)
    B = SIZE A BY HVPW_E_2_NHVPW_GB
	C = HVPW_drawing INTERACT DIO_NHVPW_GB_P
    B XOR C
}

HVPW.E.4_NHVPW_GB { @ min and max extension of PSUB beyond HVPW for N+HVPW Diode(GB) == 0
    A = PSUB INTERACT DIO_NHVPW_GB_M
	B = HVPW_drawing INTERACT DIO_NHVPW_GB_M
	A XOR B
}

HVPW.E.5_PA36G5_BL_GB{ @ min extension of HVPW beyond Active OD >= ^ HVPW_E_5_PA36G5_BL_GB
     ENC PA36G5_BL_GB_D HVPW_drawing < HVPW_E_5_PA36G5_BL_GB ABUT < 90 OPPOSITE REGION	
}

HVPW.E.6_PA36G5_BL_GB{ @ min and max clearance of Drain side HVPW and SHN of N+ pickup-ring == ^ HVPW_E_6_PA36G5_BL_GB
     A = HVPW_drawing INTERACT PA36G5_BL_GB_CH
	 B = HVSHN INTERACT NPOD_PICK_R_PA36G5_BL_GB
     C = A NOT INSIDE EDGE B
	 D = EXPAND EDGE C OUTSIDE BY HVPW_E_6_PA36G5_BL_GB
	 D NOT TOUCH B
}

HVPW.E.5_PA45G5_BL_GB{ @ min extension of HVPW beyond Active OD >= ^ HVPW_E_5_PA45G5_BL_GB
     ENC PA45G5_BL_GB_D HVPW_drawing < HVPW_E_5_PA45G5_BL_GB ABUT < 90 OPPOSITE REGION	
}

HVPW.E.6_PA45G5_BL_GB{ @ min and max clearance of Drain side HVPW and SHN of N+ pickup-ring == ^ HVPW_E_6_PA45G5_BL_GB
     A = HVPW_drawing INTERACT PA45G5_BL_GB_CH
	 B = HVSHN INTERACT NPOD_PICK_R_PA45G5_BL_GB
     C = A NOT INSIDE EDGE B
	 D = EXPAND EDGE C OUTSIDE BY HVPW_E_6_PA45G5_BL_GB
	 D NOT TOUCH B
}
HVPW.E.7_NA45G3_DEP_GB{ @ Minimum and maximum extension of HVPW beyond {Channel OD OR Bulk OD} in channel width direction == ^ HVPW_E_7_NA45G3_DEP_GB
	A = HVPW_drawing INTERACT NA45G3_DEP_GB_GATE
	B = A NOT TOUCH EDGE (A INSIDE EDGE NA45G3_DEP_GB_CH)
	C = EXPAND EDGE B INSIDE BY HVPW_E_7_NA45G3_DEP_GB
	C NOT TOUCH NA45G3_DEP_GB_CH
}
HVPW.O.1_NA45G3_DEP_GB{@ Minimum and maximum overlap of HVPW over {(GATE SIZING 0.1) AND PO}  == ^HVPW_O_1_NA45G3_DEP_GB
    A = (SIZE NA45G3_DEP_GB_GATE BY 0.1) AND POLY
    INT A HVPW_drawing < HVPW_O_1_NA45G3_DEP_GB ABUT <90 SINGULAR REGION
    B = A AND HVPW_drawing
    SIZE B BY HVPW_O_1_NA45G3_DEP_GB/2 UNDEROVER
}

HVPW.C.1_NA45G3_DEP_GB{ @ min and max clearance from HVPW to HVNW in channel length direction ==^ HVPW_C_1_NA45G3_DEP_GB
    A = HVNW TOUCH EDGE (HVNW INSIDE EDGE NA45G3_DEP_GB_CH)
    B = EXPAND EDGE A OUTSIDE BY HVPW_C_1_NA45G3_DEP_GB
	B NOT TOUCH HVPW_drawing	
}

// ;------------  HVDMY LAYER    ----------------
// ;



HVDMY.S.1 { @ Minimum space between two HVDMY regions   >= ^HVDMY_S_1
   EXT HVDMY < HVDMY_S_1 ABUT < 90 SINGULAR REGION
}
HVDMY.C.2 { @ Minimum clearance from HVDMY to NW outside HVDMY or NBL
         @ (non-isolated LV NW). Make them butted if the
         @ clearance is less than this rule.>= ^HVDMY_C_2
   X = ( NWEL NOT HVDMY ) NOT NBL
   EXT HVDMY X < HVDMY_C_2 ABUT > 0 < 90 SINGULAR REGION
}
HVDMY.C.3 { @ Minimum clearance from HVDMY to OD2 >= ^HVDMY_C_3 um
            @ Butted is allowed
   X = OD2 NOT HVDMY
   EXT HVDMY X < HVDMY_C_3 ABUT > 0 < 90 SINGULAR REGION
}
HVDMY.C.4 { @ Minimum clearance from HVDMY to NPOD outside HVDMY >= ^HVDMY_C_4 um
   X = NPOD NOT HVDMY
   EXT HVDMY X < HVDMY_C_4 ABUT < 90 SINGULAR REGION 
}
HVDMY.E.1.1 { @ Min extension of HVDMY beyond {SH_N INSIDE HVDMY} >= ^HVDMY_E_1_1
   A = HVSHN NOT INTERACT (NPOD_PICK_R_NLD5G5_ISO_SWITCH OR NPOD_PICK_H_PCH5_AS_SWITCH_MAC) 
   B = A INSIDE HVDMY 
   ENC B HVDMY < HVDMY_E_1_1 ABUT < 90 SINGULAR REGION
}
HVDMY.E.1.2 { @ Min extension of HVDMY beyond {SH_N INSIDE (HVDMY AND HVGB)} >= ^HVDMY_E_1_2
   A = HVSHN INSIDE (HVDMY AND HVGB)
   ENC A HVDMY < HVDMY_E_1_2 ABUT < 90 SINGULAR REGION
}
HVDMY.E.2 { @ Minimum extension of HVDMY beyond P+ isolation >= ^HVDMY_E_2
   ENC PPOD_ISO_R HVDMY < HVDMY_E_2 ABUT < 90 SINGULAR REGION
}
//HVDMY.E.3 is checked by HVDMY.E.2
HVDMY.R.2 { @ SH_N is not allowed to cut HVDMY. Butted is allowed
   HVSHN CUT HVDMY
}
HVDMY.R.3 { @ PO is not allowed to cut HVDMY. Butted is not allowed			
   POLY CUT HVDMY
   POLY TOUCH HVDMY
}
HVDMY.R.4 { @ OD, NW resistor are not allowed to interact HVDMY.
   A = ODRES_ALL OR RNWEL
   A INTERACT HVDMY
}
HVDMY.R.5 { @ (OD2 AND OD) and NW are not allowed to interact HVDMY.Butted is allowed
   ( NWELi OR (OD2i AND ODi) ) AND HVDMY
}

LV_PNP_E = (PPOD AND NWEL) AND BJTDUMMY
LV_PNP_B_HOLE = (HOLES NPOD INNER) ENCLOSE LV_PNP_E
LV_PNP_B =  NPOD TOUCH LV_PNP_B_HOLE
LV_PNP_C_HOLE = (HOLES PPOD INNER) ENCLOSE LV_PNP_B
LV_PNP_C = PPOD TOUCH LV_PNP_C_HOLE
LV_PNP = LV_PNP_C OR LV_PNP_C_HOLE

HVDMY.R.6 { @ LV device overlap with HVDMY is not allowed.
   NWEL AND HVDMY  //  Varactor &  P+NW diode
   LV_GATE = (((((ALL_GATE NOT INTERACT HVPB) NOT INTERACT SH_P)  NOT INTERACT PDD ) NOT INTERACT HVSHN) NOT INTERACT PDD2) NOT INTERACT HVPW_drawing
   LV_GATE_OD = OD INTERACT LV_GATE
   LV_GATE_OD AND HVDMY   // LV MOS
   RPDUMMY_LV = RPDUMMY NOT INTERACT  RLPPDMY
   (OD INTERACT RPDUMMY_LV) AND HVDMY      // OD resistor
   LV_PNP AND HVDMY // LV PNP
}   
HVDMY.R.7 { @ HVGA must be fully inside HVDMY
   HVGA NOT HVDMY
}

HVDMY.R.8 { @ HVGB must be fully inside HVDMY 
   HVGB NOT HVDMY
}
HVDMY.R.9 { @ HVDMY must be butted with (HVGA OR HVGB) 
   A = HVGB OR HVGA
   A XOR HVDMY
}
HVDMY.R.10 { @ HVDMY must cover the hole of P+ iso ring and P+ iso ring for HVMOS
	PPOD_ISO_H_HVMOS NOT HVDMY
	PPOD_ISO_R_HVMOS NOT HVDMY
}
ALL_HVDMY = ((((((((HV6DMY OR HV9DMY) OR HV12DMY) OR HV16DMY) OR HV20DMY) OR HV24DMY) OR HV29DMY) OR HV45DMY) OR HV5DMY)  OR HV36DMY
ALL_DIO_BJT_HVDMY = (((DIO3TDMY OR DIO4TDMY) OR BJT4TDMY) OR BJT7TDMY) OR SBD3TDMY 

HVDMY.R.11 { @ ALL HV Device DUMMY layer must be fully inside HVDMY (except HVLOWR layer)
	(ALL_HVDMY OR MACRODMY) NOT HVDMY 
	(ALL_DIO_BJT_HVDMY NOT OUTSIDE HVDMY) NOT HVDMY
}
HVDMY.R.12 { @ OD is not allowed to cut HVDMY [Butted is NOT allowed]
   OD CUT HVDMY
   OD TOUCH HVDMY
}
HVGA.S.1 { @min space between two HVGA, merge if space is less >= ^HVGA_S_1
   EXT HVGA < HVGA_S_1 ABUT <90 SINGULAR REGION
}

HVDMY.E.4_NPDD { @ min extension of HVDMY beyond P+ pickup ring for N+ PDD Diode(GA) >= ^ HVDMY_E_4_NPDD
   A = DIO_NPDD_P OR DIO_NPDD_H
   B = HVDMY INTERACT DIO_NPDD_M
   ENC A B < HVDMY_E_4_NPDD ABUT < 90 SINGULAR REGION
}

HVDMY.E.5_NHVPW_GB { @ min extension of HVDMY beyond P+ pickup ring for N+ HVPW Diode(GB) >= ^ HVDMY_E_5_NHVPW_GB
   A = DIO_NHVPW_GB_P OR DIO_NHVPW_GB_H
   B = HVDMY INTERACT DIO_NHVPW_GB_M 
   ENC A B < HVDMY_E_5_NHVPW_GB ABUT < 90 SINGULAR REGION
}

HVDMY.E.6_PBSHNNBL{ @ min extension of HVDMY beyond P+ isolation ring for GA HV Diode (except N+/PDD(GA)) >= ^ HVDMY_E_6_PBSHNNBL
   ENC PPOD_ISO_R_DIO_PBSHNNBL HVDMY < HVDMY_E_6_PBSHNNBL ABUT < 90 SINGULAR REGION
}
HVDMY.E.6_PDDSHNNBL{ @ min extension of HVDMY beyond P+ isolation ring for GA HV Diode (except N+/PDD(GA)) >= ^ HVDMY_E_6_PDDSHNNBL
   ENC PPOD_ISO_R_DIO_PDDSHNNBL HVDMY < HVDMY_E_6_PDDSHNNBL ABUT < 90 SINGULAR REGION
}
HVDMY.E.6_SHNNBLPSUBSHP{ @ min extension of HVDMY beyond P+ isolation ring for GA HV Diode (except N+/PDD(GA)) >= ^ HVDMY_E_6_SHNNBLPSUBSHP
   ENC PPOD_ISO_R_DIO_SHNNBLPSUBSHP HVDMY < HVDMY_E_6_SHNNBLPSUBSHP ABUT < 90 SINGULAR REGION
}
HVDMY.E.6_SHNPSUBSHP{ @ min extension of HVDMY beyond P+ isolation ring for GA HV Diode (except N+/PDD(GA)) >= ^ HVDMY_E_6_SHNPSUBSHP
   ENC PPOD_ISO_R_DIO_SHNPSUBSHP HVDMY < HVDMY_E_6_SHNPSUBSHP ABUT < 90 SINGULAR REGION
}
HVDMY.E.6_ZENER_NBL{ @ min extension of HVDMY beyond P+ isolation ring for GA HV Diode (except N+/PDD(GA)) >= ^ HVDMY_E_6_ZENER_NBL
   ENC PPOD_ISO_R_DIO_ZENER_NBL HVDMY < HVDMY_E_6_ZENER_NBL ABUT < 90 SINGULAR REGION
}
HVDMY.E.6_SBD_12V{ @ min extension of HVDMY beyond P+ isolation ring for GA HV Diode (except N+/PDD(GA)) >= ^ HVDMY_E_6_SBD_12V
   ENC PPOD_ISO_R_DIO_SBD_12V HVDMY < HVDMY_E_6_SBD_12V ABUT < 90 SINGULAR REGION
}
HVDMY.E.6_SBD_16V{ @ min extension of HVDMY beyond P+ isolation ring for GA HV Diode (except N+/PDD(GA)) >= ^ HVDMY_E_6_SBD_16V
   ENC PPOD_ISO_R_DIO_SBD_16V HVDMY < HVDMY_E_6_SBD_16V ABUT < 90 SINGULAR REGION
}
HVDMY.E.6_SBD_24V{ @ min extension of HVDMY beyond P+ isolation ring for GA HV Diode (except N+/PDD(GA)) >= ^ HVDMY_E_6_SBD_24V
   ENC PPOD_ISO_R_DIO_SBD_24V HVDMY < HVDMY_E_6_SBD_24V ABUT < 90 SINGULAR REGION
}


HVDMY.E.7_SHPNBLSHN_GB{ @ min extension of HVDMY beyond P+ isolation ring for GB HV Diode (except N+/HVPW(GB)) >= ^ HVDMY_E_7_SHPNBLSHN_GB
   ENC PPOD_ISO_R_DIO_SHPNBLSHN_GB HVDMY < HVDMY_E_7_SHPNBLSHN_GB ABUT < 90 SINGULAR REGION
}
HVDMY.E.7_SHNNBLPSUBSHP_GB{ @ min extension of HVDMY beyond P+ isolation ring for GB HV Diode (except N+/HVPW(GB)) >= ^ HVDMY_E_7_SHNNBLPSUBSHP_GB
   ENC PPOD_ISO_R_DIO_SHNNBLPSUBSHP_GB HVDMY < HVDMY_E_7_SHNNBLPSUBSHP_GB ABUT < 90 SINGULAR REGION
}

HVGA.E.1_NPDD{ @ min extension of HVGA beyond P+ pickup ring for N+PDD Diode >= ^HVGA_E_1_NPDD
    ENC DIO_NPDD_P HVGA < HVGA_E_1_NPDD ABUT < 90 SINGULAR REGION    
}

HVGA.E.3_PBSHNNBL{ @ min extension of HVGA beyond P+ isolation ring for GA HV Diode and GA HVBJT >= ^ HVGA_E_3_PBSHNNBL
  A = HVGA INTERACT DIO_PBSHNNBL_M
  B = PPOD_ISO_H ENCLOSE DIO_PBSHNNBL_M
  C = PPOD_ISO_R TOUCH B
  ENC C A < HVGA_E_3_PBSHNNBL ABUT < 90 SINGULAR REGION
}
HVGA.E.3_PDDSHNNBL{ @ min extension of HVGA beyond P+ isolation ring for GA HV Diode and GA HVBJT >= ^ HVGA_E_3_PDDSHNNBL
  A = HVGA INTERACT DIO_PDDSHNNBL_M
  B = PPOD_ISO_H ENCLOSE DIO_PDDSHNNBL_M
  C = PPOD_ISO_R TOUCH B
  ENC C A < HVGA_E_3_PDDSHNNBL ABUT < 90 SINGULAR REGION
}
HVGA.E.3_SHNNBLPSUBSHP{ @ min extension of HVGA beyond P+ isolation ring for GA HV Diode and GA HVBJT >= ^ HVGA_E_3_SHNNBLPSUBSHP
  A = HVGA INTERACT DIO_SHNNBLPSUBSHP_M
  B = PPOD_ISO_H ENCLOSE DIO_SHNNBLPSUBSHP_M
  C = PPOD_ISO_R TOUCH B
  ENC C A < HVGA_E_3_SHNNBLPSUBSHP ABUT < 90 SINGULAR REGION
}
HVGA.E.3_SHNPSUBSHP{ @ min extension of HVGA beyond P+ isolation ring for GA HV Diode and GA HVBJT >= ^ HVGA_E_3_SHNPSUBSHP
  A = HVGA INTERACT DIO_SHNPSUBSHP_M
  B = PPOD_ISO_H ENCLOSE DIO_SHNPSUBSHP_M
  C = PPOD_ISO_R TOUCH B
  ENC C A < HVGA_E_3_SHNPSUBSHP ABUT < 90 SINGULAR REGION
}

HVGA.E.4 { @ min extension of HVGA beyond P+ isolation ring for HVMOS >= ^HVGA_E_4
    ENC PPOD_ISO_R_HVMOS HVGA < HVGA_E_4 ABUT < 90 SINGULAR REGION
}
HVGA.E.3_ZENER_NBL{ @ min extension of HVGA beyond P+ isolation ring for GA HV Diode and GA HVBJT >= ^ HVGA_E_3_ZENER_NBL
  A = HVGA INTERACT DIO_ZENER_NBL_M
  B = PPOD_ISO_H ENCLOSE DIO_ZENER_NBL_M
  C = PPOD_ISO_R TOUCH B
  ENC C A < HVGA_E_3_ZENER_NBL ABUT < 90 SINGULAR REGION
}
HVGA.E.3_SBD_12V{ @ min extension of HVGA beyond P+ isolation ring for GA HV Diode and GA HVBJT >= ^ HVGA_E_3_SBD_12V
  A = HVGA INTERACT DIO_SBD_12V_M
  B = PPOD_ISO_H ENCLOSE DIO_SBD_12V_M
  C = PPOD_ISO_R TOUCH B
  ENC C A < HVGA_E_3_SBD_12V ABUT < 90 SINGULAR REGION
}
HVGA.E.3_SBD_16V{ @ min extension of HVGA beyond P+ isolation ring for GA HV Diode and GA HVBJT >= ^ HVGA_E_3_SBD_16V
  A = HVGA INTERACT DIO_SBD_16V_M
  B = PPOD_ISO_H ENCLOSE DIO_SBD_16V_M
  C = PPOD_ISO_R TOUCH B
  ENC C A < HVGA_E_3_SBD_16V ABUT < 90 SINGULAR REGION
}
HVGA.E.3_SBD_24V{ @ min extension of HVGA beyond P+ isolation ring for GA HV Diode and GA HVBJT >= ^ HVGA_E_3_SBD_24V
  A = HVGA INTERACT DIO_SBD_24V_M
  B = PPOD_ISO_H ENCLOSE DIO_SBD_24V_M
  C = PPOD_ISO_R TOUCH B
  ENC C A < HVGA_E_3_SBD_24V ABUT < 90 SINGULAR REGION
}

HVGA.E.3_NPDDSHNNBL_PO_BOUNDARY{ @ min extension of HVGA beyond P+ isolation ring for (GA HV Diode and GA HVBJT) >= ^ HVGA_E_3_NPDDSHNNBL_PO_BOUNDARY
  A = HVGA INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_E
  B = PPOD_ISO_H ENCLOSE BJT_NPDDSHNNBL_PO_BOUNDARY_E
  C = PPOD_ISO_R TOUCH B
  ENC C A < HVGA_E_3_NPDDSHNNBL_PO_BOUNDARY ABUT < 90 SINGULAR REGION
}

HVGA.E.3_NPWSHNNBL_PO_BOUNDARY{ @ min extension of HVGA beyond P+ isolation ring for (GA HV Diode and GA HVBJT) >= ^ HVGA_E_3_NPWSHNNBL_PO_BOUNDARY
  A = HVGA INTERACT BJT_NPWSHNNBL_PO_BOUNDARY_E
  B = PPOD_ISO_H ENCLOSE BJT_NPWSHNNBL_PO_BOUNDARY_E
  C = PPOD_ISO_R TOUCH B
  ENC C A < HVGA_E_3_NPWSHNNBL_PO_BOUNDARY ABUT < 90 SINGULAR REGION
}



HVGA.E.3_PNDDSHPNBL{ @ min extension of HVGA beyond P+ isolation ring for (GA HV Diode and GA HVBJT) >= ^ HVGA_E_3_PNDDSHPNBL
  A = HVGA INTERACT BJT_PNDDSHPNBL_E
  B = PPOD_ISO_H ENCLOSE BJT_PNDDSHPNBL_E
  C = PPOD_ISO_R TOUCH B
  ENC C A < HVGA_E_3_PNDDSHPNBL ABUT < 90 SINGULAR REGION
}

HVGA.E.3_NPDDSHNNBL_BGR8{ @ min extension of HVGA beyond P+ isolation ring for (GA HV Diode and GA HVBJT) >= ^ HVGA_E_3_NPDDSHNNBL_BGR8
  A = HVGA INTERACT BJT_NPDDSHNNBL_BGR8_E
  B = PPOD_ISO_H ENCLOSE BJT_NPDDSHNNBL_BGR8_E
  C = PPOD_ISO_R TOUCH B
  ENC C A < HVGA_E_3_NPDDSHNNBL_BGR8 ABUT < 90 SINGULAR REGION
}

HVGA.E.3_NPWSHNNBL_BGR8{ @ min extension of HVGA beyond P+ isolation ring for (GA HV Diode and GA HVBJT) >= ^ HVGA_E_3_NPWSHNNBL_BGR8
  A = HVGA INTERACT BJT_NPWSHNNBL_BGR8_E
  B = PPOD_ISO_H ENCLOSE BJT_NPWSHNNBL_BGR8_E
  C = PPOD_ISO_R TOUCH B
  ENC C A < HVGA_E_3_NPWSHNNBL_BGR8 ABUT < 90 SINGULAR REGION
}


HVGA.R.2 { @ HVGA must cover the hole of P+ iso ring and P+ iso ring for GA HVMOS
	A = PPOD_ISO_H_HVMOS INTERACT (HVGATE AND HVGA)
	B = PPOD_ISO_R_HVMOS TOUCH A
	A NOT HVGA
	B NOT HVGA
}

HVGB.S.1 { @ Min space between two HVGB, merge if space less >= ^HVGB_S_1
    EXT HVGB < HVGB_S_1 ABUT < 90 SINGULAR REGION
}

HVGB.E.1 { @ min extension of HVGB beyond P+ isolation ring for HVMOS >= ^HVGB_E_1
    ENC PPOD_ISO_R_HVMOS HVGB < HVGB_E_1 ABUT < 90 SINGULAR REGION
}


HVGB.E.3_NHVPW_GB { @ min extension of HVGB beyond P+ pickup ring for N+ HVPW Diode(GB) >= ^HVGB_E_3_NHVPW_GB
    ENC DIO_NHVPW_GB_P HVGB < HVGB_E_3_NHVPW_GB ABUT < 90 SINGULAR REGION
}

HVGB.E.4_SHPNBLSHN_GB{ @ min extension of HVGB beyond P+ isolation ring for GB HV Diode (Except N+/HVPW(GB)) >= ^ HVGB_E_4_SHPNBLSHN_GB
  ENC PPOD_ISO_R_DIO_SHPNBLSHN_GB  HVGB < HVGB_E_4_SHPNBLSHN_GB ABUT < 90 SINGULAR REGION
}
HVGB.E.4_SHNNBLPSUBSHP_GB{ @ min extension of HVGB beyond P+ isolation ring for GB HV Diode (Except N+/HVPW(GB)) >= ^ HVGB_E_4_SHNNBLPSUBSHP_GB
  ENC PPOD_ISO_R_DIO_SHNNBLPSUBSHP_GB  HVGB < HVGB_E_4_SHNNBLPSUBSHP_GB ABUT < 90 SINGULAR REGION
}

HVGB.R.2 { @ HVGB must cover the hole of P+ iso ring and P+ iso ring for HVGB MOS
	A = PPOD_ISO_H_HVMOS INTERACT (HVGATE AND HVGB)
	B = PPOD_ISO_R_HVMOS TOUCH A
	A NOT HVGB
	B NOT HVGB
}
HV5DMY.E.1 { @ Minimum extension of HV5DMY beyond P+ isolation >= ^HV5DMY_E_1
   X = PPOD_ISO_R_HVMOS AND HV5DMY
   ENC X HV5DMY < HV5DMY_E_1 ABUT < 90 SINGULAR REGION
}

HV5DMY.R.2 { @ HV5DMY must cover the hole of P+ iso ring and P+ iso ring for 5V HVMOS
	A = PPOD_ISO_H_HVMOS INTERACT (HVGATE AND HV5DMY)
	B = PPOD_ISO_R_HVMOS TOUCH A
	A NOT HV5DMY
	B NOT HV5DMY
}

HV6DMY.E.1 { @ Minimum extension of HV6VDMY beyond P+ isolation >= ^HV6VDMY_E_1
   X = PPOD_ISO_R_HVMOS AND HV6DMY
   ENC X HV6DMY < HV6VDMY_E_1 ABUT < 90 SINGULAR REGION
}

HV6DMY.R.2 { @ HV6VDMY must cover the hole of P+ iso ring and P+ iso ring for 6V HVMOS
	A = PPOD_ISO_H_HVMOS INTERACT (HVGATE AND HV6DMY)
	B = PPOD_ISO_R_HVMOS TOUCH A
	A NOT HV6DMY
	B NOT HV6DMY
}

HV9DMY.E.1 { @ Minimum extension of HV9VDMY beyond P+ isolation >= ^HV9VDMY_E_1
   X = PPOD_ISO_R_HVMOS AND HV9DMY
   ENC X HV9DMY < HV9VDMY_E_1 ABUT < 90 SINGULAR REGION
}

HV9DMY.R.2 { @ HV9VDMY must cover the hole of P+ iso ring and P+ iso ring for 9V HVMOS
	A = PPOD_ISO_H_HVMOS INTERACT (HVGATE AND HV9DMY)
	B = PPOD_ISO_R_HVMOS TOUCH A
	A NOT HV9DMY
	B NOT HV9DMY
}

HV12DMY.E.1 { @ Minimum extension of HV12VDMY beyond P+ isolation >= ^HV12VDMY_E_1
   X = PPOD_ISO_R_HVMOS AND HV12DMY
   ENC X HV12DMY < HV12VDMY_E_1 ABUT < 90 SINGULAR REGION
}

HV12DMY.R.2 { @ HV12VDMY must cover the hole of P+ iso ring and P+ iso ring for 12V HVMOS and 12V SBD(GA)
	A = PPOD_ISO_H_HVMOS INTERACT (HVGATE AND HV12DMY)
	B = PPOD_ISO_R_HVMOS TOUCH A
	A NOT HV12DMY
	B NOT HV12DMY
	PPOD_ISO_H_DIO_SBD_12V NOT HV12DMY
	PPOD_ISO_R_DIO_SBD_12V NOT HV12DMY
}

HV16DMY.E.1 { @ Minimum extension of HV16VDMY beyond P+ isolation >= ^HV16VDMY_E_1
   X = PPOD_ISO_R_HVMOS AND HV16DMY
   ENC X HV16DMY < HV16VDMY_E_1 ABUT < 90 SINGULAR REGION
}

HV16DMY.R.2 { @ HV16VDMY must cover the hole of P+ iso ring and P+ iso ring for 16V SBD(GA) and 16V HVMOS
	A = PPOD_ISO_H_HVMOS INTERACT (HVGATE AND HV16DMY)
	B = PPOD_ISO_R_HVMOS TOUCH A
	A NOT HV16DMY
	B NOT HV16DMY
	PPOD_ISO_H_DIO_SBD_16V NOT HV16DMY
	PPOD_ISO_R_DIO_SBD_16V NOT HV16DMY
}

HV20DMY.E.1 { @ Minimum extension of HV20VDMY beyond P+ isolation for HVMOS >= ^HV20VDMY_E_1
   X = PPOD_ISO_R_HVMOS AND HV20DMY
   ENC X HV20DMY < HV20VDMY_E_1 ABUT < 90 SINGULAR REGION
}

HV20DMY.R.2 { @ HV20VDMY must cover the hole of P+ iso ring and P+ iso ring for 20V HVMOS
	A = PPOD_ISO_H_HVMOS INTERACT (HVGATE AND HV20DMY)
	B = PPOD_ISO_R_HVMOS TOUCH A
	A NOT HV20DMY
	B NOT HV20DMY
}

HV24DMY.E.1 { @ Minimum extension of HV24VDMY beyond P+ isolation >= ^HV24VDMY_E_1
   X = PPOD_ISO_R_HVMOS AND HV24DMY
   ENC X HV24DMY < HV24VDMY_E_1 ABUT < 90 SINGULAR REGION
}

HV24DMY.R.2 { @ HV24VDMY must cover the hole of P+ iso ring and P+ iso ring for 24V HVMOS and 24V SBD(GA)
	A = PPOD_ISO_H_HVMOS INTERACT (HVGATE AND HV24DMY)
	B = PPOD_ISO_R_HVMOS TOUCH A
	A NOT HV24DMY
	B NOT HV24DMY
	PPOD_ISO_H_DIO_SBD_24V NOT HV24DMY
	PPOD_ISO_R_DIO_SBD_24V NOT HV24DMY
}

HV29DMY.E.1 { @ Minimum extension of HV29VDMY beyond P+ isolation >= ^HV29VDMY_E_1
   X = PPOD_ISO_R_HVMOS AND HV29DMY
   ENC X HV29DMY < HV29VDMY_E_1 ABUT < 90 SINGULAR REGION
}

HV29DMY.R.2 { @ HV29VDMY must cover the hole of P+ iso ring and P+ iso ring for 29V HVMOS
	A = PPOD_ISO_H_HVMOS INTERACT (HVGATE AND HV29DMY)
	B = PPOD_ISO_R_HVMOS TOUCH A
	A NOT HV29DMY
	B NOT HV29DMY
}

HV36DMY.E.1 { @ Minimum extension of HV36VDMY beyond P+ isolation >= ^HV36VDMY_E_1
   X = PPOD_ISO_R_HVMOS AND HV36DMY
   ENC X HV36DMY < HV36VDMY_E_1 ABUT < 90 SINGULAR REGION
}

HV36DMY.R.2 { @ HV36VDMY must cover the hole of P+ iso ring and P+ iso ring for 36V HVMOS
	A = PPOD_ISO_H_HVMOS INTERACT (HVGATE AND HV36DMY)
	B = PPOD_ISO_R_HVMOS TOUCH A
	A NOT HV36DMY
	B NOT HV36DMY
}

HV45DMY.E.1 { @ Minimum extension of HV45VDMY beyond P+ isolation >= ^HV45VDMY_E_1
   X = PPOD_ISO_R_HVMOS AND HV45DMY
   ENC X HV45DMY < HV45VDMY_E_1 ABUT < 90 SINGULAR REGION
}

HV45DMY.R.2 { @ HV45VDMY must cover the hole of P+ iso ring and P+ iso ring for 45V HVMOS
	A = PPOD_ISO_H_HVMOS INTERACT (HVGATE AND HV45DMY)
	B = PPOD_ISO_R_HVMOS TOUCH A
	A NOT HV45DMY
	B NOT HV45DMY
}

HVDIO.R.1 { @ (DIODMY OVERLAP DIO3TDMY) or (DIODMY OVERLAP DIO4TDMY) OR (DIODMY OVERLAP SBD3TDMY) OR (DIO3TDMY OVERLAP DIO4TDMY) OR (DIO3TDMY OVERLAP SBD3TDMY) OR (DIO4TDMY OVERLAP SBD3TDMY) is not allowed for HV DIODE                    
   DIODUMMY AND DIO3TDMY     
   DIODUMMY AND DIO4TDMY      
   DIODUMMY AND SBD3TDMY
   DIO3TDMY AND DIO4TDMY
   DIO3TDMY AND SBD3TDMY
   DIO4TDMY AND SBD3TDMY
}

HVDMY.C.1 { @ Minimum and maximum clearance from HVDMY edge to NBL outside HVDMY. That is, 
         @ the edge of HVDMY layer has to be butted with the edge of NBL for LV isolation	== 0
   ( NBL INTERACT ((HV9ISO OR HV29ISO) OR HV45ISO) ) NOT COIN OUTSIDE EDGE HVDMY
}

//  DPW CHECKS
//==============
DPW.W.1 { @ Min. DPW width >= ^DPW_W_1 um
    INT DPW < DPW_W_1 ABUT < 90 SINGULAR REGION
}

DPW.S.1 { @ Minimum spacing of DPW.>= ^DPW_S_1 um
    EXT DPW < DPW_S_1 ABUT < 90 SINGULAR REGION
}

DPW.C.2 { @ min and max clearance from DPW to SH_N outside DPW for LV iso ring == ^DPW_C_2
    A = DPW INTERACT NBL_ISO_HOLE
    B = NBL_ISO_RING INTERACT (NBL_ISO_HOLE INTERACT DPW)
    C = HVSHN INTERACT B
    D = HOLES C  
    E = SIZE A BY DPW_C_2
    E XOR D
}


DPW.R.3 { @ The hole of 5V PW NOT INSIDE DPW is not allowed for LV device isolation with NBL and DPW structure.(Cover LV device)
    PW_5V =  (OD2 NOT (HVSHN OR NWEL)) INTERACT ((NBL INTERACT DPW) AND ((HV9ISO OR HV29ISO) OR HV45ISO))
    PW_5V_H = HOLES PW_5V 
    PW_5V_H NOT INSIDE DPW
}

// NONLDD Layout rules
NONLDD.E.1_PCH5_AS_SWITCH_MAC { @ Minimum and Maximum extension of NONLDD beyond HVOD for 5V Asymmetric Switch PMOS (endcap) == ^NONLDD_E_1_PCH5_AS_SWITCH_MAC 
    A = NONLDD INTERACT PCH5_AS_SWITCH_MAC_CH 
    B = A NOT TOUCH EDGE ( A INSIDE EDGE PCH5_AS_SWITCH_MAC_CH)
    C = B EXPAND EDGE INSIDE BY NONLDD_E_1_PCH5_AS_SWITCH_MAC 
    C NOT TOUCH PCH5_AS_SWITCH_MAC_CH
    ENC PCH5_AS_SWITCH_MAC_CH NONLDD < NONLDD_E_1_PCH5_AS_SWITCH_MAC ABUT < 90 SINGULAR REGION
}
NONLDD.O.1_PCH5_AS_SWITCH_MAC { @ Minimum and maximum overlap of NONLDD and PO GATE in channel length direction for 
    @ 5V Asymmetric Switch PMOS (GA) == ^NONLDD_O_1_PCH5_AS_SWITCH_MAC
    INT NONLDD PCH5_AS_SWITCH_MAC_GATE < NONLDD_O_1_PCH5_AS_SWITCH_MAC ABUT < 90 SINGULAR REGION
    B = NONLDD AND PCH5_AS_SWITCH_MAC_GATE
    SIZE B BY NONLDD_O_1_PCH5_AS_SWITCH_MAC/2 UNDEROVER
}

NONLDD.R.1 { @ 5V Switch Asymmetric MOS must be covered with NONLDD
    PCH5_AS_SWITCH_MAC_GATE NOT CUT NONLDD
}

NONLDD.R.2 { @ NONLDD can only be used for 5V Switch Asymmetric MOS
    NONLDD NOT CUT PCH5_AS_SWITCH_MAC_GATE 
}


// SH_P -- PW shielding 
//=============
SH_P.W.1 { @ Minimum width of a SH_P region >= ^SH_P_W_1 um
	INT SH_P < SH_P_W_1 ABUT < 90 SINGULAR REGION
}
SH_P.R.1 { @ SH_P must be fully inside HV
     SH_P NOT HVDMY
}
SH_P.S.1 { @ Minimum space between two SH_P region >= ^SH_P_S_1 um
    EXT SH_P < SH_P_S_1 ABUT < 90 SINGULAR REGION
}

SH_P.C.1_SHPNBLSHN_GB{ @ min and max clearance of SH_P to outside N+ pickup ring for HV diode ==^SH_P_C_1_SHPNBLSHN_GB
    A = SH_P INTERACT DIO_SHPNBLSHN_GB_M
    B = SIZE A BY SH_P_C_1_SHPNBLSHN_GB
	C = HOLES DIO_SHPNBLSHN_GB_P INNER
	B XOR C
}
SH_P.C.3_NA6G5_NBL{ @ min and max clearance from SH_P to NDD in channel length direction ==^ SH_P_C_3_NA6G5_NBL
    A = NDD TOUCH EDGE (NDD INSIDE EDGE NA6G5_NBL_CH)
	A NOT TOUCH EDGE SH_P	
}

SH_P.C.3_NA20G5{ @ min and max clearance from SH_P to NDD in channel length direction ==^ SH_P_C_3_NA20G5
    A = NDD TOUCH EDGE (NDD INSIDE EDGE NA20G5_CH)
    B = EXPAND EDGE A OUTSIDE BY SH_P_C_3_NA20G5
	B NOT TOUCH SH_P	
}
SH_P.C.3_NA20G5_NBL{ @ min and max clearance from SH_P to NDD in channel length direction ==^ SH_P_C_3_NA20G5_NBL
    A = NDD TOUCH EDGE (NDD INSIDE EDGE NA20G5_NBL_CH)
    B = EXPAND EDGE A OUTSIDE BY SH_P_C_3_NA20G5_NBL
	B NOT TOUCH SH_P	
}
SH_P.C.3_NA29G5{ @ min and max clearance from SH_P to NDD in channel length direction ==^ SH_P_C_3_NA29G5
    A = NDD TOUCH EDGE (NDD INSIDE EDGE NA29G5_CH)
    B = EXPAND EDGE A OUTSIDE BY SH_P_C_3_NA29G5
	B NOT TOUCH SH_P	
}
SH_P.C.3_NA29G5_NBL{ @ min and max clearance from SH_P to NDD in channel length direction ==^ SH_P_C_3_NA29G5_NBL
    A = NDD TOUCH EDGE (NDD INSIDE EDGE NA29G5_NBL_CH)
    B = EXPAND EDGE A OUTSIDE BY SH_P_C_3_NA29G5_NBL
	B NOT TOUCH SH_P	
}
SH_P.C.3_NA29G3_DEP_NBL{ @ min and max clearance from SH_P to NDD in channel length direction ==^ SH_P_C_3_NA29G3_DEP_NBL
    A = NDD TOUCH EDGE (NDD INSIDE EDGE NA29G3_DEP_NBL_CH)
    B = EXPAND EDGE A OUTSIDE BY SH_P_C_3_NA29G3_DEP_NBL
	B NOT TOUCH SH_P	
}

SH_P.C.6_NA6G5_NBL{ @ min and max clearance from SH_P to P+ bulk ring for channel width direction == 0
    A = SH_P INTERACT NA6G5_NBL_S
    B = A NOT TOUCH EDGE (A INSIDE EDGE NA6G5_NBL_CH)
	B NOT TOUCH EDGE PPOD_BULK_R_NA6G5_NBL
}
SH_P.C.6_NA20G5_NBL{ @ min and max clearance from SH_P to P+ bulk ring for channel width direction == 0
    A = SH_P INTERACT NA20G5_NBL_S
    B = A NOT TOUCH EDGE (A INSIDE EDGE NA20G5_NBL_CH)
	B NOT TOUCH EDGE PPOD_BULK_R_NA20G5_NBL
}
SH_P.C.6_NA29G5_NBL{ @ min and max clearance from SH_P to P+ bulk ring for channel width direction == 0
    A = SH_P INTERACT NA29G5_NBL_S
    B = A NOT TOUCH EDGE (A INSIDE EDGE NA29G5_NBL_CH)
	B NOT TOUCH EDGE PPOD_BULK_R_NA29G5_NBL
}
SH_P.C.6_NA29G3_DEP_NBL{ @ min and max clearance from SH_P to P+ bulk ring for channel width direction == 0
    A = SH_P INTERACT NA29G3_DEP_NBL_S
    B = A NOT TOUCH EDGE (A INSIDE EDGE NA29G3_DEP_NBL_CH)
	B NOT TOUCH EDGE PPOD_BULK_R_NA29G3_DEP_NBL
}

SH_P.C.8_NA20G5 { @ min and max clearance from SH_P to P+ isolation ring for channel width direction == 0
    A = SH_P INTERACT NA20G5_S
    B = A NOT TOUCH EDGE (A INSIDE EDGE NA20G5_CH)
	B NOT TOUCH EDGE PPOD
}

SH_P.C.8_NA29G5 { @ min and max clearance from SH_P to P+ isolation ring for channel width direction == 0
    A = SH_P INTERACT NA29G5_S
    B = A NOT TOUCH EDGE (A INSIDE EDGE NA29G5_CH)
	B NOT TOUCH EDGE PPOD
}

SH_P.E.1_PA6G5_SA_BL{ @ min and max extension of SH_P beyond drain OD in channel length direction == ^SH_P_E_1_PA6G5_SA_BL
    A = SH_P INTERACT PA6G5_SA_BL_CH
	B = A TOUCH EDGE (A INSIDE EDGE PA6G5_SA_BL_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY SH_P_E_1_PA6G5_SA_BL
	E NOT TOUCH PA6G5_SA_BL_D
}
SH_P.E.1_PA6G5_DE_BL{ @ min and max extension of SH_P beyond drain OD in channel length direction == ^SH_P_E_1_PA6G5_DE_BL
    A = SH_P INTERACT PA6G5_DE_BL_CH
	B = A TOUCH EDGE (A INSIDE EDGE PA6G5_DE_BL_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY SH_P_E_1_PA6G5_DE_BL
	E NOT TOUCH PA6G5_DE_BL_D
}

SH_P.E.2_PA6G5_SA_BL{ @ min and max extension of SH_P beyond drain OD in channel width direction == ^SH_P_E_2_PA6G5_SA_BL
    A = SH_P INTERACT PA6G5_SA_BL_CH
	B = A TOUCH EDGE (A INSIDE EDGE PA6G5_SA_BL_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (SH_P TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE PA6G5_SA_BL_CH)
	E = EXPAND EDGE D INSIDE BY SH_P_E_2_PA6G5_SA_BL
	E NOT TOUCH PA6G5_SA_BL_D
}
SH_P.E.2_PA6G5_DE_BL{ @ min and max extension of SH_P beyond drain OD in channel width direction == ^SH_P_E_2_PA6G5_DE_BL
    A = SH_P INTERACT PA6G5_DE_BL_CH
	B = A TOUCH EDGE (A INSIDE EDGE PA6G5_DE_BL_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (SH_P TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE PA6G5_DE_BL_CH)
	E = EXPAND EDGE D INSIDE BY SH_P_E_2_PA6G5_DE_BL
	E NOT TOUCH PA6G5_DE_BL_D
}

SH_P.E.3_SHPNBLSHN_GB { @ min and max extension of SH_P beyond Anode OD for HV diode ==^SH_P_E_3_SHPNBLSHN_GB
    A = SH_P INTERACT DIO_SHPNBLSHN_GB_M
	B = SIZE DIO_SHPNBLSHN_GB_M BY SH_P_E_3_SHPNBLSHN_GB
    A XOR B
}

SH_P.E.9_ZENER_NBL { @ min and max extension of SH_P beyond Anode OD for Zener Diode ==^SH_P_E_9_ZENER_NBL
    A = SH_P INTERACT DIO_ZENER_NBL_M
	B = A OR (HOLES A INNER)
	C = SIZE DIO_ZENER_NBL_M BY SH_P_E_9_ZENER_NBL
	C XOR B
}

SH_P.O.1_ZENER_NBL { @ min and max overlap of SH_P of Anode and PO for Zener Diode == ^ SH_P_O_1_ZENER_NBL
    A = SH_P INTERACT DIO_ZENER_NBL_M
	B = POLY INTERACT DIO_ZENER_NBL_M
	INT A B < SH_P_O_1_ZENER_NBL ABUT < 90 SINGULAR REGION
	C = A AND B 
    SIZE C BY SH_P_O_1_ZENER_NBL/2 UNDEROVER
}

SH_P.E.4_SBD_12V {@ min and max extension of SH_P beyond P+ pickup OD for GA SBD_12V diode == ^ SH_P_E_4_SBD_12V
    A = PPOD_PICK_H INTERACT DIO_SBD_12V_M
	B = PPOD_PICK_R TOUCH A
    C = SIZE B BY SH_P_E_4_SBD_12V
	D = (HOLES SH_P INNER) INTERACT DIO_SBD_12V_M
	E = SH_P TOUCH D
	E XOR C
}
SH_P.E.4_SBD_16V {@ min and max extension of SH_P beyond P+ pickup OD for GA SBD_16V diode == ^ SH_P_E_4_SBD_16V
    A = PPOD_PICK_H INTERACT DIO_SBD_16V_M
	B = PPOD_PICK_R TOUCH A
    C = SIZE B BY SH_P_E_4_SBD_16V
	D = (HOLES SH_P INNER) INTERACT DIO_SBD_16V_M
	E = SH_P TOUCH D
	E XOR C
}
SH_P.E.4_SBD_24V {@ min and max extension of SH_P beyond P+ pickup OD for GA SBD_24V diode == ^ SH_P_E_4_SBD_24V
    A = PPOD_PICK_H INTERACT DIO_SBD_24V_M
	B = PPOD_PICK_R TOUCH A
    C = SIZE B BY SH_P_E_4_SBD_24V
	D = (HOLES SH_P INNER) INTERACT DIO_SBD_24V_M
	E = SH_P TOUCH D
	E XOR C
}




// NW shielding 
//=============
SH_N.W.1 { @ Minimum width of a SH_N region >= ^SH_N_W_1 um
    INT HVSHN < SH_N_W_1 ABUT < 90 SINGULAR REGION
}

SH_N.W.2 { @ Min width of a SH_N for NBL pickup(except LV device isolation with NBL(9V)) >= ^SH_N_W_2 um
    A = HVSHN INTERACT NBL_ISO_RING
	B = HOLES PPOD_ISO_R_9V INNER
	C = A NOT INTERACT B
	INT C < SH_N_W_2 ABUT < 90 SINGULAR REGION
}

SH_N.S.1 { @ Minimum space between two SH_N region >= ^SH_N_S_1 um
    EXT HVSHN < SH_N_S_1 ABUT < 90 SINGULAR REGION
}

SH_N.S.2 { @ Min space of the same SH_N ring >= ^SH_N_S_2 um
    X = (((((((((((PA6G5_DE_BL_OD_ALL OR PA6G5_SA_BL_OD_ALL) OR PA12G5_SLIT_BL_CH) OR PA12G5_NBL_OD_ALL) OR PA20G5_SLIT_BL_CH) OR PA20G5_BL_OD_ALL) OR HVESD_merge_PNP_12_PDD) OR HVESD_merge_PNP_16) OR HVESD_merge_PNP_20) OR PA9G5_NBL_OD_ALL) OR PA9G5_SLIT_NBL_OD_ALL) OR PA16G5_NBL_OD_ALL) OR PA16G5_SLIT_NBL_OD_ALL
    A = (HOLES HVSHN INNER) NOT INTERACT X
	INT A < SH_N_S_2 ABUT < 90 SINGULAR REGION
}

SH_N.C.1 { @ Min clearance from SH_N to NW with the same potential in LV area [Butted is allowed] >= ^SH_N_C_1 um
     LV_HVSHN = HVSHN OUTSIDE HVDMY
     EXT LV_HVSHN NWELi < SH_N_C_1 ABUT>0 <90 SINGULAR REGION
}

SH_N.C.2 { @Minimum clearance from SH_N edge to a NW pickup in LV area>= ^SH_N_C_2
     EXT HVSHN LV_NTAP < SH_N_C_2 ABUT < 90 SINGULAR REGION
}
SH_N.C.3 { @Minimum clearance from SH_N edge to a PW pickup in LV area>= ^SH_N_C_3
     EXT HVSHN LV_PTAP < SH_N_C_3 ABUT < 90 SINGULAR REGION
}

SH_N.C.4 { @Minimum clearance from SH_N edge to a N+OD region which is outside (NW/SH_N) in LV area>= ^SH_N_C_4
     EXT HVSHN LV_NACT < SH_N_C_4 ABUT < 90 SINGULAR REGION
}

SH_N.C.5 { @Minimum clearance from SH_N edge to a P+OD region which is inside NW in LV area>= ^SH_N_C_5
     EXT HVSHN LV_PACT < SH_N_C_5 ABUT < 90 SINGULAR REGION
}

SH_N.C.6 { @ Min clearance from SH_N to OD2 in LV Device isolation with NBL region.Make them butted if the clearance >= ^SH_N_C_6
           @ is less than this rule. [Butted is allowed]
     A = HVSHN INTERACT NBL_ISO_RING
     B = OD2 INSIDE NBL_ISO_HOLE
	 EXT A B < SH_N_C_6 ABUT>0 <90 SINGULAR REGION
}

#IFDEF 5V
OD2_SMALL = (OD2 NOT NWEL) WITH WIDTH < OD2_NOT_NW
NW_1_8V_NODAL = STAMP 1d8V_NW BY NWELi
NW_5V_NODAL = STAMP 5V_NW BY NWELi
SH_N_NODAL = STAMP HVSHN BY NTAPi
SH_N.C.7 { @ Min clearance from SH_N to NW with different potential,if there is no {OD2 NOT NW} in between, >= ^SH_N_C_7
		   @ or if width of in-between {OD2 NOT NW} < 0.86um

    A = EXT (SH_N_NODAL) OD2_LARGE < SH_N_C_7-OD2_NOT_NW ABUT < 90 OPPOSITE
    B = EXT (NWELi) OD2_LARGE < SH_N_C_7-OD2_NOT_NW ABUT < 90 OPPOSITE
    A1 = EXT (NW_5V_NODAL) OD2_LARGE < SH_N_C_9-OD2_NOT_NW ABUT < 90 OPPOSITE
    B1 = EXT (SH_N_NODAL) OD2_LARGE < SH_N_C_9-OD2_NOT_NW ABUT < 90 OPPOSITE
    C = EXT A1 B1 < SH_N_C_9 ABUT< 90 NOT CONNECTED REGION
    D = B NOT INSIDE EDGE C
    EXT D A < SH_N_C_7 ABUT< 90 REGION NOT CONNECTED 
}

SH_N.C.8 { @ Min clearance from SH_N to NW with different potential, if width of in-between {OD2 NOT NW} >=0.86(except SH_N.C.11) >= ^SH_N_C_8
		   @ (DRC excludes SH_N edges opposite to {OD2 NOT NW} whose width >= 0.86um in all directions)
	
   A = EXT [SH_N_NODAL] OD2_LARGE < SH_N_C_8-OD2_NOT_NW ABUT < 90 OPPOSITE
   B = EXT [NWELi] OD2_LARGE < SH_N_C_8-OD2_NOT_NW ABUT < 90 OPPOSITE
   EXT A B < SH_N_C_10 ABUT< 90 REGION NOT CONNECTED MEASURE ALL
}

SH_N.C.9 { @ Min clearance from SH_N to {NW AND OD2} with different potential, if there is no {OD2 NOT NW} in between >= ^SH_N_C_9
		   @ or if width of in-between {OD2 NOT NW} < 0.86um
	A = EXT (SH_N_NODAL) OD2_LARGE < SH_N_C_9-OD2_NOT_NW ABUT < 90 OPPOSITE
    B = EXT (NW_5V_NODAL) OD2_LARGE < SH_N_C_9-OD2_NOT_NW ABUT < 90 OPPOSITE
	EXT A B < SH_N_C_9 ABUT< 90 REGION NOT CONNECTED MEASURE ALL
}

SH_N.C.10 { @ Min clearance from SH_N to {NW AND OD2} with different potential, if width of in-between {OD2 NOT NW} >= 0.86um >= ^SH_N_C_10
			@ (except SH_N.C.10) (DRC excludes SH_N edges opposite to {OD2 NOT NW} whose width >= 0.86um in all directions.)
   A = EXT [SH_N_NODAL] OD2_LARGE < SH_N_C_10-OD2_NOT_NW ABUT < 90 OPPOSITE
   B = EXT [NW_5V_NODAL] OD2_LARGE < SH_N_C_10-OD2_NOT_NW ABUT < 90 OPPOSITE
   EXT A B < SH_N_C_10 ABUT< 90 REGION NOT CONNECTED MEASURE ALL
}

SH_N.C.11 { @ Min clearance from SH_N to NW fully inside OD2 with different potential,if width of in-between {OD2 NOT NW} >= 0.86um >= ^SH_N_C_11
   A = EXT [SH_N_NODAL] OD2_LARGE < SH_N_C_11-OD2_NOT_NW ABUT < 90 OPPOSITE
   B = EXT [NW_5V_NODAL] OD2_LARGE < SH_N_C_11-OD2_NOT_NW ABUT < 90 OPPOSITE
   EXT A B < SH_N_C_11 ABUT< 90 REGION NOT CONNECTED MEASURE ALL
}
#ENDIF

SH_N.E.2 { @ Min extension of PSUB beyond SH_N >= ^SH_N_E_2
   X = PPOD_ISO_H ENCLOSE (((((((((((((((((((((((((((((((((DIO_SBD_12V_M OR DIO_SBD_16V_M) OR DIO_SBD_24V_M) OR NLD6G5_DE_FULLY_ISO_CH) OR NLD6G5_SA_FULLY_ISO_CH) OR NA6G5_NBL_OD_ALL) OR PA6G5_SA_BL_OD_ALL) OR PA6G5_DE_BL_OD_ALL) OR NLD9G5_FULLY_ISO_CH) OR NLD12G5_FULLY_ISO_CH) OR NLD16G5_FULLY_ISO_CH) OR PA12G5_SLIT_BL_CH) OR PA12G5_NBL_OD_ALL) OR NLD20G5_FULLY_ISO_CH) OR PA20G5_BL_OD_ALL) OR PA20G5_SLIT_BL_CH) OR NLD24G5_FULLY_ISO_CH) OR NLD24G5_ISO_SWITCH_CH) OR BJT_NPDDSHNNBL_BGR8_E) OR BJT_NPWSHNNBL_BGR8_E) OR BJT_PNDDSHPNBL_C) OR BJT_NPDDSHNNBL_PO_BOUNDARY_C_H) OR BJT_NPWSHNNBL_PO_BOUNDARY_C_H) OR DIO_SBD_12V_H) OR DIO_SBD_16V_H) OR DIO_SBD_24V_H) OR HVESD_merge_PNP_6) OR HVESD_merge_PNP_9) OR PA9G5_NBL_OD_ALL) OR PA9G5_SLIT_NBL_OD_ALL) OR PA16G5_NBL_OD_ALL) OR PA16G5_SLIT_NBL_OD_ALL) OR NLD6G5_DE_OD_ALL) OR NA20G5_NBL_OD_ALL)
   Y = NPOD_GR_R_L OR HVNP_STRAP 
   B = HOLES PPOD_ISO_R_9V INNER
   C = (HVSHN NOT INTERACT (X OR Y)) NOT INTERACT B
   D = (PSUB NOT INTERACT (X OR Y)) NOT INTERACT B
   ENC C D < SH_N_E_2 ABUT < 90 SINGULAR REGION
}

SH_N.E.2_GB { @ Min extension of PSUB beyond SH_N inside HVGB >= ^SH_N_E_2_GB
   A = (((PSUB AND HVGB) NOT INTERACT NLD36G5_GB_CH) NOT INTERACT PA36G5_BL_GB_CH) NOT INTERACT HVESD_merge_PNP_36
   B = ((HVSHN NOT INTERACT NLD36G5_GB_CH) NOT INTERACT PA36G5_BL_GB_CH) NOT INTERACT HVESD_merge_PNP_36
   ENC B A < SH_N_E_2_GB ABUT < 90 SINGULAR REGION
}

SH_N.C.12_NLD6G5_DE_FULLY_ISO{ @ Min and Max clearance from SH_N to PO == ^SH_N_C_12_NLD6G5_DE_FULLY_ISO
    A = HVSHN INTERACT NLD6G5_DE_FULLY_ISO_CH
    B = A TOUCH EDGE (A INSIDE EDGE NLD6G5_DE_FULLY_ISO_CH)
	C = EXPAND EDGE B OUTSIDE BY SH_N_C_12_NLD6G5_DE_FULLY_ISO
	C NOT TOUCH POLY 
}
SH_N.C.12_NLD6G5_DE{ @ Min and Max clearance from SH_N to PO == ^SH_N_C_12_NLD6G5_DE
    A = HVSHN INTERACT NLD6G5_DE_CH
    B = A TOUCH EDGE (A INSIDE EDGE NLD6G5_DE_CH)
	C = EXPAND EDGE B OUTSIDE BY SH_N_C_12_NLD6G5_DE
	C NOT TOUCH POLY 
}

SH_N.C.13_NLD36G5_GB{ @ Min and Max clearance from SH_N to HVNW in channel width direction == ^SH_N_C_13_NLD36G5_GB
    A = HVSHN INTERACT NLD36G5_GB_CH
    B = A TOUCH EDGE (A INSIDE EDGE NLD36G5_GB_CH)
	C = EXPAND EDGE B OUTSIDE BY GRID
    D = (A TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NLD36G5_GB_CH)
	D NOT TOUCH EDGE HVNW 
}
SH_N.C.13_NLD45G5_GB{ @ Min and Max clearance from SH_N to HVNW in channel width direction == ^SH_N_C_13_NLD45G5_GB
    A = HVSHN INTERACT NLD45G5_GB_CH
    B = A TOUCH EDGE (A INSIDE EDGE NLD45G5_GB_CH)
	C = EXPAND EDGE B OUTSIDE BY GRID
    D = (A TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NLD45G5_GB_CH)
	D NOT TOUCH EDGE HVNW 
}
SH_N.C.13_NA45G3_DEP_GB{ @ Min and Max clearance from SH_N to HVNW in channel width direction == ^SH_N_C_13_NA45G3_DEP_GB
    A = HVSHN INTERACT NA45G3_DEP_GB_CH
    B = A TOUCH EDGE (A INSIDE EDGE NA45G3_DEP_GB_CH)
	C = EXPAND EDGE B OUTSIDE BY GRID
    D = (A TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NA45G3_DEP_GB_CH)
	D NOT TOUCH EDGE HVNW 
}

SH_N.C.14_PA6G5_DE_BL{ @ min clearance from SH_N of N+ pickup ring to Active OD >= ^SH_N_C_14_PA6G5_DE_BL
	EXT HVSHN PA6G5_DE_BL_CH < SH_N_C_14_PA6G5_DE_BL ABUT < 90 SINGULAR REGION 
}

SH_N.C.14_PA6G5_SA_BL{ @ min clearance from SH_N of N+ pickup ring to Active OD >= ^SH_N_C_14_PA6G5_SA_BL
	EXT HVSHN PA6G5_SA_BL_CH < SH_N_C_14_PA6G5_SA_BL ABUT < 90 SINGULAR REGION 
}

SH_N.C.16_ZENER_NBL { @ min and max clearance of SH_N to inward SH_P == ^ SH_N_C_16_ZENER_NBL
    A = SH_P INTERACT DIO_ZENER_NBL_M
	B = A OR (HOLES A INNER)
	C = SIZE B BY SH_N_C_16_ZENER_NBL
    D = (HOLES HVSHN INNER) ENCLOSE DIO_ZENER_NBL_M
	D XOR C
}

NBL_RING_VOL_LOW_SIDE = NBL_RING_VOL INTERACT NPOD_GR_R_L
SHN_RING_VOL_LOW_SIDE = HVSHN INTERACT NBL_RING_VOL_LOW_SIDE
SH_N.E.1 { @ min and max extension of NBL beyond SH_N to which is inside NBL==^SH_N_E_1    
    HVSHN_NBL_pre = (HVSHN INTERACT NBL) NOT SHN_RING_VOL_LOW_SIDE
    HVSHN_NBL = (HOLES HVSHN_NBL_pre) OR HVSHN_NBL_pre
    NBL_HVSHN_pre = (NBL INTERACT HVSHN) NOT NBL_RING_VOL_LOW_SIDE
    NBL_HVSHN = COPY NBL_HVSHN_pre 
    NBL_HVSHN XOR HVSHN_NBL
    NBL_RING_VOL_LOW_SIDE XOR SHN_RING_VOL_LOW_SIDE
}

SH_N.E.8 { @ min and max extension of PSUB beyond SH_N ==^ SH_N_E_8
     A = (HVSHN INTERACT HV9ISO) NOT INTERACT (NPOD_GR_R_L OR HVNP_STRAP)
	 B = (PSUB INTERACT A) NOT INTERACT (NPOD_GR_R_L OR HVNP_STRAP)
	 C = A OR (HOLES A INNER)
	 D = SIZE C BY SH_N_E_8
     D XOR B
}

SH_N.E.9 { @ min and max extension of PSUB beyond SH_N ==^ SH_N_E_9
     A = (HVSHN INTERACT HV29ISO) NOT INTERACT (NPOD_GR_R_L OR HVNP_STRAP)
	 B = (PSUB INTERACT A) NOT INTERACT (NPOD_GR_R_L OR HVNP_STRAP)
	 C = A OR (HOLES A INNER)
	 D = SIZE C BY SH_N_E_9
     D XOR B
}

SH_N.E.10 { @ min and max extension of PSUB beyond SH_N ==^ SH_N_E_10
     A = (HVSHN INTERACT HV45ISO) NOT INTERACT (NPOD_GR_R_L OR HVNP_STRAP)
	 B = PSUB INTERACT A
	 C = A OR (HOLES A INNER)
	 D = SIZE C BY SH_N_E_10
     D XOR B
}

SH_N.E.3_NLD6G5_SA_FULLY_ISO{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NLD6G5_SA_FULLY_ISO
    A = (HOLES PSUB INNER) INTERACT NLD6G5_SA_FULLY_ISO_CH
	B = PSUB TOUCH A
	C = HVSHN INTERACT B
	D = SIZE C BY SH_N_E_3_NLD6G5_SA_FULLY_ISO
	D XOR B
}
SH_N.E.3_NLD6G5_DE_FULLY_ISO{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NLD6G5_DE_FULLY_ISO
    A = (HOLES PSUB INNER) INTERACT NLD6G5_DE_FULLY_ISO_CH
	B = PSUB TOUCH A
	C = HVSHN INTERACT B
	D = SIZE C BY SH_N_E_3_NLD6G5_DE_FULLY_ISO
	D XOR B
}
SH_N.E.3_NLD9G5_FULLY_ISO{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NLD9G5_FULLY_ISO
    A = (HOLES PSUB INNER) INTERACT NLD9G5_FULLY_ISO_CH
	B = PSUB TOUCH A
	C = HVSHN INTERACT B
	D = SIZE C BY SH_N_E_3_NLD9G5_FULLY_ISO
	D XOR B
}
SH_N.E.3_NLD12G5_FULLY_ISO{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NLD12G5_FULLY_ISO
    A = (HOLES PSUB INNER) INTERACT NLD12G5_FULLY_ISO_CH
	B = PSUB TOUCH A
	C = HVSHN INTERACT B
	D = SIZE C BY SH_N_E_3_NLD12G5_FULLY_ISO
	D XOR B
}
SH_N.E.3_NLD16G5_FULLY_ISO{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NLD16G5_FULLY_ISO
    A = (HOLES PSUB INNER) INTERACT NLD16G5_FULLY_ISO_CH
	B = PSUB TOUCH A
	C = HVSHN INTERACT B
	D = SIZE C BY SH_N_E_3_NLD16G5_FULLY_ISO
	D XOR B
}
SH_N.E.3_NLD20G5_FULLY_ISO{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NLD20G5_FULLY_ISO
    A = (HOLES PSUB INNER) INTERACT NLD20G5_FULLY_ISO_CH
	B = PSUB TOUCH A
	C = HVSHN INTERACT B
	D = SIZE C BY SH_N_E_3_NLD20G5_FULLY_ISO
	D XOR B
}
SH_N.E.3_NLD24G5_FULLY_ISO{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NLD24G5_FULLY_ISO
    A = (HOLES PSUB INNER) INTERACT NLD24G5_FULLY_ISO_CH
	B = PSUB TOUCH A
	C = HVSHN INTERACT B
	D = SIZE C BY SH_N_E_3_NLD24G5_FULLY_ISO
	D XOR B
}
SH_N.E.3_NLD24G5_ISO_SWITCH{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NLD24G5_ISO_SWITCH
    A = (HOLES PSUB INNER) INTERACT NLD24G5_ISO_SWITCH_CH
	B = PSUB TOUCH A
	C = HVSHN INTERACT B
	D = SIZE C BY SH_N_E_3_NLD24G5_ISO_SWITCH
	D XOR B
}
SH_N.E.3_NA6G5_NBL{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NA6G5_NBL
    A = (HOLES PSUB INNER) INTERACT NA6G5_NBL_CH
	B = PSUB TOUCH A
	C = HVSHN INTERACT B
	D = SIZE C BY SH_N_E_3_NA6G5_NBL
	D XOR B
}
SH_N.E.3_NA20G5_NBL{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NA20G5_NBL
    A = (HOLES PSUB INNER) INTERACT NA20G5_NBL_CH
	B = PSUB TOUCH A
	C = HVSHN INTERACT B
	D = SIZE C BY SH_N_E_3_NA20G5_NBL
	D XOR B
}
SH_N.E.3_NA29G5_NBL{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NA29G5_NBL
    A = (HOLES PSUB INNER) INTERACT NA29G5_NBL_CH
	B = PSUB TOUCH A
	C = HVSHN INTERACT B
	D = SIZE C BY SH_N_E_3_NA29G5_NBL
	D XOR B
}
SH_N.E.3_NA29G3_DEP_NBL{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NA29G3_DEP_NBL
    A = (HOLES PSUB INNER) INTERACT NA29G3_DEP_NBL_CH
	B = PSUB TOUCH A
	C = HVSHN INTERACT B
	D = SIZE C BY SH_N_E_3_NA29G3_DEP_NBL
	D XOR B
}

SH_N.E.3_NLD36G5_GB{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NLD36G5_GB
    A = (HVSHN INTERACT NLD36G5_GB_CH ) NOT INTERACT NDD
	B = (HOLES A INNER) INTERACT NLD36G5_GB_CH
    C = SIZE (A OR B) BY SH_N_E_3_NLD36G5_GB
	D = PSUB INTERACT NLD36G5_GB_CH
	C XOR D
}
SH_N.E.3_NLD45G5_GB{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NLD45G5_GB
    A = (HVSHN INTERACT NLD45G5_GB_CH ) NOT INTERACT NDD
	B = (HOLES A INNER) INTERACT NLD45G5_GB_CH
    C = SIZE (A OR B) BY SH_N_E_3_NLD45G5_GB
	D = PSUB INTERACT NLD45G5_GB_CH
	C XOR D
}
SH_N.E.3_NA45G3_DEP_GB{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NA45G3_DEP_GB
    A = (HVSHN INTERACT NA45G3_DEP_GB_CH ) NOT INTERACT NDD
	B = (HOLES A INNER) INTERACT NA45G3_DEP_GB_CH
    C = SIZE (A OR B) BY SH_N_E_3_NA45G3_DEP_GB
	D = PSUB INTERACT NA45G3_DEP_GB_CH
	C XOR D
}

SH_N.E.3_NPDDSHNNBL_PO_BOUNDARY{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NPDDSHNNBL_PO_BOUNDARY
    A = HVSHN INTERACT (BJT_NPDDSHNNBL_PO_BOUNDARY_B OR BJT_NPDDSHNNBL_PO_BOUNDARY_C)
	B = A OR (HOLES A INNER)
	C = SIZE B BY SH_N_E_3_NPDDSHNNBL_PO_BOUNDARY
	D = PSUB INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_B
    C XOR D 
}
SH_N.E.3_NPWSHNNBL_PO_BOUNDARY{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NPWSHNNBL_PO_BOUNDARY
    A = HVSHN INTERACT (BJT_NPWSHNNBL_PO_BOUNDARY_B OR BJT_NPWSHNNBL_PO_BOUNDARY_C)
	B = A OR (HOLES A INNER)
	C = SIZE B BY SH_N_E_3_NPWSHNNBL_PO_BOUNDARY
	D = PSUB INTERACT BJT_NPWSHNNBL_PO_BOUNDARY_B
    C XOR D 
}
SH_N.E.3_PNDDSHPNBL{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_PNDDSHPNBL
    A = HVSHN INTERACT (BJT_PNDDSHPNBL_B OR BJT_PNDDSHPNBL_C)
	B = A OR (HOLES A INNER)
	C = SIZE B BY SH_N_E_3_PNDDSHPNBL
	D = PSUB INTERACT BJT_PNDDSHPNBL_B
    C XOR D 
}
SH_N.E.3_NPDDSHNNBL_BGR8{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NPDDSHNNBL_BGR8
    A = HVSHN INTERACT (BJT_NPDDSHNNBL_BGR8_B OR BJT_NPDDSHNNBL_BGR8_C)
	B = A OR (HOLES A INNER)
	C = SIZE B BY SH_N_E_3_NPDDSHNNBL_BGR8
	D = PSUB INTERACT BJT_NPDDSHNNBL_BGR8_B
    C XOR D 
}
SH_N.E.3_NPWSHNNBL_BGR8{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_NPWSHNNBL_BGR8
    A = HVSHN INTERACT (BJT_NPWSHNNBL_BGR8_B OR BJT_NPWSHNNBL_BGR8_C)
	B = A OR (HOLES A INNER)
	C = SIZE B BY SH_N_E_3_NPWSHNNBL_BGR8
	D = PSUB INTERACT BJT_NPWSHNNBL_BGR8_B
    C XOR D 
}

SH_N.E.3_PBSHNNBL{ @ min and max extension of PSUB beyond SH_N ==^SH_N_E_3_PBSHNNBL
   A = PSUB INTERACT DIO_PBSHNNBL_P
   B = HVSHN INTERACT DIO_PBSHNNBL_P
   C = B OR (HOLES B INNER)
   D = SIZE C BY SH_N_E_3_PBSHNNBL
   D XOR A
}
SH_N.E.3_PDDSHNNBL{ @ min and max extension of PSUB beyond SH_N ==^SH_N_E_3_PDDSHNNBL
   A = PSUB INTERACT DIO_PDDSHNNBL_P
   B = HVSHN INTERACT DIO_PDDSHNNBL_P
   C = B OR (HOLES B INNER)
   D = SIZE C BY SH_N_E_3_PDDSHNNBL
   D XOR A
}
SH_N.E.3_SHPNBLSHN_GB{ @ min and max extension of PSUB beyond SH_N ==^SH_N_E_3_SHPNBLSHN_GB
   A = PSUB INTERACT DIO_SHPNBLSHN_GB_P
   B = HVSHN INTERACT DIO_SHPNBLSHN_GB_P
   C = B OR (HOLES B INNER)
   D = SIZE C BY SH_N_E_3_SHPNBLSHN_GB
   D XOR A
}

SH_N.E.3_SHNNBLPSUBSHP{ @ min and max extension of PSUB beyond SH_N ==^SH_N_E_3_SHNNBLPSUBSHP
   A = PSUB INTERACT DIO_SHNNBLPSUBSHP_M
   B = HVSHN INTERACT DIO_SHNNBLPSUBSHP_M
   C = B OR (HOLES B INNER)
   D = SIZE C BY SH_N_E_3_SHNNBLPSUBSHP
   D XOR A
}
SH_N.E.3_SHNPSUBSHP{ @ min and max extension of PSUB beyond SH_N ==^SH_N_E_3_SHNPSUBSHP
   A = PSUB INTERACT DIO_SHNPSUBSHP_M
   B = HVSHN INTERACT DIO_SHNPSUBSHP_M
   C = B OR (HOLES B INNER)
   D = SIZE C BY SH_N_E_3_SHNPSUBSHP
   D XOR A
}

SH_N.E.3_SHNNBLPSUBSHP_GB{ @ min and max extension of PSUB beyond SH_N ==^SH_N_E_3_SHNNBLPSUBSHP_GB
   A = PSUB INTERACT DIO_SHNNBLPSUBSHP_GB_M
   B = HVSHN INTERACT DIO_SHNNBLPSUBSHP_GB_M
   C = B OR (HOLES B INNER)
   D = SIZE C BY SH_N_E_3_SHNNBLPSUBSHP_GB
   D XOR A
}

SH_N.E.3_ZENER_NBL{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_ZENER_NBL
    A = HVSHN TOUCH ((HOLES HVSHN INNER) INTERACT DIO_ZENER_NBL_M)
	B = A OR (HOLES A INNER)
	C = SIZE B BY SH_N_E_3_ZENER_NBL
	D = PSUB INTERACT DIO_ZENER_NBL_M
	C XOR D
}

SH_N.C.16_SBD_12V { @ min and max clearance of SH_N to inward SH_P ==0
    A = (HOLES HVSHN INNER) ENCLOSE DIO_SBD_12V_M
	B = (HOLES SH_P INNER) ENCLOSE DIO_SBD_12V_M
    C = SH_P TOUCH B
	D = B OR C 
	D XOR A
}

SH_N.E.3_SBD_12V{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_SBD_12V
    A = HVSHN TOUCH ((HOLES HVSHN INNER) INTERACT DIO_SBD_12V_M)
	B = A OR (HOLES A INNER)
	C = SIZE B BY SH_N_E_3_SBD_12V
	D = PSUB INTERACT DIO_SBD_12V_M
	C XOR D
}
SH_N.C.16_SBD_16V { @ min and max clearance of SH_N to inward SH_P ==0
    A = (HOLES HVSHN INNER) ENCLOSE DIO_SBD_16V_M
	B = (HOLES SH_P INNER) ENCLOSE DIO_SBD_16V_M
    C = SH_P TOUCH B
	D = B OR C 
	D XOR A
}

SH_N.E.3_SBD_16V{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_SBD_16V
    A = HVSHN TOUCH ((HOLES HVSHN INNER) INTERACT DIO_SBD_16V_M)
	B = A OR (HOLES A INNER)
	C = SIZE B BY SH_N_E_3_SBD_16V
	D = PSUB INTERACT DIO_SBD_16V_M
	C XOR D
}
SH_N.C.16_SBD_24V { @ min and max clearance of SH_N to inward SH_P ==0
    A = (HOLES HVSHN INNER) ENCLOSE DIO_SBD_24V_M
	B = (HOLES SH_P INNER) ENCLOSE DIO_SBD_24V_M
    C = SH_P TOUCH B
	D = B OR C 
	D XOR A
}

SH_N.E.3_SBD_24V{ @ min and max extension of PSUB beyond SH_N == ^SH_N_E_3_SBD_24V
    A = HVSHN TOUCH ((HOLES HVSHN INNER) INTERACT DIO_SBD_24V_M)
	B = A OR (HOLES A INNER)
	C = SIZE B BY SH_N_E_3_SBD_24V
	D = PSUB INTERACT DIO_SBD_24V_M
	C XOR D
}

SH_N.E.4_PA6G5_DE_BL{ @ min and max extension of PSUB beyond SH_N outside edge for HVPMOS == ^SH_N_E_4_PA6G5_DE_BL
    A = HVSHN INTERACT PA6G5_DE_BL_CH
	B = HOLES A INNER 
	C = A OR B 
    D = SIZE C BY SH_N_E_4_PA6G5_DE_BL
    D NOT COIN EDGE PSUB 
}
SH_N.E.4_PA6G5_SA_BL{ @ min and max extension of PSUB beyond SH_N outside edge for HVPMOS == ^SH_N_E_4_PA6G5_SA_BL
    A = HVSHN INTERACT PA6G5_SA_BL_CH
	B = HOLES A INNER 
	C = A OR B 
    D = SIZE C BY SH_N_E_4_PA6G5_SA_BL
    D NOT COIN EDGE PSUB 
}
SH_N.E.4_PA12G5_SLIT_BL{ @ min and max extension of PSUB beyond SH_N outside edge for HVPMOS == ^SH_N_E_4_PA12G5_SLIT_BL
    A = HVSHN INTERACT PA12G5_SLIT_BL_CH
	B = HOLES A INNER 
	C = A OR B 
    D = SIZE C BY SH_N_E_4_PA12G5_SLIT_BL
    D NOT COIN EDGE PSUB 
}
SH_N.E.4_PA12G5_NBL{ @ min and max extension of PSUB beyond SH_N outside edge for HVPMOS == ^SH_N_E_4_PA12G5_NBL
    A = HVSHN INTERACT PA12G5_NBL_CH
	B = HOLES A INNER 
	C = A OR B 
    D = SIZE C BY SH_N_E_4_PA12G5_NBL
    D NOT COIN EDGE PSUB 
}
SH_N.E.4_PA20G5_BL{ @ min and max extension of PSUB beyond SH_N outside edge for HVPMOS == ^SH_N_E_4_PA20G5_BL
    A = HVSHN INTERACT PA20G5_BL_CH
	B = HOLES A INNER 
	C = A OR B 
    D = SIZE C BY SH_N_E_4_PA20G5_BL
    D NOT COIN EDGE PSUB 
}
SH_N.E.4_PA20G5_SLIT_BL{ @ min and max extension of PSUB beyond SH_N outside edge for HVPMOS == ^SH_N_E_4_PA20G5_SLIT_BL
    A = HVSHN INTERACT PA20G5_SLIT_BL_CH
	B = HOLES A INNER 
	C = A OR B 
    D = SIZE C BY SH_N_E_4_PA20G5_SLIT_BL
    D NOT COIN EDGE PSUB 
}
SH_N.E.4_PA29G5_BL{ @ min and max extension of PSUB beyond SH_N outside edge for HVPMOS == ^SH_N_E_4_PA29G5_BL
    A = HVSHN INTERACT PA29G5_BL_CH
	B = HOLES A INNER 
	C = A OR B 
    D = SIZE C BY SH_N_E_4_PA29G5_BL
    D NOT COIN EDGE PSUB 
}
SH_N.E.4_PA36G5_BL_GB{ @ min and max extension of PSUB beyond SH_N outside edge for HVPMOS == ^SH_N_E_4_PA36G5_BL_GB
    A = HVSHN INTERACT PA36G5_BL_GB_CH
	B = HOLES A INNER 
	C = A OR B 
    D = SIZE C BY SH_N_E_4_PA36G5_BL_GB
    D NOT COIN EDGE PSUB 
}
SH_N.E.4_PA45G5_BL_GB{ @ min and max extension of PSUB beyond SH_N outside edge for HVPMOS == ^SH_N_E_4_PA45G5_BL_GB
    A = HVSHN INTERACT PA45G5_BL_GB_CH
	B = HOLES A INNER 
	C = A OR B 
    D = SIZE C BY SH_N_E_4_PA45G5_BL_GB
    D NOT COIN EDGE PSUB 
}
SH_N.E.4_PA9G5_NBL{ @ min and max extension of PSUB beyond SH_N outside edge for HVPMOS == ^SH_N_E_4_PA9G5_NBL
    A = HVSHN INTERACT PA9G5_NBL_CH
	B = HOLES A INNER 
	C = A OR B 
    D = SIZE C BY SH_N_E_4_PA9G5_NBL
    D NOT COIN EDGE PSUB 
}

SH_N.E.4_PA9G5_SLIT_NBL{ @ min and max extension of PSUB beyond SH_N outside edge for HVPMOS == ^SH_N_E_4_PA9G5_SLIT_NBL
    A = HVSHN INTERACT PA9G5_SLIT_NBL_CH
	B = HOLES A INNER 
	C = A OR B 
    D = SIZE C BY SH_N_E_4_PA9G5_SLIT_NBL
    D NOT COIN EDGE PSUB 
}

SH_N.E.4_PA16G5_NBL{ @ min and max extension of PSUB beyond SH_N outside edge for HVPMOS == ^SH_N_E_4_PA16G5_NBL
    A = HVSHN INTERACT PA16G5_NBL_CH
	B = HOLES A INNER 
	C = A OR B 
    D = SIZE C BY SH_N_E_4_PA16G5_NBL
    D NOT COIN EDGE PSUB 
}

SH_N.E.4_PA16G5_SLIT_NBL{ @ min and max extension of PSUB beyond SH_N outside edge for HVPMOS == ^SH_N_E_4_PA16G5_SLIT_NBL
    A = HVSHN INTERACT PA16G5_SLIT_NBL_CH
	B = HOLES A INNER 
	C = A OR B 
    D = SIZE C BY SH_N_E_4_PA16G5_SLIT_NBL
    D NOT COIN EDGE PSUB 
}


SH_N.E.5_NLD36G5_GB{ @ min extension of SH_N beyond HVNW in channel length direction on drain side >= ^SH_N_E_5_NLD36G5_GB
    A = HVSHN INTERACT NLD36G5_GB_D
	B = HVNW INTERACT NLD36G5_GB_D
	C = EXPAND EDGE B INSIDE BY GRID EXTEND BY -GRID
	D = B TOUCH EDGE (C INSIDE A)
	ENC D A < SH_N_E_5_NLD36G5_GB ABUT < 90 REGION
}

SH_N.E.6_NLD36G5_GB{ @ min extension of SH_N beyond HVNW in channel width direction >= ^SH_N_E_6_NLD36G5_GB
    A = HVSHN INTERACT NLD36G5_GB_D
	B = HVNW INTERACT NLD36G5_GB_D
	C = EXPAND EDGE B INSIDE BY GRID EXTEND BY -GRID
	D = B NOT TOUCH EDGE (C INSIDE A)
	ENC D A < SH_N_E_6_NLD36G5_GB ABUT < 90 REGION
}
SH_N.E.5_NLD45G5_GB{ @ min extension of SH_N beyond HVNW in channel length direction on drain side >= ^SH_N_E_5_NLD45G5_GB
    A = HVSHN INTERACT NLD45G5_GB_D
	B = HVNW INTERACT NLD45G5_GB_D
	C = EXPAND EDGE B INSIDE BY GRID EXTEND BY -GRID
	D = B TOUCH EDGE (C INSIDE A)
	ENC D A < SH_N_E_5_NLD45G5_GB ABUT < 90 REGION
}

SH_N.E.6_NLD45G5_GB{ @ min extension of SH_N beyond HVNW in channel width direction >= ^SH_N_E_6_NLD45G5_GB
    A = HVSHN INTERACT NLD45G5_GB_D
	B = HVNW INTERACT NLD45G5_GB_D
	C = EXPAND EDGE B INSIDE BY GRID EXTEND BY -GRID
	D = B NOT TOUCH EDGE (C INSIDE A)
	ENC D A < SH_N_E_6_NLD45G5_GB ABUT < 90 REGION
}
SH_N.E.5_NA45G3_DEP_GB{ @ min extension of SH_N beyond HVNW in channel length direction on drain side >= ^SH_N_E_5_NA45G3_DEP_GB
    A = HVSHN INTERACT NA45G3_DEP_GB_D
	B = HVNW INTERACT NA45G3_DEP_GB_D
	C = EXPAND EDGE B INSIDE BY GRID EXTEND BY -GRID
	D = B TOUCH EDGE (C INSIDE A)
	ENC D A < SH_N_E_5_NA45G3_DEP_GB ABUT < 90 REGION
}

SH_N.E.6_NA45G3_DEP_GB{ @ min extension of SH_N beyond HVNW in channel width direction >= ^SH_N_E_6_NA45G3_DEP_GB
    A = HVSHN INTERACT NA45G3_DEP_GB_D
	B = HVNW INTERACT NA45G3_DEP_GB_D
	C = EXPAND EDGE B INSIDE BY GRID EXTEND BY -GRID
	D = B NOT TOUCH EDGE (C INSIDE A)
	ENC D A < SH_N_E_6_NA45G3_DEP_GB ABUT < 90 REGION
}

SH_N.E.7_NLD6G5_DE_FULLY_ISO { @ min and max extension of SH_N beyond drain OD (except SH_N edge interact POLY) == ^SH_N_E_7_NLD6G5_DE_FULLY_ISO
     A = HVSHN INTERACT NLD6G5_DE_FULLY_ISO_D
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B NOT INTERACT NLD6G5_DE_FULLY_ISO_D
     D = HVSHN TOUCH OUTSIDE EDGE C
     E = EXPAND EDGE D INSIDE BY SH_N_E_7_NLD6G5_DE_FULLY_ISO EXTEND BY -SH_N_E_7_NLD6G5_DE_FULLY_ISO
     E NOT TOUCH NLD6G5_DE_FULLY_ISO_D
}
SH_N.E.7_NLD6G5_DE { @ min and max extension of SH_N beyond drain OD (except SH_N edge interact POLY) == ^SH_N_E_7_NLD6G5_DE
     A = HVSHN INTERACT NLD6G5_DE_D
     B = EXPAND EDGE A OUTSIDE BY GRID
     C = B NOT INTERACT NLD6G5_DE_D
     D = HVSHN TOUCH OUTSIDE EDGE C
     E = EXPAND EDGE D INSIDE BY SH_N_E_7_NLD6G5_DE EXTEND BY -SH_N_E_7_NLD6G5_DE
     E NOT TOUCH NLD6G5_DE_D
}

SH_N.O.1_NLD36G5_GB { @ min and max overlap of SH_N beyond active OD in channel length direction on drain side == ^SH_N_O_1_NLD36G5_GB
     A = HVSHN AND NLD36G5_GB_CH
	 B = A INSIDE EDGE NLD36G5_GB_CH
	 C = A WITH EDGE B == 1
     INT C < SH_N_O_1_NLD36G5_GB ABUT < 90 SINGULAR REGION
     SIZE C BY SH_N_O_1_NLD36G5_GB/2 UNDEROVER
     NLD36G5_GB_CH NOT INTERACT HVSHN 
}

SH_N.O.2_NLD36G5_GB { @ min and max overlap of SH_N and RPO in channel length direction on drain side ==^SH_N_O_2_NLD36G5_GB
     A = HVSHN INTERACT NLD36G5_GB_CH
     B = RPO INTERACT NLD36G5_GB_CH
	 INT A B < SH_N_O_2_NLD36G5_GB ABUT < 90 SINGULAR REGION
	 C = A AND B
	 SIZE C BY SH_N_O_2_NLD36G5_GB/2 UNDEROVER
}
SH_N.O.1_NLD45G5_GB { @ min and max overlap of SH_N beyond active OD in channel length direction on drain side == ^SH_N_O_1_NLD45G5_GB
     A = HVSHN AND NLD45G5_GB_CH
	 B = A INSIDE EDGE NLD45G5_GB_CH
	 C = A WITH EDGE B == 1
     INT C < SH_N_O_1_NLD45G5_GB ABUT < 90 SINGULAR REGION
     SIZE C BY SH_N_O_1_NLD45G5_GB/2 UNDEROVER
     NLD45G5_GB_CH NOT INTERACT HVSHN 
}

SH_N.O.2_NLD45G5_GB { @ min and max overlap of SH_N and RPO in channel length direction on drain side ==^SH_N_O_2_NLD45G5_GB
     A = HVSHN INTERACT NLD45G5_GB_CH
     B = RPO INTERACT NLD45G5_GB_CH
	 INT A B < SH_N_O_2_NLD45G5_GB ABUT < 90 SINGULAR REGION
	 C = A AND B
	 SIZE C BY SH_N_O_2_NLD45G5_GB/2 UNDEROVER
}
SH_N.O.1_NA45G3_DEP_GB { @ min and max overlap of SH_N beyond active OD in channel length direction on drain side == ^SH_N_O_1_NA45G3_DEP_GB
     A = HVSHN AND NA45G3_DEP_GB_CH
	 B = A INSIDE EDGE NA45G3_DEP_GB_CH
	 C = A WITH EDGE B == 1
     INT C < SH_N_O_1_NA45G3_DEP_GB ABUT < 90 SINGULAR REGION
     SIZE C BY SH_N_O_1_NA45G3_DEP_GB/2 UNDEROVER
     NA45G3_DEP_GB_CH NOT INTERACT HVSHN 
}

SH_N.O.2_NA45G3_DEP_GB { @ min and max overlap of SH_N and RPO in channel length direction on drain side ==^SH_N_O_2_NA45G3_DEP_GB
     A = HVSHN INTERACT NA45G3_DEP_GB_CH
     B = RPO INTERACT NA45G3_DEP_GB_CH
	 INT A B < SH_N_O_2_NA45G3_DEP_GB ABUT < 90 SINGULAR REGION
	 C = A AND B
	 SIZE C BY SH_N_O_2_NA45G3_DEP_GB/2 UNDEROVER
}

SH_N.R.1 { @ SH_N must be fully inside HVDMY(except LVISO DMY region)
   (HVSHN NOT INTERACT NBL_ISO_RING) NOT HVDMY
}

SH_N.R.2 { @ Each HVSHN in LV region, outside edge must be butted with HVDMY and P+ iso ring
		   @ except HVSHN inside HVSHN ring 
     LV_HVSHN = HVSHN NOT HVDMY
     LV_HVSHN_H = HOLES LV_HVSHN
     LV_HVSHN_ALL = LV_HVSHN OR LV_HVSHN_H
	 PPOD_RING = PPOD_ISO_R_1 TOUCH PPOD_ISO_H_CHECK
 	 LV_HVSHN_ALL NOT COINCIDENT OUTSIDE EDGE (HVDMY INTERACT PPOD_RING)
	 LV_HVSHN_ALL NOT INSIDE PPOD_ISO_H_CHECK
}

SH_N.R.3 { @ SH_N should be fully inside PSUB .
		   @ {PSUB CUT SH_N} or {SH_N OUTSIDE PSUB} is not allowed.
     A = HVSHN NOT INTERACT (PPOD_ISO_H_NLD5G5_ISO_SWITCH OR PPOD_ISO_H_PCH5_AS_SWITCH_MAC)
     A NOT PSUB
}
SH_N.R.4 { @Every PW must be surrounded by SH_N and N+ isolation ring, if the PW are inside the same NBL but with different potential.The following notes are DRC checkable through metal connection:
          @(1) All PWs inside the same SH_N and N+ isolation-ring have to be connected to the same potential. 
          @(2) If PWs are connected to different potential, they have to be isolated by surrounding with SH_N and N+ isolation-ring inside the same NBL. 
NPOD_HVSHN_NBL_ALL = (( NPOD AND HVSHN ) AND NBL ) NOT ALL_HVMOS_OD
NBL_ISO_H_ALL = ((HOLES NPOD_HVSHN_NBL_ALL) NOT NPOD_HVSHN_NBL_ALL) INSIDE NBL
RWi = PWELi INSIDE NBLi
LV_RW = STAMP RWi BY P_WELLSi
     NBL_WITH_MULTI_PW = NBL INTERACT LV_RW BY NET > 1
     MERGE  (  ( LV_RW INTERACT NBL_WITH_MULTI_PW )  NOT INSIDE NBL_ISO_H_ALL )     // check differnt net RW not inside NBL_ISO_H
     ( NBL_ISO_H_ALL INTERACT NBL )  INTERACT LV_RW BY NET > 1                 // check one NBL_ISO_ring_hole with different net RW
}
SH_N.R.5 { @ For all HV diodes and BJTs, {(SH_N OR NDD) OR HVNW} must be surrounded by P+ isolation ring
    A =  ((HVSHN OR NDD) OR HVNW) INTERACT (HVBJT_DMY OR HVDIO_DMY)
    A NOT INSIDE PPOD_ISO_H
}

SH_N.R.6 { @ NW is not allowed to overlap with SH_N
   NWEL AND HVSHN
}

SH_N.R.7 { @ SH_N hole between {BULK OD OR SOURCE OD} and N+ pickup-ring width direction is not allowed
	A = HVSHN INTERACT ALL_HVPMOS_OD
	B = HOLES A INNER
	B INTERACT NPOD
	B INTERACT ALL_HVPMOS_S
	B NOT ENCLOSE ALL_HVPMOS_D
    NOT RECTANGLE B
}
SH_N.C.15_PCH5_AS_SWITCH_MAC{ @ Min clearance from SH_N to P+isolation ring >= ^SH_N_C_15_PCH5_AS_SWITCH_MAC
    A = HOLES HVSHN INNER
    B = HVSHN TOUCH A
    C = HVSHN NOT B
    D = A OR (B OR C)
    E = D INTERACT PCH5_AS_SWITCH_MAC_CH 
    EXT PPOD_ISO_R E < SH_N_C_15_PCH5_AS_SWITCH_MAC ABUT < 90 SINGULAR REGION 
}
SH_N.C.15_NLD5G5_ISO_SWITCH{ @ Min clearance from SH_N to P+isolation ring >= ^SH_N_C_15_NLD5G5_ISO_SWITCH
    A = HOLES HVSHN INNER
    B = HVSHN TOUCH A
    C = HVSHN NOT B
    D = A OR (B OR C)
    E = D INTERACT NLD5G5_ISO_SWITCH_CH 
    EXT PPOD_ISO_R E < SH_N_C_15_NLD5G5_ISO_SWITCH ABUT < 90 SINGULAR REGION 
}



// PSUB CHECKS
//=============
PSUB.W.1 { @ Min. PSUB width < ^PSUB_W_1
  INT PSUB < PSUB_W_1 ABUT < 90 SINGULAR REGION
}                
PSUB.S.1 { @ Min. PSUB space < ^PSUB_S_1
  EXT PSUB < PSUB_S_1 ABUT < 90 SINGULAR REGION
}
PSUB.C.1 { @ Min clearance pf PSUB to SH_P >= ^PSUB_C_1
  X = ((((NA6G5_NBL_OD_ALL OR NA29G5_OD_ALL) OR NA29G5_NBL_OD_ALL) OR NA29G3_dep_NBL_OD_ALL) OR NA20G5_OD_ALL) OR NA20G5_NBL_OD_ALL
  A = PSUB NOT INTERACT X
  B = HVSHP NOT INTERACT X
  EXT A B < PSUB_C_1 ABUT < 90 SINGULAR REGION
}

PSUB.E.1 { @ Min extension of PSUB beyond SH_N >= ^PSUB_E_1
  ENC HVSHN PSUB < PSUB_E_1 ABUT < 90 SINGULAR REGION
}

PSUB.R.1 { @ PSUB should be rectangle for HVBJT and HVDIODE
  NOT RECTANGLE (PSUB INTERACT HVBJT_DMY)
  NOT RECTANGLE (PSUB INTERACT HVDIO_DMY)
}

PSUB.R.2 { @ PSUB OVERLAP P+ isolation-ring is not allowed (except N+/HVPW Diode (GB) and N+/PDD Diode (GA)) 
  A = PSUB NOT INTERACT (DIO_NPDD_M OR DIO_NHVPW_GB_M)
  A AND PPOD_ISO_R
}


// NDD CHECKS
//==============
NDD.W.1 { @ Minimum width of a NDD region.>= ^NDD_W_1 um,except NA6G5_NBL_GA.
    A = NDD NOT INTERACT NA6G5_NBL_GATE
    INT A < NDD_W_1 ABUT<90 SINGULAR REGION
}
NDD.S.1 { @ Minimum space between two NDDD regions. >= ^NDD_S_1 um,except
    EXT NDD < NDD_S_1 ABUT<90 SINGULAR REGION
}
NDD.S.2 { @ Min space between two NDD regions which share the same P+ OD isolation ring. >= ^NDD_S_2
    A = EXT NDD < NDD_S_2 ABUT<90 SINGULAR REGION
	A INSIDE PPOD_ISO_H
}
NDD.C.1 { @ Min clearance from NDD to {SH_N OUTSIDE NDD} >= ^NDD_C_1
    A = NDD NOT INTERACT NCH5_LVT_G
    B = HVSHN OUTSIDE A
	EXT B A < NDD_C_1 ABUT<90 SINGULAR REGION
	C = NDD INTERACT NCH5_LVT_G
	D = HVSHN INSIDE (((HOLES PPOD_ISO_R_9V INNER) OR (HOLES PPOD_ISO_R_29V INNER)) OR (HOLES PPOD_ISO_R_45V INNER))
	E = D OUTSIDE C
    EXT E C < NDD_C_1 ABUT > 0 < 90 SINGULAR REGION 
}
NDD.R.1 { @ NDD must fully inside HVGA(except 5V LVT NMOS) [Butted is not allowed]
    A = NDD NOT INTERACT NCH5_LVT_G
    A NOT HVGA
    A COIN INSIDE EDGE HVGA
}
 
NDD.O.1_NA6G5_NBL { @ min and max overlap of NDD and PO in channel length direction ==  ^NDD_O_1_NA6G5_NBL
    A = POLY INTERACT NA6G5_NBL_GATE
	B = NDD INTERACT NA6G5_NBL_CH
	INT A B < NDD_O_1_NA6G5_NBL ABUT < 90 SINGULAR REGION
	C = A AND B 
	SIZE C BY NDD_O_1_NA6G5_NBL/2 UNDEROVER
}
NDD.O.1_NA20G5 { @ min and max overlap of NDD and PO in channel length direction ==  ^NDD_O_1_NA20G5
    A = POLY INTERACT NA20G5_GATE
	B = NDD INTERACT NA20G5_CH
	INT A B < NDD_O_1_NA20G5 ABUT < 90 SINGULAR REGION
	C = A AND B 
	SIZE C BY NDD_O_1_NA20G5/2 UNDEROVER
}
NDD.O.1_NA20G5_NBL { @ min and max overlap of NDD and PO in channel length direction ==  ^NDD_O_1_NA20G5_NBL
    A = POLY INTERACT NA20G5_NBL_GATE
	B = NDD INTERACT NA20G5_NBL_CH
	INT A B < NDD_O_1_NA20G5_NBL ABUT < 90 SINGULAR REGION
	C = A AND B 
	SIZE C BY NDD_O_1_NA20G5_NBL/2 UNDEROVER
}
NDD.O.1_NA29G5 { @ min and max overlap of NDD and PO in channel length direction ==  ^NDD_O_1_NA29G5
    A = POLY INTERACT NA29G5_GATE
	B = NDD INTERACT NA29G5_CH
	INT A B < NDD_O_1_NA29G5 ABUT < 90 SINGULAR REGION
	C = A AND B 
	SIZE C BY NDD_O_1_NA29G5/2 UNDEROVER
}
NDD.O.1_NA29G5_NBL { @ min and max overlap of NDD and PO in channel length direction ==  ^NDD_O_1_NA29G5_NBL
    A = POLY INTERACT NA29G5_NBL_GATE
	B = NDD INTERACT NA29G5_NBL_CH
	INT A B < NDD_O_1_NA29G5_NBL ABUT < 90 SINGULAR REGION
	C = A AND B 
	SIZE C BY NDD_O_1_NA29G5_NBL/2 UNDEROVER
}
NDD.O.1_NA29G3_DEP_NBL { @ min and max overlap of NDD and PO in channel length direction ==  ^NDD_O_1_NA29G3_DEP_NBL
    A = POLY INTERACT NA29G3_DEP_NBL_GATE
	B = NDD INTERACT NA29G3_DEP_NBL_CH
	INT A B < NDD_O_1_NA29G3_DEP_NBL ABUT < 90 SINGULAR REGION
	C = A AND B 
	SIZE C BY NDD_O_1_NA29G3_DEP_NBL/2 UNDEROVER
}

NDD.E.1_NLD6G5_DE_FULLY_ISO { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD6G5_DE_FULLY_ISO
	A = NDD INTERACT NLD6G5_DE_FULLY_ISO_GATE
	ENC NLD6G5_DE_FULLY_ISO_CH A < NDD_E_1_NLD6G5_DE_FULLY_ISO ABUT < 90 SINGULAR REGION
}
NDD.E.1_NLD6G5_SA_FULLY_ISO { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD6G5_SA_FULLY_ISO
	A = NDD INTERACT NLD6G5_SA_FULLY_ISO_GATE
	ENC NLD6G5_SA_FULLY_ISO_CH A < NDD_E_1_NLD6G5_SA_FULLY_ISO ABUT < 90 SINGULAR REGION
}
NDD.E.1_NA6G5_NBL { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NA6G5_NBL
	A = NDD INTERACT NA6G5_NBL_GATE
	ENC NA6G5_NBL_CH A < NDD_E_1_NA6G5_NBL ABUT < 90 SINGULAR REGION
}
NDD.E.1_NLD9G5 { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD9G5
	A = NDD INTERACT NLD9G5_GATE
	ENC NLD9G5_CH A < NDD_E_1_NLD9G5 ABUT < 90 SINGULAR REGION
}
NDD.E.1_NLD9G5_FULLY_ISO { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD9G5_FULLY_ISO
	A = NDD INTERACT NLD9G5_FULLY_ISO_GATE
	ENC NLD9G5_FULLY_ISO_CH A < NDD_E_1_NLD9G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
NDD.E.1_NLD12G5 { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD12G5
	A = NDD INTERACT NLD12G5_GATE
	ENC NLD12G5_CH A < NDD_E_1_NLD12G5 ABUT < 90 SINGULAR REGION
}
NDD.E.1_NLD12G5_FULLY_ISO { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD12G5_FULLY_ISO
	A = NDD INTERACT NLD12G5_FULLY_ISO_GATE
	ENC NLD12G5_FULLY_ISO_CH A < NDD_E_1_NLD12G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
NDD.E.1_NLD16G5 { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD16G5
	A = NDD INTERACT NLD16G5_GATE
	ENC NLD16G5_CH A < NDD_E_1_NLD16G5 ABUT < 90 SINGULAR REGION
}
NDD.E.1_NLD16G5_FULLY_ISO { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD16G5_FULLY_ISO
	A = NDD INTERACT NLD16G5_FULLY_ISO_GATE
	ENC NLD16G5_FULLY_ISO_CH A < NDD_E_1_NLD16G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
NDD.E.1_NLD20G5 { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD20G5
	A = NDD INTERACT NLD20G5_GATE
	ENC NLD20G5_CH A < NDD_E_1_NLD20G5 ABUT < 90 SINGULAR REGION
}
NDD.E.1_NLD20G5_FULLY_ISO { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD20G5_FULLY_ISO
	A = NDD INTERACT NLD20G5_FULLY_ISO_GATE
	ENC NLD20G5_FULLY_ISO_CH A < NDD_E_1_NLD20G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
NDD.E.1_NLD24G5_FULLY_ISO { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD24G5_FULLY_ISO
	A = NDD INTERACT NLD24G5_FULLY_ISO_GATE
	ENC NLD24G5_FULLY_ISO_CH A < NDD_E_1_NLD24G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
NDD.E.1_NLD24G5_ISO_SWITCH { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD24G5_ISO_SWITCH
	A = NDD INTERACT NLD24G5_ISO_SWITCH_GATE
	ENC NLD24G5_ISO_SWITCH_CH A < NDD_E_1_NLD24G5_ISO_SWITCH ABUT < 90 SINGULAR REGION
}
NDD.E.1_NA20G5 { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NA20G5
	A = NDD INTERACT NA20G5_GATE
	ENC NA20G5_CH A < NDD_E_1_NA20G5 ABUT < 90 SINGULAR REGION
}
NDD.E.1_NA20G5_NBL { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NA20G5_NBL
	A = NDD INTERACT NA20G5_NBL_GATE
	ENC NA20G5_NBL_CH A < NDD_E_1_NA20G5_NBL ABUT < 90 SINGULAR REGION
}
NDD.E.1_NA29G5 { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NA29G5
	A = NDD INTERACT NA29G5_GATE
	ENC NA29G5_CH A < NDD_E_1_NA29G5 ABUT < 90 SINGULAR REGION
}
NDD.E.1_NA29G5_NBL { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NA29G5_NBL
	A = NDD INTERACT NA29G5_NBL_GATE
	ENC NA29G5_NBL_CH A < NDD_E_1_NA29G5_NBL ABUT < 90 SINGULAR REGION
}
NDD.E.1_NA29G3_DEP_NBL { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NA29G3_DEP_NBL
	A = NDD INTERACT NA29G3_DEP_NBL_GATE
	ENC NA29G3_DEP_NBL_CH A < NDD_E_1_NA29G3_DEP_NBL ABUT < 90 SINGULAR REGION
}

NDD.E.2_NLD5G5_ISO_SWITCH { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD5G5_ISO_SWITCH
	A = PSUB INTERACT NLD5G5_ISO_SWITCH_GATE
    B = SIZE A BY -NDD_E_2_NLD5G5_ISO_SWITCH
	C = NDD INTERACT NLD5G5_ISO_SWITCH_GATE
	B XOR C	
}
NDD.E.1_NLD5G5_ISO_SWITCH { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD5G5_ISO_SWITCH
	A = NDD INTERACT NLD5G5_ISO_SWITCH_GATE
	ENC NLD5G5_ISO_SWITCH_CH A < NDD_E_1_NLD5G5_ISO_SWITCH ABUT < 90 SINGULAR REGION
}
NDD.E.2_NLD6G5_SA { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD6G5_SA
	A = PSUB INTERACT NLD6G5_SA_GATE
    B = SIZE A BY -NDD_E_2_NLD6G5_SA
	C = NDD INTERACT NLD6G5_SA_GATE
	B XOR C	
}
NDD.E.1_NLD6G5_SA { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD6G5_SA
	A = NDD INTERACT NLD6G5_SA_GATE
	ENC NLD6G5_SA_CH A < NDD_E_1_NLD6G5_SA ABUT < 90 SINGULAR REGION
}
NDD.E.2_NLD6G5_DE { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD6G5_DE
	A = PSUB INTERACT NLD6G5_DE_GATE
    B = SIZE A BY -NDD_E_2_NLD6G5_DE
	C = NDD INTERACT NLD6G5_DE_GATE
	B XOR C	
}
NDD.E.1_NLD6G5_DE { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD6G5_DE
	A = NDD INTERACT NLD6G5_DE_GATE
	ENC NLD6G5_DE_CH A < NDD_E_1_NLD6G5_DE ABUT < 90 SINGULAR REGION
}
NDD.E.2_NLD24G5 { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD24G5
	A = PSUB INTERACT NLD24G5_GATE
    B = SIZE A BY -NDD_E_2_NLD24G5
	C = NDD INTERACT NLD24G5_GATE
	B XOR C	
}
NDD.E.1_NLD24G5 { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD24G5
	A = NDD INTERACT NLD24G5_GATE
	ENC NLD24G5_CH A < NDD_E_1_NLD24G5 ABUT < 90 SINGULAR REGION
}
NDD.E.2_NLD24G5_SWITCH { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD24G5_SWITCH
	A = PSUB INTERACT NLD24G5_SWITCH_GATE
    B = SIZE A BY -NDD_E_2_NLD24G5_SWITCH
	C = NDD INTERACT NLD24G5_SWITCH_GATE
	B XOR C	
}
NDD.E.1_NLD24G5_SWITCH { @ Min extension of NDD beyond Active OD >= ^NDD_E_1_NLD24G5_SWITCH
	A = NDD INTERACT NLD24G5_SWITCH_GATE
	ENC NLD24G5_SWITCH_CH A < NDD_E_1_NLD24G5_SWITCH ABUT < 90 SINGULAR REGION
}

NDD.E.2_NLD6G5_DE_FULLY_ISO { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD6G5_DE_FULLY_ISO
	A = PSUB INTERACT NLD6G5_DE_FULLY_ISO_GATE
    B = SIZE A BY -NDD_E_2_NLD6G5_DE_FULLY_ISO
	C = NDD INTERACT NLD6G5_DE_FULLY_ISO_GATE
	B XOR C	
}
NDD.E.2_NLD6G5_SA_FULLY_ISO { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD6G5_SA_FULLY_ISO
	A = PSUB INTERACT NLD6G5_SA_FULLY_ISO_GATE
    B = SIZE A BY -NDD_E_2_NLD6G5_SA_FULLY_ISO
	C = NDD INTERACT NLD6G5_SA_FULLY_ISO_GATE
	B XOR C	
}
NDD.E.2_NLD9G5 { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD9G5
	A = PSUB INTERACT NLD9G5_GATE
    B = SIZE A BY -NDD_E_2_NLD9G5
	C = NDD INTERACT NLD9G5_GATE
	B XOR C	
}
NDD.E.2_NLD9G5_FULLY_ISO { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD9G5_FULLY_ISO
	A = PSUB INTERACT NLD9G5_FULLY_ISO_GATE
    B = SIZE A BY -NDD_E_2_NLD9G5_FULLY_ISO
	C = NDD INTERACT NLD9G5_FULLY_ISO_GATE
	B XOR C	
}
NDD.E.2_NLD12G5 { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD12G5
	A = PSUB INTERACT NLD12G5_GATE
    B = SIZE A BY -NDD_E_2_NLD12G5
	C = NDD INTERACT NLD12G5_GATE
	B XOR C	
}
NDD.E.2_NLD12G5_FULLY_ISO { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD12G5_FULLY_ISO
	A = PSUB INTERACT NLD12G5_FULLY_ISO_GATE
    B = SIZE A BY -NDD_E_2_NLD12G5_FULLY_ISO
	C = NDD INTERACT NLD12G5_FULLY_ISO_GATE
	B XOR C	
}
NDD.E.2_NLD16G5_FULLY_ISO { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD16G5_FULLY_ISO
	A = PSUB INTERACT NLD16G5_FULLY_ISO_GATE
    B = SIZE A BY -NDD_E_2_NLD16G5_FULLY_ISO
	C = NDD INTERACT NLD16G5_FULLY_ISO_GATE
	B XOR C	
}
NDD.E.2_NLD16G5 { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD16G5
	A = PSUB INTERACT NLD16G5_GATE
    B = SIZE A BY -NDD_E_2_NLD16G5
	C = NDD INTERACT NLD16G5_GATE
	B XOR C	
}
NDD.E.2_NLD20G5 { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD20G5
	A = PSUB INTERACT NLD20G5_GATE
    B = SIZE A BY -NDD_E_2_NLD20G5
	C = NDD INTERACT NLD20G5_GATE
	B XOR C	
}
NDD.E.2_NLD20G5_FULLY_ISO { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD20G5_FULLY_ISO
	A = PSUB INTERACT NLD20G5_FULLY_ISO_GATE
    B = SIZE A BY -NDD_E_2_NLD20G5_FULLY_ISO
	C = NDD INTERACT NLD20G5_FULLY_ISO_GATE
	B XOR C	
}
NDD.E.2_NLD24G5_FULLY_ISO { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD24G5_FULLY_ISO
	A = PSUB INTERACT NLD24G5_FULLY_ISO_GATE
    B = SIZE A BY -NDD_E_2_NLD24G5_FULLY_ISO
	C = NDD INTERACT NLD24G5_FULLY_ISO_GATE
	B XOR C	
}
NDD.E.2_NLD24G5_ISO_SWITCH { @ Min and max extension of PSUB beyond NDD == ^NDD_E_2_NLD24G5_ISO_SWITCH
	A = PSUB INTERACT NLD24G5_ISO_SWITCH_GATE
    B = SIZE A BY -NDD_E_2_NLD24G5_ISO_SWITCH
	C = NDD INTERACT NLD24G5_ISO_SWITCH_GATE
	B XOR C	
}

NDD.E.3_NA6G5_NBL{ @ min and max extension of PSUB beyond NDD in channel width direction  == ^NDD_E_3_NA6G5_NBL
    A = PSUB INTERACT NA6G5_NBL_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA6G5_NBL_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (PSUB TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NA6G5_NBL_CH)
	E = EXPAND EDGE D INSIDE BY NDD_E_3_NA6G5_NBL
	E NOT TOUCH NDD
}
NDD.E.3_NA20G5{ @ min and max extension of PSUB beyond NDD in channel width direction  == ^NDD_E_3_NA20G5
    A = PSUB INTERACT NA20G5_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA20G5_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (PSUB TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NA20G5_CH)
	E = EXPAND EDGE D INSIDE BY NDD_E_3_NA20G5
	E NOT TOUCH NDD
}
NDD.E.3_NA20G5_NBL{ @ min and max extension of PSUB beyond NDD in channel width direction  == ^NDD_E_3_NA20G5_NBL
    A = PSUB INTERACT NA20G5_NBL_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA20G5_NBL_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (PSUB TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NA20G5_NBL_CH)
	E = EXPAND EDGE D INSIDE BY NDD_E_3_NA20G5_NBL
	E NOT TOUCH NDD
}
NDD.E.3_NA29G5{ @ min and max extension of PSUB beyond NDD in channel width direction  == ^NDD_E_3_NA29G5
    A = PSUB INTERACT NA29G5_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA29G5_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (PSUB TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NA29G5_CH)
	E = EXPAND EDGE D INSIDE BY NDD_E_3_NA29G5
	E NOT TOUCH NDD
}
NDD.E.3_NA29G5_NBL{ @ min and max extension of PSUB beyond NDD in channel width direction  == ^NDD_E_3_NA29G5_NBL
    A = PSUB INTERACT NA29G5_NBL_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA29G5_NBL_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (PSUB TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NA29G5_NBL_CH)
	E = EXPAND EDGE D INSIDE BY NDD_E_3_NA29G5_NBL
	E NOT TOUCH NDD
}
NDD.E.3_NA29G3_DEP_NBL{ @ min and max extension of PSUB beyond NDD in channel width direction  == ^NDD_E_3_NA29G3_DEP_NBL
    A = PSUB INTERACT NA29G3_DEP_NBL_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA29G3_DEP_NBL_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = (PSUB TOUCH EDGE C) NOT TOUCH EDGE (A INSIDE EDGE NA29G3_DEP_NBL_CH)
	E = EXPAND EDGE D INSIDE BY NDD_E_3_NA29G3_DEP_NBL
	E NOT TOUCH NDD
}

NDD.E.4_NA6G5_NBL{ @ min and max extension of PSUB beyond NDD in channel length direction on source side == ^NDD_E_4_NA6G5_NBL
    A = PSUB INTERACT NA6G5_NBL_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA6G5_NBL_CH)
	B NOT TOUCH EDGE NDD
}

NDD.E.4_NA20G5{ @ min and max extension of PSUB beyond NDD in channel length direction on source side == ^NDD_E_4_NA20G5
    A = PSUB INTERACT NA20G5_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA20G5_CH)
	C = EXPAND EDGE B INSIDE BY NDD_E_4_NA20G5
	C NOT TOUCH NDD
	D = NDD INTERACT NA20G5_CH
	D NOT A
}
NDD.E.4_NA20G5_NBL{ @ min and max extension of PSUB beyond NDD in channel length direction on source side == ^NDD_E_4_NA20G5_NBL
    A = PSUB INTERACT NA20G5_NBL_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA20G5_NBL_CH)
	C = EXPAND EDGE B INSIDE BY NDD_E_4_NA20G5_NBL
	C NOT TOUCH NDD
	D = NDD INTERACT NA20G5_NBL_CH
	D NOT A
}
NDD.E.4_NA29G5{ @ min and max extension of PSUB beyond NDD in channel length direction on source side == ^NDD_E_4_NA29G5
    A = PSUB INTERACT NA29G5_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA29G5_CH)
	C = EXPAND EDGE B INSIDE BY NDD_E_4_NA29G5
	C NOT TOUCH NDD
	D = NDD INTERACT NA29G5_CH
	D NOT A
}
NDD.E.4_NA29G5_NBL{ @ min and max extension of PSUB beyond NDD in channel length direction on source side == ^NDD_E_4_NA29G5_NBL
    A = PSUB INTERACT NA29G5_NBL_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA29G5_NBL_CH)
	C = EXPAND EDGE B INSIDE BY NDD_E_4_NA29G5_NBL
	C NOT TOUCH NDD
	D = NDD INTERACT NA29G5_NBL_CH
	D NOT A
}
NDD.E.4_NA29G3_DEP_NBL{ @ min and max extension of PSUB beyond NDD in channel length direction on source side == ^NDD_E_4_NA29G3_DEP_NBL
    A = PSUB INTERACT NA29G3_DEP_NBL_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA29G3_DEP_NBL_CH)
	C = EXPAND EDGE B INSIDE BY NDD_E_4_NA29G3_DEP_NBL
	C NOT TOUCH NDD
	D = NDD INTERACT NA29G3_DEP_NBL_CH
	D NOT A
}

NDD.E.5_NA6G5_NBL{ @ min and max extension of PSUB beyond NDD in channel length direction on drain side == ^NDD_E_5_NA6G5_NBL
    A = PSUB INTERACT NA6G5_NBL_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA6G5_NBL_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY NDD_E_5_NA6G5_NBL
	E NOT TOUCH NDD
}
NDD.E.5_NA20G5{ @ min and max extension of PSUB beyond NDD in channel length direction on drain side == ^NDD_E_5_NA20G5
    A = PSUB INTERACT NA20G5_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA20G5_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY NDD_E_5_NA20G5
	E NOT TOUCH NDD
}
NDD.E.5_NA20G5_NBL{ @ min and max extension of PSUB beyond NDD in channel length direction on drain side == ^NDD_E_5_NA20G5_NBL
    A = PSUB INTERACT NA20G5_NBL_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA20G5_NBL_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY NDD_E_5_NA20G5_NBL
	E NOT TOUCH NDD
}
NDD.E.5_NA29G5{ @ min and max extension of PSUB beyond NDD in channel length direction on drain side == ^NDD_E_5_NA29G5
    A = PSUB INTERACT NA29G5_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA29G5_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY NDD_E_5_NA29G5
	E NOT TOUCH NDD
}
NDD.E.5_NA29G5_NBL{ @ min and max extension of PSUB beyond NDD in channel length direction on drain side == ^NDD_E_5_NA29G5_NBL
    A = PSUB INTERACT NA29G5_NBL_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA29G5_NBL_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY NDD_E_5_NA29G5_NBL
	E NOT TOUCH NDD
}
NDD.E.5_NA29G3_DEP_NBL{ @ min and max extension of PSUB beyond NDD in channel length direction on drain side == ^NDD_E_5_NA29G3_DEP_NBL
    A = PSUB INTERACT NA29G3_DEP_NBL_CH
	B = A TOUCH EDGE (A INSIDE EDGE NA29G3_DEP_NBL_CH)
	C = EXPAND EDGE B INSIDE BY GRID
    D = A NOT TOUCH EDGE C 
	E = EXPAND EDGE D INSIDE BY NDD_E_5_NA29G3_DEP_NBL
	E NOT TOUCH NDD
}

NDD.C.2_SBD_12V { @ min and max clearance of NDD to SH_P of P+ pickup-ring for GA SBD_12V Diode == 0
   A = (HOLES SH_P INNER) ENCLOSE DIO_SBD_12V_M
   B = NDD INTERACT DIO_SBD_12V_M
   A XOR B
}

NDD.E.7_SBD_12V { @ min and max extension of NDD beyond Cathode OD for GA SBD_12V Diode == ^NDD_E_7_SBD_12V
   A = SIZE DIO_SBD_12V_M BY NDD_E_7_SBD_12V
   B = NDD INTERACT DIO_SBD_12V_M
   A XOR B
}
NDD.C.2_SBD_16V { @ min and max clearance of NDD to SH_P of P+ pickup-ring for GA SBD_16V Diode == 0
   A = (HOLES SH_P INNER) ENCLOSE DIO_SBD_16V_M
   B = NDD INTERACT DIO_SBD_16V_M
   A XOR B
}

NDD.E.7_SBD_16V { @ min and max extension of NDD beyond Cathode OD for GA SBD_16V Diode == ^NDD_E_7_SBD_16V
   A = SIZE DIO_SBD_16V_M BY NDD_E_7_SBD_16V
   B = NDD INTERACT DIO_SBD_16V_M
   A XOR B
}
NDD.C.2_SBD_24V { @ min and max clearance of NDD to SH_P of P+ pickup-ring for GA SBD_24V Diode == 0
   A = (HOLES SH_P INNER) ENCLOSE DIO_SBD_24V_M
   B = NDD INTERACT DIO_SBD_24V_M
   A XOR B
}

NDD.E.7_SBD_24V { @ min and max extension of NDD beyond Cathode OD for GA SBD_24V Diode == ^NDD_E_7_SBD_24V
   A = SIZE DIO_SBD_24V_M BY NDD_E_7_SBD_24V
   B = NDD INTERACT DIO_SBD_24V_M
   A XOR B
}


// PDD CHECKS
//==============
PDD.W.1 { @ Minimum width of a PDD region.>= ^PDD_W_1 um.
    INT PDD < PDD_W_1 ABUT<90 SINGULAR REGION
}
PDD.S.1 { @ Minimum space between two PDD regions.>= ^PDD_S_1 um
    EXT PDD < PDD_S_1 ABUT<90 SINGULAR REGION
}
PDD.R.1 { @ PDD and SH_N overlap is not allowed in side HVGA
	      @ Except PA12G5_SLIT_NBL(GA),PA12G5_NBL(GA),PA20G5_NBL(GA),PA20G5_SLIT_NBL(GA),PA29G5_NBL(GA)
    X = HVESD_merge_PNP_20_PDD OR HVESD_merge_PNP_29
    A = (PDD NOT INTERACT ((((((((PA12G5_SLIT_BL_GATE OR PA12G5_NBL_GATE) OR PA20G5_BL_GATE) OR PA20G5_SLIT_BL_GATE) OR PA29G5_BL_GATE) OR PA9G5_NBL_OD_ALL) OR PA9G5_SLIT_NBL_OD_ALL) OR PA16G5_NBL_OD_ALL) OR PA16G5_SLIT_NBL_OD_ALL)) NOT INTERACT X
   (A AND HVSHN) AND HVGA
}
PDD.R.2 { @ PDD must fully inside HVGA(except 5V LVT PMOS)[Butted is not allowed]
    X = COPY DIO_NPDD_M
    A = (PDD NOT INTERACT PCH5_LVT_G) NOT INTERACT X
    A NOT HVGA
	A COIN INSIDE EDGE HVGA
}

PDD.E.1_PA9G5_SLIT_NBL { @ Min extension of PDD beyond Active OD >= ^PDD_E_1_PA9G5_SLIT_NBL
	A = PDD INTERACT PA9G5_SLIT_NBL_GATE
	ENC PA9G5_SLIT_NBL_CH A < PDD_E_1_PA9G5_SLIT_NBL
	PA9G5_SLIT_NBL_CH NOT A
}
PDD.E.1_PA9G5_NBL { @ Min extension of PDD beyond Active OD >= ^PDD_E_1_PA9G5_NBL
	A = PDD INTERACT PA9G5_NBL_GATE
	ENC PA9G5_NBL_CH A < PDD_E_1_PA9G5_NBL
	PA9G5_NBL_CH NOT A
}
PDD.E.1_PA12G5_SLIT_BL { @ Min extension of PDD beyond Active OD >= ^PDD_E_1_PA12G5_SLIT_BL
	A = PDD INTERACT PA12G5_SLIT_BL_GATE
	ENC PA12G5_SLIT_BL_CH A < PDD_E_1_PA12G5_SLIT_BL
	PA12G5_SLIT_BL_CH NOT A
}
PDD.E.1_PA12G5_NBL { @ Min extension of PDD beyond Active OD >= ^PDD_E_1_PA12G5_NBL
	A = PDD INTERACT PA12G5_NBL_GATE
	ENC PA12G5_NBL_CH A < PDD_E_1_PA12G5_NBL
	PA12G5_NBL_CH NOT A
}
PDD.E.1_PA16G5_NBL { @ Min extension of PDD beyond Active OD >= ^PDD_E_1_PA16G5_NBL
	A = PDD INTERACT PA16G5_NBL_GATE
	ENC PA16G5_NBL_CH A < PDD_E_1_PA16G5_NBL
	PA16G5_NBL_CH NOT A
}
PDD.E.1_PA16G5_SLIT_NBL { @ Min extension of PDD beyond Active OD >= ^PDD_E_1_PA16G5_SLIT_NBL
	A = PDD INTERACT PA16G5_SLIT_NBL_GATE
	ENC PA16G5_SLIT_NBL_CH A < PDD_E_1_PA16G5_SLIT_NBL
	PA16G5_SLIT_NBL_CH NOT A
}
PDD.E.1_PA20G5_BL { @ Min extension of PDD beyond Active OD >= ^PDD_E_1_PA20G5_BL
	A = PDD INTERACT PA20G5_BL_GATE
	ENC PA20G5_BL_CH A < PDD_E_1_PA20G5_BL
	PA20G5_BL_CH NOT A
}
PDD.E.1_PA20G5_SLIT_BL { @ Min extension of PDD beyond Active OD >= ^PDD_E_1_PA20G5_SLIT_BL
	A = PDD INTERACT PA20G5_SLIT_BL_GATE
	ENC PA20G5_SLIT_BL_CH A < PDD_E_1_PA20G5_SLIT_BL
	PA20G5_SLIT_BL_CH NOT A
}
PDD.E.1_PA29G5_BL { @ Min extension of PDD beyond Active OD >= ^PDD_E_1_PA29G5_BL
	A = PDD INTERACT PA29G5_BL_GATE
	ENC PA29G5_BL_CH A < PDD_E_1_PA29G5_BL
	PA29G5_BL_CH NOT A
}

PDD.C.2_SBD_12V { @ min and max clearance of PDD to NP of Cathode OD for GA SBD_12V Diode == ^PDD_C_2_SBD_12V
   A = PDD INTERACT DIO_SBD_12V_M
   B = A OR (HOLES A INNER)
   C = SIZE B BY PDD_C_2_SBD_12V
   D = NP INTERACT DIO_SBD_12V_M
   E = HOLES D INNER
   E XOR C
}

PDD.E.2_SBD_12V { @ min and max extension of PDD ring beyond the inside edge of PP ring within Anode OD for GA SBD_12V diode == ^PDD_E_2_SBD_12V
   A = (PP INTERACT DIO_SBD_12V_M) NOT (HOLES PP INNER)
   B = RPO INTERACT DIO_SBD_12V_M
   C = PDD INTERACT DIO_SBD_12V_M
   D = C INSIDE EDGE B
   E = EXPAND EDGE D INSIDE BY PDD_E_2_SBD_12V
   A NOT TOUCH E
}

PDD.E.3_SBD_12V { @ min and max extension of PDD ring beyond the inward edge of PP ring within Anode OD for GA SBD_12V diode == 0
   A = (PP INTERACT DIO_SBD_12V_M) NOT (PP HOLES INNER)
   B = RPO INTERACT DIO_SBD_12V_M
   C = A NOT INSIDE EDGE B
   E = PDD INTERACT DIO_SBD_12V_M
   C NOT TOUCH EDGE E
}
PDD.C.2_SBD_16V { @ min and max clearance of PDD to NP of Cathode OD for GA SBD_16V Diode == ^PDD_C_2_SBD_16V
   A = PDD INTERACT DIO_SBD_16V_M
   B = A OR (HOLES A INNER)
   C = SIZE B BY PDD_C_2_SBD_16V
   D = NP INTERACT DIO_SBD_16V_M
   E = HOLES D INNER
   E XOR C
}

PDD.E.2_SBD_16V { @ min and max extension of PDD ring beyond the inside edge of PP ring within Anode OD for GA SBD_16V diode == ^PDD_E_2_SBD_16V
   A = (PP INTERACT DIO_SBD_16V_M) NOT (HOLES PP INNER)
   B = RPO INTERACT DIO_SBD_16V_M
   C = PDD INTERACT DIO_SBD_16V_M
   D = C INSIDE EDGE B
   E = EXPAND EDGE D INSIDE BY PDD_E_2_SBD_16V
   A NOT TOUCH E
}

PDD.E.3_SBD_16V { @ min and max extension of PDD ring beyond the inward edge of PP ring within Anode OD for GA SBD_16V diode == 0
   A = (PP INTERACT DIO_SBD_16V_M) NOT (PP HOLES INNER)
   B = RPO INTERACT DIO_SBD_16V_M
   C = A NOT INSIDE EDGE B
   E = PDD INTERACT DIO_SBD_16V_M
   C NOT TOUCH EDGE E
}
PDD.C.2_SBD_24V { @ min and max clearance of PDD to NP of Cathode OD for GA SBD_24V Diode == ^PDD_C_2_SBD_24V
   A = PDD INTERACT DIO_SBD_24V_M
   B = A OR (HOLES A INNER)
   C = SIZE B BY PDD_C_2_SBD_24V
   D = NP INTERACT DIO_SBD_24V_M
   E = HOLES D INNER
   E XOR C
}

PDD.E.2_SBD_24V { @ min and max extension of PDD ring beyond the inside edge of PP ring within Anode OD for GA SBD_24V diode == ^PDD_E_2_SBD_24V
   A = (PP INTERACT DIO_SBD_24V_M) NOT (HOLES PP INNER)
   B = RPO INTERACT DIO_SBD_24V_M
   C = PDD INTERACT DIO_SBD_24V_M
   D = C INSIDE EDGE B
   E = EXPAND EDGE D INSIDE BY PDD_E_2_SBD_24V
   A NOT TOUCH E
}

PDD.E.3_SBD_24V { @ min and max extension of PDD ring beyond the inward edge of PP ring within Anode OD for GA SBD_24V diode == 0
   A = (PP INTERACT DIO_SBD_24V_M) NOT (PP HOLES INNER)
   B = RPO INTERACT DIO_SBD_24V_M
   C = A NOT INSIDE EDGE B
   E = PDD INTERACT DIO_SBD_24V_M
   C NOT TOUCH EDGE E
}

PDD.E.4_NPDD { @ min and max extention of PSUB beyond PDD for N+PDD Diode(GA)
    A = PSUB INTERACT DIO_NPDD_M
    B = PDD INTERACT DIO_NPDD_M
	A XOR B
}

PDD.E.5_NPDD { @ min and max extension of PDD beyond Anode OD == ^PDD_E_5_NPDD
    A = PDD INTERACT DIO_NPDD_M
    B = DIO_NPDD_P OR DIO_NPDD_H
	C = SIZE B BY PDD_E_5_NPDD
	A XOR C
}

PDD.E.5_PDDSHNNBL { @ min and max extension of PDD beyond Anode OD == ^PDD_E_5_PDDSHNNBL
    A = PDD INTERACT DIO_PDDSHNNBL_M
	B = SIZE DIO_PDDSHNNBL_M BY PDD_E_5_PDDSHNNBL
    A XOR B
}

PDD.E.6_PA9G5_SLIT_NBL { @ min and max clearance of Drain side PDD of GA HVPMOS and SH_N of N+ pickup-ring == ^ PDD_E_6_PA9G5_SLIT_NBL
    A = PDD INTERACT PA9G5_SLIT_NBL_GATE
	B = HVSHN INTERACT NPOD_PICK_R_PA9G5_SLIT_NBL
	A NOT TOUCH EDGE B
}
PDD.E.6_PA9G5_NBL { @ min and max clearance of Drain side PDD of GA HVPMOS and SH_N of N+ pickup-ring == ^ PDD_E_6_PA9G5_NBL
    A = PDD INTERACT PA9G5_NBL_GATE
	B = HVSHN INTERACT NPOD_PICK_R_PA9G5_NBL
	A NOT TOUCH EDGE B
}
PDD.E.6_PA12G5_SLIT_BL { @ min and max clearance of Drain side PDD of GA HVPMOS and SH_N of N+ pickup-ring == ^ PDD_E_6_PA12G5_SLIT_BL
    A = PDD INTERACT PA12G5_SLIT_BL_GATE
	B = HVSHN INTERACT NPOD_PICK_R_PA12G5_SLIT_BL
	A NOT TOUCH EDGE B
}
PDD.E.6_PA12G5_NBL { @ min and max clearance of Drain side PDD of GA HVPMOS and SH_N of N+ pickup-ring == ^ PDD_E_6_PA12G5_NBL
    A = PDD INTERACT PA12G5_NBL_GATE
	B = HVSHN INTERACT NPOD_PICK_R_PA12G5_NBL
	A NOT TOUCH EDGE B
}
PDD.E.6_PA16G5_NBL { @ min and max clearance of Drain side PDD of GA HVPMOS and SH_N of N+ pickup-ring == ^ PDD_E_6_PA16G5_NBL
    A = PDD INTERACT PA16G5_NBL_GATE
	B = HVSHN INTERACT NPOD_PICK_R_PA16G5_NBL
	A NOT TOUCH EDGE B
}
PDD.E.6_PA16G5_SLIT_NBL { @ min and max clearance of Drain side PDD of GA HVPMOS and SH_N of N+ pickup-ring == ^ PDD_E_6_PA16G5_SLIT_NBL
    A = PDD INTERACT PA16G5_SLIT_NBL_GATE
	B = HVSHN INTERACT NPOD_PICK_R_PA16G5_SLIT_NBL
	A NOT TOUCH EDGE B
}
PDD.E.6_PA20G5_BL { @ min and max clearance of Drain side PDD of GA HVPMOS and SH_N of N+ pickup-ring == ^ PDD_E_6_PA20G5_BL
    A = PDD INTERACT PA20G5_BL_GATE
	B = HVSHN INTERACT NPOD_PICK_R_PA20G5_BL
	A NOT TOUCH EDGE B
}
PDD.E.6_PA20G5_SLIT_BL { @ min and max clearance of Drain side PDD of GA HVPMOS and SH_N of N+ pickup-ring == ^ PDD_E_6_PA20G5_SLIT_BL
    A = PDD INTERACT PA20G5_SLIT_BL_GATE
	B = HVSHN INTERACT NPOD_PICK_R_PA20G5_SLIT_BL
	A NOT TOUCH EDGE B
}
PDD.E.6_PA29G5_BL { @ min and max clearance of Drain side PDD of GA HVPMOS and SH_N of N+ pickup-ring == ^ PDD_E_6_PA29G5_BL
    A = PDD INTERACT PA29G5_BL_GATE
	B = HVSHN INTERACT NPOD_PICK_R_PA29G5_BL
	A NOT TOUCH EDGE B
}



PDD.C.1_PDDSHNNBL { @ min and max clearance of PDD to outside N+ pickup ring for HV diode ==^ PDD_C_1_PDDSHNNBL
   A = PDD INTERACT DIO_PDDSHNNBL_M
   B = SIZE A BY PDD_C_1_PDDSHNNBL
   B XOR DIO_PDDSHNNBL_H
}

// 5V OD CHECKS
//==============
OD.C.2.1_OD.C.3.1 { @ Minimum clearance from NWEL edge to N+OD which interacts OD2 < ^OD_C_2_1
  X = (NPOD NOT INSIDE NWEL) NOT ODWR
  Y = X INTERACT OD2
  EXT Y NWEL < OD_C_2_1 ABUT < 90 SINGULAR REGION
}
OD.C.4.1 { @ Minimum clearance from NWEL edge to P+OD which interacts OD2 < 0.8
  X = PPOD INTERACT OD2
  A = ENC X NWEL < 0.8 ABUT < 90 SINGULAR REGION
  B = MTP_2T2C AND MCEL
  A NOT INTERACT B 
}


// NWEL CHECKS
//=============
HOT_NWEL = (NWEL AND HOTWL) OR RNWEL
NW_5V = NWEL NOT OUTSIDE OD2
NW_1_8V = NWEL OUTSIDE OD2

NW.W.1 { @ Min. NWEL width < 0.86
  INT NWEL < 0.86 ABUT < 90 SINGULAR REGION
}
NW.W.2 { @ Min. HOT_NWEL width < 2.10
  INT HOT_NWEL < 2.10 ABUT < 90 SINGULAR REGION
}
NW.S.1 { @ Min. different potential NWEL space < 1.40
  NWEL_NODAL = STAMP NWEL BY NWELi
  EXT NWEL_NODAL < 1.40 ABUT < 90 SINGULAR REGION NOT CONNECTED
  EXT RNWEL NWEL < 1.40 ABUT < 90 SINGULAR REGION
  EXT RNWEL < 1.40 ABUT < 90 SINGULAR REGION
}

NW.S.2 { @ Min. same potential NWEL space < 0.6
  EXT NWEL < 0.60 ABUT < 90 SINGULAR REGION
}

#IFDEF 5V
NW.S.3 { @ Min. space between 1.8V & 5V NW < ^NW_S_3
	NW_1_8V_NODAL = STAMP NW_1_8V BY NWELi
	NW_5V_NODAL = STAMP NW_5V BY NWELi
	EXT NW_5V_NODAL NW_1_8V_NODAL < NW_S_3 ABUT < 90 SINGULAR REGION NOT CONNECTED 
}
NW.S.4 { @ Min. space between 5V NW with different potential, except two NW region fully covered with OD2 < ^NW_S_4
	NW2V = NW_5V NOT OD2
	NW3V = NW_5V AND OD2
	NW2V_NODAL = STAMP NW2V BY NWELi
	NW3V_NODAL = STAMP NW3V BY NWELi
	EXT NW2V_NODAL < NW_S_4 ABUT < 90 SINGULAR REGION NOT CONNECTED
	EXT NW2V_NODAL NW3V_NODAL < NW_S_4 ABUT < 90 > 0 SINGULAR REGION NOT CONNECTED
}
#ENDIF
//NW.S.5 is checked by other rule.



NW.C.1 { @ Minimum clearance from NW to PSUB >= ^NW_C_1
  EXT NWEL PSUB < NW_C_1 ABUT < 90 SINGULAR REGION
}
#IFDEF Recommend
NW.R.1 { @ Recommended not to use floating well

  X1 = ((NWELi OUTSIDE (NPODi INTERACT COi)) NOT LOGO) NOT INSIDE EXCL
  X2 = (((ODi NOT RPOi) INTERACT NPODi) AND NWELi) INTERACT COi
  X1 OUTSIDE X2
  Y1 = ((HVPWi OR PWELi) OUTSIDE (PPODi INTERACT COi)) NOT INSIDE EXCL
  Y2 = (((ODi NOT RPOi) INTERACT PPODi) NOT ((NWELi OR HVNWi) OR HVDMYi)) INTERACT COi
  Y1 OUTSIDE Y2
}
#ENDIF

#IFDEF 5V
5V_NW = NWEL AND OD2
1d8V_NW = NWEL NOT OD2
OD2_LARGE = (OD2 NOT NWEL) WITH WIDTH >= OD2_NOT_NW
NW.S.3.1 { @ Min. space between {NW NOT OD2} and another {NW AND OD2} with different potential 
         @ if no {OD2 NOT NW} in between or less than 0.86um{OD2 NOT NW} in between >= ^NW_S_3_1
		 @ if > 0.86um {OD2 NOT NW} in between follow NW.S.3
	NW_1_8V_NODAL = STAMP 1d8V_NW BY NWELi
	NW_5V_NODAL = STAMP 5V_NW BY NWELi
	A = EXT (NW_5V_NODAL) OD2_LARGE < NW_S_3-OD2_NOT_NW ABUT < 90 OPPOSITE
	B = EXT (NW_1_8V_NODAL) OD2_LARGE < NW_S_3-OD2_NOT_NW ABUT < 90 OPPOSITE
	(EXT A B < NW_S_3_1 ABUT< 90 REGION NOT CONNECTED MEASURE ALL) NOT INSIDE DPW
}

NW.S.4.1 { @ Min. space between {NW AND OD2} and another {NW AND OD2} with different potential 
         @ if no {OD2 NOT NW} in between or less than 0.86um{OD2 NOT NW} in between >= ^NW_S_4_1
		 @ if > 0.86um {OD2 NOT NW} in between follow NW.S.4/NW.S.5
	NW_5V_NODAL = STAMP 5V_NW BY NWELi
	A = EXT (NW_5V_NODAL) OD2_LARGE < NW_S_4_1-OD2_NOT_NW ABUT < 90 OPPOSITE
    (EXT A < NW_S_4_1 ABUT< 90 REGION NOT CONNECTED) NOT INSIDE DPW
}
#ENDIF

// NWEL (within OD) RESISTOR CHECKS
//====================================

NWRES = RNWEL INTERACT RPO      // NWEL resistor (UNDER OD)
ODWR  = OD INTERACT NWRES       // OD area of NW resistor
NPWR  = NP INTERACT NWRES       // N+ implant on NW resistor terminals
COWR  = CO_DIFF INTERACT NWRES  // Contact on NW resistor terminals
RHWR  = ODWR NOT RPO            // Non-Salicided area of NW resistor
RPONWR_H =  HOLES RPO INNER

NWR.E.1 {@ Min. OD enclose NWEL resistor < ^NWR_E_1
  ENC NWRES ODWR < NWR_E_1 ABUT < 90 SINGULAR REGION
  NWRES CUT ODWR    
} 
NWR.E.2 {@ Min. NWEL resistor enclose CO < ^NWR_E_2
  ENC COWR NWRES < NWR_E_2 ABUT < 90 SINGULAR REGION
  COWR CUT NWRES    
}
NWR.C.1 {@ Min. RPO hole enclose NWEL < ^NWR_C_1
  ENC NWRES RHWR < NWR_C_1 ABUT < 90 SINGULAR REGION
}
NWR.C.2 {@ Min. RPO enclose OD (with NWEL resistor) < ^NWR_C_2
  ENC ODWR RPO < NWR_C_2 ABUT < 90 SINGULAR REGION
}  
NWR.C.3 {@ Min. RPO hole enclose NWEL resistor CO < ^NWR_C_3
  ENC COWR RHWR < NWR_C_3 ABUT < 90 SINGULAR REGION
  COWR CUT RHWR    
}
NWR.O.1 {@ Min. RPO overlap NP < ^NWR_O_1
  INT NPWR RPO < NWR_O_1 ABUT < 90 SINGULAR REGION
  X = RPO INTERACT NWRES
  H = HOLES X INNER
  H NOT NPWR
}
NWR.R.1 {@ NW resistor doped by implants not allowed.
  RWDMY AND NPOD
  RWDMY AND PPOD
}



NWT = NTAP_w INTERACT NWRES
NWT_CB_DUMMY = CB_w INTERACT VDD_VSS_DUMMY
NWT_UBMn_DUMMY = UBMn_w INTERACT VDD_VSS_DUMMY
NWT_UBMd_DUMMY = UBMd_w INTERACT VDD_VSS_DUMMY
PWR_M1_w_BY_TEXT = M1_w WITH TEXT VDD_TEXT M1_PIN_TEXT PRIMARY ONLY
GND_M1_w_BY_TEXT = M1_w WITH TEXT VSS_TEXT M1_PIN_TEXT PRIMARY ONLY
PAD_M1_w_BY_TEXT = M1_w WITH TEXT PAD_TEXT M1_PIN_TEXT PRIMARY ONLY

PWR_M2_w_BY_TEXT = M2_w WITH TEXT VDD_TEXT M2_PIN_TEXT PRIMARY ONLY
GND_M2_w_BY_TEXT = M2_w WITH TEXT VSS_TEXT M2_PIN_TEXT PRIMARY ONLY
PAD_M2_w_BY_TEXT = M2_w WITH TEXT PAD_TEXT M2_PIN_TEXT PRIMARY ONLY

PWR_M3_w_BY_TEXT = M3_w WITH TEXT VDD_TEXT M3_PIN_TEXT PRIMARY ONLY
GND_M3_w_BY_TEXT = M3_w WITH TEXT VSS_TEXT M3_PIN_TEXT PRIMARY ONLY
PAD_M3_w_BY_TEXT = M3_w WITH TEXT PAD_TEXT M3_PIN_TEXT PRIMARY ONLY

PWR_M4_w_BY_TEXT = M4_w WITH TEXT VDD_TEXT M4_PIN_TEXT PRIMARY ONLY
GND_M4_w_BY_TEXT = M4_w WITH TEXT VSS_TEXT M4_PIN_TEXT PRIMARY ONLY
PAD_M4_w_BY_TEXT = M4_w WITH TEXT PAD_TEXT M4_PIN_TEXT PRIMARY ONLY

PWR_M5_w_BY_TEXT = M5_w WITH TEXT VDD_TEXT M5_PIN_TEXT PRIMARY ONLY
GND_M5_w_BY_TEXT = M5_w WITH TEXT VSS_TEXT M5_PIN_TEXT PRIMARY ONLY
PAD_M5_w_BY_TEXT = M5_w WITH TEXT PAD_TEXT M5_PIN_TEXT PRIMARY ONLY


NWT_IOPAD = NET AREA RATIO NWT CB_w UBMn_w UBMd_w > 0 [!!AREA(CB_w) + !!AREA(UBMn_w) + !!AREA(UBMd_w)]
NWT_VDD_VSS_PAD_DUMMY = NET AREA RATIO NWT OVER NWT_CB_DUMMY NWT_UBMn_DUMMY NWT_UBMd_DUMMY > 0
 NWT_PAD_TEXT = NET AREA RATIO NWT OVER  PAD_M1_w_BY_TEXT PAD_M2_w_BY_TEXT PAD_M3_w_BY_TEXT PAD_M4_w_BY_TEXT PAD_M5_w_BY_TEXT > 0
 NWT_VDD_VSS_PAD_TEXT = NET AREA RATIO NWT OVER  PWR_M1_w_BY_TEXT PWR_M2_w_BY_TEXT PWR_M3_w_BY_TEXT PWR_M4_w_BY_TEXT PWR_M5_w_BY_TEXT GND_M1_w_BY_TEXT  GND_M2_w_BY_TEXT  GND_M3_w_BY_TEXT  GND_M4_w_BY_TEXT  GND_M5_w_BY_TEXT > 0

#IFDEF CHECK_LATCHUP_BY_TEXT

NWT_IO = NWT_IOPAD NOT ( NWT_VDD_VSS_PAD_TEXT OR NWT_VDD_VSS_PAD_DUMMY )
NWT_IO_TEXT = NWT_PAD_TEXT NOT ( NWT_VDD_VSS_PAD_TEXT OR NWT_VDD_VSS_PAD_DUMMY )
#ELSE
NWT_IO = NWT_IOPAD NOT NWT_VDD_VSS_PAD_DUMMY
#ENDIF

#IFDEF Recommend
NWR.R.7 { @ Its recommended not to connect any terminal of NWROD(N-well under OD resistor) to IO voltage for the leakage c_wrrent concern.(a) Check the connection between the terminal and the pickup of OD/PO in OD2 region (except 5V NW diff(under OD)). (b) Check the terminal is connected to I/O PAD.
    
    NTAP_OD2 = (NTAP_w NOT INTERACT (RWDUMMY_PURE5V INTERACT RPO))  AND OD2 
	PTAP_OD2 = PTAP_w AND OD2
	NSD_OD2 = (NSD_w NOT INTERACT (RWDUMMY_PURE5V INTERACT RPO))  AND OD2
	PSD_OD2 = PSD_w AND OD2 
	ILP1_OD2 = ILP1_w AND OD2
#IFDEF CHECK_LATCHUP_BY_TEXT
	NET AREA RATIO NWT NTAP_OD2 PTAP_OD2 NSD_OD2 PSD_OD2 ILP1_OD2 NWT_IO NWT_IO_TEXT > 0
		[!!AREA(NTAP_OD2) + !!AREA(PTAP_OD2) + !!AREA(NSD_OD2) + !!AREA(PSD_OD2) + !!AREA(ILP1_OD2) + !!AREA(NWT_IO) + !!AREA(NWT_IO_TEXT)]
#ELSE 
	NET AREA RATIO NWT NTAP_OD2 PTAP_OD2 NSD_OD2 PSD_OD2 ILP1_OD2 NWT_IO > 0
		[!!AREA(NTAP_OD2) + !!AREA(PTAP_OD2) + !!AREA(NSD_OD2) + !!AREA(PSD_OD2) + !!AREA(ILP1_OD2) + !!AREA(NWT_IO)]
#ENDIF
}
#ENDIF

NWR.R.3{@ Only one NW inside NWROD is allowed in one OD.
   A = ODWR INTERACT (NWRES AND ODWR)>1
   NWRES INTERACT A
}  

NWR.R.4{@ Only two NPS in NWROD is allowed in one od.
 C = ODWR INTERACT (NP INTERACT NWRES) != 2
 NP INTERACT C
 ODWR NOT INTERACT ( NP INTERACT NWRES)
}

NWR.R.5 { @ ONLY TWO RPO HOLES IN NWROD ARE ALLOWED.
   A = ODWR INTERACT RPONWR_H != 2
   D = ODWR NOT INTERACT RPONWR_H
   RPONWR_H INTERACT (A OR D)
}  

NWR.R.6 { @ For U-shape or S-shape NWROD, both OD and NW must be U-shape or S-shape and the OD edge must be 
    	  @ parallel to the NW edge. DRC can only flag the pattern without OD space while 2 edges of NW 
	  @ [NW space or notch <= 5 um] parallel length > 0 um
  A = (EXT NWRES < 5 OPPOSITE REGION NOTCH) NOT NWRES
  A INSIDE ODWR      
} 

#IFNDEF SubToGround
NWR.R.8 { @ NW resistor is not allowed, if the substrate is not tied to ground
	COPY RNWEL
}
#ENDIF

#IFNDEF 1.8V
#IFDEF 5V
NWR.R.9 { @ RWDUMMY_PURE5V is must for NW resistor of pure 5V
	(RNWEL INTERACT OD2) NOT INTERACT RWDUMMY_PURE5V
}

NWR.R.10 { @ OD2 is must for NW resistor in pure 5V process
    A = RNWEL INTERACT RWDUMMY_PURE5V
	A NOT INTERACT OD2  
}

NWR.E.4 { @ MIN & MAX extension of RWDUMMY_PURE5V beyond RWDMY
	A = RWDMY INTERACT RWDUMMY_PURE5V
	A XOR RWDUMMY_PURE5V
}
#ENDIF
#ENDIF


//NWEL under STI
NWRES_STI = RNWEL NOT INTERACT RPO	// NWEL resistor (UNDER STI)
ODWR_STI  = OD INTERACT NWRES_STI
NPWR_STI  = NP INTERACT NWRES_STI
NWR.E.3 { @ Min. extension of NP to OD (NWEL resistor under STI) 0.18 um
  ENC ODWR_STI NPWR_STI < 0.18 ABUT < 90 SINGULAR REGION
  ODWR_STI NOT NPWR_STI
}


// NT_N
//======


NTN_OD = OD NOT OUTSIDE NTN
NTN_PO = POLY AND NTN
NTN_GATE = NTN_PO AND NTN_OD
NTN_5VNMOS_NLDD2_GATE = (NTN_GATE INSIDE OD2) OUTSIDE NT_N2
NTN_GATE_W = NTN_PO INSIDE EDGE NTN_OD
NTN_GATE_L = NTN_OD INSIDE EDGE NTN_PO
NTN_PO_W   = (NTN_PO INTERACT (CO OR OD)) COIN INSIDE EDGE POLY

NT_N.I.2 {@ only one OD region allowed to be put in an NT_N region
  NTN ENCLOSE OD > 1
}
NT_N.I.3 {@ A P+GATE is not allowed to be put in an NT_N region
  NTN AND GATE_PP
}
NT_N.I.4 {@ A bent poly region is not allowed to put in an NT_N region
  EXT NTN_PO_W < 0.18 ABUT == 90 INTERSECTING ONLY
  INT NTN_PO_W < 0.18 ABUT == 90 INTERSECTING ONLY
  EXT NTN_PO_W < 0.18 ABUT == 135 INTERSECTING ONLY
  INT NTN_PO_W < 0.18 ABUT == 135 INTERSECTING ONLY
}
// NT_N.R.2 is checked by NT_N.I.2
// NT_N.R.3 is checked by NT_N.I.3
// NT_N.R.4 is checked by NT_N.I.4
NT_N.W.1 {@ Minimum dimension of a NT_N region <^NT_N_W_1     
  INT NTN < NT_N_W_1 ABUT < 90 SINGULAR REGION
}

NT_N.W.2.1 {@ Minimum poly gate dimension (channel length) of a 5V blocked NT_N device < ^NT_N_W_2_1
  Z = NTN_GATE_W INSIDE EDGE OD2
  INT Z < NT_N_W_2_1 ABUT < 90 REGION
}
NT_N.W.2.2 {@ Minimum poly gate dimension (channel length) of a 1.8V blocked NT_N device < ^NT_N_W_2_2
  Z = NTN_GATE_W OUTSIDE EDGE OD2
  INT Z < NT_N_W_2_2 ABUT < 90 REGION
}
NT_N.W.3 { @ min OD dimension of 5V blocked Native device >= ^NT_N_W_3
	INT (NTN_GATE AND OD2) < NT_N_W_3 ABUT < 90 SINGULAR REGION 
}


NT_N.S.1 {@ Minimum space between two NT_N regions < ^NT_N_S_1
  EXT NTN < NT_N_S_1 ABUT < 90 SINGULAR REGION
}
NT_N.E.1 {@ Maximum and Minimum extension from NT_N region beyond an NP OD region ^NT_N_E_1
  A = NTN INTERACT NPOD
  B = NPOD INTERACT NTN
  C = SIZE B BY NT_N_E_1
  D = SIZE A BY -NT_N_E_1
  A XOR C
  B XOR D
}

NT_N.E.2 {@ Minimum extension from OD2 edge to NT_N region inside OD2 < 0.86um 
  ENC NTN OD2 < 0.86 ABUT < 90 SINGULAR REGION
  NTN CUT OD2
}
NT_N.C.3 { @ Minimum clearance from NT_N region to OD2 edge < 0.86um
  EXT NTN OD2 < 0.86 ABUT < 90 SINGULAR REGION
}

NT_N.C.1 {@ MInimum clearance from NT_N to OD < ^NT_N_C_1
  EXT OD NTN < NT_N_C_1 ABUT < 90 SINGULAR REGION
  OD CUT NTN    
}

NT_N.C.2 {@ Minimum clearance frome a NT_N region to NWEL/SH_N edge < ^NT_N_C_2
  EXT NTN (NWEL OR HVSHN) < NT_N_C_2 ABUT < 90 SINGULAR REGION
  NTN AND (NWEL OR HVSHN)   
}
NT_N.PO.1 {@ Minimum overlap of a PO region extended into field oxide(endcap) < 0.35
  ENC NTN_OD POLY < 0.35 ABUT < 90 SINGULAR REGION
}
NT_N.E.4 { @ Min and Max extension from NT_N beyond NT_N2 == 0
  A = NTN INTERACT NT_N2
  A XOR NT_N2
}

NT_N.R.6 { @ NT_N2 must be fully inside NT_N
  NT_N2 NOT NTN
}

NT_N.R.7 { @ When N+OD is inside NT_N,NT_N interact NBL is not allowed, except 1.8V Native NMOS Bulk ISO/5V Native NMOS Bulk ISO (w/o NLDD2) in (NBL AND DPW)
  A = NTN ENCLOSE NPOD
  A INTERACT (NBL NOT DPW)
  NTN_5VNMOS_NLDD2_GATE INTERACT (NBL AND DPW)
}
//NT_N.E.3 is checked by NT_N.PO.1

//VTD_N
//=====

VTDN.W.1 { @ Min. width of a VTDN region >= ^VTDN_W_1 um
  INT VTDN < VTDN_W_1 ABUT < 90 SINGULAR REGION
}
VTDN.S.1 { @ Minimum space between two VTDN region >= ^VTDN_S_1 um
    EXT VTDN < VTDN_S_1 ABUT < 90 SINGULAR REGION
}
VTDN.E.3 { @ min extension of VTDN beyond OD >= ^VTDN_E_3
    ENC OD VTDN < VTDN_E_3 ABUT<90 SINGULAR REGION
}
VTDN.C.1 { @ min clearance between VTDN and OD >= ^VTDN_C_1
    EXT VTDN OD < VTDN_C_1 ABUT<90 SINGULAR REGION
}

VTDN.E.1_NA29G3_dep_NBL { @ min and max extension of VTDN beyond OD in channel width direction ==^VTDN_E_1_NA29G3_dep_NBL
	A = VTDN INTERACT NA29G3_dep_NBL_GATE
	B = A NOT TOUCH EDGE (A INSIDE EDGE NA29G3_dep_NBL_CH)
	C = EXPAND EDGE B INSIDE BY VTDN_E_1_NA29G3_dep_NBL
	C NOT TOUCH NA29G3_dep_NBL_CH
}
VTDN.E.2_NA29G3_dep_NBL { @ min and max extension of VTDN beyond SH_P in channel length direction ==^VTDN_E_2_NA29G3_dep_NBL
	A = VTDN INTERACT NA29G3_dep_NBL_GATE
	B = A TOUCH EDGE (A INSIDE EDGE NA29G3_dep_NBL_CH)
	C = EXPAND EDGE B INSIDE BY VTDN_E_2_NA29G3_dep_NBL
	C NOT TOUCH SH_P
}
VTDN.E.1_NA45G3_DEP_GB { @ min and max extension of VTDN beyond OD in channel width direction ==^VTDN_E_1_NA45G3_DEP_GB
	A = VTDN INTERACT NA45G3_DEP_GB_GATE
	B = A NOT TOUCH EDGE (A INSIDE EDGE NA45G3_DEP_GB_CH)
	C = EXPAND EDGE B INSIDE BY VTDN_E_1_NA45G3_DEP_GB
	C NOT TOUCH NA45G3_DEP_GB_CH
}
VTDN.E.4_NA45G3_DEP_GB { @ min and max extension of VTDN beyond HVPW in channel length direction ==^VTDN_E_4_NA45G3_DEP_GB
	A = VTDN INTERACT NA45G3_DEP_GB_GATE
	B = A TOUCH EDGE (A INSIDE EDGE NA45G3_DEP_GB_CH)
	C = EXPAND EDGE B INSIDE BY VTDN_E_4_NA45G3_DEP_GB
	C NOT TOUCH HVPW_drawing
}



// NT_N checks
//=============
NPOD_NLVT = NPOD AND NLVT
PPOD_NOT_NLVT = PPOD NOT NLVT
LVT_GATE = ( POLY AND OD ) AND NLVT
NLVT_LVT_GATE = NLVT INTERACT LVT_GATE
NLVT_RING = DONUT NLVT 
NLVT_REGION = NLVT NOT NLVT_RING
P_LVT = ((PPOD NOT ALL_HVPMOS_OD) NOT INTERACT DPW) AND NLVT_REGION 
P_HOLE_LVT = ( HOLES P_LVT ) NOT P_LVT 
P_ISO_RING_LVT0 = P_LVT TOUCH P_HOLE_LVT
P_ISO_HOLE_LVT0 = (( HOLES P_ISO_RING_LVT0 ) NOT P_ISO_RING_LVT0 ) INTERACT NLVT
P_ISO_RING_LVT1 = DONUT P_ISO_RING_LVT0
P_ISO_HOLE_LVT1 = ((( HOLES P_ISO_RING_LVT1 ) NOT P_ISO_RING_LVT1 ) INTERACT NLVT ) ENCLOSE LVT_GATE
NLVT_ISO1 = ((NLVT AND NBL) INTERACT DPW) NOT LV_ACT
NLVT_ISO_H = (HOLES NLVT_ISO1 INNER) NOT NLVT_ISO1 
NLVT_ISO = NLVT_ISO1 TOUCH NLVT_ISO_H
NLVT_ISO_ALL = (HOLES NLVT_ISO) OR NLVT_ISO
NLVT.W.1 {@ Minimum width of a NLVT region >= ^NLVT_W_1 um
    A = INT NLVT < NLVT_W_1  SINGULAR ABUT<90 REGION
    B = IOLDNMOS_GATE OR (MTP_2T2C AND ((MCEL OR NLVT)OR H18NWDMY))
    A NOT INTERACT B  
}
NLVT.S.1 {@ Minimum space between two NLVT regions >= ^NLVT_S_1 um
    A = EXT NLVT < NLVT_S_1 ABUT<90 SINGULAR REGION
    B = IOLDNMOS_GATE OR (MTP_2T2C AND ((MCEL OR NLVT)OR H18NWDMY))
    A NOT INTERACT B
}
NLVT.C.1 {@ Minimum clearance between NLVT region and Nwell edge >= ^NLVT_C_1 um,Butted is allowed. 
    EXT NLVT NWEL < NLVT_C_1 SINGULAR ABUT>0 <90 REGION
    NLVT AND NWEL    
}
NLVT.C.2 {@ MInimum clearance between NLVT outside NBL and HV >= ^NLVT_C_2 um,Butted is allowed.
    A = NLVT NOT NBL 
    EXT A HVDMY < NLVT_C_2 SINGULAR ABUT >0 <90 REGION
}
NLVT.C.3 {@ MInimum clearance between NLVT and OD outside NLVT>= ^NLVT_C_3 um
    A = EXT OD NLVT < NLVT_C_3 SINGULAR ABUT<90 REGION
    B = OD CUT NLVT    
    C = IOLDNMOS_GATE OR (MTP_2T2C AND ((MCEL OR NLVT)OR H18NWDMY))
    (A OR B) NOT INTERACT C
}
NLVT.E.1 {@ Minimum extension from NLVT region beyond OD region>= ^NLVT_E_1 um
    A = NLVT NOT (MTP_2T2C AND MCEL)
    ENC OD A < NLVT_E_1 SINGULAR ABUT<90 REGION
}


NLVT.R.1 {@ NLVT has to be fully inside OD2
    NLVT NOT OD2
}
NLVT.R.2 {@ NVLT inside OD is not allowed
    NLVT INSIDE OD
}
NLVT.R.3 {@ OD cut NLVT is not allowed.
    A = OD CUT NLVT
    A NOT INTERACT IOLDNMOS_GATE
}
NLVT.R.4 {@ NVLT butted OD is not allowed.
    NLVT TOUCH OD
}
NLVT.R.6 {@ A P+ Poly GATE is not allowed to be put in an NLVT region
    ( ALL_GATE AND PP) INTERACT NLVT
}
NLVT.R.7 {@ bent Poly region is not allowed to be put in an NLVT region.Exclude poly not interact {CO OR OD}
    NLVT_PO = (POLY  AND NLVT) INTERACT (CO OR OD)
    A = NOT RECTANGLE NLVT_PO
    B = IOLDNMOS_GATE OR (MTP_2T2C AND MCEL)
    A NOT INTERACT B 
}


// OD2 CHECKS
//===============
DACTG = DACT OR ALL_GATE

OD2.W.1 { @ Minimum width of OD2 >= ^OD2_W_1 um
  INT OD2 < OD2_W_1 ABUT < 90 SINGULAR REGION
}


OD2.E.1 { @ Minimum extension of an OD2 region beyond an {active OD OR Gate} region>=0.32um
  CHECK_EDGE = ENC [DACTG] OD2 < 0.32 ABUT < 90 SINGULAR 
  CHECK_EDGE NOT COIN OUTSIDE EDGE DSTP 
  OD2 INSIDE DACTG		// OD2 totally inside OD
}
#IFNDEF 5V
#IFDEF 1.8V
OD2.S.1 { @ For two well process (1.8V/3.3V C018G), minimum space between two OD2
          @ regions. Merge if the space is less than 0.45um.>=0.45um
  EXT OD2 < 0.45 ABUT < 90 SINGULAR REGION
}
#ENDIF
#ENDIF
#IFDEF 1.5V
OD2.S.1.LV { @ For four well process 1.5V/3.3V C018LV, 1.5V/2.5V C018LV, 1.8V/3.3V
        	@ C018LP, 1.8V/5.0V C018G/LP, minimum space between two OD2 regions.
                @ Merge if the space is less than 0.86um.
  EXT OD2 < 0.86 SINGULAR ABUT <90 REGION
}
#ENDIF
#IFDEF 5V
OD2.S.1.5V { @ For four well process 1.5V/3.3V C018LV, 1.5V/2.5V C018LV, 1.8V/3.3V
        	@ C018LP, 1.8V/5.0V C018G/LP, minimum space between two OD2 regions.
                @ Merge if the space is less than 0.86um.
  EXT OD2 < 0.86 SINGULAR ABUT <90 REGION
}
#ENDIF
#IFDEF LP
OD2.S.1.LP { @ For four well process 1.5V/3.3V C018LV, 1.5V/2.5V C018LV, 1.8V/3.3V
        	@ C018LP, 1.8V/5.0V C018G/LP, minimum space between two OD2 regions.
                @ Merge if the space is less than 0.86um.
  EXT OD2 < 0.86 SINGULAR ABUT <90 REGION
}
#ENDIF

OD2.C.1 { @ Minimum clearance between OD region and an OD2 region>=0.32um
  EXT OD2 NACT < 0.32 SINGULAR ABUT <90 REGION
  EXT OD2 PACT < 0.32 SINGULAR ABUT <90 REGION
}
OD2.C.2 { @ Minimum clearance between OD2 region and 1.8V transistor gate
          @ poly>= 0.4um
  A = OD2 INSIDE EDGE DACT
  EXT A GATE_W < 0.40 ABUT <90 REGION
}
OD2.C.3 { @ Minimum clearance from OD2 to PSUB >= ^OD2_C_3
  EXT OD2 PSUB < OD2_C_3 ABUT < 90 SINGULAR REGION
}
OD2.E.2 { @ Minimum extension of OD2 region beyond 5.0V transistor
          @ gate poly in the source/drain OD direction OD2 cut poly GATE is not
          @ allowed. >=0.4um
  ENC GATE_W OD2_BEDGE < 0.40 ABUT < 90 REGION 
  ALL_GATE CUT OD2    
}
#IFDEF 1.5V
OD2.E.4.LV { @ For four well process 1.5V/3.3V C018LV, 1.5V/2.5V C018LV, 1.8V/3.3V
             @ C018LP, 1.8V/5.0V C018G/LP, minimum extension of an OD2 region
             @ beyond an NW region>=0.86um. Align if space is less than 0.86um
  ENC NWEL OD2 < 0.86 ABUT>0<90 SINGULAR REGION
}
OD2.C.4.LV { @ For four well process 1.5V/3.3V C018LV, 1.5V/2.5V C018LV, 1.8V/3.3V
             @ C018LP, 1.8V/5.0V C018G/LP>=0.86um, minimum clearance between an OD2 region
             @ and an NW region. Align if space is less than 0.86um
  EXT NWEL OD2 < 0.86 ABUT>0<90 SINGULAR REGION
  ENC OD2 NWEL < 0.86 ABUT>0<90 SINGULAR REGION
}
OD2.O.1.LV { @ For four well process 1.5V/3.3V C018LV, 1.5V/2.5V C018LV, 1.8V/3.3V
             @ C018LP, 1.8V/5.0V C018G/LP>=0.86um minimum overlap between OD2 and NWEL >= 0.86um
  INT NWEL OD2 < 0.86 ABUT>0<90 SINGULAR MEASURE COINCIDENT REGION
}
#ENDIF
#IFDEF 5V
OD2.E.4.5V { @ For four well process 1.5V/3.3V C018LV, 1.5V/2.5V C018LV, 1.8V/3.3V
             @ C018LP, 1.8V/5.0V C018G/LP, minimum extension of an OD2 region
             @ beyond an NW region>=0.86um. Align if space is less than 0.86um
  ENC NWEL OD2 < 0.86 ABUT>0<90 SINGULAR REGION
}
OD2.E.5 { @ Minimum extension of OD2 region beyond VARDMY region >= ^OD2_E_5
  ENC VARDMY OD2 < OD2_E_5 ABUT < 90 SINGULAR REGION
}
OD2.C.4.5V { @ For four well process 1.5V/3.3V C018LV, 1.5V/2.5V C018LV, 1.8V/3.3V
             @ C018LP, 1.8V/5.0V C018G/LP>=0.86um, minimum clearance between an OD2 region
             @ and an NW region. Align if space is less than 0.86um
  EXT NWEL OD2 < 0.86 ABUT>0<90 SINGULAR REGION
  ENC OD2 NWEL < 0.86 ABUT>0<90 SINGULAR REGION
}
OD2.O.1.5V { @ For four well process 1.5V/3.3V C018LV, 1.5V/2.5V C018LV, 1.8V/3.3V
             @ C018LP, 1.8V/5.0V C018G/LP>=0.86um minimum overlap between OD2 and NWEL >= 0.86um
  INT NWEL OD2 < 0.86 ABUT>0<90 SINGULAR MEASURE COINCIDENT REGION
}
OD2.O.2 { @ Minimum overlap between (NP NOT NW) and OD2 (butted is allowed) >= ^OD2_O_2
  A = NP NOT NWEL
  INT A OD2 < OD2_O_2 ABUT >0<90 SINGULAR REGION
}
OD2.O.3 { @ Minimum overlap between (PP AND NW) and OD2 (butted is allowed) >= ^OD2_O_3
  A = PP AND NWEL
  INT A OD2 < OD2_O_3 ABUT >0<90 SINGULAR REGION
}
OD2.R.1 { @ {(DMP2V OR DMN2V) CUT OD2} is not allowed
  DMP2V CUT OD2
  DMN2V CUT OD2
}
#ENDIF
#IFDEF LP
OD2.E.4.LP { @ For four well process 1.5V/3.3V C018LV, 1.5V/2.5V C018LV, 1.8V/3.3V
             @ C018LP, 1.8V/5.0V C018G/LP, minimum extension of an OD2 region
             @ beyond an NW region>=0.86um. Align if space is less than 0.86um
  ENC NWEL OD2 < 0.86 ABUT>0<90 SINGULAR REGION
}
OD2.C.4.LP { @ For four well process 1.5V/3.3V C018LV, 1.5V/2.5V C018LV, 1.8V/3.3V
             @ C018LP, 1.8V/5.0V C018G/LP>=0.86um, minimum clearance between an OD2 region
             @ and an NW region. Align if space is less than 0.86um
  EXT NWEL OD2 < 0.86 ABUT>0<90 SINGULAR REGION
  ENC OD2 NWEL < 0.86 ABUT>0<90 SINGULAR REGION
}
OD2.O.1.LP { @ For four well process 1.5V/3.3V C018LV, 1.5V/2.5V C018LV, 1.8V/3.3V
             @ C018LP, 1.8V/5.0V C018G/LP>=0.86um minimum overlap between OD2 and NWEL >= 0.86um
  INT NWEL OD2 < 0.86 ABUT>0<90 SINGULAR MEASURE COINCIDENT REGION
}
#ENDIF





//=========HVPB (PBODY) RULES CHECK================
HVPB.W.1 {@ Minimum dimension of a HVPB region.	>= ^HVPB_W_1 um,except
     INT HVPB < HVPB_W_1 ABUT < 90 SINGULAR REGION
}
HVPB.S.1 { @ Minimum space of HVPB regions>= ^HVPB_S_1
     EXT HVPB < HVPB_S_1 ABUT < 90 SINGULAR REGION
}
      
HVPB.R.1 {@ OD not PO is not allowed to cut HVPB,i.e.OD not PO has to be completely inside HVPB
     ( OD NOT POLY ) CUT HVPB 
}

HVPB.R.2 { @ HVPB must fully inside HVDMY (butted is not allowed.)
      HVPB NOT HVDMY
	  HVPB TOUCH HVDMY
}

HVPB.R.3 { @ HVPB must be rectangle for HV devices
      A = HVPB INTERACT HV_DEVICES
      NOT RECTANGLE A
}
CONNECT HVPB
HVPB.R.4{ @ HVPB interact different potential gate poly is not allowed 
     INTERACT HVPB POLYc BY NET != 1
}

HVPB.E.1_NLD6G5_DE_FULLY_ISO { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD6G5_DE_FULLY_ISO
	A = HVPB INTERACT NLD6G5_DE_FULLY_ISO_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD6G5_DE_FULLY_ISO_CH)
    C = NDD INTERACT NLD6G5_DE_FULLY_ISO_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD6G5_SA_FULLY_ISO { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD6G5_SA_FULLY_ISO
	A = HVPB INTERACT NLD6G5_SA_FULLY_ISO_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD6G5_SA_FULLY_ISO_CH)
    C = NDD INTERACT NLD6G5_SA_FULLY_ISO_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD9G5 { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD9G5
	A = HVPB INTERACT NLD9G5_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD9G5_CH)
    C = NDD INTERACT NLD9G5_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD9G5_FULLY_ISO { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD9G5_FULLY_ISO
	A = HVPB INTERACT NLD9G5_FULLY_ISO_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD9G5_FULLY_ISO_CH)
    C = NDD INTERACT NLD9G5_FULLY_ISO_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD12G5 { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD12G5
	A = HVPB INTERACT NLD12G5_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD12G5_CH)
    C = NDD INTERACT NLD12G5_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD12G5_FULLY_ISO { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD12G5_FULLY_ISO
	A = HVPB INTERACT NLD12G5_FULLY_ISO_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD12G5_FULLY_ISO_CH)
    C = NDD INTERACT NLD12G5_FULLY_ISO_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD16G5 { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD16G5
	A = HVPB INTERACT NLD16G5_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD16G5_CH)
    C = NDD INTERACT NLD16G5_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD16G5_FULLY_ISO { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD16G5_FULLY_ISO
	A = HVPB INTERACT NLD16G5_FULLY_ISO_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD16G5_FULLY_ISO_CH)
    C = NDD INTERACT NLD16G5_FULLY_ISO_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD20G5 { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD20G5
	A = HVPB INTERACT NLD20G5_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD20G5_CH)
    C = NDD INTERACT NLD20G5_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD20G5_FULLY_ISO { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD20G5_FULLY_ISO
	A = HVPB INTERACT NLD20G5_FULLY_ISO_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD20G5_FULLY_ISO_CH)
    C = NDD INTERACT NLD20G5_FULLY_ISO_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD24G5_FULLY_ISO { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD24G5_FULLY_ISO
	A = HVPB INTERACT NLD24G5_FULLY_ISO_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD24G5_FULLY_ISO_CH)
    C = NDD INTERACT NLD24G5_FULLY_ISO_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD24G5_ISO_SWITCH { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD24G5_ISO_SWITCH
	A = HVPB INTERACT NLD24G5_ISO_SWITCH_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD24G5_ISO_SWITCH_CH)
    C = NDD INTERACT NLD24G5_ISO_SWITCH_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD5G5_ISO_SWITCH { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD5G5_ISO_SWITCH
	A = HVPB INTERACT NLD5G5_ISO_SWITCH_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD5G5_ISO_SWITCH_CH)
    C = NDD INTERACT NLD5G5_ISO_SWITCH_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD6G5_SA { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD6G5_SA
	A = HVPB INTERACT NLD6G5_SA_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD6G5_SA_CH)
    C = NDD INTERACT NLD6G5_SA_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD6G5_DE { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD6G5_DE
	A = HVPB INTERACT NLD6G5_DE_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD6G5_DE_CH)
    C = NDD INTERACT NLD6G5_DE_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD24G5 { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD24G5
	A = HVPB INTERACT NLD24G5_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD24G5_CH)
    C = NDD INTERACT NLD24G5_CH
	B NOT TOUCH EDGE C	
}
HVPB.E.1_NLD24G5_SWITCH { @ min and max extension of NDD beyond HVPB in channel width direction == ^ HVPB_E_1_NLD24G5_SWITCH
	A = HVPB INTERACT NLD24G5_SWITCH_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD24G5_SWITCH_CH)
    C = NDD INTERACT NLD24G5_SWITCH_CH
	B NOT TOUCH EDGE C	
}

HVPB.E.2_NLD45G5_GB { @ min and max extension of HVPB beyond (Channel OD OR Bulk OD) in channel width direction == ^ HVPB_E_2_NLD45G5_GB
	A = HVPB INTERACT NLD45G5_GB_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD45G5_GB_CH)
    C = EXPAND EDGE B INSIDE BY HVPB_E_2_NLD45G5_GB
	C NOT TOUCH NLD45G5_GB_CH	
}

HVPB.E.2_NLD36G5_GB { @ min and max extension of HVPB beyond (Channel OD OR Bulk OD) in channel width direction == ^ HVPB_E_2_NLD36G5_GB
	A = HVPB INTERACT NLD36G5_GB_CH
	B = A NOT TOUCH EDGE (A INSIDE EDGE NLD36G5_GB_CH)
    C = EXPAND EDGE B INSIDE BY HVPB_E_2_NLD36G5_GB
	C NOT TOUCH NLD36G5_GB_CH	
}


HVPB.E.3_PBSHNNBL { @ min and max extension of HVPB beyond P+ OD == ^ HVPB_E_3_PBSHNNBL
    A = SIZE DIO_PBSHNNBL_M BY HVPB_E_3_PBSHNNBL
    B = HVPB INTERACT DIO_PBSHNNBL_M
	B XOR A
}

HVPB.O.1 { @ min and max overlap of HVPB and {(GATE SIZING 0.1) AND PO}  == ^HVPB_O_1
    A = (SIZE (POLY AND OD) BY 0.1) AND POLY
    INT A HVPB < HVPB_O_1 ABUT <90 SINGULAR REGION
    B = A AND HVPB
    SIZE B BY HVPB_O_1/2 UNDEROVER
}

HVPB.C.1_PBSHNNBL { @ min and max clearance of HVPB to outside N+ pickup ring for HV diode ==^HVPB_C_1_PBSHNNBL
   A = HVPB INTERACT DIO_PBSHNNBL_M
   B = SIZE A BY HVPB_C_1_PBSHNNBL
   B XOR DIO_PBSHNNBL_H
}


// POLY checks
//=============
//PO.W.1A is checked by PO.W.3
//PO.W.2A is checked by PO.W.3
PO.W.3 { @ Min. POLY width for interconnect, 1.8V NMOS, 1.8V PMOS < 0.18
  INT POLY < 0.18 ABUT < 90 SINGULAR REGION
}


#IFDEF 3.3V
PO.W.1_3.3V { @ Min. POLY gate length 3.3V pmos < 0.30
  INT HV_PGATE_W < 0.30 ABUT < 90 REGION
}
PO.W.2_3.3V { @ Min. POLY gate length 3.3v nmos < 0.35
  INT HV_NGATE_W < 0.35 ABUT < 90 REGION
}
#ENDIF
#IFDEF 2.5V
PO.W.1_2.5V { @ Min. POLY gate length 2.5V pmos < 0.26
  INT HV_PGATE_W < 0.26 ABUT < 90 REGION
}
PO.W.2_2.5V { @ Min. POLY gate length 2.5v nmos < 0.26
  INT HV_NGATE_W < 0.26 ABUT < 90 REGION
}
#ENDIF
#IFDEF 5V
PO.W.1_5V { @ Min. POLY gate length 5.0V pmos < 0.5
  INT HV_PGATE_W < 0.5 ABUT < 90 REGION
}
PO.W.2_5V { @ Min. POLY gate length 5.0v nmos < 0.6
  INT HV_NGATE_W < 0.6 ABUT < 90 REGION
}
PO.W.2B_5V { @ Min. POLY gate length for 5.0v depletion nmos < 2.0
  A = HV_NGATE_W INSIDE EDGE VTDN
  INT A < 2.0 ABUT < 90 REGION
}

#ENDIF

PO.S.1 { @ Min. POLY space on OD with contact < 0.375
  Y = ALL_GATE COINCIDENT OUTSIDE EDGE ASD1
  EXT Y < 0.375 ABUT < 90 REGION
}
PO.S.2_PO.S.3 { @ Min. POLY space: on OD w/o contact and interconnect < 0.25
  EXT POLY < 0.25 ABUT < 90  SINGULAR REGION
}
PO.C.1 { @ Min. POLY on field space to active < 0.1
  EXT POLY OD < 0.1 ABUT < 89.5 SINGULAR REGION
}
PO.C.2 { @ Min. OD overhang gate < ^PO_C_2
  ENC POLY OD < PO_C_2 ABUT < 89.5 SINGULAR REGION
}

GATE_5V = ALL_GATE AND OD2
PO_5V = POLY INTERACT GATE_5V
OD_5V = (NW_5V AND OD) OR ((OD INTERACT GATE_5V) NOT NWEL)
#IFDEF 5V
PO.C.3 { @ Min. clearance for an (OD not OD2) region to an 5V PO on field oxide >= ^PO_C_3 
	A = OD NOT OD2
	B = PO_5V NOT OD
	EXT A B < PO_C_3 ABUT < 90 SINGULAR REGION 
}
PO.C.4 { @ Min. clearance from an (5V OD not OD2) region to an PO on field oxide >= ^PO_C_4
	A = OD_5V NOT OD2
	EXT A POLY_ISO < PO_C_4 ABUT > 0 < 90 SINGULAR REGION 
	B = EXT [A] POLY_ISO < 0.001 ABUT == 0
    C = EXPAND EDGE B INSIDE BY 0.001
    C NOT INTERACT ALL_GATE
}
#ENDIF

PO.O.1 { @ Min. POLY overhang active < 0.22
  A = POLY NOT INTERACT PA29G5_BL_GATE
  ENC OD A < 0.22 ABUT < 89.5 SINGULAR REGION
}

PO.O.2 { @ min overlap of a POLY region extended into fox for NMOS native device >= 0.35
  ENC NTN_OD POLY < 0.35 ABUT < 89.5 SINGULAR REGION
}
#IFNDEF MIX_MODE

PO.R.1A { @ 90 degree gate not allowed/L and U shape gate are not allowed
      // 0.18 value is arbitrary, note the angle
  X = (HVBJT_C_H OR PNP_PB_OD) OR DIO_ZENER_NBL_M
  A = MTP_2T2C AND MCEL 
  GATE_W_1 = (((POLY INTERACT ALL_GATE) NOT A) NOT INTERACT X) INSIDE EDGE OD
  EXT GATE_W_1  < 0.18 ABUT == 90 INTERSECTING ONLY
  INT GATE_W_1  < 0.18 ABUT == 90 INTERSECTING ONLY
}
#ENDIF



PO.R.1B { @ 45 degree 1.8V gate min. length < 0.21
  INT LVGT < 0.21 ANGLED == 2 OPPOSITE REGION

}
PO.R.2 { @ Max. POLY length between contacts when PO width less than 0.24um > ^PO_R_2
  LONG_PO = AREA ILP1 > 0.18*PO_R_2
  CHECK_PO = LONG_PO INTERACT CO
  CHECK_CO = CO INTERACT CHECK_PO
  CO_A = SIZE CHECK_CO BY PO_R_2 / 2 INSIDE OF CHECK_PO STEP 0.25 
  PO_A = CHECK_PO INTERACT CO_A == 1
  PO_B = CHECK_PO INTERACT CO_A > 1
  CO_B = CO_A INTERACT PO_A
  CO_C = SIZE CO_B BY PO_R_2 / 2 INSIDE OF PO_A STEP 0.25 
  BAD = (PO_A NOT CO_C) OR (PO_B NOT CO_A)
  BAD_EDGE = BAD COIN INSIDE EDGE POLY
  ERROR = INT BAD_EDGE <= 0.24 ABUT < 90 REGION
  CHECK_PO INTERACT ERROR
}
PO.R.6 { @ POLY region is not allowed used for 1.8/5V native NMOS and 5V LVT N/PMOS and 5V NGD and 5V FGD interconnection
     A = ALL_GATE NOT HVDMY
     B = A INTERACT (((NTN OR PCH5_LVT_G) OR NCH5_LVT_G) OR FGDDMY)
     POLY INTERACT B >1 
}

GATEw = STAMP ALL_GATE BY ILP1_w
OD_ALL_w = (((PTAP_w OR NTAP_w) OR PSD_w) OR NSD_w) NOT POLYi
CONNECT OD_ALL_w PTAP_w
CONNECT OD_ALL_w NTAP_w
CONNECT OD_ALL_w NSD_w
CONNECT OD_ALL_w PSD_w
NTAP_w_pre =(NTAP_w NOT (NPOD AND (ACTIVE_HVNMOS OR IOLDNMOS_OD))) NOT POLYi
NSD_w_pre = (NSD_w OR (NPOD AND (ACTIVE_HVNMOS OR IOLDNMOS_OD))) NOT POLYi
PTAP_w_pre =(PTAP_w NOT (PPOD AND ACTIVE_HVPMOS)) NOT POLYi
PSD_w_pre = (PSD_w OR (PPOD AND ACTIVE_HVPMOS)) NOT POLYi

NSD_w_g = STAMP NSD_w_pre BY OD_ALL_w 
PSD_w_g = STAMP PSD_w_pre BY OD_ALL_w
NTAP_w_g = STAMP NTAP_w_pre BY OD_ALL_w
PTAP_w_g = STAMP PTAP_w_pre BY OD_ALL_w

//get all floating gates
Float_GATE = NET AREA RATIO GATEw PTAP_w_g NTAP_w_g PSD_w_g NSD_w_g CB_w UBMn_w UBMd_w CO_w > 0 
	[!AREA(PTAP_w_g)*!AREA(NTAP_w_g)*!AREA(PSD_w_g)*!AREA(NSD_w_g)*!AREA(CB_w)*!AREA(UBMn_w)*!AREA(UBMd_w)+!AREA(CO_w)]
//get all floating source/drain
Float_NSD = NET AREA RATIO NSD_w_g PSD_w_g GATEw PTAP_w_g NTAP_w_g CB_w UBMn_w UBMd_w > 0
	[~(COUNT(NSD_w_g)-1)*!AREA(PSD_w_g)*!AREA(GATEw)*!AREA(PTAP_w_g)*!AREA(NTAP_w_g)*!AREA(CB_w)*!AREA(UBMn_w)*!AREA(UBMd_w)]
Float_PSD = NET AREA RATIO PSD_w_g NSD_w_g GATEw PTAP_w_g NTAP_w_g CB_w UBMn_w UBMd_w > 0
	[~(COUNT(PSD_w_g)-1)*!AREA(NSD_w_g)*!AREA(GATEw)*!AREA(PTAP_w_g)*!AREA(NTAP_w_g)*!AREA(CB_w)*!AREA(UBMn_w)*!AREA(UBMd_w)]

//not floating source/drain
effective_NSD = NSD_w_g NOT Float_NSD
effective_PSD = PSD_w_g NOT Float_PSD

Float_NSD_a = Float_NSD NOT ((Float_NSD OR ALL_GATE) INTERACT effective_NSD >= 2 BY NET)
Float_PSD_a = Float_PSD NOT ((Float_PSD OR ALL_GATE) INTERACT effective_PSD >= 2 BY NET)

Float_GATE_check_pre = Float_GATE NOT INTERACT (Float_NSD_a OR Float_PSD_a)
//For PA45G5_NBL & PA29G5_NBL 
OD_STI_A = (ALL_HVPMOS_OD INTERACT (PA45G5_BL_GB_GATE OR PA36G5_BL_GB_GATE)) NOT (HVSHN OR (PPOD NOT POLY))
OD_STI_B = RPO INTERACT ALL_HVMOS_OD
Float_GATE_check = (((ALL_GATE OR OD_STI_A) OR OD_STI_B) OR IOLDNMOS_region) INTERACT Float_GATE_check_pre

#IFDEF FULL_CHIP
PO.R.4 { @ It is prohibited for Floating Gate if the effective so_wrce/drain is not connected together 
  Float_GATE_check INTERACT NSD_w_g > 1 BY NET
  Float_GATE_check INTERACT PSD_w_g > 1 BY NET
}
#ENDIF


// HVPO CHECKS
//=============




HVPO.W.1_ZENER_NBL { @ min and max width of PO for Zener Diode ==^HVPO_W_1_ZENER_NBL
   A = POLY INTERACT DIO_ZENER_NBL_M
   INT A < HVPO_W_1_ZENER_NBL ABUT < 90 SINGULAR REGION
   SIZE A BY HVPO_W_1_ZENER_NBL/2 UNDEROVER
}
HVPO.S.5_NLD6G5_DE_FULLY_ISO { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD6G5_DE_FULLY_ISO
   A = NLD6G5_DE_FULLY_ISO_GATE NOT INSIDE EDGE NLD6G5_DE_FULLY_ISO_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD6G5_DE_FULLY_ISO_GATE OR B
   EXT C < HVPO_S_5_NLD6G5_DE_FULLY_ISO ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD6G5_DE_FULLY_ISO/2 OVERUNDER
   NLD6G5_DE_FULLY_ISO_S INTERACT D != 1
}
HVPO.S.5_NLD6G5_SA_FULLY_ISO { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD6G5_SA_FULLY_ISO
   A = NLD6G5_SA_FULLY_ISO_GATE NOT INSIDE EDGE NLD6G5_SA_FULLY_ISO_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD6G5_SA_FULLY_ISO_GATE OR B
   EXT C < HVPO_S_5_NLD6G5_SA_FULLY_ISO ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD6G5_SA_FULLY_ISO/2 OVERUNDER
   NLD6G5_SA_FULLY_ISO_S INTERACT D != 1
}
HVPO.S.5_NLD9G5 { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD9G5
   A = NLD9G5_GATE NOT INSIDE EDGE NLD9G5_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD9G5_GATE OR B
   EXT C < HVPO_S_5_NLD9G5 ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD9G5/2 OVERUNDER
   NLD9G5_S INTERACT D != 1
}
HVPO.S.5_NLD9G5_FULLY_ISO { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD9G5_FULLY_ISO
   A = NLD9G5_FULLY_ISO_GATE NOT INSIDE EDGE NLD9G5_FULLY_ISO_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD9G5_FULLY_ISO_GATE OR B
   EXT C < HVPO_S_5_NLD9G5_FULLY_ISO ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD9G5_FULLY_ISO/2 OVERUNDER
   NLD9G5_FULLY_ISO_S INTERACT D != 1
}
HVPO.S.5_NLD12G5 { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD12G5
   A = NLD12G5_GATE NOT INSIDE EDGE NLD12G5_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD12G5_GATE OR B
   EXT C < HVPO_S_5_NLD12G5 ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD12G5/2 OVERUNDER
   NLD12G5_S INTERACT D != 1
}
HVPO.S.5_NLD12G5_FULLY_ISO { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD12G5_FULLY_ISO
   A = NLD12G5_FULLY_ISO_GATE NOT INSIDE EDGE NLD12G5_FULLY_ISO_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD12G5_FULLY_ISO_GATE OR B
   EXT C < HVPO_S_5_NLD12G5_FULLY_ISO ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD12G5_FULLY_ISO/2 OVERUNDER
   NLD12G5_FULLY_ISO_S INTERACT D != 1
}
HVPO.S.5_NLD16G5 { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD16G5
   A = NLD16G5_GATE NOT INSIDE EDGE NLD16G5_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD16G5_GATE OR B
   EXT C < HVPO_S_5_NLD16G5 ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD16G5/2 OVERUNDER
   NLD16G5_S INTERACT D != 1
}
HVPO.S.5_NLD16G5_FULLY_ISO { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD16G5_FULLY_ISO
   A = NLD16G5_FULLY_ISO_GATE NOT INSIDE EDGE NLD16G5_FULLY_ISO_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD16G5_FULLY_ISO_GATE OR B
   EXT C < HVPO_S_5_NLD16G5_FULLY_ISO ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD16G5_FULLY_ISO/2 OVERUNDER
   NLD16G5_FULLY_ISO_S INTERACT D != 1
}
HVPO.S.5_NLD20G5 { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD20G5
   A = NLD20G5_GATE NOT INSIDE EDGE NLD20G5_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD20G5_GATE OR B
   EXT C < HVPO_S_5_NLD20G5 ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD20G5/2 OVERUNDER
   NLD20G5_S INTERACT D != 1
}
HVPO.S.5_NLD20G5_FULLY_ISO { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD20G5_FULLY_ISO
   A = NLD20G5_FULLY_ISO_GATE NOT INSIDE EDGE NLD20G5_FULLY_ISO_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD20G5_FULLY_ISO_GATE OR B
   EXT C < HVPO_S_5_NLD20G5_FULLY_ISO ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD20G5_FULLY_ISO/2 OVERUNDER
   NLD20G5_FULLY_ISO_S INTERACT D != 1
}
HVPO.S.5_NLD24G5_FULLY_ISO { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD24G5_FULLY_ISO
   A = NLD24G5_FULLY_ISO_GATE NOT INSIDE EDGE NLD24G5_FULLY_ISO_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD24G5_FULLY_ISO_GATE OR B
   EXT C < HVPO_S_5_NLD24G5_FULLY_ISO ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD24G5_FULLY_ISO/2 OVERUNDER
   NLD24G5_FULLY_ISO_S INTERACT D != 1
}
HVPO.S.5_NLD24G5_ISO_SWITCH { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD24G5_ISO_SWITCH
   A = NLD24G5_ISO_SWITCH_GATE NOT INSIDE EDGE NLD24G5_ISO_SWITCH_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD24G5_ISO_SWITCH_GATE OR B
   EXT C < HVPO_S_5_NLD24G5_ISO_SWITCH ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD24G5_ISO_SWITCH/2 OVERUNDER
   NLD24G5_ISO_SWITCH_S INTERACT D != 1
}
HVPO.S.5_NLD36G5_GB { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD36G5_GB
   A = NLD36G5_GB_GATE NOT INSIDE EDGE NLD36G5_GB_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD36G5_GB_GATE OR B
   EXT C < HVPO_S_5_NLD36G5_GB ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD36G5_GB/2 OVERUNDER
   NLD36G5_GB_S INTERACT D != 1
}
HVPO.S.5_NLD45G5_GB { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD45G5_GB
   A = NLD45G5_GB_GATE NOT INSIDE EDGE NLD45G5_GB_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD45G5_GB_GATE OR B
   EXT C < HVPO_S_5_NLD45G5_GB ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD45G5_GB/2 OVERUNDER
   NLD45G5_GB_S INTERACT D != 1
}
HVPO.S.5_NA45G3_DEP_GB { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NA45G3_DEP_GB
   A = NA45G3_DEP_GB_GATE NOT INSIDE EDGE NA45G3_DEP_GB_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NA45G3_DEP_GB_GATE OR B
   EXT C < HVPO_S_5_NA45G3_DEP_GB ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NA45G3_DEP_GB/2 OVERUNDER
   NA45G3_DEP_GB_S INTERACT D != 1
}
HVPO.S.5_PA12G5_SLIT_BL { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_PA12G5_SLIT_BL
   A = PA12G5_SLIT_BL_GATE NOT INSIDE EDGE PA12G5_SLIT_BL_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = PA12G5_SLIT_BL_GATE OR B
   EXT C < HVPO_S_5_PA12G5_SLIT_BL ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_PA12G5_SLIT_BL/2 OVERUNDER
   PA12G5_SLIT_BL_S INTERACT D != 1
}
HVPO.S.5_PA20G5_SLIT_BL { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_PA20G5_SLIT_BL
   A = PA20G5_SLIT_BL_GATE NOT INSIDE EDGE PA20G5_SLIT_BL_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = PA20G5_SLIT_BL_GATE OR B
   EXT C < HVPO_S_5_PA20G5_SLIT_BL ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_PA20G5_SLIT_BL/2 OVERUNDER
   PA20G5_SLIT_BL_S INTERACT D != 1
}
 HVPO.S.5_1_PCH5_AS_SWITCH_MAC { @ min space between two (GATE SIZEING 0.1) AND PO regions in channel length direction >= ^ HVPO_S_5_1_PCH5_AS_SWITCH_MAC
    A = PCH5_AS_SWITCH_MAC_GATE NOT INSIDE EDGE PCH5_AS_SWITCH_MAC_CH
    B = EXPAND EDGE A OUTSIDE BY 0.1
    C = PCH5_AS_SWITCH_MAC_GATE OR B
    EXT C < HVPO_S_5_1_PCH5_AS_SWITCH_MAC ABUT < 90 SINGULAR REGION 
 }
HVPO.S.5_NLD5G5_ISO_SWITCH { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD5G5_ISO_SWITCH
   A = NLD5G5_ISO_SWITCH_GATE NOT INSIDE EDGE NLD5G5_ISO_SWITCH_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD5G5_ISO_SWITCH_GATE OR B
   EXT C < HVPO_S_5_NLD5G5_ISO_SWITCH ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD5G5_ISO_SWITCH/2 OVERUNDER
   NLD5G5_ISO_SWITCH_S INTERACT D != 1
}
HVPO.S.5_NLD6G5_SA { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD6G5_SA
   A = NLD6G5_SA_GATE NOT INSIDE EDGE NLD6G5_SA_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD6G5_SA_GATE OR B
   EXT C < HVPO_S_5_NLD6G5_SA ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD6G5_SA/2 OVERUNDER
   NLD6G5_SA_S INTERACT D != 1
}
HVPO.S.5_NLD6G5_DE { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD6G5_DE
   A = NLD6G5_DE_GATE NOT INSIDE EDGE NLD6G5_DE_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD6G5_DE_GATE OR B
   EXT C < HVPO_S_5_NLD6G5_DE ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD6G5_DE/2 OVERUNDER
   NLD6G5_DE_S INTERACT D != 1
}
HVPO.S.5_NLD24G5 { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD24G5
   A = NLD24G5_GATE NOT INSIDE EDGE NLD24G5_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD24G5_GATE OR B
   EXT C < HVPO_S_5_NLD24G5 ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD24G5/2 OVERUNDER
   NLD24G5_S INTERACT D != 1
}
HVPO.S.5_NLD24G5_SWITCH { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_NLD24G5_SWITCH
   A = NLD24G5_SWITCH_GATE NOT INSIDE EDGE NLD24G5_SWITCH_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = NLD24G5_SWITCH_GATE OR B
   EXT C < HVPO_S_5_NLD24G5_SWITCH ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_NLD24G5_SWITCH/2 OVERUNDER
   NLD24G5_SWITCH_S INTERACT D != 1
}
HVPO.S.5_PA9G5_SLIT_NBL { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_PA9G5_SLIT_NBL
   A = PA9G5_SLIT_NBL_GATE NOT INSIDE EDGE PA9G5_SLIT_NBL_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = PA9G5_SLIT_NBL_GATE OR B
   EXT C < HVPO_S_5_PA9G5_SLIT_NBL ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_PA9G5_SLIT_NBL/2 OVERUNDER
   PA9G5_SLIT_NBL_S INTERACT D != 1
}
HVPO.S.5_PA16G5_SLIT_NBL { @ min and max space between two {(GATE SIZING 0.1)AND PO} regions in channel length direction for slit hvmos == ^ HVPO_S_5_PA16G5_SLIT_NBL
   A = PA16G5_SLIT_NBL_GATE NOT INSIDE EDGE PA16G5_SLIT_NBL_CH
   B = EXPAND EDGE A OUTSIDE BY 0.1
   C = PA16G5_SLIT_NBL_GATE OR B
   EXT C < HVPO_S_5_PA16G5_SLIT_NBL ABUT < 90 SINGULAR REGION
   D = SIZE C BY HVPO_S_5_PA16G5_SLIT_NBL/2 OVERUNDER
   PA16G5_SLIT_NBL_S INTERACT D != 1
}

HVPO.E.2 { @ min extension of HVPO beyond HVOD for HVMOS >= ^HVPO_E_2
     A = HVOD NOT TOUCH EDGE PA29G5_BL_region2
     ENC A HVPO < HVPO_E_2 ABUT < 90 REGION
}

HVPO.E.4_PA6G5_DE_BL { @ min and max extension of PO beyond SH_N in channel length direction == ^ HVPO_E_4_PA6G5_DE_BL
	A = POLY INTERACT PA6G5_DE_BL_CH
	B = HVSHN INSIDE EDGE A 
	C = EXPAND EDGE B OUTSIDE BY HVPO_E_4_PA6G5_DE_BL
	D = A NOT HVSHN
	C XOR D
}
HVPO.E.4_PA6G5_SA_BL { @ min and max extension of PO beyond SH_N in channel length direction == ^ HVPO_E_4_PA6G5_SA_BL
	A = POLY INTERACT PA6G5_SA_BL_CH
	B = HVSHN INSIDE EDGE A 
	C = EXPAND EDGE B OUTSIDE BY HVPO_E_4_PA6G5_SA_BL
	D = A NOT HVSHN
	C XOR D
}
HVPO.E.4_PA12G5_SLIT_BL { @ min and max extension of PO beyond SH_N in channel length direction == ^ HVPO_E_4_PA12G5_SLIT_BL
	A = POLY INTERACT PA12G5_SLIT_BL_CH
	B = HVSHN INSIDE EDGE A 
	C = EXPAND EDGE B OUTSIDE BY HVPO_E_4_PA12G5_SLIT_BL
	D = A NOT HVSHN
	C XOR D
}
HVPO.E.4_PA12G5_NBL { @ min and max extension of PO beyond SH_N in channel length direction == ^ HVPO_E_4_PA12G5_NBL
	A = POLY INTERACT PA12G5_NBL_CH
	B = HVSHN INSIDE EDGE A 
	C = EXPAND EDGE B OUTSIDE BY HVPO_E_4_PA12G5_NBL
	D = A NOT HVSHN
	C XOR D
}
HVPO.E.4_PA20G5_BL { @ min and max extension of PO beyond SH_N in channel length direction == ^ HVPO_E_4_PA20G5_BL
	A = POLY INTERACT PA20G5_BL_CH
	B = HVSHN INSIDE EDGE A 
	C = EXPAND EDGE B OUTSIDE BY HVPO_E_4_PA20G5_BL
	D = A NOT HVSHN
	C XOR D
}
HVPO.E.4_PA20G5_SLIT_BL { @ min and max extension of PO beyond SH_N in channel length direction == ^ HVPO_E_4_PA20G5_SLIT_BL
	A = POLY INTERACT PA20G5_SLIT_BL_CH
	B = HVSHN INSIDE EDGE A 
	C = EXPAND EDGE B OUTSIDE BY HVPO_E_4_PA20G5_SLIT_BL
	D = A NOT HVSHN
	C XOR D
}
HVPO.E.4_PA29G5_BL { @ min and max extension of PO beyond SH_N in channel length direction == ^ HVPO_E_4_PA29G5_BL
	A = POLY INTERACT PA29G5_BL_CH
	B = HVSHN INSIDE EDGE A 
	C = EXPAND EDGE B OUTSIDE BY HVPO_E_4_PA29G5_BL
	D = A NOT HVSHN
	C XOR D
}
HVPO.E.4_PA36G5_BL_GB { @ min and max extension of PO beyond SH_N in channel length direction == ^ HVPO_E_4_PA36G5_BL_GB
	A = POLY INTERACT PA36G5_BL_GB_CH
	B = HVSHN INSIDE EDGE A 
	C = EXPAND EDGE B OUTSIDE BY HVPO_E_4_PA36G5_BL_GB
	D = A NOT HVSHN
	C XOR D
}
HVPO.E.4_PA45G5_BL_GB { @ min and max extension of PO beyond SH_N in channel length direction == ^ HVPO_E_4_PA45G5_BL_GB
	A = POLY INTERACT PA45G5_BL_GB_CH
	B = HVSHN INSIDE EDGE A 
	C = EXPAND EDGE B OUTSIDE BY HVPO_E_4_PA45G5_BL_GB
	D = A NOT HVSHN
	C XOR D
}
HVPO.E.4_PA9G5_NBL { @ min and max extension of PO beyond SH_N in channel length direction == ^ HVPO_E_4_PA9G5_NBL
	A = POLY INTERACT PA9G5_NBL_CH
	B = HVSHN INSIDE EDGE A 
	C = EXPAND EDGE B OUTSIDE BY HVPO_E_4_PA9G5_NBL
	D = A NOT HVSHN
	C XOR D
}

HVPO.E.4_PA9G5_SLIT_NBL { @ min and max extension of PO beyond SH_N in channel length direction == ^ HVPO_E_4_PA9G5_SLIT_NBL
	A = POLY INTERACT PA9G5_SLIT_NBL_CH
	B = HVSHN INSIDE EDGE A 
	C = EXPAND EDGE B OUTSIDE BY HVPO_E_4_PA9G5_SLIT_NBL
	D = A NOT HVSHN
	C XOR D
}

HVPO.E.4_PA16G5_NBL { @ min and max extension of PO beyond SH_N in channel length direction == ^ HVPO_E_4_PA16G5_NBL
	A = POLY INTERACT PA16G5_NBL_CH
	B = HVSHN INSIDE EDGE A 
	C = EXPAND EDGE B OUTSIDE BY HVPO_E_4_PA16G5_NBL
	D = A NOT HVSHN
	C XOR D
}

HVPO.E.4_PA16G5_SLIT_NBL { @ min and max extension of PO beyond SH_N in channel length direction == ^ HVPO_E_4_PA16G5_SLIT_NBL
	A = POLY INTERACT PA16G5_SLIT_NBL_CH
	B = HVSHN INSIDE EDGE A 
	C = EXPAND EDGE B OUTSIDE BY HVPO_E_4_PA16G5_SLIT_NBL
	D = A NOT HVSHN
	C XOR D
}

HVPO.E.5_PA29G5_BL { @ min and max extension of HVPO beyond channel OD in channel length direction == ^ HVPO_E_5_PA29G5_BL
	A = POLY INTERACT PA29G5_BL_CH
	B = A TOUCH EDGE PA29G5_BL_S
	C = EXPAND EDGE B INSIDE BY GRID
	D = A NOT TOUCH EDGE C
	E = EXPAND EDGE D INSIDE BY HVPO_E_5_PA29G5_BL
	E NOT TOUCH PA29G5_BL_CH
}
HVPO.E.5_PA36G5_BL_GB { @ min and max extension of HVPO beyond channel OD in channel length direction == ^ HVPO_E_5_PA36G5_BL_GB
	A = POLY INTERACT PA36G5_BL_GB_CH
	B = A TOUCH EDGE PA36G5_BL_GB_S
	C = EXPAND EDGE B INSIDE BY GRID
	D = A NOT TOUCH EDGE C
	E = EXPAND EDGE D INSIDE BY HVPO_E_5_PA36G5_BL_GB
	E NOT TOUCH PA36G5_BL_GB_CH
}
HVPO.E.5_PA45G5_BL_GB { @ min and max extension of HVPO beyond channel OD in channel length direction == ^ HVPO_E_5_PA45G5_BL_GB
	A = POLY INTERACT PA45G5_BL_GB_CH
	B = A TOUCH EDGE PA45G5_BL_GB_S
	C = EXPAND EDGE B INSIDE BY GRID
	D = A NOT TOUCH EDGE C
	E = EXPAND EDGE D INSIDE BY HVPO_E_5_PA45G5_BL_GB
	E NOT TOUCH PA45G5_BL_GB_CH
}

HVPO.E.6_ZENER_NBL { @ min and max extension of Anode OD beyond PO for Zener Diode == ^ HVPO_E_6_ZENER_NBL
    A = POLY INTERACT DIO_ZENER_NBL_M
	B = A OR (HOLES A INNER)
	C = SIZE B BY HVPO_E_6_ZENER_NBL
	C XOR DIO_ZENER_NBL_M
}

HVPO.E.7_NA6G5_NBL { @ min and max extension of PO beyond SH_P == ^ HVPO_E_7_NA6G5_NBL
	A = POLY INTERACT NA6G5_NBL_CH
	B = A TOUCH EDGE NA6G5_NBL_S
	C = EXPAND EDGE B INSIDE BY GRID
	D = A NOT TOUCH EDGE C
	E = EXPAND EDGE D INSIDE BY HVPO_E_7_NA6G5_NBL
	E NOT TOUCH SH_P
}
HVPO.E.7_NA20G5 { @ min and max extension of PO beyond SH_P == ^ HVPO_E_7_NA20G5
	A = POLY INTERACT NA20G5_CH
	B = A TOUCH EDGE NA20G5_S
	C = EXPAND EDGE B INSIDE BY GRID
	D = A NOT TOUCH EDGE C
	E = EXPAND EDGE D INSIDE BY HVPO_E_7_NA20G5
	E NOT TOUCH SH_P
}
HVPO.E.7_NA20G5_NBL { @ min and max extension of PO beyond SH_P == ^ HVPO_E_7_NA20G5_NBL
	A = POLY INTERACT NA20G5_NBL_CH
	B = A TOUCH EDGE NA20G5_NBL_S
	C = EXPAND EDGE B INSIDE BY GRID
	D = A NOT TOUCH EDGE C
	E = EXPAND EDGE D INSIDE BY HVPO_E_7_NA20G5_NBL
	E NOT TOUCH SH_P
}
HVPO.E.7_NA29G5 { @ min and max extension of PO beyond SH_P == ^ HVPO_E_7_NA29G5
	A = POLY INTERACT NA29G5_CH
	B = A TOUCH EDGE NA29G5_S
	C = EXPAND EDGE B INSIDE BY GRID
	D = A NOT TOUCH EDGE C
	E = EXPAND EDGE D INSIDE BY HVPO_E_7_NA29G5
	E NOT TOUCH SH_P
}
HVPO.E.7_NA29G5_NBL { @ min and max extension of PO beyond SH_P == ^ HVPO_E_7_NA29G5_NBL
	A = POLY INTERACT NA29G5_NBL_CH
	B = A TOUCH EDGE NA29G5_NBL_S
	C = EXPAND EDGE B INSIDE BY GRID
	D = A NOT TOUCH EDGE C
	E = EXPAND EDGE D INSIDE BY HVPO_E_7_NA29G5_NBL
	E NOT TOUCH SH_P
}
HVPO.E.7_NA29G3_DEP_NBL { @ min and max extension of PO beyond SH_P == ^ HVPO_E_7_NA29G3_DEP_NBL
	A = POLY INTERACT NA29G3_DEP_NBL_CH
	B = A TOUCH EDGE NA29G3_DEP_NBL_S
	C = EXPAND EDGE B INSIDE BY GRID
	D = A NOT TOUCH EDGE C
	E = EXPAND EDGE D INSIDE BY HVPO_E_7_NA29G3_DEP_NBL
	E NOT TOUCH SH_P
}

HVPO.O.2_NLD6G5_DE_FULLY_ISO { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD6G5_DE_FULLY_ISO
   INT NLD6G5_DE_FULLY_ISO_GATE < HVPO_O_2_NLD6G5_DE_FULLY_ISO ABUT < 90 SINGULAR REGION
   SIZE NLD6G5_DE_FULLY_ISO_GATE BY HVPO_O_2_NLD6G5_DE_FULLY_ISO/2 UNDEROVER
}
//#macro HVPO_O_2_GEN3(NLD6G5_SA_FULLY_ISO)
HVPO.O.2_NLD6G5_SA_FULLY_ISO { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD6G5_SA_FULLY_ISO
   INT NLD6G5_SA_FULLY_ISO_GATE < HVPO_O_2_NLD6G5_SA_FULLY_ISO ABUT < 90 SINGULAR REGION
   SIZE NLD6G5_SA_FULLY_ISO_GATE BY (HVPO_O_2_NLD6G5_SA_FULLY_ISO + 0.001)/2 UNDEROVER
}
HVPO.O.2_NLD6G5_SA { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD6G5_SA
   INT NLD6G5_SA_GATE < HVPO_O_2_NLD6G5_SA ABUT < 90 SINGULAR REGION
   SIZE NLD6G5_SA_GATE BY (HVPO_O_2_NLD6G5_SA + 0.001)/2 UNDEROVER
}
HVPO.O.2_NLD9G5 { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD9G5
   INT NLD9G5_GATE < HVPO_O_2_NLD9G5 ABUT < 90 SINGULAR REGION
   SIZE NLD9G5_GATE BY HVPO_O_2_NLD9G5/2 UNDEROVER
}
HVPO.O.2_NLD9G5_FULLY_ISO { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD9G5_FULLY_ISO
   INT NLD9G5_FULLY_ISO_GATE < HVPO_O_2_NLD9G5_FULLY_ISO ABUT < 90 SINGULAR REGION
   SIZE NLD9G5_FULLY_ISO_GATE BY HVPO_O_2_NLD9G5_FULLY_ISO/2 UNDEROVER
}
HVPO.O.2_NLD12G5 { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD12G5
   INT NLD12G5_GATE < HVPO_O_2_NLD12G5 ABUT < 90 SINGULAR REGION
   SIZE NLD12G5_GATE BY HVPO_O_2_NLD12G5/2 UNDEROVER
}
HVPO.O.2_NLD12G5_FULLY_ISO { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD12G5_FULLY_ISO
   INT NLD12G5_FULLY_ISO_GATE < HVPO_O_2_NLD12G5_FULLY_ISO ABUT < 90 SINGULAR REGION
   SIZE NLD12G5_FULLY_ISO_GATE BY HVPO_O_2_NLD12G5_FULLY_ISO/2 UNDEROVER
}
HVPO.O.2_NLD16G5 { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD16G5
   INT NLD16G5_GATE < HVPO_O_2_NLD16G5 ABUT < 90 SINGULAR REGION
   SIZE NLD16G5_GATE BY HVPO_O_2_NLD16G5/2 UNDEROVER
}
HVPO.O.2_NLD16G5_FULLY_ISO { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD16G5_FULLY_ISO
   INT NLD16G5_FULLY_ISO_GATE < HVPO_O_2_NLD16G5_FULLY_ISO ABUT < 90 SINGULAR REGION
   SIZE NLD16G5_FULLY_ISO_GATE BY HVPO_O_2_NLD16G5_FULLY_ISO/2 UNDEROVER
}
HVPO.O.2_NLD20G5 { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD20G5
   INT NLD20G5_GATE < HVPO_O_2_NLD20G5 ABUT < 90 SINGULAR REGION
   SIZE NLD20G5_GATE BY HVPO_O_2_NLD20G5/2 UNDEROVER
}
HVPO.O.2_NLD20G5_FULLY_ISO { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD20G5_FULLY_ISO
   INT NLD20G5_FULLY_ISO_GATE < HVPO_O_2_NLD20G5_FULLY_ISO ABUT < 90 SINGULAR REGION
   SIZE NLD20G5_FULLY_ISO_GATE BY HVPO_O_2_NLD20G5_FULLY_ISO/2 UNDEROVER
}
HVPO.O.2_NLD24G5_FULLY_ISO { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD24G5_FULLY_ISO
   INT NLD24G5_FULLY_ISO_GATE < HVPO_O_2_NLD24G5_FULLY_ISO ABUT < 90 SINGULAR REGION
   SIZE NLD24G5_FULLY_ISO_GATE BY HVPO_O_2_NLD24G5_FULLY_ISO/2 UNDEROVER
}
HVPO.O.2_NLD24G5_ISO_SWITCH { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD24G5_ISO_SWITCH
   INT NLD24G5_ISO_SWITCH_GATE < HVPO_O_2_NLD24G5_ISO_SWITCH ABUT < 90 SINGULAR REGION
   SIZE NLD24G5_ISO_SWITCH_GATE BY HVPO_O_2_NLD24G5_ISO_SWITCH/2 UNDEROVER
}
HVPO.O.2_NLD5G5_ISO_SWITCH { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD5G5_ISO_SWITCH
   INT NLD5G5_ISO_SWITCH_GATE < HVPO_O_2_NLD5G5_ISO_SWITCH ABUT < 90 SINGULAR REGION
   SIZE NLD5G5_ISO_SWITCH_GATE BY HVPO_O_2_NLD5G5_ISO_SWITCH/2 UNDEROVER
}

HVPO.O.2_NLD6G5_DE { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD6G5_DE
   INT NLD6G5_DE_GATE < HVPO_O_2_NLD6G5_DE ABUT < 90 SINGULAR REGION
   SIZE NLD6G5_DE_GATE BY HVPO_O_2_NLD6G5_DE/2 UNDEROVER
}

HVPO.O.2_NLD24G5 { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD24G5
   INT NLD24G5_GATE < HVPO_O_2_NLD24G5 ABUT < 90 SINGULAR REGION
   SIZE NLD24G5_GATE BY HVPO_O_2_NLD24G5/2 UNDEROVER
}

HVPO.O.2_NLD24G5_SWITCH { @ min and max overlap of NDD and PO (channel length) == ^HVPO_O_2_NLD24G5_SWITCH
   INT NLD24G5_SWITCH_GATE < HVPO_O_2_NLD24G5_SWITCH ABUT < 90 SINGULAR REGION
   SIZE NLD24G5_SWITCH_GATE BY HVPO_O_2_NLD24G5_SWITCH/2 UNDEROVER
}


HVPO.O.3_NA6G5_NBL { @ min overlap of SH_P and PO(channel length direction) >= ^HVPO_O_3_NA6G5_NBL
	A = POLY INTERACT NA6G5_NBL_GATE
    B = A AND SH_P
    INT B < HVPO_O_3_NA6G5_NBL ABUT < 90 SINGULAR REGION	
}
HVPO.O.3_NA20G5 { @ min overlap of SH_P and PO(channel length direction) >= ^HVPO_O_3_NA20G5
	A = POLY INTERACT NA20G5_GATE
    B = A AND SH_P
    INT B < HVPO_O_3_NA20G5 ABUT < 90 SINGULAR REGION	
}
HVPO.O.3_NA20G5_NBL { @ min overlap of SH_P and PO(channel length direction) >= ^HVPO_O_3_NA20G5_NBL
	A = POLY INTERACT NA20G5_NBL_GATE
    B = A AND SH_P
    INT B < HVPO_O_3_NA20G5_NBL ABUT < 90 SINGULAR REGION	
}
HVPO.O.3_NA29G5 { @ min overlap of SH_P and PO(channel length direction) >= ^HVPO_O_3_NA29G5
	A = POLY INTERACT NA29G5_GATE
    B = A AND SH_P
    INT B < HVPO_O_3_NA29G5 ABUT < 90 SINGULAR REGION	
}
HVPO.O.3_NA29G5_NBL { @ min overlap of SH_P and PO(channel length direction) >= ^HVPO_O_3_NA29G5_NBL
	A = POLY INTERACT NA29G5_NBL_GATE
    B = A AND SH_P
    INT B < HVPO_O_3_NA29G5_NBL ABUT < 90 SINGULAR REGION	
}
HVPO.O.3_NA29G3_DEP_NBL { @ min overlap of SH_P and PO(channel length direction) >= ^HVPO_O_3_NA29G3_DEP_NBL
	A = POLY INTERACT NA29G3_DEP_NBL_GATE
    B = A AND SH_P
    INT B < HVPO_O_3_NA29G3_DEP_NBL ABUT < 90 SINGULAR REGION	
}

HVPO.O.5_PA6G5_DE_BL { @ min and max overlap of SH_P and PO(channel length direction) == ^HVPO_O_5_PA6G5_DE_BL
	A = POLY INTERACT PA6G5_DE_BL_GATE
    B = A AND SH_P
    INT A SH_P < HVPO_O_5_PA6G5_DE_BL ABUT < 90 SINGULAR REGION
    SIZE B BY HVPO_O_5_PA6G5_DE_BL/2 UNDEROVER	
}
HVPO.O.5_PA6G5_SA_BL { @ min and max overlap of SH_P and PO(channel length direction) == ^HVPO_O_5_PA6G5_SA_BL
	A = POLY INTERACT PA6G5_SA_BL_GATE
    B = A AND SH_P
    INT A SH_P < HVPO_O_5_PA6G5_SA_BL ABUT < 90 SINGULAR REGION
    SIZE B BY HVPO_O_5_PA6G5_SA_BL/2 UNDEROVER	
}

HVPO.O.6_PA6G5_DE_BL { @ min overlap of PO and active OD (channel length) >= ^HVPO_O_6_PA6G5_DE_BL
   PA6G5_DE_BL_GATE_W = PA6G5_DE_BL_GATE NOT COIN INSIDE EDGE OD
   INT PA6G5_DE_BL_GATE_W < HVPO_O_6_PA6G5_DE_BL ABUT < 90 REGION
}
HVPO.O.6_PA6G5_SA_BL { @ min overlap of PO and active OD (channel length) >= ^HVPO_O_6_PA6G5_SA_BL
   PA6G5_SA_BL_GATE_W = PA6G5_SA_BL_GATE NOT COIN INSIDE EDGE OD
   INT PA6G5_SA_BL_GATE_W < HVPO_O_6_PA6G5_SA_BL ABUT < 90 REGION
}
HVPO.O.6_PCH5_AS_SWITCH_MAC { @ min overlap of PO and active OD (channel length) >= ^HVPO_O_6_PCH5_AS_SWITCH_MAC
   PCH5_AS_SWITCH_MAC_GATE_W = PCH5_AS_SWITCH_MAC_GATE NOT COIN INSIDE EDGE OD
   INT PCH5_AS_SWITCH_MAC_GATE_W < HVPO_O_6_PCH5_AS_SWITCH_MAC ABUT < 90 REGION
}

HVPO.O.7_PA12G5_NBL { @ min overlap of PDD and PO (channel length) >= ^HVPO_O_7_PA12G5_NBL
   A = PDD INTERACT PA12G5_NBL_CH
   B = POLY INTERACT PA12G5_NBL_CH
   C = A AND B
   INT C < HVPO_O_7_PA12G5_NBL ABUT < 90 SINGULAR REGION
}
HVPO.O.7_PA20G5_BL { @ min overlap of PDD and PO (channel length) >= ^HVPO_O_7_PA20G5_BL
   A = PDD INTERACT PA20G5_BL_CH
   B = POLY INTERACT PA20G5_BL_CH
   C = A AND B
   INT C < HVPO_O_7_PA20G5_BL ABUT < 90 SINGULAR REGION
}
HVPO.O.7_PA29G5_BL { @ min overlap of PDD and PO (channel length) >= ^HVPO_O_7_PA29G5_BL
   A = PDD INTERACT PA29G5_BL_CH
   B = POLY INTERACT PA29G5_BL_CH
   C = A AND B
   INT C < HVPO_O_7_PA29G5_BL ABUT < 90 SINGULAR REGION
}
HVPO.O.7_PA9G5_NBL { @ min overlap of PDD and PO (channel length) >= ^HVPO_O_7_PA9G5_NBL
   A = PDD INTERACT PA9G5_NBL_CH
   B = POLY INTERACT PA9G5_NBL_CH
   C = A AND B
   INT C < HVPO_O_7_PA9G5_NBL ABUT < 90 SINGULAR REGION
}

HVPO.O.7_PA16G5_NBL { @ min overlap of PDD and PO (channel length) >= ^HVPO_O_7_PA16G5_NBL
   A = PDD INTERACT PA16G5_NBL_CH
   B = POLY INTERACT PA16G5_NBL_CH
   C = A AND B
   INT C < HVPO_O_7_PA16G5_NBL ABUT < 90 SINGULAR REGION
}


HVPO.O.8_PA36G5_BL_GB { @ min overlap of HVPW and PO(channel length) >=^ HVPO_O_8_PA36G5_BL_GB
    A = HVPWELLi INTERACT PA36G5_BL_GB_CH
    B = A AND POLY
    INT B < HVPO_O_8_PA36G5_BL_GB
}

HVPO.O.8_PA45G5_BL_GB { @ min overlap of HVPW and PO(channel length) >=^ HVPO_O_8_PA45G5_BL_GB
    A = HVPWELLi INTERACT PA45G5_BL_GB_CH
    B = A AND POLY
    INT B < HVPO_O_8_PA45G5_BL_GB
}

HVPO.O.9_PA12G5_SLIT_BL { @ min and max overlap of PDD and PO (channel length) == ^HVPO_O_9_PA12G5_SLIT_BL
   A = PDD INTERACT PA12G5_SLIT_BL_CH
   B = A AND POLY
   INT B < HVPO_O_9_PA12G5_SLIT_BL ABUT < 90 SINGULAR REGION
   SIZE B BY HVPO_O_9_PA12G5_SLIT_BL/2 UNDEROVER
}
HVPO.O.9_PA20G5_SLIT_BL { @ min and max overlap of PDD and PO (channel length) == ^HVPO_O_9_PA20G5_SLIT_BL
   A = PDD INTERACT PA20G5_SLIT_BL_CH
   B = A AND POLY
   INT B < HVPO_O_9_PA20G5_SLIT_BL ABUT < 90 SINGULAR REGION
   SIZE B BY HVPO_O_9_PA20G5_SLIT_BL/2 UNDEROVER
}
HVPO.O.9_PA9G5_SLIT_NBL { @ min and max overlap of PDD and PO (channel length) == ^HVPO_O_9_PA9G5_SLIT_NBL
   A = PDD INTERACT PA9G5_SLIT_NBL_CH
   B = A AND POLY
   INT B < HVPO_O_9_PA9G5_SLIT_NBL ABUT < 90 SINGULAR REGION
   SIZE B BY HVPO_O_9_PA9G5_SLIT_NBL/2 UNDEROVER
}

HVPO.O.9_PA16G5_SLIT_NBL { @ min and max overlap of PDD and PO (channel length) == ^HVPO_O_9_PA16G5_SLIT_NBL
   A = PDD INTERACT PA16G5_SLIT_NBL_CH
   B = A AND POLY
   INT B < HVPO_O_9_PA16G5_SLIT_NBL ABUT < 90 SINGULAR REGION
   SIZE B BY HVPO_O_9_PA16G5_SLIT_NBL/2 UNDEROVER
}


HVPO.O.10_NLD36G5_GB { @ min and max overlap of HVNW and PO (channel length) == ^HVPO_O_10_NLD36G5_GB
   A = HVNW AND NLD36G5_GB_GATE
   INT A < HVPO_O_10_NLD36G5_GB ABUT < 90 SINGULAR REGION
   SIZE A BY HVPO_O_10_NLD36G5_GB/2 UNDEROVER
}
HVPO.O.10_NLD45G5_GB { @ min and max overlap of HVNW and PO (channel length) == ^HVPO_O_10_NLD45G5_GB
   A = HVNW AND NLD45G5_GB_GATE
   INT A < HVPO_O_10_NLD45G5_GB ABUT < 90 SINGULAR REGION
   SIZE A BY HVPO_O_10_NLD45G5_GB/2 UNDEROVER
}
HVPO.O.10_NA45G3_DEP_GB { @ min and max overlap of HVNW and PO (channel length) == ^HVPO_O_10_NA45G3_DEP_GB
   A = HVNW AND NA45G3_DEP_GB_GATE
   INT A < HVPO_O_10_NA45G3_DEP_GB ABUT < 90 SINGULAR REGION
   SIZE A BY HVPO_O_10_NA45G3_DEP_GB/2 UNDEROVER
}
HVPO.S.2.1_ZENER_NBL { @ min and max width of PO hole for the Zener Diode with NBL (GA)(at least one side) == ^HVPO_S_2_1_ZENER_NBL
   A = POLY INTERACT DIO_ZENER_NBL_M
   B = HOLES A INNER
   INT B < HVPO_S_2_1_ZENER_NBL ABUT < 90 SINGULAR REGION
   SIZE B BY HVPO_S_2_1_ZENER_NBL/2 UNDEROVER
}

HVPO.S.2_ZENER_NBL { @ min width of PO hole for the Zener Diode with NBL (GA)(Except HVPO.S.2.1) >= ^HVPO_S_2_ZENER_NBL
   A = POLY INTERACT DIO_ZENER_NBL_M
   B = HOLES A INNER
   C = LENGTH B == HVPO_S_2_1_ZENER_NBL
   INT C < HVPO_S_2_ZENER_NBL ABUT < 90 REGION
}


//======================HVPO rules check================================

VARIABLE HVPO_W_4_NLD5G5_ISO_SWITCH  60
VARIABLE HVPO_W_4_NLD6G5_DE 60
VARIABLE HVPO_W_4_NLD6G5_DE_FULLY_ISO	60
VARIABLE HVPO_W_4_NLD6G5_SA 60
VARIABLE HVPO_W_4_NLD6G5_SA_FULLY_ISO	60
VARIABLE HVPO_W_4_NA6G5_NBL			60

NLD6G5_DE_GATE_WID = POLY INSIDE EDGE NLD6G5_DE_CH
NLD6G5_DE_GATE_W_EXPc = EXPAND EDGE NLD6G5_DE_GATE_WID INSIDE BY GRID  
CONNECT NLD6G5_DE_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD6G5_DE { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD6G5_DE
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD6G5_DE_GATE_W_EXPc >= 1000
  [AREA(NLD6G5_DE_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD6G5_DE.rep NLD6G5_DE_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD6G5_DE + GRID
}
NLD6G5_DE_FULLY_ISO_GATE_WID = POLY INSIDE EDGE NLD6G5_DE_FULLY_ISO_CH
NLD6G5_DE_FULLY_ISO_GATE_W_EXPc = EXPAND EDGE NLD6G5_DE_FULLY_ISO_GATE_WID INSIDE BY GRID  
CONNECT NLD6G5_DE_FULLY_ISO_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD6G5_DE_FULLY_ISO { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD6G5_DE_FULLY_ISO
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD6G5_DE_FULLY_ISO_GATE_W_EXPc >= 1000
  [AREA(NLD6G5_DE_FULLY_ISO_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD6G5_DE_FULLY_ISO.rep NLD6G5_DE_FULLY_ISO_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD6G5_DE_FULLY_ISO + GRID
}
NLD6G5_SA_FULLY_ISO_GATE_WID = POLY INSIDE EDGE NLD6G5_SA_FULLY_ISO_CH
NLD6G5_SA_FULLY_ISO_GATE_W_EXPc = EXPAND EDGE NLD6G5_SA_FULLY_ISO_GATE_WID INSIDE BY GRID  
CONNECT NLD6G5_SA_FULLY_ISO_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD6G5_SA_FULLY_ISO { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD6G5_SA_FULLY_ISO
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD6G5_SA_FULLY_ISO_GATE_W_EXPc >= 1000
  [(AREA(NLD6G5_SA_FULLY_ISO_GATE_W_EXPc)/2)/GRID]
  RDB HVPO.W.4_NLD6G5_SA_FULLY_ISO.rep NLD6G5_SA_FULLY_ISO_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD6G5_SA_FULLY_ISO + GRID
}
NLD6G5_SA_GATE_WID = POLY INSIDE EDGE NLD6G5_SA_CH
NLD6G5_SA_GATE_W_EXPc = EXPAND EDGE NLD6G5_SA_GATE_WID INSIDE BY GRID  
CONNECT NLD6G5_SA_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD6G5_SA { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD6G5_SA
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD6G5_SA_GATE_W_EXPc >= 1000
  [(AREA(NLD6G5_SA_GATE_W_EXPc)/2)/GRID]
  RDB HVPO.W.4_NLD6G5_SA.rep NLD6G5_SA_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD6G5_SA + GRID
}
NLD5G5_ISO_SWITCH_GATE_WID = POLY INSIDE EDGE NLD5G5_ISO_SWITCH_CH
NLD5G5_ISO_SWITCH_GATE_W_EXPc = EXPAND EDGE NLD5G5_ISO_SWITCH_GATE_WID INSIDE BY GRID  
CONNECT NLD5G5_ISO_SWITCH_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD5G5_ISO_SWITCH { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD5G5_ISO_SWITCH
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD5G5_ISO_SWITCH_GATE_W_EXPc >= 1000
  [(AREA(NLD5G5_ISO_SWITCH_GATE_W_EXPc)/2)/GRID]
  RDB HVPO.W.4_NLD5G5_ISO_SWITCH.rep NLD5G5_ISO_SWITCH_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD5G5_ISO_SWITCH + GRID
}
NA6G5_NBL_GATE_WID = POLY INSIDE EDGE NA6G5_NBL_CH
NA6G5_NBL_GATE_W_EXPc = EXPAND EDGE NA6G5_NBL_GATE_WID INSIDE BY GRID  
CONNECT NA6G5_NBL_GATE_W_EXPc ILP1_mf

HVPO.W.4_NA6G5_NBL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NA6G5_NBL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NA6G5_NBL_GATE_W_EXPc >= 1000
  [AREA(NA6G5_NBL_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NA6G5_NBL.rep NA6G5_NBL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NA6G5_NBL + GRID
}
VARIABLE HVPO_W_4_PCH5_AS_SWITCH_MAC    80
VARIABLE HVPO_W_4_PA6G5_DE_BL			80
VARIABLE HVPO_W_4_PA6G5_SA_BL			80

PA6G5_DE_BL_GATE_WID = POLY INSIDE EDGE PA6G5_DE_BL_CH
PA6G5_DE_BL_GATE_W_EXPc = EXPAND EDGE PA6G5_DE_BL_GATE_WID INSIDE BY GRID  
CONNECT PA6G5_DE_BL_GATE_W_EXPc ILP1_mf

HVPO.W.4_PA6G5_DE_BL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_PA6G5_DE_BL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO PA6G5_DE_BL_GATE_W_EXPc >= 1000
  [AREA(PA6G5_DE_BL_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_PA6G5_DE_BL.rep PA6G5_DE_BL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_PA6G5_DE_BL + GRID
}
PA6G5_SA_BL_GATE_WID = POLY INSIDE EDGE PA6G5_SA_BL_CH
PA6G5_SA_BL_GATE_W_EXPc = EXPAND EDGE PA6G5_SA_BL_GATE_WID INSIDE BY GRID  
CONNECT PA6G5_SA_BL_GATE_W_EXPc ILP1_mf

HVPO.W.4_PA6G5_SA_BL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_PA6G5_SA_BL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO PA6G5_SA_BL_GATE_W_EXPc >= 1000
  [(AREA(PA6G5_SA_BL_GATE_W_EXPc)/2)/GRID]
  RDB HVPO.W.4_PA6G5_SA_BL.rep PA6G5_SA_BL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_PA6G5_SA_BL + GRID
}
PCH5_AS_SWITCH_MAC_GATE_WID = POLY INSIDE EDGE PCH5_AS_SWITCH_MAC_CH
PCH5_AS_SWITCH_MAC_GATE_W_EXPc = EXPAND EDGE PCH5_AS_SWITCH_MAC_GATE_WID INSIDE BY GRID  
CONNECT PCH5_AS_SWITCH_MAC_GATE_W_EXPc ILP1_mf

HVPO.W.4_PCH5_AS_SWITCH_MAC { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_PCH5_AS_SWITCH_MAC
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO PCH5_AS_SWITCH_MAC_GATE_W_EXPc >= 1000
  [(AREA(PCH5_AS_SWITCH_MAC_GATE_W_EXPc)/2)/GRID]
  RDB HVPO.W.4_PCH5_AS_SWITCH_MAC.rep PCH5_AS_SWITCH_MAC_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_PCH5_AS_SWITCH_MAC + GRID
}

VARIABLE HVPO_W_4_NLD9G5				120
VARIABLE HVPO_W_4_NLD9G5_FULLY_ISO		120
VARIABLE HVPO_W_4_NLD12G5				120
VARIABLE HVPO_W_4_NLD12G5_FULLY_ISO		120
VARIABLE HVPO_W_4_NLD16G5				120
VARIABLE HVPO_W_4_NLD16G5_FULLY_ISO		120
VARIABLE HVPO_W_4_NLD20G5				120
VARIABLE HVPO_W_4_NLD20G5_FULLY_ISO		120
VARIABLE HVPO_W_4_NLD24G5_ISO_SWITCH	120
VARIABLE HVPO_W_4_NLD24G5           120
VARIABLE HVPO_W_4_NLD24G5_SWITCH	120
VARIABLE HVPO_W_4_NLD24G5_FULLY_ISO		120
VARIABLE HVPO_W_4_NA20G5				120
VARIABLE HVPO_W_4_NA20G5_NBL			120
VARIABLE HVPO_W_4_NA29G5				120
VARIABLE HVPO_W_4_NA29G5_NBL			120
VARIABLE HVPO_W_4_NA29G3_DEP_NBL		120

NLD9G5_GATE_WID = POLY INSIDE EDGE NLD9G5_CH
NLD9G5_GATE_W_EXPc = EXPAND EDGE NLD9G5_GATE_WID INSIDE BY GRID  
CONNECT NLD9G5_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD9G5 { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD9G5
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD9G5_GATE_W_EXPc >= 1000
  [AREA(NLD9G5_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD9G5.rep NLD9G5_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD9G5 + GRID
}
NLD9G5_FULLY_ISO_GATE_WID = POLY INSIDE EDGE NLD9G5_FULLY_ISO_CH
NLD9G5_FULLY_ISO_GATE_W_EXPc = EXPAND EDGE NLD9G5_FULLY_ISO_GATE_WID INSIDE BY GRID  
CONNECT NLD9G5_FULLY_ISO_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD9G5_FULLY_ISO { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD9G5_FULLY_ISO
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD9G5_FULLY_ISO_GATE_W_EXPc >= 1000
  [AREA(NLD9G5_FULLY_ISO_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD9G5_FULLY_ISO.rep NLD9G5_FULLY_ISO_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD9G5_FULLY_ISO + GRID
}
NLD12G5_GATE_WID = POLY INSIDE EDGE NLD12G5_CH
NLD12G5_GATE_W_EXPc = EXPAND EDGE NLD12G5_GATE_WID INSIDE BY GRID  
CONNECT NLD12G5_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD12G5 { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD12G5
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD12G5_GATE_W_EXPc >= 1000
  [AREA(NLD12G5_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD12G5.rep NLD12G5_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD12G5 + GRID
}
NLD12G5_FULLY_ISO_GATE_WID = POLY INSIDE EDGE NLD12G5_FULLY_ISO_CH
NLD12G5_FULLY_ISO_GATE_W_EXPc = EXPAND EDGE NLD12G5_FULLY_ISO_GATE_WID INSIDE BY GRID  
CONNECT NLD12G5_FULLY_ISO_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD12G5_FULLY_ISO { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD12G5_FULLY_ISO
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD12G5_FULLY_ISO_GATE_W_EXPc >= 1000
  [AREA(NLD12G5_FULLY_ISO_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD12G5_FULLY_ISO.rep NLD12G5_FULLY_ISO_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD12G5_FULLY_ISO + GRID
}
NLD16G5_GATE_WID = POLY INSIDE EDGE NLD16G5_CH
NLD16G5_GATE_W_EXPc = EXPAND EDGE NLD16G5_GATE_WID INSIDE BY GRID  
CONNECT NLD16G5_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD16G5 { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD16G5
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD16G5_GATE_W_EXPc >= 1000
  [AREA(NLD16G5_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD16G5.rep NLD16G5_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD16G5 + GRID
}
NLD16G5_FULLY_ISO_GATE_WID = POLY INSIDE EDGE NLD16G5_FULLY_ISO_CH
NLD16G5_FULLY_ISO_GATE_W_EXPc = EXPAND EDGE NLD16G5_FULLY_ISO_GATE_WID INSIDE BY GRID  
CONNECT NLD16G5_FULLY_ISO_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD16G5_FULLY_ISO { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD16G5_FULLY_ISO
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD16G5_FULLY_ISO_GATE_W_EXPc >= 1000
  [AREA(NLD16G5_FULLY_ISO_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD16G5_FULLY_ISO.rep NLD16G5_FULLY_ISO_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD16G5_FULLY_ISO + GRID
}
NLD20G5_GATE_WID = POLY INSIDE EDGE NLD20G5_CH
NLD20G5_GATE_W_EXPc = EXPAND EDGE NLD20G5_GATE_WID INSIDE BY GRID  
CONNECT NLD20G5_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD20G5 { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD20G5
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD20G5_GATE_W_EXPc >= 1000
  [AREA(NLD20G5_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD20G5.rep NLD20G5_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD20G5 + GRID
}
NLD20G5_FULLY_ISO_GATE_WID = POLY INSIDE EDGE NLD20G5_FULLY_ISO_CH
NLD20G5_FULLY_ISO_GATE_W_EXPc = EXPAND EDGE NLD20G5_FULLY_ISO_GATE_WID INSIDE BY GRID  
CONNECT NLD20G5_FULLY_ISO_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD20G5_FULLY_ISO { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD20G5_FULLY_ISO
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD20G5_FULLY_ISO_GATE_W_EXPc >= 1000
  [AREA(NLD20G5_FULLY_ISO_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD20G5_FULLY_ISO.rep NLD20G5_FULLY_ISO_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD20G5_FULLY_ISO + GRID
}
NLD24G5_ISO_SWITCH_GATE_WID = POLY INSIDE EDGE NLD24G5_ISO_SWITCH_CH
NLD24G5_ISO_SWITCH_GATE_W_EXPc = EXPAND EDGE NLD24G5_ISO_SWITCH_GATE_WID INSIDE BY GRID  
CONNECT NLD24G5_ISO_SWITCH_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD24G5_ISO_SWITCH { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD24G5_ISO_SWITCH
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD24G5_ISO_SWITCH_GATE_W_EXPc >= 1000
  [AREA(NLD24G5_ISO_SWITCH_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD24G5_ISO_SWITCH.rep NLD24G5_ISO_SWITCH_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD24G5_ISO_SWITCH + GRID
}
NLD24G5_GATE_WID = POLY INSIDE EDGE NLD24G5_CH
NLD24G5_GATE_W_EXPc = EXPAND EDGE NLD24G5_GATE_WID INSIDE BY GRID  
CONNECT NLD24G5_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD24G5 { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD24G5
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD24G5_GATE_W_EXPc >= 1000
  [AREA(NLD24G5_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD24G5.rep NLD24G5_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD24G5 + GRID
}
NLD24G5_SWITCH_GATE_WID = POLY INSIDE EDGE NLD24G5_SWITCH_CH
NLD24G5_SWITCH_GATE_W_EXPc = EXPAND EDGE NLD24G5_SWITCH_GATE_WID INSIDE BY GRID  
CONNECT NLD24G5_SWITCH_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD24G5_SWITCH { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD24G5_SWITCH
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD24G5_SWITCH_GATE_W_EXPc >= 1000
  [AREA(NLD24G5_SWITCH_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD24G5_SWITCH.rep NLD24G5_SWITCH_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD24G5_SWITCH + GRID
}
NLD24G5_FULLY_ISO_GATE_WID = POLY INSIDE EDGE NLD24G5_FULLY_ISO_CH
NLD24G5_FULLY_ISO_GATE_W_EXPc = EXPAND EDGE NLD24G5_FULLY_ISO_GATE_WID INSIDE BY GRID  
CONNECT NLD24G5_FULLY_ISO_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD24G5_FULLY_ISO { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD24G5_FULLY_ISO
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD24G5_FULLY_ISO_GATE_W_EXPc >= 1000
  [AREA(NLD24G5_FULLY_ISO_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD24G5_FULLY_ISO.rep NLD24G5_FULLY_ISO_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD24G5_FULLY_ISO + GRID
}
NA20G5_GATE_WID = POLY INSIDE EDGE NA20G5_CH
NA20G5_GATE_W_EXPc = EXPAND EDGE NA20G5_GATE_WID INSIDE BY GRID  
CONNECT NA20G5_GATE_W_EXPc ILP1_mf

HVPO.W.4_NA20G5 { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NA20G5
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NA20G5_GATE_W_EXPc >= 1000
  [AREA(NA20G5_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NA20G5.rep NA20G5_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NA20G5 + GRID
}
NA20G5_NBL_GATE_WID = POLY INSIDE EDGE NA20G5_NBL_CH
NA20G5_NBL_GATE_W_EXPc = EXPAND EDGE NA20G5_NBL_GATE_WID INSIDE BY GRID  
CONNECT NA20G5_NBL_GATE_W_EXPc ILP1_mf

HVPO.W.4_NA20G5_NBL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NA20G5_NBL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NA20G5_NBL_GATE_W_EXPc >= 1000
  [AREA(NA20G5_NBL_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NA20G5_NBL.rep NA20G5_NBL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NA20G5_NBL + GRID
}
NA29G5_GATE_WID = POLY INSIDE EDGE NA29G5_CH
NA29G5_GATE_W_EXPc = EXPAND EDGE NA29G5_GATE_WID INSIDE BY GRID  
CONNECT NA29G5_GATE_W_EXPc ILP1_mf

HVPO.W.4_NA29G5 { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NA29G5
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NA29G5_GATE_W_EXPc >= 1000
  [AREA(NA29G5_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NA29G5.rep NA29G5_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NA29G5 + GRID
}
NA29G5_NBL_GATE_WID = POLY INSIDE EDGE NA29G5_NBL_CH
NA29G5_NBL_GATE_W_EXPc = EXPAND EDGE NA29G5_NBL_GATE_WID INSIDE BY GRID  
CONNECT NA29G5_NBL_GATE_W_EXPc ILP1_mf

HVPO.W.4_NA29G5_NBL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NA29G5_NBL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NA29G5_NBL_GATE_W_EXPc >= 1000
  [AREA(NA29G5_NBL_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NA29G5_NBL.rep NA29G5_NBL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NA29G5_NBL + GRID
}
NA29G3_DEP_NBL_GATE_WID = POLY INSIDE EDGE NA29G3_DEP_NBL_CH
NA29G3_DEP_NBL_GATE_W_EXPc = EXPAND EDGE NA29G3_DEP_NBL_GATE_WID INSIDE BY GRID  
CONNECT NA29G3_DEP_NBL_GATE_W_EXPc ILP1_mf

HVPO.W.4_NA29G3_DEP_NBL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NA29G3_DEP_NBL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NA29G3_DEP_NBL_GATE_W_EXPc >= 1000
  [AREA(NA29G3_DEP_NBL_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NA29G3_DEP_NBL.rep NA29G3_DEP_NBL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NA29G3_DEP_NBL + GRID
}
VARIABLE HVPO_W_4_PA9G5_SLIT_NBL		200
VARIABLE HVPO_W_4_PA9G5_NBL			200
VARIABLE HVPO_W_4_PA16G5_SLIT_NBL		200
VARIABLE HVPO_W_4_PA16G5_NBL			200
VARIABLE HVPO_W_4_PA12G5_SLIT_BL		200
VARIABLE HVPO_W_4_PA12G5_NBL			200
VARIABLE HVPO_W_4_PA20G5_SLIT_BL		200
VARIABLE HVPO_W_4_PA20G5_BL				200
VARIABLE HVPO_W_4_PA29G5_BL				200
PA9G5_SLIT_NBL_GATE_WID = POLY INSIDE EDGE PA9G5_SLIT_NBL_CH
PA9G5_SLIT_NBL_GATE_W_EXPc = EXPAND EDGE PA9G5_SLIT_NBL_GATE_WID INSIDE BY GRID  
CONNECT PA9G5_SLIT_NBL_GATE_W_EXPc ILP1_mf

HVPO.W.4_PA9G5_SLIT_NBL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_PA9G5_SLIT_NBL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO PA9G5_SLIT_NBL_GATE_W_EXPc >= 1000
  [AREA(PA9G5_SLIT_NBL_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_PA9G5_SLIT_NBL.rep PA9G5_SLIT_NBL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_PA9G5_SLIT_NBL + GRID
}
PA9G5_NBL_GATE_WID = POLY INSIDE EDGE PA9G5_NBL_CH
PA9G5_NBL_GATE_W_EXPc = EXPAND EDGE PA9G5_NBL_GATE_WID INSIDE BY GRID  
CONNECT PA9G5_NBL_GATE_W_EXPc ILP1_mf

HVPO.W.4_PA9G5_NBL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_PA9G5_NBL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO PA9G5_NBL_GATE_W_EXPc >= 1000
  [AREA(PA9G5_NBL_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_PA9G5_NBL.rep PA9G5_NBL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_PA9G5_NBL + GRID
}
PA16G5_SLIT_NBL_GATE_WID = POLY INSIDE EDGE PA16G5_SLIT_NBL_CH
PA16G5_SLIT_NBL_GATE_W_EXPc = EXPAND EDGE PA16G5_SLIT_NBL_GATE_WID INSIDE BY GRID  
CONNECT PA16G5_SLIT_NBL_GATE_W_EXPc ILP1_mf

HVPO.W.4_PA16G5_SLIT_NBL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_PA16G5_SLIT_NBL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO PA16G5_SLIT_NBL_GATE_W_EXPc >= 1000
  [AREA(PA16G5_SLIT_NBL_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_PA16G5_SLIT_NBL.rep PA16G5_SLIT_NBL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_PA16G5_SLIT_NBL + GRID
}
PA16G5_NBL_GATE_WID = POLY INSIDE EDGE PA16G5_NBL_CH
PA16G5_NBL_GATE_W_EXPc = EXPAND EDGE PA16G5_NBL_GATE_WID INSIDE BY GRID  
CONNECT PA16G5_NBL_GATE_W_EXPc ILP1_mf

HVPO.W.4_PA16G5_NBL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_PA16G5_NBL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO PA16G5_NBL_GATE_W_EXPc >= 1000
  [AREA(PA16G5_NBL_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_PA16G5_NBL.rep PA16G5_NBL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_PA16G5_NBL + GRID
}
PA12G5_SLIT_BL_GATE_WID = POLY INSIDE EDGE PA12G5_SLIT_BL_CH
PA12G5_SLIT_BL_GATE_W_EXPc = EXPAND EDGE PA12G5_SLIT_BL_GATE_WID INSIDE BY GRID  
CONNECT PA12G5_SLIT_BL_GATE_W_EXPc ILP1_mf

HVPO.W.4_PA12G5_SLIT_BL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_PA12G5_SLIT_BL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO PA12G5_SLIT_BL_GATE_W_EXPc >= 1000
  [AREA(PA12G5_SLIT_BL_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_PA12G5_SLIT_BL.rep PA12G5_SLIT_BL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_PA12G5_SLIT_BL + GRID
}
PA12G5_NBL_GATE_WID = POLY INSIDE EDGE PA12G5_NBL_CH
PA12G5_NBL_GATE_W_EXPc = EXPAND EDGE PA12G5_NBL_GATE_WID INSIDE BY GRID  
CONNECT PA12G5_NBL_GATE_W_EXPc ILP1_mf

HVPO.W.4_PA12G5_NBL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_PA12G5_NBL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO PA12G5_NBL_GATE_W_EXPc >= 1000
  [AREA(PA12G5_NBL_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_PA12G5_NBL.rep PA12G5_NBL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_PA12G5_NBL + GRID
}
PA20G5_SLIT_BL_GATE_WID = POLY INSIDE EDGE PA20G5_SLIT_BL_CH
PA20G5_SLIT_BL_GATE_W_EXPc = EXPAND EDGE PA20G5_SLIT_BL_GATE_WID INSIDE BY GRID  
CONNECT PA20G5_SLIT_BL_GATE_W_EXPc ILP1_mf

HVPO.W.4_PA20G5_SLIT_BL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_PA20G5_SLIT_BL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO PA20G5_SLIT_BL_GATE_W_EXPc >= 1000
  [AREA(PA20G5_SLIT_BL_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_PA20G5_SLIT_BL.rep PA20G5_SLIT_BL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_PA20G5_SLIT_BL + GRID
}
PA20G5_BL_GATE_WID = POLY INSIDE EDGE PA20G5_BL_CH
PA20G5_BL_GATE_W_EXPc = EXPAND EDGE PA20G5_BL_GATE_WID INSIDE BY GRID  
CONNECT PA20G5_BL_GATE_W_EXPc ILP1_mf

HVPO.W.4_PA20G5_BL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_PA20G5_BL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO PA20G5_BL_GATE_W_EXPc >= 1000
  [AREA(PA20G5_BL_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_PA20G5_BL.rep PA20G5_BL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_PA20G5_BL + GRID
}
PA29G5_BL_GATE_WID = POLY INSIDE EDGE PA29G5_BL_CH
PA29G5_BL_GATE_W_EXPc = EXPAND EDGE PA29G5_BL_GATE_WID INSIDE BY GRID  
CONNECT PA29G5_BL_GATE_W_EXPc ILP1_mf

HVPO.W.4_PA29G5_BL { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_PA29G5_BL
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO PA29G5_BL_GATE_W_EXPc >= 1000
  [AREA(PA29G5_BL_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_PA29G5_BL.rep PA29G5_BL_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_PA29G5_BL + GRID
}

VARIABLE HVPO_W_4_NLD36G5_GB			350
VARIABLE HVPO_W_4_NLD45G5_GB			350
VARIABLE HVPO_W_4_NA45G3_DEP_GB			350
NLD36G5_GB_GATE_WID = POLY INSIDE EDGE NLD36G5_GB_CH
NLD36G5_GB_GATE_W_EXPc = EXPAND EDGE NLD36G5_GB_GATE_WID INSIDE BY GRID  
CONNECT NLD36G5_GB_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD36G5_GB { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD36G5_GB
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD36G5_GB_GATE_W_EXPc >= 1000
  [AREA(NLD36G5_GB_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD36G5_GB.rep NLD36G5_GB_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD36G5_GB + GRID
}
NLD45G5_GB_GATE_WID = POLY INSIDE EDGE NLD45G5_GB_CH
NLD45G5_GB_GATE_W_EXPc = EXPAND EDGE NLD45G5_GB_GATE_WID INSIDE BY GRID  
CONNECT NLD45G5_GB_GATE_W_EXPc ILP1_mf

HVPO.W.4_NLD45G5_GB { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NLD45G5_GB
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NLD45G5_GB_GATE_W_EXPc >= 1000
  [AREA(NLD45G5_GB_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NLD45G5_GB.rep NLD45G5_GB_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NLD45G5_GB + GRID
}
NA45G3_DEP_GB_GATE_WID = POLY INSIDE EDGE NA45G3_DEP_GB_CH
NA45G3_DEP_GB_GATE_W_EXPc = EXPAND EDGE NA45G3_DEP_GB_GATE_WID INSIDE BY GRID  
CONNECT NA45G3_DEP_GB_GATE_W_EXPc ILP1_mf

HVPO.W.4_NA45G3_DEP_GB { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_NA45G3_DEP_GB
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO NA45G3_DEP_GB_GATE_W_EXPc >= 1000
  [AREA(NA45G3_DEP_GB_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_NA45G3_DEP_GB.rep NA45G3_DEP_GB_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_NA45G3_DEP_GB + GRID
}

VARIABLE HVPO_W_4_PA36G5_BL_GB			400
VARIABLE HVPO_W_4_PA45G5_BL_GB			400

PA36G5_BL_GB_GATE_WID = POLY INSIDE EDGE PA36G5_BL_GB_CH
PA36G5_BL_GB_GATE_W_EXPc = EXPAND EDGE PA36G5_BL_GB_GATE_WID INSIDE BY GRID  
CONNECT PA36G5_BL_GB_GATE_W_EXPc ILP1_mf

HVPO.W.4_PA36G5_BL_GB { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_PA36G5_BL_GB
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO PA36G5_BL_GB_GATE_W_EXPc >= 1000
  [AREA(PA36G5_BL_GB_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_PA36G5_BL_GB.rep PA36G5_BL_GB_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_PA36G5_BL_GB + GRID
}
PA45G5_BL_GB_GATE_WID = POLY INSIDE EDGE PA45G5_BL_GB_CH
PA45G5_BL_GB_GATE_W_EXPc = EXPAND EDGE PA45G5_BL_GB_GATE_WID INSIDE BY GRID  
CONNECT PA45G5_BL_GB_GATE_W_EXPc ILP1_mf

HVPO.W.4_PA45G5_BL_GB { @ Total channel width of HV switch MOS which is one or more HV switch MOS
                      @ share same connection  >= ^HVPO_W_4_PA45G5_BL_GB
		              @ The following notes are DRC checkable through metal connection:
		              @ Gates of HV switch MOS have to be connected to the same path . 
  A = NET AREA RATIO PA45G5_BL_GB_GATE_W_EXPc >= 1000
  [AREA(PA45G5_BL_GB_GATE_W_EXPc)/GRID]
  RDB HVPO.W.4_PA45G5_BL_GB.rep PA45G5_BL_GB_GATE_W_EXPc
  ENCLOSE RECTANGLE A GRID HVPO_W_4_PA45G5_BL_GB + GRID
}

HVPO.R.1 { @ In HV area, PO region is not allowed used for high voltage interconnection.
		   @ This is checked by the following DRC :
		   @ 1.{PO INTERACT HVOD} must be rectangle
		   @ 2.{HVPO INTERACT (POLY AND OD)} > 1 is not allowed.(except Zener Diode with NBL(GA))
	 X = PPOD_ISO_H ENCLOSE HVBJT_E
	 X1 =(HVPO INTERACT NLD6G5_DE_FULLY_ISO_GATE) NOT (SIZE NLD6G5_DE_FULLY_ISO_GATE BY 0.1)
     X2 = (NLD5G5_ISO_SWITCH_GATE OR NLD6G5_DE_GATE) OR PCH5_AS_SWITCH_MAC_GATE 
     ((HVPO INTERACT (POLY AND OD) > 1) NOT INTERACT DIO_ZENER_NBL_M) NOT INTERACT X
	 (NOT RECTANGLE (((POLY INTERACT HVOD) NOT INTERACT DIO_ZENER_NBL_M) NOT INTERACT X)) NOT INTERACT (X1 OR X2)
}

CFP.W.1 { @ Min width of CFP >= ^CFP_W_1
  INT CFP < CFP_W_1 ABUT < 90 SINGULAR REGION
}

CFP.W.2 { @ Max width of CFP <= ^CFP_W_2
  WITH WIDTH CFP > CFP_W_2
}

CFP.S.1 { @ Min space between two CFP >= ^CFP_S_1
  EXT CFP < CFP_S_1 ABUT < 90 SINGULAR REGION
}

CFP.R.1 { @ CFP is must for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),
		  @ PA20G5 NBL(GA),PA20G5 SLIT NBL(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso(GA),NA29G5(GA),
		  @ NA29G5 NBL(GA),NA29G3 dep NBL(GA),PA29G5 NBL(GA),NLD45G5 NBL(GB),12V SBD(GA),16V SBD(GA),24V SBD(GA),24V ESD GA.
  NLD12G5_CH NOT INTERACT CFP
  NLD12G5_FULLY_ISO_CH NOT INTERACT CFP
  NLD16G5_CH NOT INTERACT CFP
  NLD16G5_FULLY_ISO_CH NOT INTERACT CFP
  NLD20G5_FULLY_ISO_CH NOT INTERACT CFP
  NLD20G5_CH NOT INTERACT CFP
  NLD24G5_ISO_SWITCH_CH NOT INTERACT CFP
  NLD24G5_FULLY_ISO_CH NOT INTERACT CFP
  NA29G5_CH NOT INTERACT CFP
  NA29G5_NBL_CH NOT INTERACT CFP
  NA29G3_dep_NBL_CH NOT INTERACT CFP
  NLD36G5_GB_CH NOT INTERACT CFP
  NLD45G5_GB_CH NOT INTERACT CFP
  NA45G3_DEP_GB_CH NOT INTERACT CFP
  PA16G5_NBL_CH NOT INTERACT CFP
  PA16G5_SLIT_NBL_CH NOT INTERACT CFP
  NLD24G5_CH NOT INTERACT CFP
  NLD24G5_SWITCH_CH NOT INTERACT CFP
  NA20G5_CH NOT INTERACT CFP 
  NA20G5_NBL_CH NOT INTERACT CFP 
  PA20G5_BL_CH NOT INTERACT CFP
  PA20G5_SLIT_BL_CH NOT INTERACT CFP
  PA29G5_BL_CH INTERACT CFP
  DIO_SBD_12V_M NOT INTERACT CFP
  DIO_SBD_16V_M NOT INTERACT CFP
  DIO_SBD_24V_M NOT INTERACT CFP
  COL_EMI_ESD_merge_PNP_24 NOT INTERACT CFP
}

CFP.W.3_SBD_12V { @ min and max width of Single CFP in parallel inside RPO for HV SBD_12V diode == ^CFP_W_3_SBD_12V
  A = RPO INTERACT DIO_SBD_12V_M
  B = CFP INSIDE A 
  INT B < CFP_W_3_SBD_12V ABUT < 90 SINGULAR REGION
  SIZE B BY CFP_W_3_SBD_12V/2 UNDEROVER
}

CFP.S.2_SBD_12V { @ min and max space between two CFP inside RPO for SBD_12V diode ==^CFP_S_2_SBD_12V
  A = RPO INTERACT DIO_SBD_12V_M
  B = CFP INSIDE A
  EXT B < CFP_S_2_SBD_12V ABUT < 90 SINGULAR REGION 
  C = SIZE B BY CFP_S_2_SBD_12V/2 OVERUNDER
  D = A INTERACT C > 1
  B INTERACT D
}

CFP.E.5_SBD_12V { @ min extension of M1 beyond CFP within RPO for HV SBD_12V diode >= ^CFP_E_5_SBD_12V
  A = RPO INTERACT DIO_SBD_12V_M
  B = CFP INSIDE A
  ENC B M1 < CFP_E_5_SBD_12V ABUT < 90 SINGULAR REGION
}

CFP.W.3_SBD_16V { @ min and max width of Single CFP in parallel inside RPO for HV SBD_16V diode == ^CFP_W_3_SBD_16V
  A = RPO INTERACT DIO_SBD_16V_M
  B = CFP INSIDE A 
  INT B < CFP_W_3_SBD_16V ABUT < 90 SINGULAR REGION
  SIZE B BY CFP_W_3_SBD_16V/2 UNDEROVER
}

CFP.S.2_SBD_16V { @ min and max space between two CFP inside RPO for SBD_16V diode ==^CFP_S_2_SBD_16V
  A = RPO INTERACT DIO_SBD_16V_M
  B = CFP INSIDE A
  EXT B < CFP_S_2_SBD_16V ABUT < 90 SINGULAR REGION 
  C = SIZE B BY CFP_S_2_SBD_16V/2 OVERUNDER
  D = A INTERACT C > 1
  B INTERACT D
}

CFP.E.5_SBD_16V { @ min extension of M1 beyond CFP within RPO for HV SBD_16V diode >= ^CFP_E_5_SBD_16V
  A = RPO INTERACT DIO_SBD_16V_M
  B = CFP INSIDE A
  ENC B M1 < CFP_E_5_SBD_16V ABUT < 90 SINGULAR REGION
}

CFP.W.3_SBD_24V { @ min and max width of Single CFP in parallel inside RPO for HV SBD_24V diode == ^CFP_W_3_SBD_24V
  A = RPO INTERACT DIO_SBD_24V_M
  B = CFP INSIDE A 
  INT B < CFP_W_3_SBD_24V ABUT < 90 SINGULAR REGION
  SIZE B BY CFP_W_3_SBD_24V/2 UNDEROVER
}

CFP.S.2_SBD_24V { @ min and max space between two CFP inside RPO for SBD_24V diode ==^CFP_S_2_SBD_24V
  A = RPO INTERACT DIO_SBD_24V_M
  B = CFP INSIDE A
  EXT B < CFP_S_2_SBD_24V ABUT < 90 SINGULAR REGION 
  C = SIZE B BY CFP_S_2_SBD_24V/2 OVERUNDER
  D = A INTERACT C > 1
  B INTERACT D
}

CFP.E.5_SBD_24V { @ min extension of M1 beyond CFP within RPO for HV SBD_24V diode >= ^CFP_E_5_SBD_24V
  A = RPO INTERACT DIO_SBD_24V_M
  B = CFP INSIDE A
  ENC B M1 < CFP_E_5_SBD_24V ABUT < 90 SINGULAR REGION
}

CFP.E.1_NLD12G5{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NLD12G5_CH OR NLD12G5_D)
     A NOT TOUCH (POLY INTERACT NLD12G5_GATE)
}
CFP.E.1_NLD12G5_FULLY_ISO{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NLD12G5_FULLY_ISO_CH OR NLD12G5_FULLY_ISO_D)
     A NOT TOUCH (POLY INTERACT NLD12G5_FULLY_ISO_GATE)
}
CFP.E.1_NLD16G5{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NLD16G5_CH OR NLD16G5_D)
     A NOT TOUCH (POLY INTERACT NLD16G5_GATE)
}
CFP.E.1_NLD16G5_FULLY_ISO{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NLD16G5_FULLY_ISO_CH OR NLD16G5_FULLY_ISO_D)
     A NOT TOUCH (POLY INTERACT NLD16G5_FULLY_ISO_GATE)
}
CFP.E.1_NLD20G5{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NLD20G5_CH OR NLD20G5_D)
     A NOT TOUCH (POLY INTERACT NLD20G5_GATE)
}
CFP.E.1_NLD20G5_FULLY_ISO{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NLD20G5_FULLY_ISO_CH OR NLD20G5_FULLY_ISO_D)
     A NOT TOUCH (POLY INTERACT NLD20G5_FULLY_ISO_GATE)
}
CFP.E.1_NLD24G5_FULLY_ISO{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NLD24G5_FULLY_ISO_CH OR NLD24G5_FULLY_ISO_D)
     A NOT TOUCH (POLY INTERACT NLD24G5_FULLY_ISO_GATE)
}
CFP.E.1_NLD24G5_ISO_SWITCH{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NLD24G5_ISO_SWITCH_CH OR NLD24G5_ISO_SWITCH_D)
     A NOT TOUCH (POLY INTERACT NLD24G5_ISO_SWITCH_GATE)
}
CFP.E.1_NA20G5{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NA20G5_CH OR NA20G5_D)
     A NOT TOUCH (POLY INTERACT NA20G5_GATE)
}
CFP.E.1_NA20G5_NBL{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NA20G5_NBL_CH OR NA20G5_NBL_D)
     A NOT TOUCH (POLY INTERACT NA20G5_NBL_GATE)
}
CFP.E.1_NA29G5{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NA29G5_CH OR NA29G5_D)
     A NOT TOUCH (POLY INTERACT NA29G5_GATE)
}
CFP.E.1_NA29G5_NBL{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NA29G5_NBL_CH OR NA29G5_NBL_D)
     A NOT TOUCH (POLY INTERACT NA29G5_NBL_GATE)
}
CFP.E.1_NA29G3_DEP_NBL{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NA29G3_DEP_NBL_CH OR NA29G3_DEP_NBL_D)
     A NOT TOUCH (POLY INTERACT NA29G3_DEP_NBL_GATE)
}
CFP.E.1_NLD36G5_GB{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NLD36G5_GB_CH OR NLD36G5_GB_D)
     A NOT TOUCH (POLY INTERACT NLD36G5_GB_GATE)
}
CFP.E.1_NLD45G5_GB{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NLD45G5_GB_CH OR NLD45G5_GB_D)
     A NOT TOUCH (POLY INTERACT NLD45G5_GB_GATE)
}
CFP.E.1_NA45G3_DEP_GB{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NA45G3_DEP_GB_CH OR NA45G3_DEP_GB_D)
     A NOT TOUCH (POLY INTERACT NA45G3_DEP_GB_GATE)
}
CFP.E.1_PA20G5_BL{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (PA20G5_BL_CH OR PA20G5_BL_D)
     A NOT TOUCH (POLY INTERACT PA20G5_BL_GATE)
}
CFP.E.1_PA20G5_SLIT_BL{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (PA20G5_SLIT_BL_CH OR PA20G5_SLIT_BL_D)
     A NOT TOUCH (POLY INTERACT PA20G5_SLIT_BL_GATE)
}
CFP.E.1_PA29G5_BL{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (PA29G5_BL_CH OR PA29G5_BL_D)
     A NOT TOUCH (POLY INTERACT PA29G5_BL_GATE)
}
CFP.E.1_NLD24G5{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NLD24G5_CH OR NLD24G5_D)
     A NOT TOUCH (POLY INTERACT NLD24G5_GATE)
}

CFP.E.1_NLD24G5_SWITCH{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (NLD24G5_SWITCH_CH OR NLD24G5_SWITCH_D)
     A NOT TOUCH (POLY INTERACT NLD24G5_SWITCH_GATE)
}

CFP.E.1_PA16G5_NBL{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (PA16G5_NBL_CH OR PA16G5_NBL_D)
     A NOT TOUCH (POLY INTERACT PA16G5_NBL_GATE)
}

CFP.E.1_PA16G5_SLIT_NBL{ @ min and max clearance from CFP to PO in channel length direction == 0
     A = CFP INTERACT (PA16G5_SLIT_NBL_CH OR PA16G5_SLIT_NBL_D)
     A NOT TOUCH (POLY INTERACT PA16G5_SLIT_NBL_GATE)
}



CFP.E.2_NLD12G5{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NLD12G5
     A = CFP INTERACT NLD12G5_CH
     ENC NLD12G5_CH A < CFP_E_2_NLD12G5 ABUT < 90 SINGULAR REGION
}
CFP.E.2_NLD12G5_FULLY_ISO{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NLD12G5_FULLY_ISO
     A = CFP INTERACT NLD12G5_FULLY_ISO_CH
     ENC NLD12G5_FULLY_ISO_CH A < CFP_E_2_NLD12G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
CFP.E.2_NLD16G5{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NLD16G5
     A = CFP INTERACT NLD16G5_CH
     ENC NLD16G5_CH A < CFP_E_2_NLD16G5 ABUT < 90 SINGULAR REGION
}
CFP.E.2_NLD16G5_FULLY_ISO{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NLD16G5_FULLY_ISO
     A = CFP INTERACT NLD16G5_FULLY_ISO_CH
     ENC NLD16G5_FULLY_ISO_CH A < CFP_E_2_NLD16G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
CFP.E.2_NLD20G5{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NLD20G5
     A = CFP INTERACT NLD20G5_CH
     ENC NLD20G5_CH A < CFP_E_2_NLD20G5 ABUT < 90 SINGULAR REGION
}
CFP.E.2_NLD20G5_FULLY_ISO{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NLD20G5_FULLY_ISO
     A = CFP INTERACT NLD20G5_FULLY_ISO_CH
     ENC NLD20G5_FULLY_ISO_CH A < CFP_E_2_NLD20G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
CFP.E.2_NLD24G5_FULLY_ISO{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NLD24G5_FULLY_ISO
     A = CFP INTERACT NLD24G5_FULLY_ISO_CH
     ENC NLD24G5_FULLY_ISO_CH A < CFP_E_2_NLD24G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
CFP.E.2_NLD24G5_ISO_SWITCH{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NLD24G5_ISO_SWITCH
     A = CFP INTERACT NLD24G5_ISO_SWITCH_CH
     ENC NLD24G5_ISO_SWITCH_CH A < CFP_E_2_NLD24G5_ISO_SWITCH ABUT < 90 SINGULAR REGION
}
CFP.E.2_NA20G5{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NA20G5
     A = CFP INTERACT NA20G5_CH
     ENC NA20G5_CH A < CFP_E_2_NA20G5 ABUT < 90 SINGULAR REGION
}
CFP.E.2_NA20G5_NBL{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NA20G5_NBL
     A = CFP INTERACT NA20G5_NBL_CH
     ENC NA20G5_NBL_CH A < CFP_E_2_NA20G5_NBL ABUT < 90 SINGULAR REGION
}
CFP.E.2_NA29G5{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NA29G5
     A = CFP INTERACT NA29G5_CH
     ENC NA29G5_CH A < CFP_E_2_NA29G5 ABUT < 90 SINGULAR REGION
}
CFP.E.2_NA29G5_NBL{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NA29G5_NBL
     A = CFP INTERACT NA29G5_NBL_CH
     ENC NA29G5_NBL_CH A < CFP_E_2_NA29G5_NBL ABUT < 90 SINGULAR REGION
}
CFP.E.2_NA29G3_DEP_NBL{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NA29G3_DEP_NBL
     A = CFP INTERACT NA29G3_DEP_NBL_CH
     ENC NA29G3_DEP_NBL_CH A < CFP_E_2_NA29G3_DEP_NBL ABUT < 90 SINGULAR REGION
}
CFP.E.2_NLD36G5_GB{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NLD36G5_GB
     A = CFP INTERACT NLD36G5_GB_CH
     ENC NLD36G5_GB_CH A < CFP_E_2_NLD36G5_GB ABUT < 90 SINGULAR REGION
}
CFP.E.2_NLD45G5_GB{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NLD45G5_GB
     A = CFP INTERACT NLD45G5_GB_CH
     ENC NLD45G5_GB_CH A < CFP_E_2_NLD45G5_GB ABUT < 90 SINGULAR REGION
}
CFP.E.2_NA45G3_DEP_GB{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NA45G3_DEP_GB
     A = CFP INTERACT NA45G3_DEP_GB_CH
     ENC NA45G3_DEP_GB_CH A < CFP_E_2_NA45G3_DEP_GB ABUT < 90 SINGULAR REGION
}
CFP.E.2_PA20G5_BL{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_PA20G5_BL
     A = CFP INTERACT PA20G5_BL_CH
     ENC PA20G5_BL_CH A < CFP_E_2_PA20G5_BL ABUT < 90 SINGULAR REGION
}
CFP.E.2_PA20G5_SLIT_BL{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_PA20G5_SLIT_BL
     A = CFP INTERACT PA20G5_SLIT_BL_CH
     ENC PA20G5_SLIT_BL_CH A < CFP_E_2_PA20G5_SLIT_BL ABUT < 90 SINGULAR REGION
}
CFP.E.2_NLD24G5{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NLD24G5
     A = CFP INTERACT NLD24G5_CH
     ENC NLD24G5_CH A < CFP_E_2_NLD24G5 ABUT < 90 SINGULAR REGION
}

CFP.E.2_NLD24G5_SWITCH{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_NLD24G5_SWITCH
     A = CFP INTERACT NLD24G5_SWITCH_CH
     ENC NLD24G5_SWITCH_CH A < CFP_E_2_NLD24G5_SWITCH ABUT < 90 SINGULAR REGION
}

CFP.E.2_PA16G5_NBL{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_PA16G5_NBL
     A = CFP INTERACT PA16G5_NBL_CH
     ENC PA16G5_NBL_CH A < CFP_E_2_PA16G5_NBL ABUT < 90 SINGULAR REGION
}

CFP.E.2_PA16G5_SLIT_NBL{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_PA16G5_SLIT_NBL
     A = CFP INTERACT PA16G5_SLIT_NBL_CH
     ENC PA16G5_SLIT_NBL_CH A < CFP_E_2_PA16G5_SLIT_NBL ABUT < 90 SINGULAR REGION
}



CFP.E.2_PA29G5_BL{ @ min extension of CFP beyond OD in channel width direction == ^ CFP_E_2_PA29G5_BL
     A = CFP INSIDE EDGE PA29G5_BL_D
	 B = CFP TOUCH EDGE A
	 C = EXPAND EDGE B INSIDE BY GRID
	 D = (CFP NOT TOUCH EDGE A) TOUCH EDGE C
     ENC PA29G5_BL_D D < CFP_E_2_PA29G5_BL ABUT < 90 OPPOSITE REGION
}

CFP.E.3_NLD12G5{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NLD12G5
     A = CFP INTERACT NLD12G5_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NLD12G5_CH)
     C = RPO INTERACT NLD12G5_CH
	 ENC B C < CFP_E_3_NLD12G5 ABUT < 90 REGION
}
CFP.E.3_NLD12G5_FULLY_ISO{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NLD12G5_FULLY_ISO
     A = CFP INTERACT NLD12G5_FULLY_ISO_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NLD12G5_FULLY_ISO_CH)
     C = RPO INTERACT NLD12G5_FULLY_ISO_CH
	 ENC B C < CFP_E_3_NLD12G5_FULLY_ISO ABUT < 90 REGION
}
CFP.E.3_NLD16G5{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NLD16G5
     A = CFP INTERACT NLD16G5_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NLD16G5_CH)
     C = RPO INTERACT NLD16G5_CH
	 ENC B C < CFP_E_3_NLD16G5 ABUT < 90 REGION
}
CFP.E.3_NLD16G5_FULLY_ISO{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NLD16G5_FULLY_ISO
     A = CFP INTERACT NLD16G5_FULLY_ISO_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NLD16G5_FULLY_ISO_CH)
     C = RPO INTERACT NLD16G5_FULLY_ISO_CH
	 ENC B C < CFP_E_3_NLD16G5_FULLY_ISO ABUT < 90 REGION
}
CFP.E.3_NLD20G5{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NLD20G5
     A = CFP INTERACT NLD20G5_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NLD20G5_CH)
     C = RPO INTERACT NLD20G5_CH
	 ENC B C < CFP_E_3_NLD20G5 ABUT < 90 REGION
}
CFP.E.3_NLD20G5_FULLY_ISO{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NLD20G5_FULLY_ISO
     A = CFP INTERACT NLD20G5_FULLY_ISO_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NLD20G5_FULLY_ISO_CH)
     C = RPO INTERACT NLD20G5_FULLY_ISO_CH
	 ENC B C < CFP_E_3_NLD20G5_FULLY_ISO ABUT < 90 REGION
}
CFP.E.3_NLD24G5_FULLY_ISO{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NLD24G5_FULLY_ISO
     A = CFP INTERACT NLD24G5_FULLY_ISO_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NLD24G5_FULLY_ISO_CH)
     C = RPO INTERACT NLD24G5_FULLY_ISO_CH
	 ENC B C < CFP_E_3_NLD24G5_FULLY_ISO ABUT < 90 REGION
}
CFP.E.3_NLD24G5_ISO_SWITCH{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NLD24G5_ISO_SWITCH
     A = CFP INTERACT NLD24G5_ISO_SWITCH_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NLD24G5_ISO_SWITCH_CH)
     C = RPO INTERACT NLD24G5_ISO_SWITCH_CH
	 ENC B C < CFP_E_3_NLD24G5_ISO_SWITCH ABUT < 90 REGION
}
CFP.E.3_NA20G5{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NA20G5
     A = CFP INTERACT NA20G5_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NA20G5_CH)
     C = RPO INTERACT NA20G5_CH
	 ENC B C < CFP_E_3_NA20G5 ABUT < 90 REGION
}
CFP.E.3_NA20G5_NBL{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NA20G5_NBL
     A = CFP INTERACT NA20G5_NBL_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NA20G5_NBL_CH)
     C = RPO INTERACT NA20G5_NBL_CH
	 ENC B C < CFP_E_3_NA20G5_NBL ABUT < 90 REGION
}
CFP.E.3_NA29G5{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NA29G5
     A = CFP INTERACT NA29G5_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NA29G5_CH)
     C = RPO INTERACT NA29G5_CH
	 ENC B C < CFP_E_3_NA29G5 ABUT < 90 REGION
}
CFP.E.3_NA29G5_NBL{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NA29G5_NBL
     A = CFP INTERACT NA29G5_NBL_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NA29G5_NBL_CH)
     C = RPO INTERACT NA29G5_NBL_CH
	 ENC B C < CFP_E_3_NA29G5_NBL ABUT < 90 REGION
}
CFP.E.3_NA29G3_DEP_NBL{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NA29G3_DEP_NBL
     A = CFP INTERACT NA29G3_DEP_NBL_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NA29G3_DEP_NBL_CH)
     C = RPO INTERACT NA29G3_DEP_NBL_CH
	 ENC B C < CFP_E_3_NA29G3_DEP_NBL ABUT < 90 REGION
}
CFP.E.3_NLD36G5_GB{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NLD36G5_GB
     A = CFP INTERACT NLD36G5_GB_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NLD36G5_GB_CH)
     C = RPO INTERACT NLD36G5_GB_CH
	 ENC B C < CFP_E_3_NLD36G5_GB ABUT < 90 REGION
}
CFP.E.3_NLD45G5_GB{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NLD45G5_GB
     A = CFP INTERACT NLD45G5_GB_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NLD45G5_GB_CH)
     C = RPO INTERACT NLD45G5_GB_CH
	 ENC B C < CFP_E_3_NLD45G5_GB ABUT < 90 REGION
}
CFP.E.3_NA45G3_DEP_GB{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NA45G3_DEP_GB
     A = CFP INTERACT NA45G3_DEP_GB_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NA45G3_DEP_GB_CH)
     C = RPO INTERACT NA45G3_DEP_GB_CH
	 ENC B C < CFP_E_3_NA45G3_DEP_GB ABUT < 90 REGION
}
CFP.E.3_PA20G5_BL{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_PA20G5_BL
     A = CFP INTERACT PA20G5_BL_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE PA20G5_BL_CH)
     C = RPO INTERACT PA20G5_BL_CH
	 ENC B C < CFP_E_3_PA20G5_BL ABUT < 90 REGION
}
CFP.E.3_PA20G5_SLIT_BL{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_PA20G5_SLIT_BL
     A = CFP INTERACT PA20G5_SLIT_BL_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE PA20G5_SLIT_BL_CH)
     C = RPO INTERACT PA20G5_SLIT_BL_CH
	 ENC B C < CFP_E_3_PA20G5_SLIT_BL ABUT < 90 REGION
}
CFP.E.3_NLD24G5{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NLD24G5
     A = CFP INTERACT NLD24G5_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NLD24G5_CH)
     C = RPO INTERACT NLD24G5_CH
	 ENC B C < CFP_E_3_NLD24G5 ABUT < 90 REGION
}

CFP.E.3_NLD24G5_SWITCH{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_NLD24G5_SWITCH
     A = CFP INTERACT NLD24G5_SWITCH_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE NLD24G5_SWITCH_CH)
     C = RPO INTERACT NLD24G5_SWITCH_CH
	 ENC B C < CFP_E_3_NLD24G5_SWITCH ABUT < 90 REGION
}

CFP.E.3_PA16G5_NBL{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_PA16G5_NBL
     A = CFP INTERACT PA16G5_NBL_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE PA16G5_NBL_CH)
     C = RPO INTERACT PA16G5_NBL_CH
	 ENC B C < CFP_E_3_PA16G5_NBL ABUT < 90 REGION
}

CFP.E.3_PA16G5_SLIT_NBL{ @ min extension of RPO beyond CFP in channel width direction >= ^ CFP_E_3_PA16G5_SLIT_NBL
     A = CFP INTERACT PA16G5_SLIT_NBL_CH
	 B = A NOT TOUCH EDGE (A INSIDE EDGE PA16G5_SLIT_NBL_CH)
     C = RPO INTERACT PA16G5_SLIT_NBL_CH
	 ENC B C < CFP_E_3_PA16G5_SLIT_NBL ABUT < 90 REGION
}



CFP.E.3_PA29G5_BL{ @ min extension of RPO beyond CFP in channel width direction == ^ CFP_E_3_PA29G5_BL
     A = RPO INTERACT PA29G5_BL_D
	 B = A NOT TOUCH EDGE (A INSIDE EDGE (PA29G5_BL_CH OR PA29G5_BL_D))
     C = CFP INTERACT PA29G5_BL_D
	 ENC C B < CFP_E_3_PA29G5_BL ABUT < 90 REGION
}

CFP.E.4_NLD12G5{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NLD12G5
     A = CFP INTERACT (NLD12G5_CH OR NLD12G5_D)
     B = M1 INTERACT (NLD12G5_CH OR NLD12G5_D)
	 ENC A B < CFP_E_4_NLD12G5 ABUT < 90 SINGULAR REGION
}
CFP.E.4_NLD12G5_FULLY_ISO{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NLD12G5_FULLY_ISO
     A = CFP INTERACT (NLD12G5_FULLY_ISO_CH OR NLD12G5_FULLY_ISO_D)
     B = M1 INTERACT (NLD12G5_FULLY_ISO_CH OR NLD12G5_FULLY_ISO_D)
	 ENC A B < CFP_E_4_NLD12G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
CFP.E.4_NLD16G5{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NLD16G5
     A = CFP INTERACT (NLD16G5_CH OR NLD16G5_D)
     B = M1 INTERACT (NLD16G5_CH OR NLD16G5_D)
	 ENC A B < CFP_E_4_NLD16G5 ABUT < 90 SINGULAR REGION
}
CFP.E.4_NLD16G5_FULLY_ISO{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NLD16G5_FULLY_ISO
     A = CFP INTERACT (NLD16G5_FULLY_ISO_CH OR NLD16G5_FULLY_ISO_D)
     B = M1 INTERACT (NLD16G5_FULLY_ISO_CH OR NLD16G5_FULLY_ISO_D)
	 ENC A B < CFP_E_4_NLD16G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
CFP.E.4_NLD20G5{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NLD20G5
     A = CFP INTERACT (NLD20G5_CH OR NLD20G5_D)
     B = M1 INTERACT (NLD20G5_CH OR NLD20G5_D)
	 ENC A B < CFP_E_4_NLD20G5 ABUT < 90 SINGULAR REGION
}
CFP.E.4_NLD20G5_FULLY_ISO{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NLD20G5_FULLY_ISO
     A = CFP INTERACT (NLD20G5_FULLY_ISO_CH OR NLD20G5_FULLY_ISO_D)
     B = M1 INTERACT (NLD20G5_FULLY_ISO_CH OR NLD20G5_FULLY_ISO_D)
	 ENC A B < CFP_E_4_NLD20G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
CFP.E.4_NLD24G5_FULLY_ISO{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NLD24G5_FULLY_ISO
     A = CFP INTERACT (NLD24G5_FULLY_ISO_CH OR NLD24G5_FULLY_ISO_D)
     B = M1 INTERACT (NLD24G5_FULLY_ISO_CH OR NLD24G5_FULLY_ISO_D)
	 ENC A B < CFP_E_4_NLD24G5_FULLY_ISO ABUT < 90 SINGULAR REGION
}
CFP.E.4_NLD24G5_ISO_SWITCH{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NLD24G5_ISO_SWITCH
     A = CFP INTERACT (NLD24G5_ISO_SWITCH_CH OR NLD24G5_ISO_SWITCH_D)
     B = M1 INTERACT (NLD24G5_ISO_SWITCH_CH OR NLD24G5_ISO_SWITCH_D)
	 ENC A B < CFP_E_4_NLD24G5_ISO_SWITCH ABUT < 90 SINGULAR REGION
}
CFP.E.4_NA20G5{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NA20G5
     A = CFP INTERACT (NA20G5_CH OR NA20G5_D)
     B = M1 INTERACT (NA20G5_CH OR NA20G5_D)
	 ENC A B < CFP_E_4_NA20G5 ABUT < 90 SINGULAR REGION
}
CFP.E.4_NA20G5_NBL{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NA20G5_NBL
     A = CFP INTERACT (NA20G5_NBL_CH OR NA20G5_NBL_D)
     B = M1 INTERACT (NA20G5_NBL_CH OR NA20G5_NBL_D)
	 ENC A B < CFP_E_4_NA20G5_NBL ABUT < 90 SINGULAR REGION
}
CFP.E.4_NA29G5{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NA29G5
     A = CFP INTERACT (NA29G5_CH OR NA29G5_D)
     B = M1 INTERACT (NA29G5_CH OR NA29G5_D)
	 ENC A B < CFP_E_4_NA29G5 ABUT < 90 SINGULAR REGION
}
CFP.E.4_NA29G5_NBL{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NA29G5_NBL
     A = CFP INTERACT (NA29G5_NBL_CH OR NA29G5_NBL_D)
     B = M1 INTERACT (NA29G5_NBL_CH OR NA29G5_NBL_D)
	 ENC A B < CFP_E_4_NA29G5_NBL ABUT < 90 SINGULAR REGION
}
CFP.E.4_NA29G3_DEP_NBL{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NA29G3_DEP_NBL
     A = CFP INTERACT (NA29G3_DEP_NBL_CH OR NA29G3_DEP_NBL_D)
     B = M1 INTERACT (NA29G3_DEP_NBL_CH OR NA29G3_DEP_NBL_D)
	 ENC A B < CFP_E_4_NA29G3_DEP_NBL ABUT < 90 SINGULAR REGION
}
CFP.E.4_NLD36G5_GB{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NLD36G5_GB
     A = CFP INTERACT (NLD36G5_GB_CH OR NLD36G5_GB_D)
     B = M1 INTERACT (NLD36G5_GB_CH OR NLD36G5_GB_D)
	 ENC A B < CFP_E_4_NLD36G5_GB ABUT < 90 SINGULAR REGION
}
CFP.E.4_NLD45G5_GB{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NLD45G5_GB
     A = CFP INTERACT (NLD45G5_GB_CH OR NLD45G5_GB_D)
     B = M1 INTERACT (NLD45G5_GB_CH OR NLD45G5_GB_D)
	 ENC A B < CFP_E_4_NLD45G5_GB ABUT < 90 SINGULAR REGION
}
CFP.E.4_NA45G3_DEP_GB{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NA45G3_DEP_GB
     A = CFP INTERACT (NA45G3_DEP_GB_CH OR NA45G3_DEP_GB_D)
     B = M1 INTERACT (NA45G3_DEP_GB_CH OR NA45G3_DEP_GB_D)
	 ENC A B < CFP_E_4_NA45G3_DEP_GB ABUT < 90 SINGULAR REGION
}
CFP.E.4_PA20G5_BL{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_PA20G5_BL
     A = CFP INTERACT (PA20G5_BL_CH OR PA20G5_BL_D)
     B = M1 INTERACT (PA20G5_BL_CH OR PA20G5_BL_D)
	 ENC A B < CFP_E_4_PA20G5_BL ABUT < 90 SINGULAR REGION
}
CFP.E.4_PA20G5_SLIT_BL{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_PA20G5_SLIT_BL
     A = CFP INTERACT (PA20G5_SLIT_BL_CH OR PA20G5_SLIT_BL_D)
     B = M1 INTERACT (PA20G5_SLIT_BL_CH OR PA20G5_SLIT_BL_D)
	 ENC A B < CFP_E_4_PA20G5_SLIT_BL ABUT < 90 SINGULAR REGION
}
CFP.E.4_PA29G5_BL{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_PA29G5_BL
     A = CFP INTERACT (PA29G5_BL_CH OR PA29G5_BL_D)
     B = M1 INTERACT (PA29G5_BL_CH OR PA29G5_BL_D)
	 ENC A B < CFP_E_4_PA29G5_BL ABUT < 90 SINGULAR REGION
}
CFP.E.4_NLD24G5{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NLD24G5
     A = CFP INTERACT (NLD24G5_CH OR NLD24G5_D)
     B = M1 INTERACT (NLD24G5_CH OR NLD24G5_D)
	 ENC A B < CFP_E_4_NLD24G5 ABUT < 90 SINGULAR REGION
}

CFP.E.4_NLD24G5_SWITCH{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_NLD24G5_SWITCH
     A = CFP INTERACT (NLD24G5_SWITCH_CH OR NLD24G5_SWITCH_D)
     B = M1 INTERACT (NLD24G5_SWITCH_CH OR NLD24G5_SWITCH_D)
	 ENC A B < CFP_E_4_NLD24G5_SWITCH ABUT < 90 SINGULAR REGION
}

CFP.E.4_PA16G5_NBL{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_PA16G5_NBL
     A = CFP INTERACT (PA16G5_NBL_CH OR PA16G5_NBL_D)
     B = M1 INTERACT (PA16G5_NBL_CH OR PA16G5_NBL_D)
	 ENC A B < CFP_E_4_PA16G5_NBL ABUT < 90 SINGULAR REGION
}

CFP.E.4_PA16G5_SLIT_NBL{ @ min extension of M1 beyond CFP >= ^ CFP_E_4_PA16G5_SLIT_NBL
     A = CFP INTERACT (PA16G5_SLIT_NBL_CH OR PA16G5_SLIT_NBL_D)
     B = M1 INTERACT (PA16G5_SLIT_NBL_CH OR PA16G5_SLIT_NBL_D)
	 ENC A B < CFP_E_4_PA16G5_SLIT_NBL ABUT < 90 SINGULAR REGION
}



CFP.O.1_NLD12G5{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NLD12G5
     A = CFP INTERACT NLD12G5_CH
     B = A TOUCH EDGE (A INSIDE EDGE NLD12G5_CH)
	 INT B < CFP_O_1_NLD12G5 ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NLD12G5/2 UNDEROVER 
}
CFP.O.1_NLD12G5_FULLY_ISO{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NLD12G5_FULLY_ISO
     A = CFP INTERACT NLD12G5_FULLY_ISO_CH
     B = A TOUCH EDGE (A INSIDE EDGE NLD12G5_FULLY_ISO_CH)
	 INT B < CFP_O_1_NLD12G5_FULLY_ISO ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NLD12G5_FULLY_ISO/2 UNDEROVER 
}
CFP.O.1_NLD16G5{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NLD16G5
     A = CFP INTERACT NLD16G5_CH
     B = A TOUCH EDGE (A INSIDE EDGE NLD16G5_CH)
	 INT B < CFP_O_1_NLD16G5 ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NLD16G5/2 UNDEROVER 
}
CFP.O.1_NLD16G5_FULLY_ISO{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NLD16G5_FULLY_ISO
     A = CFP INTERACT NLD16G5_FULLY_ISO_CH
     B = A TOUCH EDGE (A INSIDE EDGE NLD16G5_FULLY_ISO_CH)
	 INT B < CFP_O_1_NLD16G5_FULLY_ISO ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NLD16G5_FULLY_ISO/2 UNDEROVER 
}
CFP.O.1_NLD20G5{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NLD20G5
     A = CFP INTERACT NLD20G5_CH
     B = A TOUCH EDGE (A INSIDE EDGE NLD20G5_CH)
	 INT B < CFP_O_1_NLD20G5 ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NLD20G5/2 UNDEROVER 
}
CFP.O.1_NLD20G5_FULLY_ISO{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NLD20G5_FULLY_ISO
     A = CFP INTERACT NLD20G5_FULLY_ISO_CH
     B = A TOUCH EDGE (A INSIDE EDGE NLD20G5_FULLY_ISO_CH)
	 INT B < CFP_O_1_NLD20G5_FULLY_ISO ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NLD20G5_FULLY_ISO/2 UNDEROVER 
}
CFP.O.1_NLD24G5_FULLY_ISO{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NLD24G5_FULLY_ISO
     A = CFP INTERACT NLD24G5_FULLY_ISO_CH
     B = A TOUCH EDGE (A INSIDE EDGE NLD24G5_FULLY_ISO_CH)
	 INT B < CFP_O_1_NLD24G5_FULLY_ISO ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NLD24G5_FULLY_ISO/2 UNDEROVER 
}
CFP.O.1_NLD24G5_ISO_SWITCH{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NLD24G5_ISO_SWITCH
     A = CFP INTERACT NLD24G5_ISO_SWITCH_CH
     B = A TOUCH EDGE (A INSIDE EDGE NLD24G5_ISO_SWITCH_CH)
	 INT B < CFP_O_1_NLD24G5_ISO_SWITCH ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NLD24G5_ISO_SWITCH/2 UNDEROVER 
}
CFP.O.1_NA20G5{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NA20G5
     A = CFP INTERACT NA20G5_CH
     B = A TOUCH EDGE (A INSIDE EDGE NA20G5_CH)
	 INT B < CFP_O_1_NA20G5 ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NA20G5/2 UNDEROVER 
}
CFP.O.1_NA20G5_NBL{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NA20G5_NBL
     A = CFP INTERACT NA20G5_NBL_CH
     B = A TOUCH EDGE (A INSIDE EDGE NA20G5_NBL_CH)
	 INT B < CFP_O_1_NA20G5_NBL ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NA20G5_NBL/2 UNDEROVER 
}
CFP.O.1_NA29G5{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NA29G5
     A = CFP INTERACT NA29G5_CH
     B = A TOUCH EDGE (A INSIDE EDGE NA29G5_CH)
	 INT B < CFP_O_1_NA29G5 ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NA29G5/2 UNDEROVER 
}
CFP.O.1_NA29G5_NBL{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NA29G5_NBL
     A = CFP INTERACT NA29G5_NBL_CH
     B = A TOUCH EDGE (A INSIDE EDGE NA29G5_NBL_CH)
	 INT B < CFP_O_1_NA29G5_NBL ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NA29G5_NBL/2 UNDEROVER 
}
CFP.O.1_NA29G3_DEP_NBL{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NA29G3_DEP_NBL
     A = CFP INTERACT NA29G3_DEP_NBL_CH
     B = A TOUCH EDGE (A INSIDE EDGE NA29G3_DEP_NBL_CH)
	 INT B < CFP_O_1_NA29G3_DEP_NBL ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NA29G3_DEP_NBL/2 UNDEROVER 
}
CFP.O.1_NLD24G5{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NLD24G5
     A = CFP INTERACT NLD24G5_CH
     B = A TOUCH EDGE (A INSIDE EDGE NLD24G5_CH)
	 INT B < CFP_O_1_NLD24G5 ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NLD24G5/2 UNDEROVER 
}

CFP.O.1_NLD24G5_SWITCH{ @ min and max overlap of NDD and CFP in channel length direction == ^ CFP_O_1_NLD24G5_SWITCH
     A = CFP INTERACT NLD24G5_SWITCH_CH
     B = A TOUCH EDGE (A INSIDE EDGE NLD24G5_SWITCH_CH)
	 INT B < CFP_O_1_NLD24G5_SWITCH ABUT < 90 REGION
	 C = A AND NDD
	 SIZE C BY CFP_O_1_NLD24G5_SWITCH/2 UNDEROVER 
}



CFP.O.2_PA20G5_BL{ @ min and max overlap of PDD and CFP in channel length direction == ^ CFP_O_2_PA20G5_BL
     A = CFP INTERACT (PA20G5_BL_CH OR PA20G5_BL_D)
	 B = A AND PDD
	 INT B < CFP_O_2_PA20G5_BL ABUT < 90 REGION
	 SIZE B BY CFP_O_2_PA20G5_BL/2 UNDEROVER 
}
CFP.O.2_PA20G5_SLIT_BL{ @ min and max overlap of PDD and CFP in channel length direction == ^ CFP_O_2_PA20G5_SLIT_BL
     A = CFP INTERACT (PA20G5_SLIT_BL_CH OR PA20G5_SLIT_BL_D)
	 B = A AND PDD
	 INT B < CFP_O_2_PA20G5_SLIT_BL ABUT < 90 REGION
	 SIZE B BY CFP_O_2_PA20G5_SLIT_BL/2 UNDEROVER 
}
CFP.O.2_PA29G5_BL{ @ min and max overlap of PDD and CFP in channel length direction == ^ CFP_O_2_PA29G5_BL
     A = CFP INTERACT (PA29G5_BL_CH OR PA29G5_BL_D)
	 B = A AND PDD
	 INT B < CFP_O_2_PA29G5_BL ABUT < 90 REGION
	 SIZE B BY CFP_O_2_PA29G5_BL/2 UNDEROVER 
}

CFP.O.2_PA16G5_NBL{ @ min and max overlap of PDD and CFP in channel length direction == ^ CFP_O_2_PA16G5_NBL
     A = CFP INTERACT (PA16G5_NBL_CH OR PA16G5_NBL_D)
	 B = A AND PDD
	 INT B < CFP_O_2_PA16G5_NBL ABUT < 90 REGION
	 SIZE B BY CFP_O_2_PA16G5_NBL/2 UNDEROVER 
}

CFP.O.2_PA16G5_SLIT_NBL{ @ min and max overlap of PDD and CFP in channel length direction == ^ CFP_O_2_PA16G5_SLIT_NBL
     A = CFP INTERACT (PA16G5_SLIT_NBL_CH OR PA16G5_SLIT_NBL_D)
	 B = A AND PDD
	 INT B < CFP_O_2_PA16G5_SLIT_NBL ABUT < 90 REGION
	 SIZE B BY CFP_O_2_PA16G5_SLIT_NBL/2 UNDEROVER 
}


CFP.O.3_NLD36G5_GB{ @ min and max overlap of HVNW and CFP in channel length direction == ^ CFP_O_3_NLD36G5_GB
     A = CFP INTERACT NLD36G5_GB_CH
     B = A TOUCH EDGE (A INSIDE EDGE NLD36G5_GB_CH)
	 INT B < CFP_O_3_NLD36G5_GB ABUT < 90 REGION
	 C = A AND HVNW
	 SIZE C BY CFP_O_3_NLD36G5_GB/2 UNDEROVER 
}
CFP.O.3_NLD45G5_GB{ @ min and max overlap of HVNW and CFP in channel length direction == ^ CFP_O_3_NLD45G5_GB
     A = CFP INTERACT NLD45G5_GB_CH
     B = A TOUCH EDGE (A INSIDE EDGE NLD45G5_GB_CH)
	 INT B < CFP_O_3_NLD45G5_GB ABUT < 90 REGION
	 C = A AND HVNW
	 SIZE C BY CFP_O_3_NLD45G5_GB/2 UNDEROVER 
}
CFP.O.3_NA45G3_DEP_GB{ @ min and max overlap of HVNW and CFP in channel length direction == ^ CFP_O_3_NA45G3_DEP_GB
     A = CFP INTERACT NA45G3_DEP_GB_CH
     B = A TOUCH EDGE (A INSIDE EDGE NA45G3_DEP_GB_CH)
	 INT B < CFP_O_3_NA45G3_DEP_GB ABUT < 90 REGION
	 C = A AND HVNW
	 SIZE C BY CFP_O_3_NA45G3_DEP_GB/2 UNDEROVER 
}

CFP.R.2_NLD12G5 { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NLD12G5_CH
    B = COPY NLD12G5_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NLD12G5_FULLY_ISO { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NLD12G5_FULLY_ISO_CH
    B = COPY NLD12G5_FULLY_ISO_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NLD16G5 { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NLD16G5_CH
    B = COPY NLD16G5_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NLD16G5_FULLY_ISO { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NLD16G5_FULLY_ISO_CH
    B = COPY NLD16G5_FULLY_ISO_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NLD20G5 { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NLD20G5_CH
    B = COPY NLD20G5_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NLD20G5_FULLY_ISO { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NLD20G5_FULLY_ISO_CH
    B = COPY NLD20G5_FULLY_ISO_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NLD24G5_FULLY_ISO { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NLD24G5_FULLY_ISO_CH
    B = COPY NLD24G5_FULLY_ISO_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NLD24G5_ISO_SWITCH { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NLD24G5_ISO_SWITCH_CH
    B = COPY NLD24G5_ISO_SWITCH_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NA20G5 { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NA20G5_CH
    B = COPY NA20G5_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NA20G5_NBL { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NA20G5_NBL_CH
    B = COPY NA20G5_NBL_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NA29G5 { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NA29G5_CH
    B = COPY NA29G5_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NA29G5_NBL { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NA29G5_NBL_CH
    B = COPY NA29G5_NBL_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NA29G3_DEP_NBL { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NA29G3_DEP_NBL_CH
    B = COPY NA29G3_DEP_NBL_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NLD36G5_GB { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NLD36G5_GB_CH
    B = COPY NLD36G5_GB_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NLD45G5_GB { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NLD45G5_GB_CH
    B = COPY NLD45G5_GB_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NA45G3_DEP_GB { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NA45G3_DEP_GB_CH
    B = COPY NA45G3_DEP_GB_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_PA20G5_BL { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT PA20G5_BL_CH
    B = COPY PA20G5_BL_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_PA20G5_SLIT_BL { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT PA20G5_SLIT_BL_CH
    B = COPY PA20G5_SLIT_BL_GATE
    A AND B
    A NOT INTERACT B
}
CFP.R.2_NLD24G5 { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NLD24G5_CH
    B = COPY NLD24G5_GATE
    A AND B
    A NOT INTERACT B
}

CFP.R.2_NLD24G5_SWITCH { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT NLD24G5_SWITCH_CH
    B = COPY NLD24G5_SWITCH_GATE
    A AND B
    A NOT INTERACT B
}

CFP.R.2_PA16G5_NBL { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT PA16G5_NBL_CH
    B = COPY PA16G5_NBL_GATE
    A AND B
    A NOT INTERACT B
}

CFP.R.2_PA16G5_SLIT_NBL { @ CFP should butted and outside PO gate in channel length direction
    A = CFP INTERACT PA16G5_SLIT_NBL_CH
    B = COPY PA16G5_SLIT_NBL_GATE
    A AND B
    A NOT INTERACT B
}


CFP.R.3 { @ CFP should be fully inside RPO (Cut and outside are not allowed)
  CFP NOT INSIDE RPO
}

CFP.R.4 { @ CFP should be fully inside M1 (Cut and outside are not allowed)
  CFP NOT INSIDE M1
}


CFP.R.5_NLD24G5{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NLD24G5_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NLD24G5_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NLD24G5_SWITCH{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NLD24G5_SWITCH_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NLD24G5_SWITCH_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NLD12G5{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NLD12G5_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NLD12G5_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NLD12G5_FULLY_ISO{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NLD12G5_FULLY_ISO_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NLD12G5_FULLY_ISO_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NLD20G5_FULLY_ISO{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NLD20G5_FULLY_ISO_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NLD20G5_FULLY_ISO_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NLD20G5{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NLD20G5_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NLD20G5_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NLD24G5_ISO_SWITCH{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NLD24G5_ISO_SWITCH_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NLD24G5_ISO_SWITCH_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NLD24G5_FULLY_ISO{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NLD24G5_FULLY_ISO_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NLD24G5_FULLY_ISO_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NA29G5{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NA29G5_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NA29G5_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NA29G5_NBL{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NA29G5_NBL_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NA29G5_NBL_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NA29G3_dep_NBL{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NA29G3_dep_NBL_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NA29G3_dep_NBL_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NLD45G5_GB{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NLD45G5_GB_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NLD45G5_GB_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NLD16G5{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NLD16G5_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NLD16G5_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NLD16G5_FULLY_ISO{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NLD16G5_FULLY_ISO_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NLD16G5_FULLY_ISO_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NA20G5{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NA20G5_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NA20G5_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NA20G5_NBL{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NA20G5_NBL_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NA20G5_NBL_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NA45G3_DEP_GB{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NA45G3_DEP_GB_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NA45G3_DEP_GB_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.5_NLD36G5_GB{ @ CCFP is connected with source side for NLD12G5(GA),NLD12G5 fully iso(GA),NLD16G5(GA),NLD16G5 fully iso(GA),NLD20G5(GA),NLD20G5 fully iso(GA),NLD24G5 iso switch(GA),NLD24G5 fully iso          @(GA),NA29G5(GA),NA29G5 NBL(GA),NA29G3 dep NBL(GA),NLD45G5 NBL(GB)
  A = STAMP NLD36G5_GB_S BY NSD_mf 
  B = M1_mf AND (CFPi INTERACT NLD36G5_GB_CH)
  NET AREA RATIO  B A == 0
}

CONNECT CFPi M1_mf

CFP.R.6_PA16G5_NBL{ @ CFP is connected with poly gate for PA20G5_NBL(GA),PA20G5_SLIT_NBL(GA),and PA29G5_NBL(GA), PA16G5_NBL, PA16G5_SLIT_NBL
  A = STAMP PA16G5_NBL_GATE BY ILP1_mf
  B = M1_mf AND (CFPi INTERACT PA16G5_NBL_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.6_PA16G5_SLIT_NBL{ @ CFP is connected with poly gate for PA20G5_NBL(GA),PA20G5_SLIT_NBL(GA),and PA29G5_NBL(GA), PA16G5_NBL, PA16G5_SLIT_NBL
  A = STAMP PA16G5_SLIT_NBL_GATE BY ILP1_mf
  B = M1_mf AND (CFPi INTERACT PA16G5_SLIT_NBL_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.6_PA20G5_BL{ @ CFP is connected with poly gate for PA20G5_NBL(GA),PA20G5_SLIT_NBL(GA),and PA29G5_NBL(GA), PA16G5_NBL, PA16G5_SLIT_NBL
  A = STAMP PA20G5_BL_GATE BY ILP1_mf
  B = M1_mf AND (CFPi INTERACT PA20G5_BL_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.6_PA20G5_SLIT_BL{ @ CFP is connected with poly gate for PA20G5_NBL(GA),PA20G5_SLIT_NBL(GA),and PA29G5_NBL(GA), PA16G5_NBL, PA16G5_SLIT_NBL
  A = STAMP PA20G5_SLIT_BL_GATE BY ILP1_mf
  B = M1_mf AND (CFPi INTERACT PA20G5_SLIT_BL_CH)
  NET AREA RATIO  B A == 0
}
CFP.R.6_PA29G5_BL{ @ CFP is connected with poly gate for PA20G5_NBL(GA),PA20G5_SLIT_NBL(GA),and PA29G5_NBL(GA), PA16G5_NBL, PA16G5_SLIT_NBL
  A = STAMP PA29G5_BL_GATE BY ILP1_mf
  B = M1_mf AND (CFPi INTERACT PA29G5_BL_D)
  NET AREA RATIO  B A == 0
}

CFP.R.7 { @ CFP interact with VIA1 is not allowed
  CFP INTERACT VIA1
}

CFP.R.8_SBD_12V { @ min and max number of CFP finger in inside RPO for HV SBD == 1
  A = RPO INTERACT DIO_SBD_12V_M
  (CFP INTERACT DIO_SBD_12V_M) NOT INSIDE A
  B = CFP INSIDE A
  C = HOLES A INNER
  D = EXPAND EDGE C OUTSIDE BY 1.2
  D NOT INTERACT B
  D INTERACT B != 1
}

CFP.R.8_SBD_16V { @ min and max number of CFP finger in inside RPO for HV SBD == 1
  A = RPO INTERACT DIO_SBD_16V_M
  (CFP INTERACT DIO_SBD_16V_M) NOT INSIDE A
  B = CFP INSIDE A
  C = HOLES A INNER
  D = EXPAND EDGE C OUTSIDE BY 1.3
  D INTERACT B != 1
}

CFP.R.8_SBD_24V { @ min and max number of CFP finger in inside RPO for HV SBD == 1
  A = RPO INTERACT DIO_SBD_24V_M
  (CFP INTERACT DIO_SBD_24V_M) NOT INSIDE A
  B = CFP INSIDE A
  C = HOLES A INNER
  D = EXPAND EDGE C OUTSIDE BY 1.5
  D INTERACT B != 1
}

CONNECT M1_mf CFPi
CFP.R.9_SBD_12V { @ CFP must connect width Anode OD for SBD_12V diode
  A = STAMP DIO_SBD_12V_M BY PSD_mf
  B = CFPi INTERACT DIO_SBD_12V_M
  NET AREA RATIO B A == 0
}


CFP.R.10_SBD_12V { @ CFP must be rectangle for HV SBD_12V diode
  A = CFP INTERACT DIO_SBD_12V_M
  NOT RECTANGLE A
}
CFP.R.9_SBD_16V { @ CFP must connect width Anode OD for SBD_16V diode
  A = STAMP DIO_SBD_16V_M BY PSD_mf
  B = CFPi INTERACT DIO_SBD_16V_M
  NET AREA RATIO B A == 0
}


CFP.R.10_SBD_16V { @ CFP must be rectangle for HV SBD_16V diode
  A = CFP INTERACT DIO_SBD_16V_M
  NOT RECTANGLE A
}
CFP.R.9_SBD_24V { @ CFP must connect width Anode OD for SBD_24V diode
  A = STAMP DIO_SBD_24V_M BY PSD_mf
  B = CFPi INTERACT DIO_SBD_24V_M
  NET AREA RATIO B A == 0
}


CFP.R.10_SBD_24V { @ CFP must be rectangle for HV SBD_24V diode
  A = CFP INTERACT DIO_SBD_24V_M
  NOT RECTANGLE A
}

CFP.R.11_PA29G5_BL { @ CFP should outside PO and butted with PO in channel length direction for PA29G5_NBL(GA)
  A = CFP INTERACT PA29G5_BL_D
  A AND POLY
  A NOT INTERACT POLY
}

HVSBD.R.1_SBD_12V { @ The Anode OD and Cathode OD of HV SBD diode share one OD
  DIO_SBD_12V_P OUTSIDE DIO_SBD_12V_M
}

HVSBD.R.1_SBD_16V { @ The Anode OD and Cathode OD of HV SBD diode share one OD
  DIO_SBD_16V_P OUTSIDE DIO_SBD_16V_M
}

HVSBD.R.1_SBD_24V { @ The Anode OD and Cathode OD of HV SBD diode share one OD
  DIO_SBD_24V_P OUTSIDE DIO_SBD_24V_M
}

HVSBD.W.1_SBD_12V { @ min and max width of RPO hole inside Anode OD for HV SBD diode == ^HVSBD_W_1_SBD_12V
  A = RPO INTERACT DIO_SBD_12V_M
  B = HOLES A INNER
  NOT RECTANGLE B == HVSBD_W_1_SBD_12V BY == HVSBD_W_1_SBD_12V ORTHOGONAL ONLY
}

HVSBD.W.1_SBD_16V { @ min and max width of RPO hole inside Anode OD for HV SBD diode == ^HVSBD_W_1_SBD_16V
  A = RPO INTERACT DIO_SBD_16V_M
  B = HOLES A INNER
  NOT RECTANGLE B == HVSBD_W_1_SBD_16V BY == HVSBD_W_1_SBD_16V ORTHOGONAL ONLY
}

HVSBD.W.1_SBD_24V { @ min and max width of RPO hole inside Anode OD for HV SBD diode == ^HVSBD_W_1_SBD_24V
  A = RPO INTERACT DIO_SBD_24V_M
  B = HOLES A INNER
  NOT RECTANGLE B == HVSBD_W_1_SBD_24V BY == HVSBD_W_1_SBD_24V ORTHOGONAL ONLY
}


// METAL RATIO CHECKS
//======================
PO.R.3 {@ Min poly area coverage < 14%
  ALL_POLY = POLYi OR DPO
  DENSITY ALL_POLY < 0.14 PRINT POLY_DENSITY.log
}
M1.R.1 { @ Min M1 area coverage < 30%
  DENSITY M1xd < 0.3 PRINT M1_DENSITY.log
}


M2.R.1 { @ Min M2 area coverage < 30%
  DENSITY M2xd < 0.3 PRINT M2_DENSITY.log
}


M3.R.1 { @ Min M3 area coverage < 30%
  DENSITY M3xd < 0.3 PRINT M3_DENSITY.log
}


M4.R.1 { @ Min M4 area coverage < 30%
  DENSITY M4xd < 0.3 PRINT M4_DENSITY.log
}




#IFNDEF THICK_40K
#IFNDEF THICK_30K
#IFNDEF THICK_15K



M5.R.1 { @ Min M5 area coverage < 30%
  DENSITY M5xd < 0.3 PRINT M5_DENSITY.log
}
MD.R.1 { @ Min MD area coverage < 30%
  DENSITY MDxd > 0 < 0.3 PRINT MD_DENSITY.log
}  


#ENDIF

#ENDIF
#ENDIF






#IFDEF Recommend
#IFDEF FULL_CHIP
METAL_EXC = (((FWi OR LMARK) OR LOGO) OR INDDMY) OR EMPTY_AREA   // exclude region for low density
Mx_R_2_EXC = COPY SRCSR
#ELSE
METAL_EXC = ((FWi OR LMARK) OR LOGO) OR INDDMY                // exclude region for low density
Mx_R_2_EXC = COPY EMPTYi
#ENDIF
M1_CORE = M1 NOT Mx_R_2_EXC
M2_CORE = M2 NOT Mx_R_2_EXC
M3_CORE = M3 NOT Mx_R_2_EXC
M4_CORE = (M4 NOT Mx_R_2_EXC) NOT WBDMY

M2.DN.1 { @ M2 local density must be >= ^M2_DN_1 range over ^M2_DN_1_W um x ^M2_DN_1_W um step ^M2_DN_1_S um
  M2_CHECK = M2 NOT METAL_EXC
  CHIP_CHECK = CHIP NOT METAL_EXC
  ERR_WIN = DENSITY M2_CHECK CHIP_CHECK < M2_DN_1 WINDOW M2_DN_1_W STEP M2_DN_1_S INSIDE OF LAYER CHIPx BACKUP 
	[ AREA(M2_CHECK)/AREA(CHIP_CHECK) ]
  F = WITH WIDTH (ERR_WIN NOT METAL_EXC) >= M2_DN_1_E
  DENSITY F M2_CHECK CHIP_CHECK < M2_DN_1 WINDOW M2_DN_1_W STEP M2_DN_1_S INSIDE OF LAYER CHIPx BACKUP PRINT M2.DN.1.density
         [ !AREA(F)+AREA(M2_CHECK)/AREA(CHIP_CHECK) ]
}

M2.DN.2 { @ The metal density difference between any two ^M2_DN_2_W um x ^M2_DN_2_W um neighboring checking windows including DM2EXCL <= ^M2_DN_2
  DENSITY M2 CHIP <=1 WINDOW M2_DN_2_W BACKUP GRADIENT > M2_DN_2 ABSOLUTE CORNER PRINT M2.DN.2.density
  	[ AREA(M2)/AREA(CHIP) ]     
}


M3.DN.1 { @ M3 local density must be >= ^M3_DN_1 range over ^M3_DN_1_W um x ^M3_DN_1_W um step ^M3_DN_1_S um
  M3_CHECK = M3 NOT METAL_EXC
  CHIP_CHECK = CHIP NOT METAL_EXC
  ERR_WIN = DENSITY M3_CHECK CHIP_CHECK < M3_DN_1 WINDOW M3_DN_1_W STEP M2_DN_1_S INSIDE OF LAYER CHIPx BACKUP 
	[ AREA(M3_CHECK)/AREA(CHIP_CHECK) ]
  F = WITH WIDTH (ERR_WIN NOT METAL_EXC) >= M3_DN_1_E
  DENSITY F M3_CHECK CHIP_CHECK < M3_DN_1 WINDOW M3_DN_1_W STEP M3_DN_1_S INSIDE OF LAYER CHIPx BACKUP PRINT M3.DN.1.density
         [ !AREA(F)+AREA(M3_CHECK)/AREA(CHIP_CHECK) ]
}

M3.DN.2 { @ The metal density difference between any two ^M3_DN_2_W um x ^M3_DN_2_W um neighboring checking windows including DM3EXCL <= ^M3_DN_2
  DENSITY M3 CHIP <=1 WINDOW M3_DN_2_W BACKUP GRADIENT > M3_DN_2 ABSOLUTE CORNER PRINT M3.DN.2.density
  	[ AREA(M3)/AREA(CHIP) ]     
}


M4.DN.1 { @ M4 local density must be >= ^M4_DN_1 range over ^M4_DN_1_W um x ^M4_DN_1_W um step ^M4_DN_1_S um
  M4_CHECK = M4 NOT METAL_EXC
  CHIP_CHECK = CHIP NOT METAL_EXC
  ERR_WIN = DENSITY M4_CHECK CHIP_CHECK < M4_DN_1 WINDOW M4_DN_1_W STEP M2_DN_1_S INSIDE OF LAYER CHIPx BACKUP 
	[ AREA(M4_CHECK)/AREA(CHIP_CHECK) ]
  F = WITH WIDTH (ERR_WIN NOT METAL_EXC) >= M4_DN_1_E
  DENSITY F M4_CHECK CHIP_CHECK < M4_DN_1 WINDOW M4_DN_1_W STEP M4_DN_1_S INSIDE OF LAYER CHIPx BACKUP PRINT M4.DN.1.density
         [ !AREA(F)+AREA(M4_CHECK)/AREA(CHIP_CHECK) ]
}

M4.DN.2 { @ The metal density difference between any two ^M4_DN_2_W um x ^M4_DN_2_W um neighboring checking windows including DM4EXCL <= ^M4_DN_2
  DENSITY M4 CHIP <=1 WINDOW M4_DN_2_W BACKUP GRADIENT > M4_DN_2 ABSOLUTE CORNER PRINT M4.DN.2.density
  	[ AREA(M4)/AREA(CHIP) ]     
}


M5.DN.1 { @ M5 local density must be >= ^M5_DN_1 range over ^M5_DN_1_W um x ^M5_DN_1_W um step ^M5_DN_1_S um
  M5_CHECK = M5 NOT METAL_EXC
  CHIP_CHECK = CHIP NOT METAL_EXC
  ERR_WIN = DENSITY M5_CHECK CHIP_CHECK < M5_DN_1 WINDOW M5_DN_1_W STEP M2_DN_1_S INSIDE OF LAYER CHIPx BACKUP 
	[ AREA(M5_CHECK)/AREA(CHIP_CHECK) ]
  F = WITH WIDTH (ERR_WIN NOT METAL_EXC) >= M5_DN_1_E
  DENSITY F M5_CHECK CHIP_CHECK < M5_DN_1 WINDOW M5_DN_1_W STEP M5_DN_1_S INSIDE OF LAYER CHIPx BACKUP PRINT M5.DN.1.density
         [ !AREA(F)+AREA(M5_CHECK)/AREA(CHIP_CHECK) ]
}

M5.DN.2 { @ The metal density difference between any two ^M5_DN_2_W um x ^M5_DN_2_W um neighboring checking windows including DM5EXCL <= ^M5_DN_2
  DENSITY M5 CHIP <=1 WINDOW M5_DN_2_W BACKUP GRADIENT > M5_DN_2 ABSOLUTE CORNER PRINT M5.DN.2.density
  	[ AREA(M5)/AREA(CHIP) ]     
}




#ENDIF


// Poly/OD Resistor CHECK
//==========
PORESC = ((PORES NOT INTERACT RLPPDMY) NOT INTERACT SDI) NOT INTERACT SERPDMY

#IFDEF Recommend
  PORESC_1 = PORESC NOT ((MTP_2T2C AND MCEL) OR SERPDMY)

  PORESC_L = EXPAND EDGE (PORESC_1 NOT INSIDE EDGE POLY) BY 0.001 CORNER FILL
  PORESC_W = EXPAND EDGE (PORESC_1 INSIDE EDGE POLY) BY 0.001
  CONNECT PORESC_L PORESC_W
RES.2 {@ For poly resistor, it is strongly recommended that the poly resistor width >= ^RES_2_W um,
		@ length >= 2.1 um, and the resistor square number Nsq >= ^RES_2_Nsq,
		@ DRC will check the width and Nsq 0.42um and 5 for poly resistor 
  INT PORESC_1 < RES_2_W ABUT < 90 SINGULAR REGION
  NET AREA RATIO PORESC_L PORESC_W < RES_2_Nsq 
}

  ODRES_EXCL_MOS = ODRES AND (OD NOT INTERACT GATE) 
  ODRESC = (ODRES NOT INTERACT RLPPDMY) NOT SEALRING
  ODRESC_1 = (ODRESC AND (RPDUMMY OR DMPN2V)) NOT (MTP_2T2C AND MCEL)
  ODRESC_L = EXPAND EDGE (ODRESC_1 NOT INSIDE EDGE OD) BY 0.001 CORNER FILL
  ODRESC_W = EXPAND EDGE (ODRESC_1 INSIDE EDGE OD) BY 0.001
  CONNECT ODRESC_L ODRESC_W



DMPN2V = DMP2V OR DMN2V

RES.3_PO { @ The sheet resistance in SPICE model of non-salicided N+/P+ PO/OD resistors is
        @ resulted from N2V/NP and P2V/PP combinations, respectively. To obtain precise resistance,
	@ dummy layers (DMN2V & DMP2V) are required.N2V/P2V/N3V/P3V/N5V/P5V are derived from logical operation, 
	@ please ensure correct implants in caes the rsistor traverses NW/PW,1.8V/3.3V,1.8V/5V, 1.5V/3.3V or 1.5V/2.5V.
	@ Min. and Max. Extension of DMN2V/DMP2V to Poly resistor on field oxide should be == 0.22um.   
   (( PORES INTERACT PP ) NOT INTERACT (HRI3D3KDMY OR HRI)) NOT DMP2V
   ( PORES INTERACT NP ) NOT DMN2V  
   ( DMP2V AND DMN2V ) AND PORES
   PORES_PO = (POLY INTERACT PORES) NOT INTERACT SERPDMY
   A = ENC PORES_PO DMP2V < 0.22 ABUT < 90 SINGULAR REGION
   A NOT INTERACT (MTP_2T2C AND MCEL)
   B = ENC PORES_PO DMN2V < 0.22 ABUT < 90 SINGULAR REGION
   B NOT INTERACT (MTP_2T2C AND MCEL)
   X = EXPAND EDGE ( DMPN2V INTERACT PORES) INSIDE BY 0.005 EXTEND BY - 0.005
   Y = EXPAND EDGE ( DMPN2V TOUCH EDGE ( X NOT INTERACT PORES_PO )) INSIDE BY 0.22
   ((Y NOT TOUCH PORES) NOT INTERACT SERPDMY) NOT INTERACT (MTP_2T2C AND MCEL)
}

RES.3_OD { @ The sheet resistance in SPICE model of non-salicided N+/P+ PO/OD resistors is
        @ resulted from N2V/NP and P2V/PP combinations, respectively. To obtain precise resistance,
        @ dummy layers (DMN2V & DMP2V) are required.N2V/P2V/N3V/P3V/N5V/P5V are derived from logical operation,
        @ please ensure correct implants in caes the rsistor traverses NW/PW,1.8V/3.3V,1.8V/5V, 1.5V/3.3V or 1.5V/2.5V.
        @ Min. and Max. Extension of DMN2V/DMP2V to Poly resistor on field oxide should be == 0.22um.
   ( ODRES INTERACT PP ) NOT DMP2V 
   ( ODRES INTERACT NP ) NOT DMN2V
   ( DMP2V AND DMN2V ) AND ODRES

   ODRES_OD = OD INTERACT ODRES
   A = ENC ODRES_OD DMP2V < 0.22 ABUT < 90 SINGULAR REGION
   A NOT INTERACT (MTP_2T2C AND MCEL)
   B = ENC ODRES_OD DMN2V < 0.22 ABUT < 90 SINGULAR REGION
   B NOT INTERACT (MTP_2T2C AND MCEL)
   X = EXPAND EDGE ( DMPN2V INTERACT ODRES) INSIDE BY 0.005 EXTEND BY - 0.005
   Y = EXPAND EDGE ( DMPN2V TOUCH EDGE ( X NOT INTERACT ODRES_OD )) INSIDE BY 0.22
   (Y NOT TOUCH ODRES) NOT INTERACT (MTP_2T2C AND MCEL) 
}
RES.4_PO { @ Min. and Max. clearance from RPO to a contact on the poly resistor and OD resistor = 0.22um
  PO_RES = (POLY INTERACT PORES) NOT INTERACT SERPDMY
  CO_RES = CO INTERACT PO_RES
  RPO_E  = RPO INSIDE EDGE PO_RES
  RPO_EX = EXPAND EDGE RPO_E OUTSIDE BY 0.22
  RPO_EX AND CO_RES
  RPO_EX NOT INTERACT CO_RES
  CO_RES NOT INTERACT RPO_EX
}
RES.4_OD { @ Min. and Max. clearance from RPO to a contact on the poly resistor and OD resistor ==0.22um
  OD_RES = OD INTERACT ODRES
  CO_RES = CO INTERACT OD_RES
  RPO_E  = RPO INSIDE EDGE OD_RES
  RPO_EX = EXPAND EDGE RPO_E OUTSIDE BY 0.22
  (RPO_EX AND CO_RES) NOT SEALRING_ALL
  (RPO_EX NOT INTERACT CO_RES) NOT SEALRING_ALL 
  (CO_RES NOT INTERACT RPO_EX) NOT SEALRING_ALL
}
RES.5_PO { @ Min. clearance from poly resistor and OD resistor to un-related NP, PP regions >= 0.26um
  EXT PORES IMP < 0.26 ABUT < 90 SINGULAR REGION MEASURE ALL
}
RES.5_OD { @ Min. clearance from poly resistor and OD resistor to un-related NP, PP regions >= 0.26um
  EXT ODRES IMP < 0.26 ABUT < 90 SINGULAR REGION MEASURE ALL
}
RES.6_PO { @ Minimum clearance from an un-related RPO to the POLY and OD  resistor>= 0.3um
  EXT PORES RPO < 0.3 ABUT < 90 SINGULAR REGION MEASURE ALL
}
RES.6_OD { @ Minimum clearance from an un-related RPO to the POLY and OD resistor>= 0.3um
  EXT ODRES RPO < 0.3 ABUT < 90 SINGULAR REGION MEASURE ALL
}

// RES.7 is checked by RES.4
RES.8 { @ To use rectangle shape resistor for SPICE simulation accuracy.
	NOT RECTANGLE PORESC
	(NOT RECTANGLE ODRES) NOT SEALRING
}

#ENDIF
RES.9 {@ DMN2V overlap DMP2V not allowed
  DMP2V AND DMN2V
}
RES.10 {@ Minimum clearence from DMN2V to GATE(overlap is not allowed) >=0.35um
    EXT DMN2V ALL_GATE <0.35 ABUT < 90 SINGULAR REGION 
    DMN2V AND ALL_GATE
}
RES.11 {@ Minimum clearence from DMP2V to GATE(overlap is not allowed) >=0.35um
    EXT DMP2V ALL_GATE <0.35 ABUT < 90 SINGULAR REGION 
    DMP2V AND ALL_GATE
}






#IFDEF Recommend
RES.12 {@ For OD resistor, it is strongly recommended that the resistor width>= ^RES_12_W um and the resistor square number Nsq >= ^RES_12_Nsq.
        @ DRC will check the width and Nsq 2um and 5 for OD resistor 
  INT ODRESC_1 < RES_12_W ABUT < 90 SINGULAR REGION
  NET AREA RATIO ODRESC_L ODRESC_W < RES_12_Nsq
}
#ENDIF

RES.13 { @ min clearance from poly resistor to OD dege >= 0.6 um
    A = EXT PORES OD < 0.6 ABUT < 90 SINGULAR REGION
    A NOT INTERACT (MTP_2T2C AND MCEL)
}
RES.15 { @ poly resistor cut HVNW OR NW is not allowed
    (PORES CUT HVNW) NOT INTERACT (MTP_2T2C AND MCEL)
    (PORES CUT NWEL) NOT INTERACT (MTP_2T2C AND MCEL)
}



#IFNDEF 1.8V
#IFDEF 5V
RES.18 {@ Min and Max extension of RPDUMMY_PURE5V beyond RPDMY == 0.0
      RPDUMMY_PURE5V XOR (RPDUMMY INTERACT RPDUMMY_PURE5V)
}


OD_PORES = ODRES OR PORES
RES.14 {@ RPDUMMY_PURE5V is must for PO/OD resistor of pure 5V
	A = (OD_PORES NOT INTERACT RLPPDMY) INTERACT OD2
    (A NOT INTERACT RPDUMMY_PURE5V) NOT INTERACT (MTP_2T2C AND MCEL)
}
RES.17 {@ OD2 is must for PO/OD resistor of pure 5V
    A = OD_PORES INTERACT RPDUMMY_PURE5V
	(A NOT INTERACT RLPPDMY) NOT INTERACT OD2
} 


#ENDIF
#ENDIF



HLNW = NWEL OR HVNW
HLPW = PWEL OR HVPW


//OD_ALL_u
OD_ALL_u = ((NTAPu OR (NSDu NOT INTERACT RWDMY)) OR PTAPu) OR PSDu
NSDu_wo_RW = NSDu NOT INTERACT RWDMY
CONNECT	PTAPu NSDu_wo_RW
CONNECT	M1u NSDu_wo_RW BY COu
CONNECT OD_ALL_u NTAPu
CONNECT OD_ALL_u PTAPu
CONNECT OD_ALL_u NSDu_wo_RW
CONNECT OD_ALL_u PSDu 

//OD_ALL_k
OD_ALL_k = ((NTAPk OR (NSDk NOT INTERACT RWDMY)) OR PTAPk) OR PSDk
NSDk_wo_RW = NSDk NOT INTERACT RWDMY
CONNECT PTAPk NSDk_wo_RW
CONNECT M1k NSDk_wo_RW BY COk
CONNECT OD_ALL_k NTAPk
CONNECT OD_ALL_k PTAPk
CONNECT OD_ALL_k NSDk_wo_RW
CONNECT OD_ALL_k PSDk 
ALL_HVISO = (HV9ISO OR HV29ISO) OR HV45ISO

OD_WAIVE = (POLY OR RWDMY) OR RW4TDMY
PORES_pre = POLY INTERACT RPDUMMY
OD_PSUB_pre = ((PPOD AND PWELi) NOT NBL) NOT HVNWi
OD_IN_HVISO = ((OD NOT POLY) NOT HVDMY) AND ALL_HVISO
POLY_RES_T = PORES_pre NOT RPDUMMY
PORES_C = STAMP PORES_pre BY ILP1u

HV_VOL_1 = COPY HV6DMY
HV_VOL_2 = (((HV9DMY OR HV12DMY) OR HV16DMY) OR H18NWDMY) OR HV9ISO
HV_VOL_3 = HV20DMY OR HV24DMY
HV_VOL_4 = (HV29DMY OR HV36DMY) OR HV29ISO
HV_VOL_5 = HV45DMY OR HV45ISO
HV_VOL_6 = (HVDIO_DMY OR HVBJT_DMY) OR ((((BJT5TDMY OR BJTMEDMY) OR BJTMDDMY) OR BJTSNDMY) AND HVDMY)                    //DIO(DIO,3T,4T, SBD3T);BJT(BJT,4T,5T,7T,MD,ME,SN)
// POLY resistor terminal connects to P+isolation ring connected to VSS/PSUB
POLY_RES_T_C_k = STAMP POLY_RES_T BY ILP1k
HV_PPOD = PPOD AND ((HVDMY NOT HVNW) NOT NBL)
PPOD_ISO_RING_VSS_NEW = (HV_PPOD TOUCH ((HOLES HV_PPOD) NOT HV_PPOD)) INTERACT HV_VSS
OD_PSUB_C = STAMP OD_PSUB_pre BY PTAPk
PPOD_ISO_RING_VSS_C = STAMP PPOD_ISO_RING_VSS_NEW BY PTAPk
POLY_RES_T_WAIVE = NET AREA RATIO POLY_RES_T_C_k OVER OD_PSUB_C PPOD_ISO_RING_VSS_C > 0

// waive po resistor whose 'two terminals' connect to two ((OD NOT POLY) NOT NBL) in the same HVISO DMY with poly resistor
EMPTY_RES = CHIP NOT (SIZE CHIP BY 1.5)
OD_IN_HVISO_C_k = STAMP OD_IN_HVISO BY OD_ALL_k
POLY_RES_T_C_OD_pre1 = NET AREA RATIO POLY_RES_T_C_k OD_IN_HVISO_C_k INSIDE OF LAYER ALL_HVISO > 0
POLY_RES_T_C_OD_pre2 = POLY_RES_T_C_OD_pre1 OR EMPTY_RES 
POLY_RES_T_C_OD_u = STAMP POLY_RES_T_C_OD_pre2 BY ILP1u

POLY_RES_T_C_u = STAMP POLY_RES_T BY ILP1u
POLY_RES_T_C_HVISO = NET AREA RATIO POLY_RES_T_C_u POLY_RES_T_C_OD_u INSIDE OF LAYER ALL_HVISO 
    [COUNT(POLY_RES_T_C_OD_u)] == 2
POLY_RES_WAIVE = PORES_pre INTERACT POLY_RES_T_C_HVISO == 2



OD_HV_1_pre = (OD AND HV_VOL_1) NOT OD_WAIVE
OD_HV_1 = STAMP OD_HV_1_pre BY OD_ALL_u
POLY_RES_CHECK_1_pre = NET AREA RATIO PORES_C OD_HV_1 > 0
POLY_RES_CHECK_1 =  (POLY_RES_CHECK_1_pre NOT POLY_RES_WAIVE) NOT POLY_RES_T_WAIVE


RES.HV.S.1 {@ Space of {PO INTERACT RPDUMMY} to OD , when this PO connect to ((OD AND HV6DMY ) NOT ((PO OR RWDMY) OR RW4TDMY)) >= ^RES_HV_S_1
    @ DRC will not check the following condition:
    @1.Poly resistor terminal connect to P+ isolation ring (connected to Vss)
    @2.Poly resistor terminal connect to ((PP AND OD) AND PW) NOT NBL, which is treated as un-isolated Psub
    @3.Both of Poly resistor two terminals connect to ((OD NOT PO) NOT HVDMY) regions, and both OD regions locate in the same HVISO dummy region
    EXT POLY_RES_CHECK_1 OD < RES_HV_S_1 ABUT < 90 SINGULAR REGION
}

OD_HV_2_pre = (OD AND HV_VOL_2) NOT OD_WAIVE
OD_HV_2 = STAMP OD_HV_2_pre BY OD_ALL_u
POLY_RES_CHECK_2_pre = NET AREA RATIO PORES_C OD_HV_2 > 0
POLY_RES_CHECK_2 =  (POLY_RES_CHECK_2_pre NOT POLY_RES_WAIVE) NOT POLY_RES_T_WAIVE


RES.HV.S.2 {@ Space of {PO INTERACT RPDUMMY} to OD , when this PO connect to ((OD AND (((HV9DMY OR HV12DMY) OR HV16DMY) OR H18NWDMY) OR HV9ISO ) NOT ((PO OR RWDMY) OR RW4TDMY)) >= ^RES_HV_S_2
    @ DRC will not check the following condition:
    @1.Poly resistor terminal connect to P+ isolation ring (connected to Vss)
    @2.Poly resistor terminal connect to ((PP AND OD) AND PW) NOT NBL, which is treated as un-isolated Psub
    @3.Both of Poly resistor two terminals connect to ((OD NOT PO) NOT HVDMY) regions, and both OD regions locate in the same HVISO dummy region
    EXT POLY_RES_CHECK_2 OD < RES_HV_S_2 ABUT < 90 SINGULAR REGION
}

OD_HV_3_pre = (OD AND HV_VOL_3) NOT OD_WAIVE
OD_HV_3 = STAMP OD_HV_3_pre BY OD_ALL_u
POLY_RES_CHECK_3_pre = NET AREA RATIO PORES_C OD_HV_3 > 0
POLY_RES_CHECK_3 =  (POLY_RES_CHECK_3_pre NOT POLY_RES_WAIVE) NOT POLY_RES_T_WAIVE


RES.HV.S.3 {@ Space of {PO INTERACT RPDUMMY} to OD , when this PO connect to ((OD AND HV20DMY OR HV24DMY  ) NOT ((PO OR RWDMY) OR RW4TDMY)) >= ^RES_HV_S_3
    @ DRC will not check the following condition:
    @1.Poly resistor terminal connect to P+ isolation ring (connected to Vss)
    @2.Poly resistor terminal connect to ((PP AND OD) AND PW) NOT NBL, which is treated as un-isolated Psub
    @3.Both of Poly resistor two terminals connect to ((OD NOT PO) NOT HVDMY) regions, and both OD regions locate in the same HVISO dummy region
    EXT POLY_RES_CHECK_3 OD < RES_HV_S_3 ABUT < 90 SINGULAR REGION
}

OD_HV_4_pre = (OD AND HV_VOL_4) NOT OD_WAIVE
OD_HV_4 = STAMP OD_HV_4_pre BY OD_ALL_u
POLY_RES_CHECK_4_pre = NET AREA RATIO PORES_C OD_HV_4 > 0
POLY_RES_CHECK_4 =  (POLY_RES_CHECK_4_pre NOT POLY_RES_WAIVE) NOT POLY_RES_T_WAIVE


RES.HV.S.4 {@ Space of {PO INTERACT RPDUMMY} to OD , when this PO connect to ((OD AND (HV29DMY OR HV36DMY) OR HV29ISO ) NOT ((PO OR RWDMY) OR RW4TDMY)) >= ^RES_HV_S_4
    @ DRC will not check the following condition:
    @1.Poly resistor terminal connect to P+ isolation ring (connected to Vss)
    @2.Poly resistor terminal connect to ((PP AND OD) AND PW) NOT NBL, which is treated as un-isolated Psub
    @3.Both of Poly resistor two terminals connect to ((OD NOT PO) NOT HVDMY) regions, and both OD regions locate in the same HVISO dummy region
    EXT POLY_RES_CHECK_4 OD < RES_HV_S_4 ABUT < 90 SINGULAR REGION
}

OD_HV_5_pre = (OD AND HV_VOL_5) NOT OD_WAIVE
OD_HV_5 = STAMP OD_HV_5_pre BY OD_ALL_u
POLY_RES_CHECK_5_pre = NET AREA RATIO PORES_C OD_HV_5 > 0
POLY_RES_CHECK_5 =  (POLY_RES_CHECK_5_pre NOT POLY_RES_WAIVE) NOT POLY_RES_T_WAIVE


RES.HV.S.5 {@ Space of {PO INTERACT RPDUMMY} to OD , when this PO connect to ((OD AND HV45DMY OR HV45ISO ) NOT ((PO OR RWDMY) OR RW4TDMY)) >= ^RES_HV_S_5
    @ DRC will not check the following condition:
    @1.Poly resistor terminal connect to P+ isolation ring (connected to Vss)
    @2.Poly resistor terminal connect to ((PP AND OD) AND PW) NOT NBL, which is treated as un-isolated Psub
    @3.Both of Poly resistor two terminals connect to ((OD NOT PO) NOT HVDMY) regions, and both OD regions locate in the same HVISO dummy region
    EXT POLY_RES_CHECK_5 OD < RES_HV_S_5 ABUT < 90 SINGULAR REGION
}

OD_HV_6_pre = (OD AND HV_VOL_6) NOT OD_WAIVE
OD_HV_6 = STAMP OD_HV_6_pre BY OD_ALL_u
POLY_RES_CHECK_6_pre = NET AREA RATIO PORES_C OD_HV_6 > 0
POLY_RES_CHECK_6 =  (POLY_RES_CHECK_6_pre NOT POLY_RES_WAIVE) NOT POLY_RES_T_WAIVE
RES.HV.S.6 {@ Space of {PO INTERACT RPDUMMY} to OD , when this PO connect to ((OD AND ((((DIODMY OR DIO3TDMY) OR DIO4TDMY) OR SBD3TDMY) AND HVDMY) OR (((((((BJTDMY OR BJTMEDMY) OR BJT4TDMY) OR BJT5TDMY) OR BJT7TDMY) OR BJTMDDMY) OR BJTSNDMY) AND HVDMY) ) NOT ((PO OR RWDMY) OR RW4TDMY)) >= ^RES_HV_S_6
    @ DRC will not check the following condition:
    @1.Poly resistor terminal connect to P+ isolation ring (connected to Vss)
    @2.Poly resistor terminal connect to ((PP AND OD) AND PW) NOT NBL, which is treated as un-isolated Psub
    @3.Both of Poly resistor two terminals connect to ((OD NOT PO) NOT HVDMY) regions, and both OD regions locate in the same HVISO dummy region
    EXT POLY_RES_CHECK_6 OD < RES_HV_S_6 ABUT < 90 SINGULAR REGION
}






PPOD_ISO_RING_VSS = (PPOD TOUCH ((HOLES PPOD) NOT PPOD)) INTERACT HV_VSS
HVOD_RES_NSD_w = ((NSD_w AND (HVDMYi OR HVSHNi)) NOT ((POLYi OR RWDMY) OR RW4TDMY)) NOT INTERACT PPOD_ISO_RING_VSS
HVOD_RES_PSD_w = ((PSD_w AND (HVDMYi OR HVSHNi)) NOT ((POLYi OR RWDMY) OR RW4TDMY)) NOT INTERACT PPOD_ISO_RING_VSS
HVOD_RES_NTAP_w = ((NTAP_w AND (HVDMYi OR HVSHNi)) NOT ((POLYi OR RWDMY) OR RW4TDMY)) NOT INTERACT PPOD_ISO_RING_VSS
HVOD_RES_PTAP_w = ((PTAP_w AND (HVDMYi OR HVSHNi)) NOT ((POLYi OR RWDMY) OR RW4TDMY)) NOT INTERACT PPOD_ISO_RING_VSS
PORES_HV_M = NET AREA RATIO ILP1_w OVER HVOD_RES_NSD_w HVOD_RES_PSD_w HVOD_RES_NTAP_w HVOD_RES_PTAP_w > 0
PORES_HV = (PORES INTERACT RESHVDMY) OR ((PORES INTERACT PORES_HV_M) NOT RES5VDMY)
PORES_NW = PORES_HV NOT OUTSIDE HLNW
PORES_PW = PORES_HV NOT OUTSIDE HLPW
PPOD_H_RES = (((HOLES PPOD) NOT PPOD) AND HLPW) ENCLOSE PORES_PW
NPOD_H_RES = (((HOLES NPOD) NOT NPOD) AND HLNW) ENCLOSE PORES_NW
OTHER_PORES = PORES NOT INTERACT PORES_HV
OTHER_DEVICE = ((((((((((((ALL_GATE OR ODRES_ALL) OR RWDMY) OR RW4TDMY) OR BJTDUMMY) OR BJT4TDMY) OR BJT5TDMY) OR BJT7TDMY) OR BJTMDDMY) OR DIODUMMY) OR DIO3TDMY) OR DIO4TDMY) OR VARDMY) OR HV_ESD


RES.HV.R.1a{ @ Poly resistor for HV application is recognized as Poly resistor connecting to HVOD.
             @ Poly resistor for HV application must be surrounded by isolation ring.
	PPOD_R_RES = PPOD TOUCH PPOD_H_RES
	NPOD_R_RES = NPOD TOUCH NPOD_H_RES
	PORES_NW NOT (NPOD_H_RES INTERACT NPOD_R_RES)  
	PORES_PW NOT (PPOD_H_RES INTERACT PPOD_R_RES)
}

RES.HV.R.1b{ @ Poly res in HVPW or PW surrounded by P+ iso ring acting as well pick-up.
            @ N+ OD inside the same P+ iso ring is not allowed
	A = NPOD OR (HLNW INTERACT NPOD)
    (PORES_PW INTERACT (PPOD_H_RES INTERACT A)) NOT INTERACT (MTP_2T2C AND MCEL)
}

RES.HV.R.1c{ @ Poly res in HVNW or NW surrounded by N+ iso ring acting as well pick-up.
            @ P+ OD inside the same N+ iso ring is not allowed
	A = PPOD OR (HLPW INTERACT PPOD)
    (PORES_NW INTERACT (NPOD_H_RES INTERACT A)) NOT INTERACT (MTP_2T2C AND MCEL)
}

RES.HV.R.1d{ @ Poly res can't share the same iso ring with other devices
    (PORES_PW INTERACT (PPOD_H_RES INTERACT OTHER_DEVICE)) NOT INTERACT (MTP_2T2C AND MCEL)
    (PORES_NW INTERACT (NPOD_H_RES INTERACT OTHER_DEVICE)) NOT INTERACT (MTP_2T2C AND MCEL)
}




#IFDEF MIX_MODE





  HREPC = HREP INTERACT RLPPDMY
#IFDEF Recommend
  HREP_L = EXPAND EDGE (HREPC NOT INSIDE EDGE POLY) BY 0.001 CORNER FILL
  HREP_W = EXPAND EDGE (HREPC INSIDE EDGE POLY) BY 0.001
  CONNECT HREP_L HREP_W
RES.HRI.1 { @ For the SPICE simulation accuracy GPIIA: Width >= 0.42 um, length >= 2.1 um and square number >= 2
	A = HREPC NOT INTERACT SERPDMY
	INT A < 0.42 ABUT < 90  SINGULAR REGION
	B = A INSIDE EDGE POLY
	INT B < 2.1 ABUT < 90 REGION
	NET AREA RATIO HREP_L HREP_W < 2.0
}

//RES.HRI.2 is checked by RES.4_PO
//RES.HRI.3 is checked by RES.5_PO
//RES.HRI.4 is checked by RES.6_PO 
//RES.HRI.5 is checked by RES.4_PO
//RES.HRI.6 un-checkable by DRC

RES.HRI.7 { @ Min. clearance from RLPPDMY to the HRI poly resistor >= 0.26um
  PO_HREP = POLY INTERACT HREP
  ENC PO_HREP RLPPDMY < 0.26 ABUT < 90 SINGULAR REGION
}
RES.HRI.8 { @ To use rectangle shape HRI resistor for the SPICE simulation accuracy.
	NOT RECTANGLE (HREPC NOT INTERACT SERPDMY)
}
RES.HRI.9 { @ Min. clearance from HRI resistor to OD edge >= ^RES_HRI_9
	EXT HREPC OD < RES_HRI_9 ABUT < 90 SINGULAR REGION 
}


#ENDIF
RES.HRI.10 { @ HRI resistor cuts HVNW HVSHN or NW is not allowed.
	HREPC CUT NWEL
	HREPC CUT HVNW
	HREPC CUT HVSHN
}
RES.HRI.11 { @ RLPPDMY and PP must be butted (overlap is not allow)
	(RLPPDMY AND PP) AND POLY
	A = PP INSIDE EDGE (POLY INTERACT HREPC)
	B = PP AND (POLY INTERACT HREPC)
	HREPC NOT TOUCH B == 2
	A NOT COIN OUTSIDE EDGE RLPPDMY
}
CO_HRI = CO INTERACT (POLY INTERACT HREPC)
#IFDEF Recommend
RES.HRI.12 { @ Min and max space between two CO region on HRI poly res == ^RES_HRI_12
    EXT CO_HRI < RES_HRI_12 ABUT < 90  SINGULAR REGION
    A = (POLY INTERACT HREPC) NOT RPO
    B = SIZE CO_HRI BY RES_HRI_12/2 OVERUNDER
    A INTERACT B != 1
}
#ENDIF

RES.HRI.13 { @ min enclosure from an HRI3D3KDMY region beyond a PO resistor region >= ^RES_HRI_13
    ENC PORES HRI3D3KDMY < RES_HRI_13 ABUT < 90 SINGULAR REGION
}





#ENDIF





//HRI  
//=== 

HRI.W.1 { @ Min. width of a HRI region >= ^HRI_W_1 um
  INT HRI < HRI_W_1 ABUT < 90 SINGULAR REGION
}
HRI.S.1 { @ Min. space between two HRI regions >= ^HRI_S_1 um
  EXT HRI < HRI_S_1 ABUT < 90 SINGULAR REGION
}
HRI.C.1 { @ Min. clearance from an HRI region to an NP region >= ^HRI_C_1 um
  X = EXT HRI NP < HRI_C_1 ABUT < 90 SINGULAR REGION
  X NOT INTERACT BUTT_PTAP
}
HRI.C.2 { @ Min. clearance from an HRI region to a PP region >= ^HRI_C_2 um
  EXT HRI PP < HRI_C_2 ABUT < 90 SINGULAR REGION
}
HRI.C.3_C.4 { @ Min. clearance from an HRI edge to Poly gate >= ^HRI_C_3 um
  EXT HRI ALL_GATE < HRI_C_3 ABUT < 90 SINGULAR REGION
}
HRI.E.1 { @ Min. enclosure from an HRI region beyond a PO resistor region >= ^HRI_E_1 um
  ENC PORES HRI < HRI_E_1 ABUT < 90 SINGULAR REGION
  ( PORES NOT OUTSIDE HRI ) NOT HRI    
}
HRI.R.1 { @ Overlap of NP and HRI is not allowed
  HRI AND NP
}
HRI.R.2 { @ Overlap of OD and HRI is not allowed
  HRI AND OD
}  
HRI.A.1 { @ Min. area of a HRI region >= ^HRI_A_1 um2
  HRI AREA < HRI_A_1
}


// NP CHECKS
//============
NP.W.1 { @ NP width < ^NP_W_1
  A1 = EXPAND EDGE SLIT_PP_HV OUTSIDE BY GRID
  A2 = A1 INSIDE POLY
  A3 = SLIT_PP_HV TOUCH EDGE A2
  A = NP NOT COIN OUTSIDE EDGE A3
  INT A < NP_W_1 ABUT < 90 REGION
}


NP.S.1 { @ NP space < ^NP_S_1
  X = (NA6G5_NBL_OD_ALL OR NLD6G5_DE_FULLY_ISO_CH) OR NLD6G5_DE_CH
  A = NP NOT INTERACT X
  EXT A < NP_S_1 ABUT < 90 SINGULAR REGION
}
NP.C.1 { @ NP space to p active in NWEL < ^NP_C_1
         @ P active in NWEL can be butting or non-butting.
         @ The non-butting P active is not allowed to touch NP.
  EXT NP PACT < NP_C_1 ABUT > 0 < 90 SINGULAR REGION
  X = EXT NP [PACT] < 0.001 ABUT == 0
  Y = EXPAND EDGE X OUTSIDE BY 0.001
  Y NOT INTERACT NPOD
}

NP.C.2 { @ NP space to non-butting ptap < 0.1 with NWEL space >= 0.43
  EXT NP PTAP < 0.1 ABUT > 0 < 90 SINGULAR REGION
}
NP.C.3 { @ NP space to non-butting ptap < 0.18 with NWEL space < 0.43
  NPC3_CHECKOD INSIDE EDGE PPE4_NWELC
}
// NP.C.4 is checked by PP.C.5 and PP.R.1_NP.R.1
NP.C.5 { @ NP extension over (N gate) + (field poly within 0.35um) < 0.32um
  // This rule must extend out of gate in the direction of PO by 0.35um
  X = NP INTERACT (((SLIT_HVNMOS OR SLIT_HVPMOS) OR HVNGATE) OR 5V_FGD_NGATE)
  ((EXGATE_NP NOT NP) NOT INTERACT (MTP_2T2C AND MCEL)) NOT INTERACT X 
}

NP.O.1 { @ min overlap from a NP edge to an OD region(except{Source OD OR GATE} of Slit HVMOS) >= 0.23
  A1 = (((((((((((((((NLD6G5_SA_FULLY_ISO_S OR NLD6G5_DE_FULLY_ISO_S) OR NLD9G5_FULLY_ISO_S) OR NLD9G5_S) OR NLD12G5_FULLY_ISO_S) OR NLD12G5_S) OR NLD16G5_FULLY_ISO_S) OR NLD16G5_S) OR NLD45G5_GB_S) OR NLD36G5_GB_S) OR NA45G3_DEP_GB_S) OR NLD20G5_FULLY_ISO_S) OR NLD20G5_S) OR NLD24G5_FULLY_ISO_S) OR NLD24G5_ISO_SWITCH_S) OR HVNGATE_6_9_12_45) OR HVNGATE_20_24
  A = OD NOT A1
  INT A NP < 0.230  ABUT <90 >0 SINGULAR REGION
}

NP.E.1 { @ NP olap OD < ^NP_E_1 except SEALRING region
  X = NACT NOT ODWR
  ( ENC X NP < NP_E_1 ABUT > 0 < 90 SINGULAR REGION ) NOT INTERACT SEALRING_ALL
  Y = ENC [X] NP < 0.001 ABUT == 0
  Z  = EXPAND EDGE Y OUTSIDE BY 0.001
  X1 = COPY DIO_ZENER_NBL_M
  (( Z NOT INTERACT PPOD ) NOT INTERACT X1) NOT INTERACT SEALRING_ALL
}
NP.E.3 { @ Minimum enclosure of NTAP by NP < 0.02 with PWEL space >= 0.43
  ENC NTAP NP < 0.02 ABUT > 0 < 90 SINGULAR REGION
  X = ENC [NTAP] NP < 0.001 ABUT == 0
  Y = EXPAND EDGE X OUTSIDE BY 0.001
  (Y NOT INTERACT PPOD) NOT INTERACT SBD_HVDIO_M
}
NP.E.4 { @ Min. enc. of NTAP by NP < 0.18 with PWEL space < 0.43
  NPE4_CHECKOD OUTSIDE EDGE NPE4_NWELC
}
// NP.C.6 is not checked by drc
// NP.E.5 is not checked by drc

NP.A.1 { @ Minimum area of NP < 0.3844
  NP AREA < 0.3844
}

NP.E.6 { @ Min enc of POLY resistor by NP < 0.18
  ENC PORES NP < 0.18 ABUT < 90 SINGULAR REGION
}
NP.E.7 { @ Minimum extension of a NP beyond DMN2V (except DMN2V fully inside NP) >= ^NP_E_7
  A = DMN2V NOT INSIDE NP
  ENC A NP < NP_E_7 ABUT < 90 SINGULAR REGION
}
// NP.R.2 is not necessary to check







HVNP.C.1 { @ min clearance from NP to PO inside CHannel OD for HVPMOS multi-finger strcture >= ^HVNP_C_1
   EXT NP HVPGATE < HVNP_C_1 ABUT <90 SINGULAR REGION  
}

NP_DRAIN = COPY ALL_HVNMOS_D
NP_HOLE = HOLES (NP INTERACT HVGATE)
HVNP.C.2 { @ min clearance of NP to Drain OD in channel width direction >= ^HVNP_C_2
    A = NP_HOLE INTERACT NP_DRAIN
    B = A AND OD
    C = B NOT TOUCH INSIDE EDGE A 
    D = EXPAND EDGE C OUTSIDE BY HVNP_C_2
    E = D NOT A
    NP_HOLE INTERACT E
}

HVNP.C.4 { @ min clearance from a NP to PO in channel length direction for multi-finger structure of butted-source structure >= ^HVNP_C_4
    A = OD INTERACT (ALL_HVNMOS_S INTERACT PP)
    B = NP INTERACT A
    EXT B < HVNP_C_4-HVNP_E_1 ABUT <90 SPACE REGION
}

HVNP.E.1 { @ min extension of NP beyond PO toward bulk OD in channel length direction of HV devices >= ^HVNP_E_1
    A = ALL_HVNMOS_S INTERACT PP
    B = POLY TOUCH OUTSIDE EDGE A
    ENC B NP < HVNP_E_1 ABUT < 90 REGION
}

HVNP.E.2 { @ min and max extension of POLY beyond NP in channel length direction (except (PO AND SLIT PP)) == ^HVNP_E_2
     A = NP_HOLE INTERACT HVNGATE
     A1 = A NOT COIN INSIDE EDGE SLIT_PP_HV
     INT A1 POLY < HVNP_E_2 ABUT < 90 REGION
     B = A AND POLY
     B1 = SIZE B BY HVNP_E_2/2 UNDEROVER
     B1 NOT COIN INSIDE EDGE SLIT_PP_HV
}

HVNP.R.1 { @ (PO AND OD) SIZE -0.2 must be fully covered by NP
    A = POLY AND HVNGATE
    B = SIZE A BY -0.2
    B NOT INSIDE NP 
}
HVNP.C.3_NLD6G5_DE { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD6G5_DE
	A = NP_HOLE INTERACT NLD6G5_DE_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD6G5_DE_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD6G5_DE
    E NOT TOUCH POLY
    NLD6G5_DE_GATE NOT INTERACT NP_HOLE
}

HVNP.C.3_NLD24G5 { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD24G5
	A = NP_HOLE INTERACT NLD24G5_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD24G5_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD24G5
    E NOT TOUCH POLY
    NLD24G5_GATE NOT INTERACT NP_HOLE
}

HVNP.C.3_NLD24G5_SWITCH { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD24G5_SWITCH
	A = NP_HOLE INTERACT NLD24G5_SWITCH_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD24G5_SWITCH_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD24G5_SWITCH
    E NOT TOUCH POLY
    NLD24G5_SWITCH_GATE NOT INTERACT NP_HOLE
}


HVNP.C.3_NLD6G5_DE_FULLY_ISO { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD6G5_DE_FULLY_ISO
	A = NP_HOLE INTERACT NLD6G5_DE_FULLY_ISO_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD6G5_DE_FULLY_ISO_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD6G5_DE_FULLY_ISO
    E NOT TOUCH POLY
    NLD6G5_DE_FULLY_ISO_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NA6G5_NBL { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NA6G5_NBL
	A = NP_HOLE INTERACT NA6G5_NBL_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NA6G5_NBL_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NA6G5_NBL
    E NOT TOUCH POLY
    NA6G5_NBL_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NLD9G5 { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD9G5
	A = NP_HOLE INTERACT NLD9G5_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD9G5_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD9G5
    E NOT TOUCH POLY
    NLD9G5_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NLD9G5_FULLY_ISO { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD9G5_FULLY_ISO
	A = NP_HOLE INTERACT NLD9G5_FULLY_ISO_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD9G5_FULLY_ISO_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD9G5_FULLY_ISO
    E NOT TOUCH POLY
    NLD9G5_FULLY_ISO_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NLD12G5 { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD12G5
	A = NP_HOLE INTERACT NLD12G5_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD12G5_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD12G5
    E NOT TOUCH POLY
    NLD12G5_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NLD12G5_FULLY_ISO { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD12G5_FULLY_ISO
	A = NP_HOLE INTERACT NLD12G5_FULLY_ISO_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD12G5_FULLY_ISO_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD12G5_FULLY_ISO
    E NOT TOUCH POLY
    NLD12G5_FULLY_ISO_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NLD16G5 { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD16G5
	A = NP_HOLE INTERACT NLD16G5_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD16G5_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD16G5
    E NOT TOUCH POLY
    NLD16G5_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NLD16G5_FULLY_ISO { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD16G5_FULLY_ISO
	A = NP_HOLE INTERACT NLD16G5_FULLY_ISO_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD16G5_FULLY_ISO_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD16G5_FULLY_ISO
    E NOT TOUCH POLY
    NLD16G5_FULLY_ISO_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NLD20G5 { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD20G5
	A = NP_HOLE INTERACT NLD20G5_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD20G5_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD20G5
    E NOT TOUCH POLY
    NLD20G5_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NLD20G5_FULLY_ISO { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD20G5_FULLY_ISO
	A = NP_HOLE INTERACT NLD20G5_FULLY_ISO_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD20G5_FULLY_ISO_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD20G5_FULLY_ISO
    E NOT TOUCH POLY
    NLD20G5_FULLY_ISO_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NLD24G5_FULLY_ISO { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD24G5_FULLY_ISO
	A = NP_HOLE INTERACT NLD24G5_FULLY_ISO_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD24G5_FULLY_ISO_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD24G5_FULLY_ISO
    E NOT TOUCH POLY
    NLD24G5_FULLY_ISO_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NLD24G5_ISO_SWITCH { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD24G5_ISO_SWITCH
	A = NP_HOLE INTERACT NLD24G5_ISO_SWITCH_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD24G5_ISO_SWITCH_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD24G5_ISO_SWITCH
    E NOT TOUCH POLY
    NLD24G5_ISO_SWITCH_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NA20G5 { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NA20G5
	A = NP_HOLE INTERACT NA20G5_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NA20G5_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NA20G5
    E NOT TOUCH POLY
    NA20G5_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NA20G5_NBL { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NA20G5_NBL
	A = NP_HOLE INTERACT NA20G5_NBL_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NA20G5_NBL_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NA20G5_NBL
    E NOT TOUCH POLY
    NA20G5_NBL_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NA29G5 { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NA29G5
	A = NP_HOLE INTERACT NA29G5_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NA29G5_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NA29G5
    E NOT TOUCH POLY
    NA29G5_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NA29G5_NBL { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NA29G5_NBL
	A = NP_HOLE INTERACT NA29G5_NBL_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NA29G5_NBL_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NA29G5_NBL
    E NOT TOUCH POLY
    NA29G5_NBL_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NA29G3_DEP_NBL { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NA29G3_DEP_NBL
	A = NP_HOLE INTERACT NA29G3_DEP_NBL_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NA29G3_DEP_NBL_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NA29G3_DEP_NBL
    E NOT TOUCH POLY
    NA29G3_DEP_NBL_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NLD36G5_GB { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD36G5_GB
	A = NP_HOLE INTERACT NLD36G5_GB_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD36G5_GB_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD36G5_GB
    E NOT TOUCH POLY
    NLD36G5_GB_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NLD45G5_GB { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NLD45G5_GB
	A = NP_HOLE INTERACT NLD45G5_GB_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NLD45G5_GB_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NLD45G5_GB
    E NOT TOUCH POLY
    NLD45G5_GB_GATE NOT INTERACT NP_HOLE
}
HVNP.C.3_NA45G3_DEP_GB { @ min and max clearance from NP to PO in channel length direction == ^HVNP_C_3_NA45G3_DEP_GB
	A = NP_HOLE INTERACT NA45G3_DEP_GB_D
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = (B INTERACT OD) NOT INTERACT NA45G3_DEP_GB_GATE
    D = C TOUCH OUTSIDE EDGE A
    E = EXPAND EDGE D OUTSIDE BY HVNP_C_3_NA45G3_DEP_GB
    E NOT TOUCH POLY
    NA45G3_DEP_GB_GATE NOT INTERACT NP_HOLE
}

HVNP.O.1_ZENER_NBL { @ min and max overlap of NP over PO of Zener Diode == ^ HVPP_O_1_ZENER_NBL
    A = POLY INTERACT DIO_ZENER_NBL_M
	INT A NP < HVNP_O_1_ZENER_NBL ABUT < 90 SINGULAR REGION
	B = A AND NP
	SIZE B BY HVNP_O_1_ZENER_NBL/2 UNDEROVER
}

PP_DRAIN = COPY ALL_HVPMOS_D
PP_HOLE = HOLES (PP INTERACT HVGATE)

HVPP.W.1_SBD_12V { @ min and max width of a PP square for GA SBD_12V diode == ^HVPP_W_1_SBD_12V
  A = DIO_SBD_12V_M_2 NOT (DONUT DIO_SBD_12V_M_2)
  NOT RECTANGLE A == HVPP_W_1_SBD_12V BY == HVPP_W_1_SBD_12V ORTHOGONAL ONLY
}

HVPP.S.1_SBD_12V { @ min and max space between two {PP INTERACT NDD} regions for GA SBD_12V diode == ^HVPP_S_1_SBD_12V
  EXT DIO_SBD_12V_M_2 < HVPP_S_1_SBD_12V ABUT < 90 SINGULAR REGION
  A = SIZE DIO_SBD_12V_M_2 BY HVPP_S_1_SBD_12V/2 OVERUNDER
  B = (DONUT PP) INTERACT DIO_SBD_12V_M
  C = B OR (B HOLES INNER)
  A XOR C 
}

HVPP.O.2_SBD_12V { @ min and max overlap of PP ring and Anode OD for HV SBD_12V diode == ^HVPP_O_2_SBD_12V
  A = DONUT DIO_SBD_12V_M_2
  INT A < HVPP_O_2_SBD_12V ABUT < 90 SINGULAR REGION
  SIZE A BY HVPP_O_2_SBD_12V/2 UNDEROVER
}

HVPP.O.3_SBD_12V { @ min and max overlap of PP ring and RPO for HV SBD_12V diode == ^HVPP_O_3_SBD_12V
  A = DONUT DIO_SBD_12V_M_2
  INT A RPO < HVPP_O_3_SBD_12V ABUT < 90 SINGULAR REGION
  B = A AND RPO
  SIZE B BY HVPP_O_3_SBD_12V/2 UNDEROVER
}
HVPP.W.1_SBD_16V { @ min and max width of a PP square for GA SBD_16V diode == ^HVPP_W_1_SBD_16V
  A = DIO_SBD_16V_M_2 NOT (DONUT DIO_SBD_16V_M_2)
  NOT RECTANGLE A == HVPP_W_1_SBD_16V BY == HVPP_W_1_SBD_16V ORTHOGONAL ONLY
}

HVPP.S.1_SBD_16V { @ min and max space between two {PP INTERACT NDD} regions for GA SBD_16V diode == ^HVPP_S_1_SBD_16V
  EXT DIO_SBD_16V_M_2 < HVPP_S_1_SBD_16V ABUT < 90 SINGULAR REGION
  A = SIZE DIO_SBD_16V_M_2 BY HVPP_S_1_SBD_16V/2 OVERUNDER
  B = (DONUT PP) INTERACT DIO_SBD_16V_M
  C = B OR (B HOLES INNER)
  A XOR C 
}

HVPP.O.2_SBD_16V { @ min and max overlap of PP ring and Anode OD for HV SBD_16V diode == ^HVPP_O_2_SBD_16V
  A = DONUT DIO_SBD_16V_M_2
  INT A < HVPP_O_2_SBD_16V ABUT < 90 SINGULAR REGION
  SIZE A BY HVPP_O_2_SBD_16V/2 UNDEROVER
}

HVPP.O.3_SBD_16V { @ min and max overlap of PP ring and RPO for HV SBD_16V diode == ^HVPP_O_3_SBD_16V
  A = DONUT DIO_SBD_16V_M_2
  INT A RPO < HVPP_O_3_SBD_16V ABUT < 90 SINGULAR REGION
  B = A AND RPO
  SIZE B BY HVPP_O_3_SBD_16V/2 UNDEROVER
}
HVPP.W.1_SBD_24V { @ min and max width of a PP square for GA SBD_24V diode == ^HVPP_W_1_SBD_24V
  A = DIO_SBD_24V_M_2 NOT (DONUT DIO_SBD_24V_M_2)
  NOT RECTANGLE A == HVPP_W_1_SBD_24V BY == HVPP_W_1_SBD_24V ORTHOGONAL ONLY
}

HVPP.S.1_SBD_24V { @ min and max space between two {PP INTERACT NDD} regions for GA SBD_24V diode == ^HVPP_S_1_SBD_24V
  EXT DIO_SBD_24V_M_2 < HVPP_S_1_SBD_24V ABUT < 90 SINGULAR REGION
  A = SIZE DIO_SBD_24V_M_2 BY HVPP_S_1_SBD_24V/2 OVERUNDER
  B = (DONUT PP) INTERACT DIO_SBD_24V_M
  C = B OR (B HOLES INNER)
  A XOR C 
}

HVPP.O.2_SBD_24V { @ min and max overlap of PP ring and Anode OD for HV SBD_24V diode == ^HVPP_O_2_SBD_24V
  A = DONUT DIO_SBD_24V_M_2
  INT A < HVPP_O_2_SBD_24V ABUT < 90 SINGULAR REGION
  SIZE A BY HVPP_O_2_SBD_24V/2 UNDEROVER
}

HVPP.O.3_SBD_24V { @ min and max overlap of PP ring and RPO for HV SBD_24V diode == ^HVPP_O_3_SBD_24V
  A = DONUT DIO_SBD_24V_M_2
  INT A RPO < HVPP_O_3_SBD_24V ABUT < 90 SINGULAR REGION
  B = A AND RPO
  SIZE B BY HVPP_O_3_SBD_24V/2 UNDEROVER
}
//HVPP.C.1 is checked by HVNP.E.1
//HVPP.E.3 is checked by HVNP.E.1

HVPP.C.2_PA6G5_DE_BL { @ min and max clearance from PP TO PO in channel length direction == ^HVPP_C_2_PA6G5_DE_BL
    A = PP_HOLE INTERACT PA6G5_DE_BL_D
    NOT RECTANGLE A
    B = (A AND OD) NOT POLY
    PA6G5_DE_BL_D NOT INTERACT B
    INT B < HVPP_C_2_PA6G5_DE_BL ABUT <90 SINGULAR REGION
    SIZE B UNDEROVER BY HVPP_C_2_PA6G5_DE_BL/2
}
HVPP.C.2_PA12G5_SLIT_BL { @ min and max clearance from PP TO PO in channel length direction == ^HVPP_C_2_PA12G5_SLIT_BL
    A = PP_HOLE INTERACT PA12G5_SLIT_BL_D
    NOT RECTANGLE A
    B = (A AND OD) NOT POLY
    PA12G5_SLIT_BL_D NOT INTERACT B
    INT B < HVPP_C_2_PA12G5_SLIT_BL ABUT <90 SINGULAR REGION
    SIZE B UNDEROVER BY HVPP_C_2_PA12G5_SLIT_BL/2
}
HVPP.C.2_PA12G5_NBL { @ min and max clearance from PP TO PO in channel length direction == ^HVPP_C_2_PA12G5_NBL
    A = PP_HOLE INTERACT PA12G5_NBL_D
    NOT RECTANGLE A
    B = (A AND OD) NOT POLY
    PA12G5_NBL_D NOT INTERACT B
    INT B < HVPP_C_2_PA12G5_NBL ABUT <90 SINGULAR REGION
    SIZE B UNDEROVER BY HVPP_C_2_PA12G5_NBL/2
}
HVPP.C.2_PA20G5_BL { @ min and max clearance from PP TO PO in channel length direction == ^HVPP_C_2_PA20G5_BL
    A = PP_HOLE INTERACT PA20G5_BL_D
    NOT RECTANGLE A
    B = (A AND OD) NOT POLY
    PA20G5_BL_D NOT INTERACT B
    INT B < HVPP_C_2_PA20G5_BL ABUT <90 SINGULAR REGION
    SIZE B UNDEROVER BY HVPP_C_2_PA20G5_BL/2
}
HVPP.C.2_PA20G5_SLIT_BL { @ min and max clearance from PP TO PO in channel length direction == ^HVPP_C_2_PA20G5_SLIT_BL
    A = PP_HOLE INTERACT PA20G5_SLIT_BL_D
    NOT RECTANGLE A
    B = (A AND OD) NOT POLY
    PA20G5_SLIT_BL_D NOT INTERACT B
    INT B < HVPP_C_2_PA20G5_SLIT_BL ABUT <90 SINGULAR REGION
    SIZE B UNDEROVER BY HVPP_C_2_PA20G5_SLIT_BL/2
}
HVPP.C.2_PA9G5_NBL { @ min and max clearance from PP TO PO in channel length direction == ^HVPP_C_2_PA9G5_NBL
    A = PP_HOLE INTERACT PA9G5_NBL_D
    NOT RECTANGLE A
    B = (A AND OD) NOT POLY
    PA9G5_NBL_D NOT INTERACT B
    INT B < HVPP_C_2_PA9G5_NBL ABUT <90 SINGULAR REGION
    SIZE B UNDEROVER BY HVPP_C_2_PA9G5_NBL/2
}

HVPP.C.2_PA9G5_SLIT_NBL { @ min and max clearance from PP TO PO in channel length direction == ^HVPP_C_2_PA9G5_SLIT_NBL
    A = PP_HOLE INTERACT PA9G5_SLIT_NBL_D
    NOT RECTANGLE A
    B = (A AND OD) NOT POLY
    PA9G5_SLIT_NBL_D NOT INTERACT B
    INT B < HVPP_C_2_PA9G5_SLIT_NBL ABUT <90 SINGULAR REGION
    SIZE B UNDEROVER BY HVPP_C_2_PA9G5_SLIT_NBL/2
}

HVPP.C.2_PA16G5_NBL { @ min and max clearance from PP TO PO in channel length direction == ^HVPP_C_2_PA16G5_NBL
    A = PP_HOLE INTERACT PA16G5_NBL_D
    NOT RECTANGLE A
    B = (A AND OD) NOT POLY
    PA16G5_NBL_D NOT INTERACT B
    INT B < HVPP_C_2_PA16G5_NBL ABUT <90 SINGULAR REGION
    SIZE B UNDEROVER BY HVPP_C_2_PA16G5_NBL/2
}

HVPP.C.2_PA16G5_SLIT_NBL { @ min and max clearance from PP TO PO in channel length direction == ^HVPP_C_2_PA16G5_SLIT_NBL
    A = PP_HOLE INTERACT PA16G5_SLIT_NBL_D
    NOT RECTANGLE A
    B = (A AND OD) NOT POLY
    PA16G5_SLIT_NBL_D NOT INTERACT B
    INT B < HVPP_C_2_PA16G5_SLIT_NBL ABUT <90 SINGULAR REGION
    SIZE B UNDEROVER BY HVPP_C_2_PA16G5_SLIT_NBL/2
}

HVPP.C.2_PA29G5_BL { @ min and max clearance from PP TO PO in channel length direction == ^HVPP_C_2_PA29G5_BL
    A = PP_HOLE INTERACT PA29G5_BL_D
    NOT RECTANGLE A
    B = A NOT POLY
    PA29G5_BL_D NOT INTERACT B
    INT B < HVPP_C_2_PA29G5_BL ABUT <90 SINGULAR REGION
    SIZE B UNDEROVER BY HVPP_C_2_PA29G5_BL/2
}

HVPP.C.3 { @ min clearance of PP to Drain OD in channel width direction >= ^HVPP_C_3
    A = PP_HOLE INTERACT PP_DRAIN
    B = A AND OD
    C = B NOT TOUCH INSIDE EDGE A 
    D = EXPAND EDGE C OUTSIDE BY HVPP_C_3
    E = D NOT A
	PP_HOLE INTERACT E
}

HVPP.C.4 { @ min clearance from a PP to PO in channel length direction for multi-finger structure >= ^HVPP_C_4
    A = OD INTERACT (ALL_HVPMOS_S INTERACT NP)
    B = PP INTERACT A
    EXT B < HVPP_C_4-HVPP_E_2 ABUT <90 SPACE REGION
}

HVPP.E.1 { @ min and max extension of PO to PP in channel length direction(except (PO AND Slit NP)) == ^HVPP_E_1
    A = (PP_HOLE INTERACT PP_DRAIN) NOT SLIT_NP_HV
    INT A POLY < HVPP_E_1 ABUT < 90 REGION
    B = A AND POLY
	SIZE B BY HVPP_E_1/2 UNDEROVER
}

HVPP.E.2 { @ min extension of PP beyond PO toward bulk OD in channel length direction of HV devices >= ^HVPP_E_2
    A = ALL_HVPMOS_S INTERACT NP
    B = POLY TOUCH OUTSIDE EDGE A
    ENC B PP < HVPP_E_2 ABUT < 90 REGION
}



HVPP.O.1_ZENER_NBL { @ min and max overlap of PP over PO of Zener Diode == ^ HVPP_O_1_ZENER_NBL
    A = POLY INTERACT DIO_ZENER_NBL_M
	INT A PP < HVPP_O_1_ZENER_NBL ABUT < 90 SINGULAR REGION
	B = A AND PP
	SIZE B BY HVPP_O_1_ZENER_NBL/2 UNDEROVER
}

HVPP.R.1 { @ (PO SIZING -0.2) must be fully covered by PP
    B = POLY INTERACT HVPGATE
    (SIZE B BY -0.2 ) NOT PP
}

// PP CHECKS
//============
PPE4_NWELC = SIZE (NWELi OR HVSHNi) BY 0.43
PPE4_NWELS = SIZE PPE4_NWELC BY 0.18
PPE4_OD = PTAP AND PPE4_NWELS
PPE4_C1 = ENC PPE4_OD PP < 0.18 ABUT > 0 < 90 OPPOSITE REGION
PPE4_C2 = ENC PPE4_OD PP < 0.18 ABUT > 0 < 90 CORNER REGION
PPE4_C3 = ENC PPE4_OD PP < 0.18 ABUT > 0 < 90 PROJ==0 REGION
PPE4_C4 = (SIZE PPE4_C2 BY 0.005) NOT PPE4_OD
PPE4_ALL = (PPE4_C1 OR PPE4_C3) OR PPE4_C4
PPE4_CHECKOD = PPE4_ALL COIN OUTSIDE EDGE PPE4_OD


NPC3_C1 = EXT PPE4_OD NP < 0.18 ABUT > 0 < 90 OPPOSITE REGION
NPC3_C2 = EXT PPE4_OD NP < 0.18 ABUT > 0 < 90 CORNER REGION
NPC3_C3 = EXT PPE4_OD NP < 0.18 ABUT > 0 < 90 PROJ==0 REGION
NPC3_C4 = (SIZE NPC3_C2 BY 0.005) NOT PPE4_OD
NPC3_ALL = (NPC3_C1 OR NPC3_C3) OR NPC3_C4
NPC3_CHECKOD = NPC3_ALL COIN OUTSIDE EDGE PPE4_OD


NPE4_NWELC = SIZE ((NWELi OR HVNWi) OR HVSHNi) BY -0.43
NPE4_NWELS = SIZE NPE4_NWELC BY -0.18
NPE4_OD = NTAP NOT NPE4_NWELS
NPE4_C1 = ENC NPE4_OD NP < 0.18 ABUT > 0 < 90 OPPOSITE REGION
NPE4_C2 = ENC NPE4_OD NP < 0.18 ABUT > 0 < 90 CORNER REGION
NPE4_C3 = ENC NPE4_OD NP < 0.18 ABUT > 0 < 90 PROJ==0 REGION
NPE4_C4 = (SIZE NPE4_C2 BY 0.005) NOT NPE4_OD
NPE4_ALL = (NPE4_C1 OR NPE4_C3) OR NPE4_C4
NPE4_CHECKOD = NPE4_ALL COIN OUTSIDE EDGE NPE4_OD

PPC3_C1 = EXT NPE4_OD PP < 0.18 ABUT > 0 < 90 OPPOSITE REGION
PPC3_C2 = EXT NPE4_OD PP < 0.18 ABUT > 0 < 90 CORNER REGION
PPC3_C3 = EXT NPE4_OD PP < 0.18 ABUT > 0 < 90 PROJ==0 REGION
PPC3_C4 = (SIZE PPC3_C2 BY 0.005) NOT NPE4_OD
PPC3_ALL = (PPC3_C1 OR PPC3_C3) OR PPC3_C4
PPC3_CHECKOD = PPC3_ALL COIN OUTSIDE EDGE NPE4_OD

PP.W.1 { @ PP width < ^PP_W_1
    A = PP NOT INTERACT PA9G5_SLIT_NBL_GATE  
    INT A < PP_W_1 ABUT < 90 SINGULAR REGION

}



PP.S.1 { @ PP space < ^PP_S_1
  X = COPY PA6G5_DE_BL_OD_ALL
  A = PP NOT INTERACT X
  EXT A < PP_S_1 ABUT < 90 SINGULAR REGION
}

PP.C.1 { @ PP space to n active in pwell < ^PP_C_1
  // N active in pwell can be butting or non-butting. 
  // The non-butting N active is not allowed to touch PP.
  A = EXT PP NACT < PP_C_1 ABUT > 0 < 90 SINGULAR REGION
  A NOT INTERACT DIO_ZENER_NBL_M
  X = EXT PP [NACT] < 0.001 ABUT == 0
  Y = EXPAND EDGE X OUTSIDE BY 0.001
  Y NOT INTERACT PPOD
}
PP.C.2 { @ PP space to non-butting NTAP < 0.1 with PWEL space >= 0.43
  EXT PP NTAP < 0.1 ABUT > 0 < 90 SINGULAR REGION
}
PP.C.3 { @ PP space to non-butting NTAP < 0.18 with PWEL space < 0.43
  PPC3_CHECKOD OUTSIDE EDGE NPE4_NWELC
}
// PP.C.4 is checked by NP.C.5 and PP.R.1_NP.R.1
PP.C.5 { @ PP extension over (P gate) + (field poly within 0.35um) < ^PP_C_5 um
  // This rule must extend out of gate in the direction of PO by 0.35um
  X = PP INTERACT ((((5V_FGD_NGATE OR (MTP_2T2C AND MCEL)) OR SLIT_HVNMOS) OR SLIT_HVPMOS) OR ALL_HVPMOS_OD)
  (EXGATE_PP NOT PP) NOT INTERACT X
}

PP.O.1 { @ Minimum overlap from a PP edge to an OD region must >= 0.230um except SBD region and {Source OD OR GATE} of Slit HVMOS
    A1 = SLIT_HVNMOS OR SLIT_HVPMOS
	A = OD NOT A1
    INT A PP_NSBD < 0.230 ABUT > 0 < 90 SINGULAR REGION
}

PP.E.1 { @ Minimum extension of a PP region beyond a P+ active OD region must >= ^PP_E_1 um 
         @ except SBD and SEALRING region
    X = ((((HVESD_merge_PNP_24 OR HVESD_merge_PNP_20) OR HVESD_merge_PNP_20_PDD) OR HVESD_merge_PNP_16) OR HVESD_merge_PNP_12_PDD) OR SBD_HVDIO_M
    (ENC PACT PP_NSBD < PP_E_1 ABUT > 0 < 90 SINGULAR REGION) NOT INTERACT SEALRING_ALL
    Y = ENC [PACT] PP_NSBD < 0.001 ABUT == 0
    Z = EXPAND EDGE Y OUTSIDE BY 0.001 
    ((Z NOT INTERACT NPOD) NOT INTERACT SEALRING_ALL) NOT INTERACT X
}

PP.E.1_NP.E.1 { @ Implant can not coincident OD edge except butted diffusion
	(IMP NOT INTERACT SEALRING_ALL) COIN INSIDE EDGE OD
}
PP.E.3 { @ Minimum enclosure of PTAP by PP < 0.02 with NWEL space >= 0.43 except SEALRING region
  X1 = ((((HVESD_merge_PNP_24 OR HVESD_merge_PNP_20) OR HVESD_merge_PNP_20_PDD) OR HVESD_merge_PNP_16) OR HVESD_merge_PNP_12_PDD) OR DIO_ZENER_NBL_M
  (ENC PTAP PP < 0.02 ABUT > 0 < 90 SINGULAR REGION) NOT INTERACT SEALRING_ALL
  X = ENC [PTAP] PP < 0.001 ABUT == 0
  Y = EXPAND EDGE X OUTSIDE BY 0.001 
  ((Y NOT INTERACT NPOD ) NOT INTERACT SEALRING_ALL) NOT INTERACT X1
}
PP.E.4 { @ Min. enc. of PTAP by PP < 0.18 with NWEL space < 0.43
  PPE4_CHECKOD INSIDE EDGE PPE4_NWELC
}
// PP.C.6 is not necessary to check
// PP.E.5 is not necessary to check
PP.A.1 { @ Minimum area of PP < 0.3844
  PP AREA < 0.3844
}
#IFNDEF MIX_MODE
PP.E.6 { @ Min enc of POLY resistor by PP < 0.18
  A = ENC PORES PP < 0.18 ABUT < 90 SINGULAR REGION
  A NOT INTERACT (MTP_2T2C AND MCEL)
  B = HRI INTERACT RLPPDMY
  (((((RPO AND POLY) NOT IMP)NOT HRI3D3KDMY) NOT B)  NOT INTERACT HVGATE) NOT INTERACT (MTP_2T2C AND MCEL)
}
#ENDIF


PP.R.1_NP.R.1 { @ PP and NP not allowed to overlap
  PP AND NP
}
//PP.R.1 is checked by PP.R.1_NP.R.1
//NP.R.1 is checked by PP.R.1_NP.R.1

// PP.R.2 is not necessary to check
PP.R.3_NP.R.3 { @ OD must be fully covered by PP and NP, except OD without interacting CO OR PO
   X = ((((((HVESD_merge_PNP_12_PDD OR HVESD_merge_PNP_16) OR HVESD_merge_PNP_20) OR HVESD_merge_PNP_20_PDD) OR HVESD_merge_PNP_24) OR HVGATE) OR PA29G5_BL_D) OR DIO_ZENER_NBL_M
   (((((OD INTERACT POLYi )NOT ODWR)NOT SBDDMY) NOT IMP) NOT INTERACT X) NOT SBD3TDMY
   (((((OD INTERACT COi )NOT ODWR)NOT SBDDMY) NOT IMP) NOT INTERACT X) NOT SBD3TDMY
}



// RPO checks
//===========

CB_HOLE = HOLES CB 
CB_SR = CB TOUCH CB_HOLE ==1
RPO_NOT_SR = RPO NOT INTERACT CB_SR

RPO.W.1 { @ Minimum RPO width < 0.43
  INT RPO < 0.43 ABUT < 90 SINGULAR REGION
}
RPO.S.1 { @ Minimum RPO space < ^RPO_S_1
  EXT RPO < RPO_S_1 ABUT < 90 SINGULAR REGION
}
RPO.C.1 { @ Minimum RPO space to OD < 0.22
  A = EXT RPO OD < 0.22 ABUT < 90 SINGULAR REGION
  A NOT INTERACT ((MTP_2T2C AND MCEL) OR SEALRING_ALL)
}

RPO.C.2 { @ Minimum RPO space to CO (except HVMOS) < 0.22
  X = COPY SBD_HVDIO_M
  A = (RPO NOT INTERACT HVGATE) NOT INTERACT X
  EXT A CO < 0.22 ABUT < 90 SINGULAR REGION
  CO AND RPO
}
RPO.C.3 { @ Minimum RPO space to gate < 0.45 
    	  @exclude ESD part
  A = ((((((ALL_GATE NOT DRCDMY) NOT ESD1DMY) NOT ESD2DMY) NOT ESD3DMY ) NOT SDI) NOT HVGATE) NOT (MTP_2T2C AND MCEL)
  EXT RPO A < 0.45 ABUT < 90 SINGULAR REGION 
  RPO AND A
}
RPO.C.4 { @ Minimum RPO overhang OD < 0.22
  A = ENC OD RPO < 0.22 ABUT < 90 SINGULAR REGION
  A NOT INTERACT (((MTP_2T2C AND MCEL) OR SEALRING_ALL) OR SBD_HVDIO_M)
  (RPO_NOT_SR INSIDE OD) NOT INTERACT (((MTP_2T2C AND MCEL) OR SEALRING_ALL) OR SBD_HVDIO_M)
}
RPO.E.1 { @ Minimum OD overhang RPO < 0.22
  A = ENC RPO OD < 0.22 ABUT < 90 SINGULAR REGION
  A NOT INTERACT ((MTP_2T2C AND MCEL) OR SEALRING_ALL)
}
RPO.C.5 { @ Minimum RPO overhang POLY < 0.22
  ENC POLY RPO < 0.22 ABUT < 90 SINGULAR REGION
  RPO_NOT_SR INSIDE POLY
}
RPO.C.6 { @ Minimum clearance RPO to unrelated poly < 0.3um
  A = EXT RPO POLY_ISO < 0.30 ABUT < 90 SINGULAR REGION
  A NOT INTERACT (MTP_2T2C AND MCEL)
}
RPO.A.1 { @ RPO min. area < 2 um*um
  AREA RPO < 2
}






VARIABLE RPO_A_2pre ((RPO_A_2 + (RPO_S_1 * RPO_S_1 * 3.142))/(2 * RPO_S_1))*((RPO_A_2 + (RPO_S_1 * RPO_S_1 * 3.142))/(2 * RPO_S_1))/3.141
RPO.A.2 { @ Enclosed Area >= ^RPO_A_2 um2
  A = HOLES RPO INNER < RPO_A_2pre 
  B = A NOT RPO
  AREA B < RPO_A_2
}  

// CO checks
//===============
CO.W.1 { @ contact width != 0.22
  X = CO NOT SR_CO
  NOT RECTANGLE X == 0.22 BY == 0.22 ORTHOGONAL ONLY
}
CO.S.1 { @ contact spacing < 0.25
  EXT CO < 0.25 ABUT < 90 SINGULAR REGION
}


CO.S.2  { @ Min space between two contacts in larger than 4x4 array.
  A = SIZE CO BY 0.30/2 OVERUNDER	// space < 0.3um treat as array
  B = SIZE A BY 0.7 UNDEROVER	// (0.22*3+0.3*2) = 1.26  (3 COs Mix.)
  C = B INTERACT CO >= 16	// 1.63-0.22 = 1.41       (Max. CO shift space) 
  D = CO INTERACT C		// so 1.26 < CONTY width < 1.41
  EXT D < 0.28			// & we use CONTY width = 1.4
}
CO.C.1_CO.R.1 { @ diff contact to gate space < 0.16, or contact on gate
  EXT CO_DIFF ALL_GATE < 0.16 ABUT < 90 SINGULAR REGION
  CO_DIFF AND ALL_GATE    
}
CO.C.2 { @ poly contact space to OD < 0.20
  EXT CO_POLY OD < 0.20 ABUT < 90 SINGULAR REGION
}
CO.E.1 { @ active olap contact < 0.10, also floating contacts
  ENC CO_DIFF OD < 0.10 ABUT < 90 SINGULAR REGION
  CO_DIFF OUTSIDE EDGE OD    
}
CO.E.2 { @ poly olap contact < 0.10
  ENC CO_POLY POLY_ISO < 0.10 ABUT < 90 SINGULAR REGION
  CO_POLY CUT POLY_ISO    
}

CO.E.3 { @ Minimum extension of a PP region beyond a OD CO region must >= ^CO_E_3 um except SBD region
    X = (SBD_HVDIO_M OR PPOD_ISO_H_BJT) OR SBDDMY
    A = ((CO_DIFF NOT INTERACT HVNMOS_S_TAP) NOT INTERACT SLIT_HVPMOS) NOT INTERACT X
    ENC A PP < CO_E_3 ABUT < 90 SINGULAR REGION
    PP INSIDE EDGE A
}
CO.E.4 { @ Minimum extension of a NP region beyond a OD CO region source-side butted contacts forHVPMOS
         @ are excepted. (please refer to HVCO.E.2) < 0.12
  X = (SBD_HVDIO_M OR PPOD_ISO_H_BJT) OR SLIT_HVNMOS
  A = (CO_DIFF NOT INTERACT HVPMOS_S_TAP) NOT INTERACT X
  ENC A NP < 0.12 ABUT < 90 SINGULAR REGION
  NP INSIDE EDGE A
}

// CO.R.2 is checked by CO.E.3/CO.E.4
// CO.R.3 is checked by RPO.C.2
CO.R.4 { @ CO and {PO INTERACT(RPDMY(54;0) OR RPDMY(drawing1)(54;1) OR RLPPDMY)} must be fully covered by {NP OR PP}
   A = CO AND (POLY INTERACT(RPDUMMY OR RLPPDMY))
   A NOT (NP OR PP)
}
HVCO.E.1 { @ Minimum extension of a PP region beyond a OD CO region for source-side butted contacts of HVNMOS >= ^HVCO_E_1
   HVNMOS_BUT_S_TAP1 = HVNMOS_S_TAP INTERACT HVNMOS_BUT_S ==1
   BUTP_CO1 = CO_DIFF AND HVNMOS_BUT_S_TAP1
   HVNMOS_BUT_S_TAP2 = HVNMOS_S_TAP INTERACT HVNMOS_BUT_S >=2
   BUTP_CO2 = CO_DIFF AND HVNMOS_BUT_S_TAP2
   BUTP_CO = BUTP_CO1 OR BUTP_CO2
   X = SLIT_HVNMOS OR SLIT_HVPMOS
   A = PP NOT INTERACT X
   ENC BUTP_CO A < HVCO_E_1 ABUT <90 SINGULAR REGION 
}  
HVCO.E.2 { @ Minimum extension of a NP region beyond a OD CO region for source-side butted contacts of HVPMOS >= ^HVCO_E_2
   HVPMOS_BUT_S_TAP1 = HVPMOS_S_TAP INTERACT HVPMOS_BUT_S ==1
   BUTP_CO1 = CO_DIFF AND HVPMOS_BUT_S_TAP1
   HVPMOS_BUT_S_TAP2 = HVPMOS_S_TAP INTERACT HVPMOS_BUT_S >=2
   BUTP_CO2 = CO_DIFF AND HVPMOS_BUT_S_TAP2
   BUTP_CO = BUTP_CO1 OR BUTP_CO2
   X = SLIT_HVNMOS OR SLIT_HVPMOS
   A = NP NOT INTERACT X
   ENC BUTP_CO A < HVCO_E_2 ABUT <90 SINGULAR REGION
}




HVCO.C.3_ZENER_NBL { @ min clearance from a CO region to a PO region of Zener Diode >= ^HVCO_C_3_ZENER_NBL
   B = POLY OR (HOLES POLY INNER)
   C = (CO AND DIO_ZENER_NBL_M) NOT B
   EXT C B < HVCO_C_3_ZENER_NBL ABUT < 90 SINGULAR REGION
}


// M1 checks
//=============
M1.W.1 { @ Min. M1 width < 0.23
  INT M1 < 0.23 ABUT < 90 SINGULAR REGION
}
M1.S.1 { @ Min. M1 space < 0.23
  EXT M1 < 0.23 ABUT < 90 SINGULAR REGION
}

M1.S.2 { @ Min. space to wide M1 (>10um) < ^M1_S_2
  M1_S5 = SHRINK (SHRINK (SHRINK (SHRINK M1 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M1_G5 = GROW (GROW (GROW (GROW M1_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M1_Wide = M1_G5 AND M1
  M1_Exp = SIZE M1_Wide BY 1 INSIDE OF M1 STEP 0.161
  M1_Branch = M1_Exp NOT M1_Wide
  M1_Branch_edge = M1_Branch COIN INSIDE EDGE M1
  M1_Check = M1 AND (SIZE M1_Exp BY M1_S_2)
  M1_Branch_Check = M1 AND (EXPAND EDGE M1_Branch_edge OUTSIDE BY M1_S_2 CORNER FILL)
  M1_WideC = STAMP M1_Wide BY M1xd
  M1_CheckC = STAMP M1_Check BY M1xd
  M1_BranchC = STAMP M1_Branch BY M1xd
  M1_Branch_CheckC = STAMP M1_Branch_Check BY M1xd
  EXT M1_WideC M1_CheckC < M1_S_2 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M1_BranchC M1_Branch_CheckC < M1_S_2 ABUT >0 <89.5 NOT CONNECTED REGION
}
M1.S.2.1.a { @ Min. space betweem wide metal and small piece of metal with parallel run length >= ^M1_S_2_L and same connection >=^M1_S_2_1 um
  M1_S5 = SHRINK (SHRINK (SHRINK (SHRINK M1 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M1_G5 = GROW (GROW (GROW (GROW M1_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M1_Wide = M1_G5 AND M1
  M1_Small = M1 NOT M1_Wide
  M1_WideC = STAMP M1_Wide BY M1xd
  M1_SmallC = STAMP M1_Small BY M1xd
  M1_S_REG = EXT M1_WideC M1_SmallC < M1_S_2_1 CONNECTED OPPOSITE REGION MEASURE ALL
  M1_S_REG_CHECK = ENCLOSE RECTANGLE M1_S_REG GRID M1_S_2_L 
  WideEdge1 = M1_S_REG_CHECK COIN OUTSIDE EDGE M1_Wide
  M1_Small_Edge = M1_Small COIN INSIDE EDGE M1
  WideEdge2 = M1_S_REG_CHECK COIN OUTSIDE EDGE M1_Small_Edge
  PATH LENGTH WideEdge1 >= M1_S_2_L
  PATH LENGTH WideEdge2 >= M1_S_2_L
}
M1.S.2.1.b { @ Min. space between two wide metals with parallel run length >= ^M1_S_2_L and same connection >=^M1_S_2_2 um
  M1_S5 = SHRINK (SHRINK (SHRINK (SHRINK M1 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M1_G5 = GROW (GROW (GROW (GROW M1_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M1_Wide = M1_G5 AND M1
  M1_WideC = STAMP M1_Wide BY M1xd
  M1_S_REG = EXT M1_WideC < M1_S_2_2 CONNECTED OPPOSITE REGION
  M1_S_REG_CHECK = ENCLOSE RECTANGLE M1_S_REG GRID M1_S_2_L
  WideEdge = M1_S_REG_CHECK COIN OUTSIDE EDGE M1_Wide
  PATH LENGTH WideEdge >= M1_S_2_L
}


M1.E.1 { @ Min. extension of a M1 region beyond a CO region < 0.005
  ENC CO M1 < 0.005 ABUT < 90 SINGULAR REGION
  CO NOT M1    
}
M1.E.2 { @ Min. extension of M1 end-of-line region beyond CO region < 0.06
  X = ENC [CO] M1 < 0.06 ABUT < 90 OPPOSITE	// a narrow side
  INT X < 0.22 ABUT == 90 INTERSECTING ONLY	// adjacent narrow sides
}

M1.E.3 {@Extension of M1 beyond HVGATE in channel length direction for NLD36G5_NBL(GB) = ^M1_E_3 um
  A = SIZE POLY BY HVPO_S_5_NLD36G5_GB/2 OVERUNDER
  B = (M1 INTERACT NLD36G5_GB_CH) CUT POLY
  C = (((POLY AND OD) INTERACT NLD36G5_GB_CH) INSIDE EDGE M1) NOT INSIDE EDGE A    //for poly edge 
  D = EXPAND EDGE C OUTSIDE BY M1_E_3
  E = EXPAND EDGE C OUTSIDE BY M1_E_3+GRID
  F = (E NOT D) TOUCH EDGE D                   //for on rule edge
  F NOT COIN OUTSIDE EDGE B                    //highlight the M1 edge if the two edge is not coin outside
}

M1.E.4 {@Extension of M1 beyond HVGATE in channel length direction for NLD45G5_NBL(GB) = ^M1_E_4 um
  A = SIZE POLY BY HVPO_S_5_NLD45G5_GB/2 OVERUNDER
  B = (M1 INTERACT NLD45G5_GB_CH) CUT POLY
  C = (((POLY AND OD) INTERACT NLD45G5_GB_CH) INSIDE EDGE M1) NOT INSIDE EDGE A    //for poly edge 
  D = EXPAND EDGE C OUTSIDE BY M1_E_4
  E = EXPAND EDGE C OUTSIDE BY M1_E_4+GRID
  F = (E NOT D) TOUCH EDGE D                   //for on rule edge
  F NOT COIN OUTSIDE EDGE B                    //highlight the M1 edge if the two edge is not coin outside
}
M1.A.1{ @ Min. M1 area < ^M1_A_1
  AREA M1_A < M1_A_1
}

// Density check M1.R.1 included at the end of this file



// VIA1 checks
//=============
VIA1_CORE = VIA1 NOT SR_VIA1
VIA1.W.1 { @ VIA1 must be 0.26 x 0.26
  A = NOT RECTANGLE VIA1_CORE == 0.26 BY == 0.26 ORTHOGONAL ONLY
  A OUTSIDE RNGX   // exclude from metal fuse protection ring area
}

VIA1.S.1 { @ Min. VIA1 space < 0.26
  EXT VIA1 < 0.26 ABUT < 90 SINGULAR REGION 
}
VIA1.E.1 { @ Min. extension of a M1 region beyond a VIA1 region < 0.01
  ENC VIA1 M1 < 0.01 ABUT < 90 SINGULAR REGION
  VIA1 NOT M1    
}
VIA1.E.2 { @ Min. extension of M1 end-of-line region beyond VIA1 region < 0.06
  X = ENC [VIA1] M1 < 0.06 ABUT < 90 OPPOSITE	// a narrow side
  INT X < 0.26  ABUT == 90 INTERSECTING ONLY	// adjacent narrow sides
}




// M2 checks
//=============

M2.W.1 { @ Min. M2 width < 0.28
  INT M2 < 0.28 ABUT < 90 SINGULAR REGION
}

M2.S.1 { @ Min. M2 space < 0.28
  EXT M2 < 0.28 ABUT < 90 SINGULAR REGION
}

M2.S.2 { @ Min. space to wide M2 (>10um) < 0.6
  M2_S5 = SHRINK (SHRINK (SHRINK (SHRINK M2 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M2_G5 = GROW (GROW (GROW (GROW M2_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M2_Wide = M2_G5 AND M2
  M2_Exp = SIZE M2_Wide BY 1 INSIDE OF M2 STEP 0.196
  M2_Branch = M2_Exp NOT M2_Wide
  M2_Branch_edge = M2_Branch COIN INSIDE EDGE M2
  M2_Check = M2 AND (SIZE M2_Exp BY 0.6)
  M2_Branch_Check = M2 AND (EXPAND EDGE M2_Branch_edge OUTSIDE BY 0.6 CORNER FILL)
  M2_WideC = STAMP M2_Wide BY M2xd
  M2_CheckC = STAMP M2_Check BY M2xd
  M2_BranchC = STAMP M2_Branch BY M2xd
  M2_Branch_CheckC = STAMP M2_Branch_Check BY M2xd
  EXT M2_WideC M2_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M2_BranchC M2_Branch_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
}
M2.S.2.1.a { @ Min. space betweem wide metal and small piece of metal with parallel run length >= ^M2_S_2_L and same connection >=^M2_S_2_1 um
  M2_S5 = SHRINK (SHRINK (SHRINK (SHRINK M2 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M2_G5 = GROW (GROW (GROW (GROW M2_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M2_Wide = M2_G5 AND M2
  M2_Small = M2 NOT M2_Wide
  M2_WideC = STAMP M2_Wide BY M2xd
  M2_SmallC = STAMP M2_Small BY M2xd
  M2_S_REG = EXT M2_WideC M2_SmallC < M2_S_2_1 CONNECTED OPPOSITE REGION MEASURE ALL
  M2_S_REG_CHECK = ENCLOSE RECTANGLE M2_S_REG GRID M2_S_2_L 
  WideEdge1 = M2_S_REG_CHECK COIN OUTSIDE EDGE M2_Wide
  M2_Small_Edge = M2_Small COIN INSIDE EDGE M2
  WideEdge2 = M2_S_REG_CHECK COIN OUTSIDE EDGE M2_Small_Edge
  PATH LENGTH WideEdge1 >= M2_S_2_L
  PATH LENGTH WideEdge2 >= M2_S_2_L
}
M2.S.2.1.b { @ Min. space between two wide metals with parallel run length >= ^M2_S_2_L and same connection >=^M2_S_2_2 um
  M2_S5 = SHRINK (SHRINK (SHRINK (SHRINK M2 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M2_G5 = GROW (GROW (GROW (GROW M2_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M2_Wide = M2_G5 AND M2
  M2_WideC = STAMP M2_Wide BY M2xd
  M2_S_REG = EXT M2_WideC < M2_S_2_2 CONNECTED OPPOSITE REGION
  M2_S_REG_CHECK = ENCLOSE RECTANGLE M2_S_REG GRID M2_S_2_L
  WideEdge = M2_S_REG_CHECK COIN OUTSIDE EDGE M2_Wide
  PATH LENGTH WideEdge >= M2_S_2_L
}

M2.E.1 { @ Min. extension of a M2 region beyond a VIA1 region < 0.01
  ENC VIA1 M2 < 0.01 ABUT < 90 SINGULAR REGION
  VIA1 NOT M2
}

M2.E.2 { @ Min. extension of M2 end-of-line region beyond VIA1 region < 0.06
  X = ENC [VIA1] M2 < 0.06 ABUT < 90 OPPOSITE	// a narrow side
  INT X < 0.26 ABUT == 90 INTERSECTING ONLY	// adjacent narrow sides
}


M2.A.1{ @ Min M2 area region < ^Mx_A_1
  AREA M2 < Mx_A_1
}


// Density check M2.R.1 included at the end of this file



// VIA2 checks
//=============
VIA2_CORE = VIA2 NOT SR_VIA2
VIA2.W.1 { @ VIA2 must be 0.26 x 0.26
  A = NOT RECTANGLE VIA2_CORE == 0.26 BY == 0.26 ORTHOGONAL ONLY
  A OUTSIDE RNGX   // exclude from metal fuse protection ring area
}

VIA2.S.1 { @ Min. VIA2 space < 0.26
  EXT VIA2 < 0.26 ABUT < 90 SINGULAR REGION 
}
VIA2.E.1 { @ Min. extension of a M2 region beyond a VIA2 region < 0.01
  ENC VIA2 M2 < 0.01 ABUT < 90 SINGULAR REGION
  VIA2 NOT M2    
}
VIA2.E.2 { @ Min. extension of M2 end-of-line region beyond VIA2 region < 0.06
  X = ENC [VIA2] M2 < 0.06 ABUT < 90 OPPOSITE	// a narrow side
  INT X < 0.26  ABUT == 90 INTERSECTING ONLY	// adjacent narrow sides
}

#IFDEF Recommend
VIA2.E.3 {@ Minimum extension of M2 beyond the overlap area that VIA2 and VIA1 are fully or partially touching < ^VIA2_E_3
	X = VIA2 AND VIA1
	ENC X M2 < VIA2_E_3 ABUT < 90 SINGULAR REGION 
}
#ENDIF



// M3 checks
//=============

M3.W.1 { @ Min. M3 width < 0.28
  INT M3 < 0.28 ABUT < 90 SINGULAR REGION
}

M3.S.1 { @ Min. M3 space < 0.28
  EXT M3 < 0.28 ABUT < 90 SINGULAR REGION
}

M3.S.2 { @ Min. space to wide M3 (>10um) < 0.6
  M3_S5 = SHRINK (SHRINK (SHRINK (SHRINK M3 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M3_G5 = GROW (GROW (GROW (GROW M3_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M3_Wide = M3_G5 AND M3
  M3_Exp = SIZE M3_Wide BY 1 INSIDE OF M3 STEP 0.196
  M3_Branch = M3_Exp NOT M3_Wide
  M3_Branch_edge = M3_Branch COIN INSIDE EDGE M3
  M3_Check = M3 AND (SIZE M3_Exp BY 0.6)
  M3_Branch_Check = M3 AND (EXPAND EDGE M3_Branch_edge OUTSIDE BY 0.6 CORNER FILL)
  M3_WideC = STAMP M3_Wide BY M3xd
  M3_CheckC = STAMP M3_Check BY M3xd
  M3_BranchC = STAMP M3_Branch BY M3xd
  M3_Branch_CheckC = STAMP M3_Branch_Check BY M3xd
  EXT M3_WideC M3_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M3_BranchC M3_Branch_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
}
M3.S.2.1.a { @ Min. space betweem wide metal and small piece of metal with parallel run length >= ^M3_S_2_L and same connection >=^M3_S_2_1 um
  M3_S5 = SHRINK (SHRINK (SHRINK (SHRINK M3 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M3_G5 = GROW (GROW (GROW (GROW M3_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M3_Wide = M3_G5 AND M3
  M3_Small = M3 NOT M3_Wide
  M3_WideC = STAMP M3_Wide BY M3xd
  M3_SmallC = STAMP M3_Small BY M3xd
  M3_S_REG = EXT M3_WideC M3_SmallC < M3_S_2_1 CONNECTED OPPOSITE REGION MEASURE ALL
  M3_S_REG_CHECK = ENCLOSE RECTANGLE M3_S_REG GRID M3_S_2_L 
  WideEdge1 = M3_S_REG_CHECK COIN OUTSIDE EDGE M3_Wide
  M3_Small_Edge = M3_Small COIN INSIDE EDGE M3
  WideEdge2 = M3_S_REG_CHECK COIN OUTSIDE EDGE M3_Small_Edge
  PATH LENGTH WideEdge1 >= M3_S_2_L
  PATH LENGTH WideEdge2 >= M3_S_2_L
}
M3.S.2.1.b { @ Min. space between two wide metals with parallel run length >= ^M3_S_2_L and same connection >=^M3_S_2_2 um
  M3_S5 = SHRINK (SHRINK (SHRINK (SHRINK M3 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M3_G5 = GROW (GROW (GROW (GROW M3_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M3_Wide = M3_G5 AND M3
  M3_WideC = STAMP M3_Wide BY M3xd
  M3_S_REG = EXT M3_WideC < M3_S_2_2 CONNECTED OPPOSITE REGION
  M3_S_REG_CHECK = ENCLOSE RECTANGLE M3_S_REG GRID M3_S_2_L
  WideEdge = M3_S_REG_CHECK COIN OUTSIDE EDGE M3_Wide
  PATH LENGTH WideEdge >= M3_S_2_L
}

M3.E.1 { @ Min. extension of a M3 region beyond a VIA2 region < 0.01
  ENC VIA2 M3 < 0.01 ABUT < 90 SINGULAR REGION
  VIA2 NOT M3
}

M3.E.2 { @ Min. extension of M3 end-of-line region beyond VIA2 region < 0.06
  X = ENC [VIA2] M3 < 0.06 ABUT < 90 OPPOSITE	// a narrow side
  INT X < 0.26 ABUT == 90 INTERSECTING ONLY	// adjacent narrow sides
}


M3.A.1{ @ Min M3 area region < ^Mx_A_1
  AREA M3 < Mx_A_1
}


// Density check M3.R.1 included at the end of this file



// VIA3 checks
//=============
VIA3_CORE = VIA3 NOT SR_VIA3
VIA3.W.1 { @ VIA3 must be 0.26 x 0.26
  A = NOT RECTANGLE VIA3_CORE == 0.26 BY == 0.26 ORTHOGONAL ONLY
  A OUTSIDE RNGX   // exclude from metal fuse protection ring area
}

VIA3.S.1 { @ Min. VIA3 space < 0.26
  EXT VIA3 < 0.26 ABUT < 90 SINGULAR REGION 
}
VIA3.E.1 { @ Min. extension of a M3 region beyond a VIA3 region < 0.01
  ENC VIA3 M3 < 0.01 ABUT < 90 SINGULAR REGION
  VIA3 NOT M3    
}
VIA3.E.2 { @ Min. extension of M3 end-of-line region beyond VIA3 region < 0.06
  X = ENC [VIA3] M3 < 0.06 ABUT < 90 OPPOSITE	// a narrow side
  INT X < 0.26  ABUT == 90 INTERSECTING ONLY	// adjacent narrow sides
}

#IFDEF Recommend
VIA3.E.3 {@ Minimum extension of M3 beyond the overlap area that VIA3 and VIA2 are fully or partially touching < ^VIA3_E_3
	X = VIA3 AND VIA2
	ENC X M3 < VIA3_E_3 ABUT < 90 SINGULAR REGION 
}
#ENDIF



// M4 checks
//=============
#IFNDEF DTM

M4.W.1 { @ Min. M4 width < 0.28
  INT M4 < 0.28 ABUT < 90 SINGULAR REGION
}

M4.S.1 { @ Min. M4 space < 0.28
  EXT M4 < 0.28 ABUT < 90 SINGULAR REGION
}

M4.S.2 { @ Min. space to wide M4 (>10um) < 0.6
  M4_S5 = SHRINK (SHRINK (SHRINK (SHRINK M4 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_G5 = GROW (GROW (GROW (GROW M4_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_Wide = M4_G5 AND M4
  M4_Exp = SIZE M4_Wide BY 1 INSIDE OF M4 STEP 0.196
  M4_Branch = M4_Exp NOT M4_Wide
  M4_Branch_edge = M4_Branch COIN INSIDE EDGE M4
  M4_Check = M4 AND (SIZE M4_Exp BY 0.6)
  M4_Branch_Check = M4 AND (EXPAND EDGE M4_Branch_edge OUTSIDE BY 0.6 CORNER FILL)
  M4_WideC = STAMP M4_Wide BY M4xd
  M4_CheckC = STAMP M4_Check BY M4xd
  M4_BranchC = STAMP M4_Branch BY M4xd
  M4_Branch_CheckC = STAMP M4_Branch_Check BY M4xd
  EXT M4_WideC M4_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M4_BranchC M4_Branch_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
}
M4.S.2.1.a { @ Min. space betweem wide metal and small piece of metal with parallel run length >= ^M4_S_2_L and same connection >=^M4_S_2_1 um
  M4_S5 = SHRINK (SHRINK (SHRINK (SHRINK M4 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_G5 = GROW (GROW (GROW (GROW M4_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_Wide = M4_G5 AND M4
  M4_Small = M4 NOT M4_Wide
  M4_WideC = STAMP M4_Wide BY M4xd
  M4_SmallC = STAMP M4_Small BY M4xd
  M4_S_REG = EXT M4_WideC M4_SmallC < M4_S_2_1 CONNECTED OPPOSITE REGION MEASURE ALL
  M4_S_REG_CHECK = ENCLOSE RECTANGLE M4_S_REG GRID M4_S_2_L 
  WideEdge1 = M4_S_REG_CHECK COIN OUTSIDE EDGE M4_Wide
  M4_Small_Edge = M4_Small COIN INSIDE EDGE M4
  WideEdge2 = M4_S_REG_CHECK COIN OUTSIDE EDGE M4_Small_Edge
  PATH LENGTH WideEdge1 >= M4_S_2_L
  PATH LENGTH WideEdge2 >= M4_S_2_L
}
M4.S.2.1.b { @ Min. space between two wide metals with parallel run length >= ^M4_S_2_L and same connection >=^M4_S_2_2 um
  M4_S5 = SHRINK (SHRINK (SHRINK (SHRINK M4 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_G5 = GROW (GROW (GROW (GROW M4_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_Wide = M4_G5 AND M4
  M4_WideC = STAMP M4_Wide BY M4xd
  M4_S_REG = EXT M4_WideC < M4_S_2_2 CONNECTED OPPOSITE REGION
  M4_S_REG_CHECK = ENCLOSE RECTANGLE M4_S_REG GRID M4_S_2_L
  WideEdge = M4_S_REG_CHECK COIN OUTSIDE EDGE M4_Wide
  PATH LENGTH WideEdge >= M4_S_2_L
}

M4.E.1 { @ Min. extension of a M4 region beyond a VIA3 region < 0.01
  ENC VIA3 M4 < 0.01 ABUT < 90 SINGULAR REGION
  VIA3 NOT M4
}

M4.E.2 { @ Min. extension of M4 end-of-line region beyond VIA3 region < 0.06
  X = ENC [VIA3] M4 < 0.06 ABUT < 90 OPPOSITE	// a narrow side
  INT X < 0.26 ABUT == 90 INTERSECTING ONLY	// adjacent narrow sides
}


M4.A.1{ @ Min M4 area region < ^Mx_A_1
  AREA M4 < Mx_A_1
}


// Density check M4.R.1 included at the end of this file
#ENDIF

#IFDEF DTM
M4.W.1 { @ Min. M4 width < 0.44
  INT M4 < 0.44 ABUT < 90 SINGULAR REGION
}
M4.S.1 { @ Min. M4 space < 0.46
  EXT M4 < 0.46 ABUT < 90 SINGULAR REGION
}
M4.S.2 { @ Min. space to wide M4 (>10um) < 0.6
  M4_S5 = SHRINK (SHRINK (SHRINK (SHRINK M4 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_G5 = GROW (GROW (GROW (GROW M4_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_Wide = M4_G5 AND M4
  M4_Exp = SIZE M4_Wide BY 1 INSIDE OF M4 STEP 0.196
  M4_Branch = M4_Exp NOT M4_Wide
  M4_Branch_edge = M4_Branch COIN INSIDE EDGE M4
  M4_Check = M4 AND (SIZE M4_Exp BY 0.6)
  M4_Branch_Check = M4 AND (EXPAND EDGE M4_Branch_edge OUTSIDE BY 0.6 CORNER FILL)
  M4_WideC = STAMP M4_Wide BY M4xd
  M4_CheckC = STAMP M4_Check BY M4xd
  M4_BranchC = STAMP M4_Branch BY M4xd
  M4_Branch_CheckC = STAMP M4_Branch_Check BY M4xd
  EXT M4_WideC M4_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M4_BranchC M4_Branch_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
}
M4.S.2.1.a { @ Min. space betweem wide metal and small piece of metal with parallel run length >= ^M4_S_2_L and same connection >=^M4_S_2_1 um
  M4_S5 = SHRINK (SHRINK (SHRINK (SHRINK M4 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_G5 = GROW (GROW (GROW (GROW M4_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_Wide = M4_G5 AND M4
  M4_Small = M4 NOT M4_Wide
  M4_WideC = STAMP M4_Wide BY M4xd
  M4_SmallC = STAMP M4_Small BY M4xd
  M4_S_REG = EXT M4_WideC M4_SmallC < M4_S_2_1 CONNECTED OPPOSITE REGION MEASURE ALL
  M4_S_REG_CHECK = ENCLOSE RECTANGLE M4_S_REG GRID M4_S_2_L 
  WideEdge1 = M4_S_REG_CHECK COIN OUTSIDE EDGE M4_Wide
  M4_Small_Edge = M4_Small COIN INSIDE EDGE M4
  WideEdge2 = M4_S_REG_CHECK COIN OUTSIDE EDGE M4_Small_Edge
  PATH LENGTH WideEdge1 >= M4_S_2_L
  PATH LENGTH WideEdge2 >= M4_S_2_L
}
M4.S.2.1.b { @ Min. space between two wide metals with parallel run length >= ^M4_S_2_L and same connection >=^M4_S_2_2 um
  M4_S5 = SHRINK (SHRINK (SHRINK (SHRINK M4 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_G5 = GROW (GROW (GROW (GROW M4_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_Wide = M4_G5 AND M4
  M4_WideC = STAMP M4_Wide BY M4xd
  M4_S_REG = EXT M4_WideC < M4_S_2_2 CONNECTED OPPOSITE REGION
  M4_S_REG_CHECK = ENCLOSE RECTANGLE M4_S_REG GRID M4_S_2_L
  WideEdge = M4_S_REG_CHECK COIN OUTSIDE EDGE M4_Wide
  PATH LENGTH WideEdge >= M4_S_2_L
}
M4.E.1 { @ Min. extension of a M4 region beyond a VIA3 region < 0.09
  ENC VIA3 M4 < 0.09 ABUT < 90 SINGULAR REGION
  VIA3 NOT M4
}
M4.A.1{ @ Min M4 area region < 0.562
  AREA M4 < 0.562
}
// Density check M4.R.1 included at the end of this file
#ENDIF





/*****  Variables for IMD crack check *****/
VARIABLE  VIA_W_1      5.0   //The width of ViaArray
VARIABLE  VIA_S_1      5.0 //VIA ARAAY interal space. 
VARIABLE  VIA_S_2      2.7 //Space of metal between via array

VARIABLE  Mx_S_3_7      1.2 //Space of both metal with larger via array area

VARIABLE  VIA_S_2L     15.0  //via array parrallel run length
VARIABLE  VIA_S_4      5.0 //Metal extension space 
VARIABLE  VIA_S_5      12.7 //Space of VIA array (5.0+2.7+5.0)

VARIABLE  VIA_A_4      725.0 //The overlap area of 4 level continuous stack via array.

VARIABLE  VIA_A_4_B      1000.0 //The overlap area of 4 level continuous stack via array for viax.s.7.

VARIABLE  VIA_A_3      960.0 //The overlap area of 3 level continuous stack via array.

VARIABLE  VIA_A_3_B      2000.0 //The overlap area of 3 level continuous stack via array for viax.s.8.

VARIABLE  VIA_A_2     3000.0 //The overlap area of 2 level continuous stack via array.
VARIABLE  VIA_A_2_B     4000.0 //The overlap area of 2 level continuous stack via array for viax.s.9.
VARIABLE  VIA_A_1     4900.0 //The region area of single layer via array for viax.s.10.

VARIABLE  VIA_Merge   2.505  //The Merge error VIAs and highlight error vias region

VARIABLE  VIA_D_1     0.10 //The highlight array minimum density
VARIABLE  VIA_S_3     0.49 //Space of via in via array.
VARIABLE  VIA_Filter   3.0 // Shrink via arrary For broken small metal connection.
//********************************************
//***** Pre-processing for IMD crack check **** 
//********************************************
//
// Processing for SAME Array Merged 
//*********************************
  VIA1_M = VIA1 INTERACT M1 
  VIA1Merge1 = SIZE VIA1_M BY VIA_S_1/2 INSIDE OF M1 STEP 0.46
  VIA1Merge2 = SIZE VIA1_M BY VIA_S_1/2 OVERUNDER                 // Any space <= VIA1_S_1 um treated as "array"
  VIA1Merge.pre1 = VIA1Merge1 AND VIA1Merge2                      // Find merged via array(s)
  VIA1Merge.pre11 = ENCLOSE RECTANGLE VIA1Merge.pre1 VIA_S_2L VIA_W_1  // Find at least one width >= VIA_W_1
  VIA1Merge.pre12 = VIA1_M INTERACT VIA1Merge.pre11                    // find VIA1 in the effective via arrary
  VIA1Merge.pre13 = SIZE VIA1Merge.pre12 BY VIA_S_1/2 OVERUNDER        // Any space <= VIA1_S_1 um treated as "array"
  VIA1Merge.pre2  = VIA1Merge1 AND VIA1Merge.pre13                     // Find merged via array(s)
  VIA1_same_array = SIZE VIA1Merge.pre2 BY VIA_Filter/2 UNDEROVER // For broken small metal connection

  VIA1_same_array_B = SIZE VIA1Merge.pre1 BY VIA_Filter/2 UNDEROVER // For broken small metal connection

  VIA2_M = VIA2 INTERACT M2 
  VIA2Merge1 = SIZE VIA2_M BY VIA_S_1/2 INSIDE OF M2 STEP 0.46
  VIA2Merge2 = SIZE VIA2_M BY VIA_S_1/2 OVERUNDER                 // Any space <= VIA1_S_1 um treated as "array"
  VIA2Merge.pre1 = VIA2Merge1 AND VIA2Merge2                      // Find merged via array(s)
  VIA2Merge.pre11 = ENCLOSE RECTANGLE VIA2Merge.pre1 VIA_S_2L VIA_W_1  // Find at least one width >= VIA_W_1
  VIA2Merge.pre12 = VIA2_M INTERACT VIA2Merge.pre11                    // find VIA2 in the effective via arrary
  VIA2Merge.pre13 = SIZE VIA2Merge.pre12 BY VIA_S_1/2 OVERUNDER        // Any space <= VIA1_S_1 um treated as "array"
  VIA2Merge.pre2  = VIA2Merge1 AND VIA2Merge.pre13                     // Find merged via array(s)
  VIA2_same_array = SIZE VIA2Merge.pre2 BY VIA_Filter/2 UNDEROVER // For broken small metal connection

  VIA2_same_array_B = SIZE VIA2Merge.pre1 BY VIA_Filter/2 UNDEROVER // For broken small metal connection

  VIA3_M = VIA3 INTERACT M3 
  VIA3Merge1 = SIZE VIA3_M BY VIA_S_1/2 INSIDE OF M3 STEP 0.46
  VIA3Merge2 = SIZE VIA3_M BY VIA_S_1/2 OVERUNDER                 // Any space <= VIA1_S_1 um treated as "array"
  VIA3Merge.pre1 = VIA3Merge1 AND VIA3Merge2                      // Find merged via array(s)
  VIA3Merge.pre11 = ENCLOSE RECTANGLE VIA3Merge.pre1 VIA_S_2L VIA_W_1  // Find at least one width >= VIA_W_1
  VIA3Merge.pre12 = VIA3_M INTERACT VIA3Merge.pre11                    // find VIA3 in the effective via arrary
  VIA3Merge.pre13 = SIZE VIA3Merge.pre12 BY VIA_S_1/2 OVERUNDER        // Any space <= VIA1_S_1 um treated as "array"
  VIA3Merge.pre2  = VIA3Merge1 AND VIA3Merge.pre13                     // Find merged via array(s)
  VIA3_same_array = SIZE VIA3Merge.pre2 BY VIA_Filter/2 UNDEROVER // For broken small metal connection

  VIA3_same_array_B = SIZE VIA3Merge.pre1 BY VIA_Filter/2 UNDEROVER // For broken small metal connection

  VIA4_M = VIA4 INTERACT M4 
  VIA4Merge1 = SIZE VIA4_M BY VIA_S_1/2 INSIDE OF M4 STEP 0.46
  VIA4Merge2 = SIZE VIA4_M BY VIA_S_1/2 OVERUNDER                 // Any space <= VIA1_S_1 um treated as "array"
  VIA4Merge.pre1 = VIA4Merge1 AND VIA4Merge2                      // Find merged via array(s)
  VIA4Merge.pre11 = ENCLOSE RECTANGLE VIA4Merge.pre1 VIA_S_2L VIA_W_1  // Find at least one width >= VIA_W_1
  VIA4Merge.pre12 = VIA4_M INTERACT VIA4Merge.pre11                    // find VIA4 in the effective via arrary
  VIA4Merge.pre13 = SIZE VIA4Merge.pre12 BY VIA_S_1/2 OVERUNDER        // Any space <= VIA1_S_1 um treated as "array"
  VIA4Merge.pre2  = VIA4Merge1 AND VIA4Merge.pre13                     // Find merged via array(s)
  VIA4_same_array = SIZE VIA4Merge.pre2 BY VIA_Filter/2 UNDEROVER // For broken small metal connection

  VIA4_same_array_B = SIZE VIA4Merge.pre1 BY VIA_Filter/2 UNDEROVER // For broken small metal connection



// Processing for 4 ~ 2 Stack Array  
//**********************************

  VIA1_same_array_4stack.pre1 = ((( AREA VIA1_same_array >= VIA_A_4)  AND (AREA VIA2_same_array >= VIA_A_4)) AND ( AREA VIA3_same_array>= VIA_A_4 )) AND ( AREA VIA4_same_array >= VIA_A_4 )
  VIA1_same_array_4stack.pre2 = AREA VIA1_same_array_4stack.pre1 >= VIA_A_4


  VIA1_same_array_4stack_S_7.pre1 = ((( AREA VIA1_same_array_B >= VIA_A_4_B) AND (AREA VIA2_same_array_B >= VIA_A_4_B)) AND ( AREA VIA3_same_array_B >= VIA_A_4_B )) AND ( AREA VIA4_same_array_B >= VIA_A_4_B )
  VIA1_same_array_4stack_S_7.pre2 = AREA VIA1_same_array_4stack_S_7.pre1 >= VIA_A_4_B
  VIA1_same_array_4stack_Mx_S4.pre1 = ((( AREA VIA1_same_array >= VIA_A_4_B) AND (AREA VIA2_same_array >= VIA_A_4_B)) AND ( AREA VIA3_same_array >= VIA_A_4_B )) AND ( AREA VIA4_same_array >= VIA_A_4_B )
  VIA1_same_array_4stack_Mx_S4.pre2 = AREA VIA1_same_array_4stack_Mx_S4.pre1 >= VIA_A_4_B


  VIA1_same_array_3stack.pre1 = ((AREA VIA1_same_array >= VIA_A_3 ) AND (AREA VIA2_same_array >= VIA_A_3)) AND ( AREA VIA3_same_array >= VIA_A_3 )
  VIA1_same_array_3stack.pre2 = AREA VIA1_same_array_3stack.pre1 >= VIA_A_3


  VIA1_same_array_3stack_S_8.pre1 = ((AREA VIA1_same_array_B >= VIA_A_3_B ) AND (AREA VIA2_same_array_B >= VIA_A_3_B)) AND ( AREA VIA3_same_array_B >= VIA_A_3_B )
  VIA1_same_array_3stack_S_8.pre2 = AREA VIA1_same_array_3stack_S_8.pre1 >= VIA_A_3_B
  VIA1_same_array_3stack_Mx_S5.pre1 = ((AREA VIA1_same_array >= VIA_A_3_B ) AND (AREA VIA2_same_array >= VIA_A_3_B)) AND ( AREA VIA3_same_array >= VIA_A_3_B )
  VIA1_same_array_3stack_Mx_S5.pre2 = AREA VIA1_same_array_3stack_Mx_S5.pre1 >= VIA_A_3_B

  VIA2_same_array_3stack.pre1 = ((AREA VIA2_same_array >= VIA_A_3 ) AND (AREA VIA3_same_array >= VIA_A_3)) AND ( AREA VIA4_same_array >= VIA_A_3 )
  VIA2_same_array_3stack.pre2 = AREA VIA2_same_array_3stack.pre1 >= VIA_A_3


  VIA2_same_array_3stack_S_8.pre1 = ((AREA VIA2_same_array_B >= VIA_A_3_B ) AND (AREA VIA3_same_array_B >= VIA_A_3_B)) AND ( AREA VIA4_same_array_B >= VIA_A_3_B )
  VIA2_same_array_3stack_S_8.pre2 = AREA VIA2_same_array_3stack_S_8.pre1 >= VIA_A_3_B
  VIA2_same_array_3stack_Mx_S5.pre1 = ((AREA VIA2_same_array >= VIA_A_3_B ) AND (AREA VIA3_same_array >= VIA_A_3_B)) AND ( AREA VIA4_same_array >= VIA_A_3_B )
  VIA2_same_array_3stack_Mx_S5.pre2 = AREA VIA2_same_array_3stack_Mx_S5.pre1 >= VIA_A_3_B

  
  VIA1_same_array_2stack.pre1 = ( AREA VIA1_same_array >= VIA_A_2 ) AND (AREA VIA2_same_array >= VIA_A_2 )
  VIA1_same_array_2stack.pre2 = AREA VIA1_same_array_2stack.pre1 >= VIA_A_2


  VIA1_same_array_2stack_S_9.pre1 = ( AREA VIA1_same_array_B >= VIA_A_2_B ) AND (AREA VIA2_same_array_B >= VIA_A_2_B )
  VIA1_same_array_2stack_S_9.pre2 = AREA VIA1_same_array_2stack_S_9.pre1 >= VIA_A_2_B
  VIA1_same_array_2stack_Mx_S6.pre1 = ( AREA VIA1_same_array >= VIA_A_2_B ) AND (AREA VIA2_same_array >= VIA_A_2_B )
  VIA1_same_array_2stack_Mx_S6.pre2 = AREA VIA1_same_array_2stack_Mx_S6.pre1 >= VIA_A_2_B

  VIA2_same_array_2stack.pre1 = ( AREA VIA2_same_array >= VIA_A_2 ) AND (AREA VIA3_same_array >= VIA_A_2 )
  VIA2_same_array_2stack.pre2 = AREA VIA2_same_array_2stack.pre1 >= VIA_A_2


  VIA2_same_array_2stack_S_9.pre1 = ( AREA VIA2_same_array_B >= VIA_A_2_B ) AND (AREA VIA3_same_array_B >= VIA_A_2_B )
  VIA2_same_array_2stack_S_9.pre2 = AREA VIA2_same_array_2stack_S_9.pre1 >= VIA_A_2_B
  VIA2_same_array_2stack_Mx_S6.pre1 = ( AREA VIA2_same_array >= VIA_A_2_B ) AND (AREA VIA3_same_array >= VIA_A_2_B )
  VIA2_same_array_2stack_Mx_S6.pre2 = AREA VIA2_same_array_2stack_Mx_S6.pre1 >= VIA_A_2_B

  VIA3_same_array_2stack.pre1 = ( AREA VIA3_same_array >= VIA_A_2 ) AND (AREA VIA4_same_array >= VIA_A_2 )
  VIA3_same_array_2stack.pre2 = AREA VIA3_same_array_2stack.pre1 >= VIA_A_2


  VIA3_same_array_2stack_S_9.pre1 = ( AREA VIA3_same_array_B >= VIA_A_2_B ) AND (AREA VIA4_same_array_B >= VIA_A_2_B )
  VIA3_same_array_2stack_S_9.pre2 = AREA VIA3_same_array_2stack_S_9.pre1 >= VIA_A_2_B
  VIA3_same_array_2stack_Mx_S6.pre1 = ( AREA VIA3_same_array >= VIA_A_2_B ) AND (AREA VIA4_same_array >= VIA_A_2_B )
  VIA3_same_array_2stack_Mx_S6.pre2 = AREA VIA3_same_array_2stack_Mx_S6.pre1 >= VIA_A_2_B




  VIA1_same_array_1stack_S_10.pre1 = AREA VIA1_same_array_B >= VIA_A_1
  VIA1_same_array_1stack_Mx_S7.pre1 = AREA VIA1_same_array >= VIA_A_1
  VIA2_same_array_1stack_S_10.pre1 = AREA VIA2_same_array_B >= VIA_A_1
  VIA2_same_array_1stack_Mx_S7.pre1 = AREA VIA2_same_array >= VIA_A_1
  VIA3_same_array_1stack_S_10.pre1 = AREA VIA3_same_array_B >= VIA_A_1
  VIA3_same_array_1stack_Mx_S7.pre1 = AREA VIA3_same_array >= VIA_A_1
  VIA4_same_array_1stack_S_10.pre1 = AREA VIA4_same_array_B >= VIA_A_1
  VIA4_same_array_1stack_Mx_S7.pre1 = AREA VIA4_same_array >= VIA_A_1




//**********************  
// Small 4 stack array
//**********************
// Processing for SAME Array Size Check    
//**************************************
  VIA1_4stack.pre3 = ENCLOSE RECTANGLE VIA1_same_array_4stack.pre2 VIA_S_2L VIA_W_1  // Find at least one width >= VIA_W_1
  M1_4stack.pre3 = ((((M1 INTERACT VIA1_4stack.pre3) OR (M2 INTERACT VIA1_4stack.pre3)) OR (M3 INTERACT VIA1_4stack.pre3)) OR (M4 INTERACT VIA1_4stack.pre3)) OR (M5 INTERACT VIA1_4stack.pre3)
  VIA1_Reg_3_S_4 = EXT VIA1_4stack.pre3 <= VIA_S_5 SINGULAR OPPOSITE REGION ABUT < 90
  VIA1_Reg_3_S_4_pre = VIA1_Reg_3_S_4 NOT M1_4stack.pre3
  VIA1_Reg_3_S_4_1 = ENCLOSE RECTANGLE VIA1_Reg_3_S_4_pre 0.005 VIA_S_2L  
  VIA1_4stack.pre4 = VIA1_4stack.pre3 INTERACT (VIA1_Reg_3_S_4 INTERACT VIA1_Reg_3_S_4_1)
  VIA1ArrayS1_S_4 = EXT VIA1_4stack.pre4 <= VIA_S_5 SINGULAR OPPOSITE REGION ABUT < 90    // Space of different "smae array" smaller than VIA_S_2
  VIA1ArrayS2_S_4 = ((((VIA1ArrayS1_S_4 NOT INSIDE M1) NOT INSIDE M2) NOT INSIDE M3) NOT INSIDE M4) NOT INSIDE M5
  VIA1_4stack.pre5 = VIA1_4stack.pre4 INTERACT VIA1ArrayS2_S_4

  M1_4stack.pre4 = EXT M1_4stack.pre3 <= VIA_S_2 ABUT < 90 OPPOSITE SINGULAR REGION
  M1_4stack.pre4_edge = M1_4stack.pre3 COIN OUTSIDE EDGE M1_4stack.pre4
  M1_4stack.pre5 = EXPAND EDGE M1_4stack.pre4_edge INSIDE BY VIA_S_4
  M1_4stack.pre5_region_1 = M1_4stack.pre5 INTERACT VIA1_4stack.pre5
  M1_4stack.pre5_region = M1_4stack.pre4 INTERACT M1_4stack.pre5_region_1 >= 2
  M1_4stack.pre6 = M1_4stack.pre5_region OR M1_4stack.pre5_region_1
  M1_4stack.pre7 = M1_4stack.pre6 INTERACT VIA1_4stack.pre5 >= 2
  VIA1_4stack.Final = VIA1_4stack.pre5 INTERACT M1_4stack.pre7

  VIA1_S_4_A1 = VIA1 INTERACT VIA1_4stack.Final 
  VIA1_Reg_4_S_4_A1 = EXT VIA1_S_4_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION               // VIA1s space smaller than 0.49 (inside small array)  
  VIA1_Violate_S_4_A1= VIA1_S_4_A1 INTERACT VIA1_Reg_4_S_4_A1                 
  VIA2_S_4_A1 = VIA2 INTERACT VIA1_4stack.Final 
  VIA2_Reg_4_S_4_A1 = EXT VIA2_S_4_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION             // VIA2s space smaller than 0.49 (inside small array)  
  VIA2_Violate_S_4_A1 = VIA2_S_4_A1 INTERACT VIA2_Reg_4_S_4_A1  
  VIA3_S_4_A1 = VIA3 INTERACT VIA1_4stack.Final 
  VIA3_Reg_4_S_4_A1 = EXT VIA3_S_4_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION           // VIA3s space smaller than 0.49 (inside small array)  
  VIA3_Violate_S_4_A1 = VIA3_S_4_A1 INTERACT VIA3_Reg_4_S_4_A1  
  VIA4_S_4_A1 = VIA4 INTERACT VIA1_4stack.Final 
  VIA4_Reg_4_S_4_A1 = EXT VIA4_S_4_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION           // VIA4s space smaller than 0.49 (inside small array)  
  VIA4_Violate_S_4_A1 = VIA4_S_4_A1 INTERACT VIA4_Reg_4_S_4_A1  






// Processing for VIAx.S.7 Check    
//**************************************
  M1_4stack_S_7.pre3 = ((((M1 INTERACT VIA1_same_array_4stack_S_7.pre2) OR (M2 INTERACT VIA1_same_array_4stack_S_7.pre2)) OR (M3 INTERACT VIA1_same_array_4stack_S_7.pre2)) OR (M4 INTERACT VIA1_same_array_4stack_S_7.pre2)) OR (M5 INTERACT VIA1_same_array_4stack_S_7.pre2) 
  VIA1_4stack_S_7.pre3 = SIZE VIA1_same_array_4stack_S_7.pre2 BY VIA_S_4 INSIDE OF M1_4stack_S_7.pre3 STEP 0.28
  VIA1_4stack_S_7.pre4 = VIA1_4stack_S_7.pre3 TOUCH EDGE M1_4stack_S_7.pre3
  VIA1_4stack_S_7.pre5 = VIA1_4stack_S_7.pre3 WITH EDGE VIA1_4stack_S_7.pre4 >= 1
  VIA1_4stack_S_7.Final = VIA1_same_array_4stack_S_7.pre2 INTERACT VIA1_4stack_S_7.pre5
  
  VIA1_S_4_B1 = VIA1 INTERACT VIA1_4stack_S_7.Final 
  VIA1_Reg_4_S_4_B1 = EXT VIA1_S_4_B1 < VIA_S_3 ABUT < 90 SINGULAR REGION  // VIA1s space smaller than 0.49 (inside small array)  
  VIA1_Violate_S_4_B1= VIA1_S_4_B1 INTERACT VIA1_Reg_4_S_4_B1                 
  VIA2_S_4_B1 = VIA2 INTERACT VIA1_4stack_S_7.Final 
  VIA2_Reg_4_S_4_B1 = EXT VIA2_S_4_B1 < VIA_S_3 ABUT < 90 SINGULAR REGION // VIA2s space smaller than 0.49 (inside small array)  
  VIA2_Violate_S_4_B1 = VIA2_S_4_B1 INTERACT VIA2_Reg_4_S_4_B1  
  VIA3_S_4_B1 = VIA3 INTERACT VIA1_4stack_S_7.Final 
  VIA3_Reg_4_S_4_B1 = EXT VIA3_S_4_B1 < VIA_S_3 ABUT < 90 SINGULAR REGION  // VIA3s space smaller than 0.49 (inside small array)  
  VIA3_Violate_S_4_B1 = VIA3_S_4_B1 INTERACT VIA3_Reg_4_S_4_B1  
  VIA4_S_4_B1 = VIA4 INTERACT VIA1_4stack_S_7.Final 
  VIA4_Reg_4_S_4_B1 = EXT VIA4_S_4_B1 < VIA_S_3 ABUT < 90 SINGULAR REGION // VIA4s space smaller than 0.49 (inside small array)  
  VIA4_Violate_S_4_B1 = VIA4_S_4_B1 INTERACT VIA4_Reg_4_S_4_B1  



// Processing for Mx.S.4 Check    
//**************************************
  VIA1_4stack_Mx_S4.pre3 = ENCLOSE RECTANGLE VIA1_same_array_4stack_Mx_S4.pre2 VIA_W_1 VIA_W_1  // Find at least one width >= VIA_W_1

  M1_S_4_C1 = ENC VIA1_4stack_Mx_S4.pre3 [M1] <= VIA_S_4 ABUT < 90 SINGULAR 
  M1_Reg_4_S_4_C1 = EXT M1_S_4_C1 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M1s space smaller than 1.2   
  M2_S_4_C1 = ENC VIA1_4stack_Mx_S4.pre3 [M2] <= VIA_S_4 ABUT < 90 SINGULAR 
  M2_Reg_4_S_4_C1 = EXT M2_S_4_C1 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M2s space smaller than 1.2   
  M3_S_4_C1 = ENC VIA1_4stack_Mx_S4.pre3 [M3] <= VIA_S_4 ABUT < 90 SINGULAR 
  M3_Reg_4_S_4_C1 = EXT M3_S_4_C1 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M3s space smaller than 1.2   
  M4_S_4_C1 = ENC VIA1_4stack_Mx_S4.pre3 [M4] <= VIA_S_4 ABUT < 90 SINGULAR 
  M4_Reg_4_S_4_C1 = EXT M4_S_4_C1 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M4s space smaller than 1.2   




// Rule Check    
//**************************************
  CONNECT VIA1_4stack.Final VIA1_Violate_S_4_A1
  CONNECT VIA1_4stack.Final VIA2_Violate_S_4_A1
  CONNECT VIA1_4stack.Final VIA3_Violate_S_4_A1
  CONNECT VIA1_4stack.Final VIA4_Violate_S_4_A1


VIA1.S.3_Array1_2_3_4_M { @ Minimum space between two VIAs in 4-level continuous stacking VIA arrays with below condition >=0.49um
                               @ Via1 violate ^VIA_S_3 spacing in Via1/Via2/Via3/Via4 array & density large or equal ^VIA_D_1 
  A1 = NET AREA RATIO VIA1_Violate_S_4_A1 VIA1_4stack.Final >= VIA_D_1
  A2 = NET AREA RATIO VIA2_Violate_S_4_A1 VIA1_4stack.Final >= VIA_D_1
  A3 = NET AREA RATIO VIA3_Violate_S_4_A1 VIA1_4stack.Final >= VIA_D_1
  A4 = NET AREA RATIO VIA4_Violate_S_4_A1 VIA1_4stack.Final >= VIA_D_1
  B1 = ((A1 OR A2) OR A3) OR A4
  SIZE B1 BY VIA_Merge OVERUNDER 
}




VIA1.S.7_Array1_2_3_4_M { @ Minimum space between two VIA1 region >= ^VIA_S_3 um if the overlap area of 4-level
						       @ continuous stacking VIA arrays >= ^VIA_A_4_B um2 (except sealring region)
  (VIA1_4stack_S_7.Final INTERACT VIA1_Violate_S_4_B1) NOT INTERACT SEALRING_ALL
}

VIA2.S.7_Array1_2_3_4_M { @ Minimum space between two VIA2 region >= ^VIA_S_3 um if the overlap area of 4-level
						  		@ continuous stacking VIA arrays >= ^VIA_A_4_B um2 (except sealring region)
  (VIA1_4stack_S_7.Final INTERACT VIA2_Violate_S_4_B1) NOT INTERACT SEALRING_ALL
}

VIA3.S.7_Array1_2_3_4_M { @ Minimum space between two VIA3 region >= ^VIA_S_3 um if the overlap area of 4-level
						  		 @ continuous stacking VIA arrays >= ^VIA_A_4_B um2 (except sealring region)
  (VIA1_4stack_S_7.Final INTERACT VIA3_Violate_S_4_B1) NOT INTERACT SEALRING_ALL
}

VIA4.S.7_Array1_2_3_4_M { @ Minimum space between two VIA4 region >= ^VIA_S_3 um if the overlap area of 4-level
						  		 @ continuous stacking VIA arrays >= ^VIA_A_4_B um2 (except sealring region)
  (VIA1_4stack_S_7.Final INTERACT VIA4_Violate_S_4_B1) NOT INTERACT SEALRING_ALL
}

M1_2_3_4.S.4 { @ Minimum space between two Mx region with below conditions >= ^Mx_S_3_7 um 
			  @ (a1) both of the Mx with the overlap area of 4-level continuous VIA array area >= ^VIA_A_4_B um2
			  @ (a2) Width of 4-level continuous stacking VIA arrays >= ^VIA_W_1 um
  ((M1_Reg_4_S_4_C1 OR M2_Reg_4_S_4_C1) OR M3_Reg_4_S_4_C1) OR M4_Reg_4_S_4_C1
}




//**********************  
// Small 3 stack array
//**********************
// Processing for SAME Array Size Check    
//**************************************
  VIA1_3stack.pre3 = ENCLOSE RECTANGLE VIA1_same_array_3stack.pre2 VIA_S_2L VIA_W_1    // Find at least one width >=VIA_W_1
  M1_3stack.pre3 = (((M1 INTERACT VIA1_3stack.pre3) OR (M2 INTERACT VIA1_3stack.pre3)) OR (M3 INTERACT VIA1_3stack.pre3)) OR (M4 INTERACT VIA1_3stack.pre3)
  VIA1_Reg_3_S_3 = EXT VIA1_3stack.pre3 <= VIA_S_5 SINGULAR OPPOSITE REGION ABUT < 90
  VIA1_Reg_3_S_3_pre = VIA1_Reg_3_S_3 NOT M1_3stack.pre3
  VIA1_Reg_3_S_3_1 = ENCLOSE RECTANGLE VIA1_Reg_3_S_3_pre 0.005 VIA_S_2L  // Find parallel run length >= VIA_S_2L
  VIA1_3stack.pre4 = VIA1_3stack.pre3 INTERACT (VIA1_Reg_3_S_3 INTERACT VIA1_Reg_3_S_3_1) // Find parallel run length >= VIA_S_2L
  VIA1ArrayS1_S_3 = EXT VIA1_3stack.pre4 <= VIA_S_5 SINGULAR OPPOSITE REGION ABUT < 90  // Space of different "smae array" smaller than VIA_S_2
  VIA1ArrayS2_S_3 = (((VIA1ArrayS1_S_3 NOT INSIDE M1) NOT INSIDE M2) NOT INSIDE M3 ) NOT INSIDE M4
  VIA1_3stack.pre5 = VIA1_3stack.pre4 INTERACT VIA1ArrayS2_S_3

  M1_3stack.pre4 = EXT M1_3stack.pre3 <= VIA_S_2 ABUT < 90 OPPOSITE SINGULAR REGION
  M1_3stack.pre4_edge = M1_3stack.pre3 COIN OUTSIDE EDGE M1_3stack.pre4
  M1_3stack.pre5 = EXPAND EDGE M1_3stack.pre4_edge INSIDE BY VIA_S_4
  M1_3stack.pre5_region_1 = M1_3stack.pre5 INTERACT VIA1_3stack.pre5
  M1_3stack.pre5_region = M1_3stack.pre4 INTERACT M1_3stack.pre5_region_1 >= 2
  M1_3stack.pre6 = M1_3stack.pre5_region OR M1_3stack.pre5_region_1
  M1_3stack.pre7 = M1_3stack.pre6 INTERACT VIA1_3stack.pre5 >= 2
  VIA1_3stack.Final = VIA1_3stack.pre5 INTERACT M1_3stack.pre7

  VIA1_S_3_A1 = VIA1 INTERACT VIA1_3stack.Final 
  VIA1_Reg_4_S_3_A1 = EXT VIA1_S_3_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION               // VIA1s space smaller than 0.49 (inside small array)  
  VIA1_Violate_S_3_A1= VIA1_S_3_A1 INTERACT VIA1_Reg_4_S_3_A1                 
  VIA2_S_3_A1 = VIA2 INTERACT VIA1_3stack.Final 
  VIA2_Reg_4_S_3_A1 = EXT VIA2_S_3_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION             // VIA2s space smaller than 0.49 (inside small array)  
  VIA2_Violate_S_3_A1 = VIA2_S_3_A1 INTERACT VIA2_Reg_4_S_3_A1  
  VIA3_S_3_A1 = VIA3 INTERACT VIA1_3stack.Final 
  VIA3_Reg_4_S_3_A1 = EXT VIA3_S_3_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION           // VIA3s space smaller than 0.49 (inside small array)  
  VIA3_Violate_S_3_A1 = VIA3_S_3_A1 INTERACT VIA3_Reg_4_S_3_A1  

  
  VIA2_3stack.pre3 = ENCLOSE RECTANGLE VIA2_same_array_3stack.pre2 VIA_S_2L VIA_W_1    // Find at least one width >=VIA_W_1
  M2_3stack.pre3 = (((M2 INTERACT VIA2_3stack.pre3) OR (M3 INTERACT VIA2_3stack.pre3)) OR (M4 INTERACT VIA2_3stack.pre3)) OR (M5 INTERACT VIA2_3stack.pre3)
  VIA2_Reg_3_S_3 = EXT VIA2_3stack.pre3 <= VIA_S_5 SINGULAR OPPOSITE REGION ABUT < 90
  VIA2_Reg_3_S_3_pre = VIA2_Reg_3_S_3 NOT M2_3stack.pre3
  VIA2_Reg_3_S_3_1 = ENCLOSE RECTANGLE VIA2_Reg_3_S_3_pre 0.005 VIA_S_2L  // Find parallel run length >= VIA_S_2L
  VIA2_3stack.pre4 = VIA2_3stack.pre3 INTERACT (VIA2_Reg_3_S_3 INTERACT VIA2_Reg_3_S_3_1) // Find parallel run length >= VIA_S_2L
  VIA2ArrayS1_S_3 = EXT VIA2_3stack.pre4 <= VIA_S_5 SINGULAR OPPOSITE REGION ABUT < 90  // Space of different "smae array" smaller than VIA_S_2
  VIA2ArrayS2_S_3 = (((VIA2ArrayS1_S_3 NOT INSIDE M2) NOT INSIDE M3) NOT INSIDE M4 ) NOT INSIDE M5
  VIA2_3stack.pre5 = VIA2_3stack.pre4 INTERACT VIA2ArrayS2_S_3

  M2_3stack.pre4 = EXT M2_3stack.pre3 <= VIA_S_2 ABUT < 90 OPPOSITE SINGULAR REGION
  M2_3stack.pre4_edge = M2_3stack.pre3 COIN OUTSIDE EDGE M2_3stack.pre4
  M2_3stack.pre5 = EXPAND EDGE M2_3stack.pre4_edge INSIDE BY VIA_S_4
  M2_3stack.pre5_region_1 = M2_3stack.pre5 INTERACT VIA2_3stack.pre5
  M2_3stack.pre5_region = M2_3stack.pre4 INTERACT M2_3stack.pre5_region_1 >= 2
  M2_3stack.pre6 = M2_3stack.pre5_region OR M2_3stack.pre5_region_1
  M2_3stack.pre7 = M2_3stack.pre6 INTERACT VIA2_3stack.pre5 >= 2
  VIA2_3stack.Final = VIA2_3stack.pre5 INTERACT M2_3stack.pre7

  VIA2_S_3_A2 = VIA2 INTERACT VIA2_3stack.Final 
  VIA2_Reg_4_S_3_A2 = EXT VIA2_S_3_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION               // VIA2s space smaller than 0.49 (inside small array)  
  VIA2_Violate_S_3_A2= VIA2_S_3_A2 INTERACT VIA2_Reg_4_S_3_A2                 
  VIA3_S_3_A2 = VIA3 INTERACT VIA2_3stack.Final 
  VIA3_Reg_4_S_3_A2 = EXT VIA3_S_3_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION             // VIA3s space smaller than 0.49 (inside small array)  
  VIA3_Violate_S_3_A2 = VIA3_S_3_A2 INTERACT VIA3_Reg_4_S_3_A2  
  VIA4_S_3_A2 = VIA4 INTERACT VIA2_3stack.Final 
  VIA4_Reg_4_S_3_A2 = EXT VIA4_S_3_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION           // VIA4s space smaller than 0.49 (inside small array)  
  VIA4_Violate_S_3_A2 = VIA4_S_3_A2 INTERACT VIA4_Reg_4_S_3_A2  

  




// Processing for VIAx.S.8 Check    
//**************************************
  M1_3stack_S_8.pre3 = (((M1 INTERACT VIA1_same_array_3stack_S_8.pre2) OR (M2 INTERACT VIA1_same_array_3stack_S_8.pre2)) OR (M3 INTERACT VIA1_same_array_3stack_S_8.pre2)) OR (M4 INTERACT VIA1_same_array_3stack_S_8.pre2) 
  VIA1_3stack_S_8.pre3 = SIZE VIA1_same_array_3stack_S_8.pre2 BY VIA_S_4 INSIDE OF M1_3stack_S_8.pre3 STEP 0.28
  VIA1_3stack_S_8.pre4 = VIA1_3stack_S_8.pre3 TOUCH EDGE M1_3stack_S_8.pre3
  VIA1_3stack_S_8.pre5 = VIA1_3stack_S_8.pre3 WITH EDGE VIA1_3stack_S_8.pre4 >= 1
  VIA1_3stack_S_8.Final = VIA1_same_array_3stack_S_8.pre2 INTERACT VIA1_3stack_S_8.pre5


  VIA1_S_3_B1 = VIA1 INTERACT VIA1_3stack_S_8.Final 
  VIA1_Reg_4_S_3_B1 = EXT VIA1_S_3_B1 < VIA_S_3 ABUT < 90 SINGULAR REGION  // VIA1s space smaller than 0.49 (inside small array)  
  VIA1_Violate_S_3_B1= VIA1_S_3_B1 INTERACT VIA1_Reg_4_S_3_B1                 
  VIA2_S_3_B1 = VIA2 INTERACT VIA1_3stack_S_8.Final 
  VIA2_Reg_4_S_3_B1 = EXT VIA2_S_3_B1 < VIA_S_3 ABUT < 90 SINGULAR REGION // VIA2s space smaller than 0.49 (inside small array)  
  VIA2_Violate_S_3_B1 = VIA2_S_3_B1 INTERACT VIA2_Reg_4_S_3_B1  
  VIA3_S_3_B1 = VIA3 INTERACT VIA1_3stack_S_8.Final 
  VIA3_Reg_4_S_3_B1 = EXT VIA3_S_3_B1 < VIA_S_3 ABUT < 90 SINGULAR REGION  // VIA3s space smaller than 0.49 (inside small array)  
  VIA3_Violate_S_3_B1 = VIA3_S_3_B1 INTERACT VIA3_Reg_4_S_3_B1  


  M2_3stack_S_8.pre3 = (((M2 INTERACT VIA2_same_array_3stack_S_8.pre2) OR (M3 INTERACT VIA2_same_array_3stack_S_8.pre2)) OR (M4 INTERACT VIA2_same_array_3stack_S_8.pre2)) OR (M5 INTERACT VIA2_same_array_3stack_S_8.pre2) 
  VIA2_3stack_S_8.pre3 = SIZE VIA2_same_array_3stack_S_8.pre2 BY VIA_S_4 INSIDE OF M2_3stack_S_8.pre3 STEP 0.28
  VIA2_3stack_S_8.pre4 = VIA2_3stack_S_8.pre3 TOUCH EDGE M2_3stack_S_8.pre3
  VIA2_3stack_S_8.pre5 = VIA2_3stack_S_8.pre3 WITH EDGE VIA2_3stack_S_8.pre4 >= 1
  VIA2_3stack_S_8.Final = VIA2_same_array_3stack_S_8.pre2 INTERACT VIA2_3stack_S_8.pre5


  VIA2_S_3_B2 = VIA2 INTERACT VIA2_3stack_S_8.Final 
  VIA2_Reg_4_S_3_B2 = EXT VIA2_S_3_B2 < VIA_S_3 ABUT < 90 SINGULAR REGION  // VIA2s space smaller than 0.49 (inside small array)  
  VIA2_Violate_S_3_B2= VIA2_S_3_B2 INTERACT VIA2_Reg_4_S_3_B2                 
  VIA3_S_3_B2 = VIA3 INTERACT VIA2_3stack_S_8.Final 
  VIA3_Reg_4_S_3_B2 = EXT VIA3_S_3_B2 < VIA_S_3 ABUT < 90 SINGULAR REGION // VIA3s space smaller than 0.49 (inside small array)  
  VIA3_Violate_S_3_B2 = VIA3_S_3_B2 INTERACT VIA3_Reg_4_S_3_B2  
  VIA4_S_3_B2 = VIA4 INTERACT VIA2_3stack_S_8.Final 
  VIA4_Reg_4_S_3_B2 = EXT VIA4_S_3_B2 < VIA_S_3 ABUT < 90 SINGULAR REGION  // VIA4s space smaller than 0.49 (inside small array)  
  VIA4_Violate_S_3_B2 = VIA4_S_3_B2 INTERACT VIA4_Reg_4_S_3_B2  



// Processing for Mx.S.5 Check    
//**************************************
  VIA1_3stack_Mx_S5.pre3 = ENCLOSE RECTANGLE VIA1_same_array_3stack_Mx_S5.pre2 VIA_W_1 VIA_W_1  // Find at least one width >= VIA_W_1

  M1_S_3_C1 = ENC VIA1_3stack_Mx_S5.pre3 [M1] <= VIA_S_4 ABUT < 90 SINGULAR 
  M1_Reg_4_S_3_C1 = EXT M1_S_3_C1 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M1s space smaller than 1.2   
  M2_S_3_C1 = ENC VIA1_3stack_Mx_S5.pre3 [M2] <= VIA_S_4 ABUT < 90 SINGULAR 
  M2_Reg_4_S_3_C1 = EXT M2_S_3_C1 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M2s space smaller than 1.2   
  M3_S_3_C1 = ENC VIA1_3stack_Mx_S5.pre3 [M3] <= VIA_S_4 ABUT < 90 SINGULAR 
  M3_Reg_4_S_3_C1 = EXT M3_S_3_C1 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M3s space smaller than 1.2   


  VIA2_3stack_Mx_S5.pre3 = ENCLOSE RECTANGLE VIA2_same_array_3stack_Mx_S5.pre2 VIA_W_1 VIA_W_1  // Find at least one width >= VIA_W_1

  M2_S_3_C2 = ENC VIA2_3stack_Mx_S5.pre3 [M2] <= VIA_S_4 ABUT < 90 SINGULAR 
  M2_Reg_4_S_3_C2 = EXT M2_S_3_C2 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M2s space smaller than 1.2   
  M3_S_3_C2 = ENC VIA2_3stack_Mx_S5.pre3 [M3] <= VIA_S_4 ABUT < 90 SINGULAR 
  M3_Reg_4_S_3_C2 = EXT M3_S_3_C2 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M3s space smaller than 1.2   
  M4_S_3_C2 = ENC VIA2_3stack_Mx_S5.pre3 [M4] <= VIA_S_4 ABUT < 90 SINGULAR 
  M4_Reg_4_S_3_C2 = EXT M4_S_3_C2 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M4s space smaller than 1.2   




// Rule Check    
//**************************************
  CONNECT VIA1_3stack.Final VIA1_Violate_S_3_A1
  CONNECT VIA1_3stack.Final VIA2_Violate_S_3_A1
  CONNECT VIA1_3stack.Final VIA3_Violate_S_3_A1
  CONNECT VIA2_3stack.Final VIA2_Violate_S_3_A2
  CONNECT VIA2_3stack.Final VIA3_Violate_S_3_A2
  CONNECT VIA2_3stack.Final VIA4_Violate_S_3_A2

VIA1.S.4_Array1_2_3_M { @ Minimum space between two VIAs in 3-level continuous stacking VIA arrays with below condition >=0.49um
                           @ Via1 violate ^VIA_S_3 spacing in Via1/Via2/Via3 array & density large or equal ^VIA_D_1 
  A1 = NET AREA RATIO VIA1_Violate_S_3_A1 VIA1_3stack.Final >= VIA_D_1
  A2 = NET AREA RATIO VIA2_Violate_S_3_A1 VIA1_3stack.Final >= VIA_D_1
  A3 = NET AREA RATIO VIA3_Violate_S_3_A1 VIA1_3stack.Final >= VIA_D_1
  B1 = (A1 OR A2) OR A3
  SIZE B1 BY VIA_Merge OVERUNDER 
}




M1_2_3.S.5 { @ Minimum space between two Mx region with below conditions >= ^Mx_S_3_7 um 
			  @ (a1) both of the Mx with the overlap area of 3-level continuous VIA array area >= ^VIA_A_3_B um2
			  @ (a2) Width of 3-level continuous stacking VIA arrays >= ^VIA_W_1 um
  (M1_Reg_4_S_3_C1 OR M2_Reg_4_S_3_C1) OR M3_Reg_4_S_3_C1 
}






VIA2.S.4_Array2_3_4_M { @ Minimum space between two VIAs in 3-level continuous stacking VIA arrays with below condition >=0.49um
                           @ Via2 violate ^VIA_S_3 spacing in Via2/Via3/Via4 array & density large or equal ^VIA_D_1 
  A2 = NET AREA RATIO VIA2_Violate_S_3_A2 VIA2_3stack.Final >= VIA_D_1
  A3 = NET AREA RATIO VIA3_Violate_S_3_A2 VIA2_3stack.Final >= VIA_D_1
  A4 = NET AREA RATIO VIA4_Violate_S_3_A2 VIA2_3stack.Final >= VIA_D_1
  B2 = (A2 OR A3) OR A4
  SIZE B2 BY VIA_Merge OVERUNDER 
}




VIA2.S.8_Array2_3_4_M { @ Minimum space between two VIA2 region >= ^VIA_S_3 um if the overlap area of 3-level
						   @ continuous stacking VIA arrays >= ^VIA_A_3_B um2 (except sealring region)
  (VIA2_3stack_S_8.Final INTERACT VIA2_Violate_S_3_B2) NOT INTERACT SEALRING_ALL
}

VIA3.S.8_Array2_3_4_M { @ Minimum space between two VIA3 region >= ^VIA_S_3 um if the overlap area of 3-level
							@ continuous stacking VIA arrays >= ^VIA_A_3_B um2 (except sealring region)
  (VIA2_3stack_S_8.Final INTERACT VIA3_Violate_S_3_B2) NOT INTERACT SEALRING_ALL
}

VIA4.S.8_Array2_3_4_M { @ Minimum space between two VIA4 region >= ^VIA_S_3 um if the overlap area of 3-level
							 @ continuous stacking VIA arrays >= ^VIA_A_3_B um2 (except sealring region)
  (VIA2_3stack_S_8.Final INTERACT VIA4_Violate_S_3_B2) NOT INTERACT SEALRING_ALL
}
M2_3_4.S.5 { @ Minimum space between two Mx region with below conditions >= ^Mx_S_3_7 um 
			  @ (a1) both of the Mx with the overlap area of 3-level continuous VIA array area >= ^VIA_A_3_B um2
			  @ (a2) Width of 3-level continuous stacking VIA arrays >= ^VIA_W_1 um
  (M2_Reg_4_S_3_C2 OR M3_Reg_4_S_3_C2) OR M4_Reg_4_S_3_C2 
}




//**********************  
// Small 2 stack array
//**********************
// Processing for SAME Array Size Check    
//**************************************
  VIA1_2stack.pre3 = ENCLOSE RECTANGLE VIA1_same_array_2stack.pre2 VIA_S_2L VIA_W_1 // Find at least one width >= VIA_W_1
  M1_2stack.pre3 = ((M1 INTERACT VIA1_2stack.pre3) OR (M2 INTERACT VIA1_2stack.pre3)) OR (M3 INTERACT VIA1_2stack.pre3)  
  VIA1_Reg_3_S_2 = EXT VIA1_2stack.pre3 <= VIA_S_5 SINGULAR OPPOSITE REGION ABUT < 90
  VIA1_Reg_3_S_2_pre = VIA1_Reg_3_S_2 NOT M1_2stack.pre3
  VIA1_Reg_3_S_2_1 = ENCLOSE RECTANGLE VIA1_Reg_3_S_2_pre 0.005 VIA_S_2L // Find parallel run length >= VIA_S_2L 
  VIA1_2stack.pre4 = VIA1_2stack.pre3 INTERACT (VIA1_Reg_3_S_2 INTERACT VIA1_Reg_3_S_2_1)  // Find parallel run length >= VIA_S_2L
  VIA1ArrayS1_S_2 = EXT VIA1_2stack.pre4 <= VIA_S_5 SINGULAR OPPOSITE REGION ABUT < 90  // Space of different "smae array" smaller than >= VIA_S_2
  VIA1ArrayS2_S_2 = ((VIA1ArrayS1_S_2 NOT INSIDE M1) NOT INSIDE M2 ) NOT INSIDE M3
  VIA1_2stack.pre5 = VIA1_2stack.pre4 INTERACT VIA1ArrayS2_S_2

  M1_2stack.pre4 = EXT M1_2stack.pre3 <= VIA_S_2 ABUT < 90 OPPOSITE SINGULAR REGION
  M1_2stack.pre4_edge = M1_2stack.pre3 COIN OUTSIDE EDGE M1_2stack.pre4
  M1_2stack.pre5 = EXPAND EDGE M1_2stack.pre4_edge INSIDE BY VIA_S_4
  M1_2stack.pre5_region_1 = M1_2stack.pre5 INTERACT VIA1_2stack.pre5
  M1_2stack.pre5_region = M1_2stack.pre4 INTERACT M1_2stack.pre5_region_1 >= 2
  M1_2stack.pre6 = M1_2stack.pre5_region OR M1_2stack.pre5_region_1
  M1_2stack.pre7 = M1_2stack.pre6 INTERACT VIA1_2stack.pre5 >= 2
  VIA1_2stack.Final = VIA1_2stack.pre5 INTERACT M1_2stack.pre7

  VIA1_S_2_A1 = VIA1 INTERACT VIA1_2stack.Final 
  VIA1_Reg_4_S_2_A1 = EXT VIA1_S_2_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION               // VIA1s space smaller than 0.49 (inside small array)  
  VIA1_Violate_S_2_A1= VIA1_S_2_A1 INTERACT VIA1_Reg_4_S_2_A1                 
  VIA2_S_2_A1 = VIA2 INTERACT VIA1_2stack.Final 
  VIA2_Reg_4_S_2_A1 = EXT VIA2_S_2_A1 < VIA_S_3 ABUT < 90 SINGULAR REGION             // VIA2s space smaller than 0.49 (inside small array)  
  VIA2_Violate_S_2_A1 = VIA2_S_2_A1 INTERACT VIA2_Reg_4_S_2_A1  


  VIA2_2stack.pre3 = ENCLOSE RECTANGLE VIA2_same_array_2stack.pre2 VIA_S_2L VIA_W_1 // Find at least one width >= VIA_W_1
  M2_2stack.pre3 = ((M2 INTERACT VIA2_2stack.pre3) OR (M3 INTERACT VIA2_2stack.pre3)) OR (M4 INTERACT VIA2_2stack.pre3)  
  VIA2_Reg_3_S_2 = EXT VIA2_2stack.pre3 <= VIA_S_5 SINGULAR OPPOSITE REGION ABUT < 90
  VIA2_Reg_3_S_2_pre = VIA2_Reg_3_S_2 NOT M2_2stack.pre3
  VIA2_Reg_3_S_2_1 = ENCLOSE RECTANGLE VIA2_Reg_3_S_2_pre 0.005 VIA_S_2L // Find parallel run length >= VIA_S_2L 
  VIA2_2stack.pre4 = VIA2_2stack.pre3 INTERACT (VIA2_Reg_3_S_2 INTERACT VIA2_Reg_3_S_2_1)  // Find parallel run length >= VIA_S_2L
  VIA2ArrayS1_S_2 = EXT VIA2_2stack.pre4 <= VIA_S_5 SINGULAR OPPOSITE REGION ABUT < 90  // Space of different "smae array" smaller than >= VIA_S_2
  VIA2ArrayS2_S_2 = ((VIA2ArrayS1_S_2 NOT INSIDE M2) NOT INSIDE M3 ) NOT INSIDE M4
  VIA2_2stack.pre5 = VIA2_2stack.pre4 INTERACT VIA2ArrayS2_S_2

  M2_2stack.pre4 = EXT M2_2stack.pre3 <= VIA_S_2 ABUT < 90 OPPOSITE SINGULAR REGION
  M2_2stack.pre4_edge = M2_2stack.pre3 COIN OUTSIDE EDGE M2_2stack.pre4
  M2_2stack.pre5 = EXPAND EDGE M2_2stack.pre4_edge INSIDE BY VIA_S_4
  M2_2stack.pre5_region_1 = M2_2stack.pre5 INTERACT VIA2_2stack.pre5
  M2_2stack.pre5_region = M2_2stack.pre4 INTERACT M2_2stack.pre5_region_1 >= 2
  M2_2stack.pre6 = M2_2stack.pre5_region OR M2_2stack.pre5_region_1
  M2_2stack.pre7 = M2_2stack.pre6 INTERACT VIA2_2stack.pre5 >= 2
  VIA2_2stack.Final = VIA2_2stack.pre5 INTERACT M2_2stack.pre7

  VIA2_S_2_A2 = VIA2 INTERACT VIA2_2stack.Final 
  VIA2_Reg_4_S_2_A2 = EXT VIA2_S_2_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION               // VIA2s space smaller than 0.49 (inside small array)  
  VIA2_Violate_S_2_A2= VIA2_S_2_A2 INTERACT VIA2_Reg_4_S_2_A2                 
  VIA3_S_2_A2 = VIA3 INTERACT VIA2_2stack.Final 
  VIA3_Reg_4_S_2_A2 = EXT VIA3_S_2_A2 < VIA_S_3 ABUT < 90 SINGULAR REGION             // VIA3s space smaller than 0.49 (inside small array)  
  VIA3_Violate_S_2_A2 = VIA3_S_2_A2 INTERACT VIA3_Reg_4_S_2_A2  


  VIA3_2stack.pre3 = ENCLOSE RECTANGLE VIA3_same_array_2stack.pre2 VIA_S_2L VIA_W_1 // Find at least one width >= VIA_W_1
  M3_2stack.pre3 = ((M3 INTERACT VIA3_2stack.pre3) OR (M4 INTERACT VIA3_2stack.pre3)) OR (M5 INTERACT VIA3_2stack.pre3)  
  VIA3_Reg_3_S_2 = EXT VIA3_2stack.pre3 <= VIA_S_5 SINGULAR OPPOSITE REGION ABUT < 90
  VIA3_Reg_3_S_2_pre = VIA3_Reg_3_S_2 NOT M3_2stack.pre3
  VIA3_Reg_3_S_2_1 = ENCLOSE RECTANGLE VIA3_Reg_3_S_2_pre 0.005 VIA_S_2L // Find parallel run length >= VIA_S_2L 
  VIA3_2stack.pre4 = VIA3_2stack.pre3 INTERACT (VIA3_Reg_3_S_2 INTERACT VIA3_Reg_3_S_2_1)  // Find parallel run length >= VIA_S_2L
  VIA3ArrayS1_S_2 = EXT VIA3_2stack.pre4 <= VIA_S_5 SINGULAR OPPOSITE REGION ABUT < 90  // Space of different "smae array" smaller than >= VIA_S_2
  VIA3ArrayS2_S_2 = ((VIA3ArrayS1_S_2 NOT INSIDE M3) NOT INSIDE M4 ) NOT INSIDE M5
  VIA3_2stack.pre5 = VIA3_2stack.pre4 INTERACT VIA3ArrayS2_S_2

  M3_2stack.pre4 = EXT M3_2stack.pre3 <= VIA_S_2 ABUT < 90 OPPOSITE SINGULAR REGION
  M3_2stack.pre4_edge = M3_2stack.pre3 COIN OUTSIDE EDGE M3_2stack.pre4
  M3_2stack.pre5 = EXPAND EDGE M3_2stack.pre4_edge INSIDE BY VIA_S_4
  M3_2stack.pre5_region_1 = M3_2stack.pre5 INTERACT VIA3_2stack.pre5
  M3_2stack.pre5_region = M3_2stack.pre4 INTERACT M3_2stack.pre5_region_1 >= 2
  M3_2stack.pre6 = M3_2stack.pre5_region OR M3_2stack.pre5_region_1
  M3_2stack.pre7 = M3_2stack.pre6 INTERACT VIA3_2stack.pre5 >= 2
  VIA3_2stack.Final = VIA3_2stack.pre5 INTERACT M3_2stack.pre7

  VIA3_S_2_A3 = VIA3 INTERACT VIA3_2stack.Final 
  VIA3_Reg_4_S_2_A3 = EXT VIA3_S_2_A3 < VIA_S_3 ABUT < 90 SINGULAR REGION               // VIA3s space smaller than 0.49 (inside small array)  
  VIA3_Violate_S_2_A3= VIA3_S_2_A3 INTERACT VIA3_Reg_4_S_2_A3                 
  VIA4_S_2_A3 = VIA4 INTERACT VIA3_2stack.Final 
  VIA4_Reg_4_S_2_A3 = EXT VIA4_S_2_A3 < VIA_S_3 ABUT < 90 SINGULAR REGION             // VIA4s space smaller than 0.49 (inside small array)  
  VIA4_Violate_S_2_A3 = VIA4_S_2_A3 INTERACT VIA4_Reg_4_S_2_A3  






// Processing for VIAx.S.9 Check    
//**************************************
  M1_2stack_S_9.pre3 = ((M1 INTERACT VIA1_same_array_2stack_S_9.pre2) OR (M2 INTERACT VIA1_same_array_2stack_S_9.pre2)) OR (M3 INTERACT VIA1_same_array_2stack_S_9.pre2) 
  VIA1_2stack_S_9.pre3 = SIZE VIA1_same_array_2stack_S_9.pre2 BY VIA_S_4 INSIDE OF M1_2stack_S_9.pre3 STEP 0.28
  VIA1_2stack_S_9.pre4 = VIA1_2stack_S_9.pre3 TOUCH EDGE M1_2stack_S_9.pre3
  VIA1_2stack_S_9.pre5 = VIA1_2stack_S_9.pre3 WITH EDGE VIA1_2stack_S_9.pre4 >= 1
  VIA1_2stack_S_9.Final = VIA1_same_array_2stack_S_9.pre2 INTERACT VIA1_2stack_S_9.pre5

  VIA1_S_2_B1 = VIA1 INTERACT VIA1_2stack_S_9.Final 
  VIA1_Reg_4_S_2_B1 = EXT VIA1_S_2_B1 < VIA_S_3 ABUT < 90 SINGULAR REGION  // VIA1s space smaller than 0.49 (inside small array)  
  VIA1_Violate_S_2_B1= VIA1_S_2_B1 INTERACT VIA1_Reg_4_S_2_B1                 
  VIA2_S_2_B1 = VIA2 INTERACT VIA1_2stack_S_9.Final 
  VIA2_Reg_4_S_2_B1 = EXT VIA2_S_2_B1 < VIA_S_3 ABUT < 90 SINGULAR REGION // VIA2s space smaller than 0.49 (inside small array)  
  VIA2_Violate_S_2_B1 = VIA2_S_2_B1 INTERACT VIA2_Reg_4_S_2_B1  


  M2_2stack_S_9.pre3 = ((M2 INTERACT VIA2_same_array_2stack_S_9.pre2) OR (M3 INTERACT VIA2_same_array_2stack_S_9.pre2)) OR (M4 INTERACT VIA2_same_array_2stack_S_9.pre2) 
  VIA2_2stack_S_9.pre3 = SIZE VIA2_same_array_2stack_S_9.pre2 BY VIA_S_4 INSIDE OF M2_2stack_S_9.pre3 STEP 0.28
  VIA2_2stack_S_9.pre4 = VIA2_2stack_S_9.pre3 TOUCH EDGE M2_2stack_S_9.pre3
  VIA2_2stack_S_9.pre5 = VIA2_2stack_S_9.pre3 WITH EDGE VIA2_2stack_S_9.pre4 >= 1
  VIA2_2stack_S_9.Final = VIA2_same_array_2stack_S_9.pre2 INTERACT VIA2_2stack_S_9.pre5

  VIA2_S_2_B2 = VIA2 INTERACT VIA2_2stack_S_9.Final 
  VIA2_Reg_4_S_2_B2 = EXT VIA2_S_2_B2 < VIA_S_3 ABUT < 90 SINGULAR REGION  // VIA2s space smaller than 0.49 (inside small array)  
  VIA2_Violate_S_2_B2= VIA2_S_2_B2 INTERACT VIA2_Reg_4_S_2_B2                 
  VIA3_S_2_B2 = VIA3 INTERACT VIA2_2stack_S_9.Final 
  VIA3_Reg_4_S_2_B2 = EXT VIA3_S_2_B2 < VIA_S_3 ABUT < 90 SINGULAR REGION // VIA3s space smaller than 0.49 (inside small array)  
  VIA3_Violate_S_2_B2 = VIA3_S_2_B2 INTERACT VIA3_Reg_4_S_2_B2  


  M3_2stack_S_9.pre3 = ((M3 INTERACT VIA3_same_array_2stack_S_9.pre2) OR (M4 INTERACT VIA3_same_array_2stack_S_9.pre2)) OR (M5 INTERACT VIA3_same_array_2stack_S_9.pre2) 
  VIA3_2stack_S_9.pre3 = SIZE VIA3_same_array_2stack_S_9.pre2 BY VIA_S_4 INSIDE OF M3_2stack_S_9.pre3 STEP 0.28
  VIA3_2stack_S_9.pre4 = VIA3_2stack_S_9.pre3 TOUCH EDGE M3_2stack_S_9.pre3
  VIA3_2stack_S_9.pre5 = VIA3_2stack_S_9.pre3 WITH EDGE VIA3_2stack_S_9.pre4 >= 1
  VIA3_2stack_S_9.Final = VIA3_same_array_2stack_S_9.pre2 INTERACT VIA3_2stack_S_9.pre5

  VIA3_S_2_B3 = VIA3 INTERACT VIA3_2stack_S_9.Final 
  VIA3_Reg_4_S_2_B3 = EXT VIA3_S_2_B3 < VIA_S_3 ABUT < 90 SINGULAR REGION  // VIA3s space smaller than 0.49 (inside small array)  
  VIA3_Violate_S_2_B3= VIA3_S_2_B3 INTERACT VIA3_Reg_4_S_2_B3                 
  VIA4_S_2_B3 = VIA4 INTERACT VIA3_2stack_S_9.Final 
  VIA4_Reg_4_S_2_B3 = EXT VIA4_S_2_B3 < VIA_S_3 ABUT < 90 SINGULAR REGION // VIA4s space smaller than 0.49 (inside small array)  
  VIA4_Violate_S_2_B3 = VIA4_S_2_B3 INTERACT VIA4_Reg_4_S_2_B3  



// Processing for Mx.S.6 Check    
//**************************************
  VIA1_2stack_Mx_S6.pre3 = ENCLOSE RECTANGLE VIA1_same_array_2stack_Mx_S6.pre2 VIA_W_1 VIA_W_1  // Find at least one width >= VIA_W_1

  M1_S_2_C1 = ENC VIA1_2stack_Mx_S6.pre3 [M1] <= VIA_S_4 ABUT < 90 SINGULAR 
  M1_Reg_4_S_2_C1 = EXT M1_S_2_C1 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M1s space smaller than 1.2   
  M2_S_2_C1 = ENC VIA1_2stack_Mx_S6.pre3 [M2] <= VIA_S_4 ABUT < 90 SINGULAR 
  M2_Reg_4_S_2_C1 = EXT M2_S_2_C1 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M2s space smaller than 1.2   


  VIA2_2stack_Mx_S6.pre3 = ENCLOSE RECTANGLE VIA2_same_array_2stack_Mx_S6.pre2 VIA_W_1 VIA_W_1  // Find at least one width >= VIA_W_1

  M2_S_2_C2 = ENC VIA2_2stack_Mx_S6.pre3 [M2] <= VIA_S_4 ABUT < 90 SINGULAR 
  M2_Reg_4_S_2_C2 = EXT M2_S_2_C2 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M2s space smaller than 1.2   
  M3_S_2_C2 = ENC VIA2_2stack_Mx_S6.pre3 [M3] <= VIA_S_4 ABUT < 90 SINGULAR 
  M3_Reg_4_S_2_C2 = EXT M3_S_2_C2 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M3s space smaller than 1.2   


  VIA3_2stack_Mx_S6.pre3 = ENCLOSE RECTANGLE VIA3_same_array_2stack_Mx_S6.pre2 VIA_W_1 VIA_W_1  // Find at least one width >= VIA_W_1

  M3_S_2_C3 = ENC VIA3_2stack_Mx_S6.pre3 [M3] <= VIA_S_4 ABUT < 90 SINGULAR 
  M3_Reg_4_S_2_C3 = EXT M3_S_2_C3 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M3s space smaller than 1.2   
  M4_S_2_C3 = ENC VIA3_2stack_Mx_S6.pre3 [M4] <= VIA_S_4 ABUT < 90 SINGULAR 
  M4_Reg_4_S_2_C3 = EXT M4_S_2_C3 < Mx_S_3_7 SPACE ABUT < 90 OPPOSITE REGION // M4s space smaller than 1.2   




// Rule Check    
//**************************************
  CONNECT VIA1_2stack.Final VIA1_Violate_S_2_A1
  CONNECT VIA1_2stack.Final VIA2_Violate_S_2_A1
  CONNECT VIA2_2stack.Final VIA2_Violate_S_2_A2
  CONNECT VIA2_2stack.Final VIA3_Violate_S_2_A2
  CONNECT VIA3_2stack.Final VIA3_Violate_S_2_A3
  CONNECT VIA3_2stack.Final VIA4_Violate_S_2_A3
  
VIA1.S.5_Array1_2_M { @ Minimum space between two VIAs in 2-level continuous stacking VIA arrays with below condition >=0.49um
                       @ Via1 violate ^VIA_S_3 spacing in Via1/Via2 array & density large or equal ^VIA_D_1 
  A1 = NET AREA RATIO VIA1_Violate_S_2_A1 VIA1_2stack.Final >= VIA_D_1
  A2 = NET AREA RATIO VIA2_Violate_S_2_A1 VIA1_2stack.Final >= VIA_D_1
  B1 = A1 OR A2
  SIZE B1 BY VIA_Merge OVERUNDER 
}


M1_2.S.6 { @ Minimum space between two Mx region with below conditions >= ^Mx_S_3_7 um 
			  @ (a1) both of the Mx with the overlap area of 2-level continuous VIA array area >= ^VIA_A_2_B um2
			  @ (a2) Width of 2-level continuous stacking VIA arrays >= ^VIA_W_1 um
  M1_Reg_4_S_2_C1 OR M2_Reg_4_S_2_C1
}

VIA2.S.5_Array2_3_M { @ Minimum space between two VIAs in 2-level continuous stacking VIA arrays with below condition >=0.49um
                       @ Via2 violate ^VIA_S_3 spacing in Via2/Via3 array & density large or equal ^VIA_D_1 
  A2 = NET AREA RATIO VIA2_Violate_S_2_A2 VIA2_2stack.Final >= VIA_D_1
  A3 = NET AREA RATIO VIA3_Violate_S_2_A2 VIA2_2stack.Final >= VIA_D_1
  B2 = A2 OR A3
  SIZE B2 BY VIA_Merge OVERUNDER 
}


M2_3.S.6 { @ Minimum space between two Mx region with below conditions >= ^Mx_S_3_7 um 
			  @ (a1) both of the Mx with the overlap area of 2-level continuous VIA array area >= ^VIA_A_2_B um2
			  @ (a2) Width of 2-level continuous stacking VIA arrays >= ^VIA_W_1 um
  M2_Reg_4_S_2_C2 OR M3_Reg_4_S_2_C2
}







VIA3.S.5_Array3_4_M { @ Minimum space between two VIAs in 2-level continuous stacking VIA arrays with below condition >=0.49um
                       @ Via3 violate ^VIA_S_3 spacing in Via3/Via4 array & density large or equal ^VIA_D_1 
  A3 = NET AREA RATIO VIA3_Violate_S_2_A3 VIA3_2stack.Final >= VIA_D_1
  A4 = NET AREA RATIO VIA4_Violate_S_2_A3 VIA3_2stack.Final >= VIA_D_1
  B3 = A3 OR A4
  SIZE B3 BY VIA_Merge OVERUNDER
}




VIA3.S.9_Array3_4_M { @ Minimum space between two VIA3 region >= ^VIA_S_3 um if the overlap area of 2-level
					   @ continuous stacking VIA arrays >= ^VIA_A_2_B um2 (except sealring region)
  (VIA3_2stack_S_9.Final INTERACT VIA3_Violate_S_2_B3) NOT INTERACT SEALRING_ALL
}

VIA4.S.9_Array3_4_M { @ Minimum space between two VIA4 region >= ^VIA_S_3 um if the overlap area of 2-level
						@ continuous stacking VIA arrays >= ^VIA_A_2_B um2 (except sealring region)
  (VIA3_2stack_S_9.Final INTERACT VIA4_Violate_S_2_B3) NOT INTERACT SEALRING_ALL
}
M3_4.S.6 { @ Minimum space between two Mx region with below conditions >= ^Mx_S_3_7 um 
			  @ (a1) both of the Mx with the overlap area of 2-level continuous VIA array area >= ^VIA_A_2_B um2
			  @ (a2) Width of 2-level continuous stacking VIA arrays >= ^VIA_W_1 um
  M3_Reg_4_S_2_C3 OR M4_Reg_4_S_2_C3
}





//****************************  
// Small single layer array
//****************************
// Processing for VIAx.S.10 Check    
//**************************************
  M1_1stack_S_10.pre2 = (M1 INTERACT VIA1_same_array_1stack_S_10.pre1) OR (M2 INTERACT VIA1_same_array_1stack_S_10.pre1) 
  VIA1_1stack_S_10.pre2 = SIZE VIA1_same_array_1stack_S_10.pre1 BY VIA_S_4 INSIDE OF M1_1stack_S_10.pre2 STEP 0.28
  VIA1_1stack_S_10.pre3 = VIA1_1stack_S_10.pre2 TOUCH EDGE M1_1stack_S_10.pre2
  VIA1_1stack_S_10.pre4 = VIA1_1stack_S_10.pre2 WITH EDGE VIA1_1stack_S_10.pre3 >= 1
  VIA1_1stack_S_10.Final = VIA1_same_array_1stack_S_10.pre1 INTERACT VIA1_1stack_S_10.pre4

  VIA1_S_1_B1 = VIA1 INTERACT VIA1_1stack_S_10.Final 
  VIA1_Reg_4_S_1_B1 = EXT VIA1_S_1_B1 < VIA_S_3 ABUT < 90 SINGULAR REGION  // VIA1s space smaller than 0.49 (inside small array)  
  VIA1_Violate_S_1_B1= VIA1_S_1_B1 INTERACT VIA1_Reg_4_S_1_B1                 

  M2_1stack_S_10.pre2 = (M2 INTERACT VIA2_same_array_1stack_S_10.pre1) OR (M3 INTERACT VIA2_same_array_1stack_S_10.pre1) 
  VIA2_1stack_S_10.pre2 = SIZE VIA2_same_array_1stack_S_10.pre1 BY VIA_S_4 INSIDE OF M2_1stack_S_10.pre2 STEP 0.28
  VIA2_1stack_S_10.pre3 = VIA2_1stack_S_10.pre2 TOUCH EDGE M2_1stack_S_10.pre2
  VIA2_1stack_S_10.pre4 = VIA2_1stack_S_10.pre2 WITH EDGE VIA2_1stack_S_10.pre3 >= 1
  VIA2_1stack_S_10.Final = VIA2_same_array_1stack_S_10.pre1 INTERACT VIA2_1stack_S_10.pre4

  VIA2_S_1_B2 = VIA2 INTERACT VIA2_1stack_S_10.Final 
  VIA2_Reg_4_S_1_B2 = EXT VIA2_S_1_B2 < VIA_S_3 ABUT < 90 SINGULAR REGION  // VIA2s space smaller than 0.49 (inside small array)  
  VIA2_Violate_S_1_B2= VIA2_S_1_B2 INTERACT VIA2_Reg_4_S_1_B2                 

  M3_1stack_S_10.pre2 = (M3 INTERACT VIA3_same_array_1stack_S_10.pre1) OR (M4 INTERACT VIA3_same_array_1stack_S_10.pre1) 
  VIA3_1stack_S_10.pre2 = SIZE VIA3_same_array_1stack_S_10.pre1 BY VIA_S_4 INSIDE OF M3_1stack_S_10.pre2 STEP 0.28
  VIA3_1stack_S_10.pre3 = VIA3_1stack_S_10.pre2 TOUCH EDGE M3_1stack_S_10.pre2
  VIA3_1stack_S_10.pre4 = VIA3_1stack_S_10.pre2 WITH EDGE VIA3_1stack_S_10.pre3 >= 1
  VIA3_1stack_S_10.Final = VIA3_same_array_1stack_S_10.pre1 INTERACT VIA3_1stack_S_10.pre4

  VIA3_S_1_B3 = VIA3 INTERACT VIA3_1stack_S_10.Final 
  VIA3_Reg_4_S_1_B3 = EXT VIA3_S_1_B3 < VIA_S_3 ABUT < 90 SINGULAR REGION  // VIA3s space smaller than 0.49 (inside small array)  
  VIA3_Violate_S_1_B3= VIA3_S_1_B3 INTERACT VIA3_Reg_4_S_1_B3                 

  M4_1stack_S_10.pre2 = (M4 INTERACT VIA4_same_array_1stack_S_10.pre1) OR (M5 INTERACT VIA4_same_array_1stack_S_10.pre1) 
  VIA4_1stack_S_10.pre2 = SIZE VIA4_same_array_1stack_S_10.pre1 BY VIA_S_4 INSIDE OF M4_1stack_S_10.pre2 STEP 0.28
  VIA4_1stack_S_10.pre3 = VIA4_1stack_S_10.pre2 TOUCH EDGE M4_1stack_S_10.pre2
  VIA4_1stack_S_10.pre4 = VIA4_1stack_S_10.pre2 WITH EDGE VIA4_1stack_S_10.pre3 >= 1
  VIA4_1stack_S_10.Final = VIA4_same_array_1stack_S_10.pre1 INTERACT VIA4_1stack_S_10.pre4

  VIA4_S_1_B4 = VIA4 INTERACT VIA4_1stack_S_10.Final 
  VIA4_Reg_4_S_1_B4 = EXT VIA4_S_1_B4 < VIA_S_3 ABUT < 90 SINGULAR REGION  // VIA4s space smaller than 0.49 (inside small array)  
  VIA4_Violate_S_1_B4= VIA4_S_1_B4 INTERACT VIA4_Reg_4_S_1_B4                 


// Rule Check    
//**************************************


VIA4.S.10_Array4_M { @ Minimum space between two VIA4 region >= ^VIA_S_3 um if the single layer VIA arrays area >= ^VIA_A_1 um2 (except sealring region)
  (VIA4_1stack_S_10.Final INTERACT VIA4_Violate_S_1_B4) NOT INTERACT SEALRING_ALL
}














CB_CUP = CB INTERACT WBDMY
notch_CB    = EXT CB <5 NOTCH OPPOSITE REGION    
CB_SINGLE   = CB OR notch_CB
// VIA4 checks
//=============

VIA4R = VIA4 NOT INSIDE CB_SINGLE

VIA4R_CORE = VIA4R NOT SR_VIA4
VIA4.W.1 { @ VIA4 must be ^VIAn_W_1 x ^VIAn_W_1
  A = NOT RECTANGLE VIA4R_CORE == VIAn_W_1 BY == VIAn_W_1 ORTHOGONAL ONLY
  A OUTSIDE RNGX // exclude from metal fuse protection ring area
}
VIA4.S.1 { @ Min. VIA4 spacing < ^VIAn_S_1
  EXT VIA4R < VIAn_S_1 ABUT < 90 SINGULAR REGION
}
VIA4.E.1 { @ Min. extension of a M4 region beyond a VIA4 region < 0.01
  ENC VIA4R M4 < 0.01 ABUT < 90 SINGULAR REGION
  VIA4R NOT M4    
}
VIA4.E.2 { @ Min. extension of a M4 end-of-line region beyond VIA4 region < 0.06
  X = ENC [VIA4R] M4 < 0.06 ABUT < 90 OPPOSITE	// a narrow side
  INT X < 0.36 ABUT == 90 INTERSECTING ONLY	// adjacent narrow sides
}
#IFDEF Recommend
VIA4.E.3 { @ Min. extension of M4 beyond the overlap area that VIA4 and VIA3 are fully or partially touching < ^VIA4_E_3
  X = VIA4R AND VIA3
  ENC X M4 < VIA4_E_3 ABUT < 90 SINGULAR REGION	
}
#ENDIF




#IFDEF CHECK_ALRDL


#IFNDEF THICK_40K
#IFNDEF THICK_30K
#IFNDEF THICK_15K

// VIAD checks
//=============

VIADR = VIAD NOT INSIDE CB_SINGLE

VIADR_CORE = VIADR NOT SR_VIAD
VIAD.W.1 { @ VIAD must be ^VIAD_W_1 x ^VIAD_W_1
  A = NOT RECTANGLE VIADR_CORE == VIAD_W_1 BY == VIAD_W_1 ORTHOGONAL ONLY
  A OUTSIDE RNGX     // exclude from metal fuse protection ring area
}
VIAD.S.1 { @ Min. VIAD spacing < ^VIAD_S_1
  EXT VIADR < VIAD_S_1 ABUT < 90 SINGULAR REGION
}
VIAD.E.1 { @ Min. extension of a M5 region beyond a VIAD region < 0.01
  ENC VIADR M5 < 0.01 ABUT < 90 SINGULAR REGION
  VIADR NOT M5    
}
VIAD.E.2 { @ Min. extension of a M5 end-of-line region beyond VIAD region < 0.06
  X = ENC [VIADR] M5 < 0.06 ABUT < 90 OPPOSITE	// a narrow side
  INT X < 0.36 ABUT == 90 INTERSECTING ONLY	// adjacent narrow sides
}
#IFDEF Recommend
VIAD.E.3 { @ Min. extension of M5 beyond the overlap area that VIAD and VIA4 are fully or partially touching < ^VIAD_E_3
  X = VIADR AND VIA4R
  ENC X M5 < VIAD_E_3 ABUT < 90 SINGULAR REGION	
}
#ENDIF

#ENDIF
#ENDIF

#ENDIF
#ENDIF










#IFNDEF THICK_40K
#IFNDEF THICK_30K
#IFNDEF THICK_15K




// M5 checks
//=============
M5.W.1 { @ Min. M5 width < 0.44
  INT M5 < 0.44 ABUT < 90 SINGULAR REGION
}
M5.S.1 { @ Min. M5 space < 0.46
  EXT M5 < 0.46 ABUT < 90 SINGULAR REGION
}
M5.S.2 { @ Min. space to wide M5 (>10um) < 0.6
  M5_S5 = SHRINK (SHRINK (SHRINK (SHRINK M5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M5_G5 = GROW (GROW (GROW (GROW M5_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M5_Wide = M5_G5 AND M5
  M5_Exp = SIZE M5_Wide BY 1 INSIDE OF M5 STEP 0.322
  M5_Branch = M5_Exp NOT M5_Wide
  M5_Branch_edge = M5_Branch COIN INSIDE EDGE M5
  M5_Check = M5 AND (SIZE M5_Exp BY 0.6)
  M5_Branch_Check = M5 AND (EXPAND EDGE M5_Branch_edge OUTSIDE BY 0.6 CORNER FILL)
  M5_WideC = STAMP M5_Wide BY M5xd
  M5_CheckC = STAMP M5_Check BY M5xd
  M5_BranchC = STAMP M5_Branch BY M5xd
  M5_Branch_CheckC = STAMP M5_Branch_Check BY M5xd
  EXT M5_WideC M5_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M5_BranchC M5_Branch_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
}
M5.S.2.1.a { @ Min. space betweem wide metal and small piece of metal with parallel run length >= ^M5_S_2_L and same connection >=^M5_S_2_1 um
  M5_S5 = SHRINK (SHRINK (SHRINK (SHRINK M5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M5_G5 = GROW (GROW (GROW (GROW M5_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M5_Wide = M5_G5 AND M5
  M5_Small = M5 NOT M5_Wide
  M5_WideC = STAMP M5_Wide BY M5xd
  M5_SmallC = STAMP M5_Small BY M5xd
  M5_S_REG = EXT M5_WideC M5_SmallC < M5_S_2_1 CONNECTED OPPOSITE REGION MEASURE ALL
  M5_S_REG_CHECK = ENCLOSE RECTANGLE M5_S_REG GRID M5_S_2_L 
  WideEdge1 = M5_S_REG_CHECK COIN OUTSIDE EDGE M5_Wide
  M5_Small_Edge = M5_Small COIN INSIDE EDGE M5
  WideEdge2 = M5_S_REG_CHECK COIN OUTSIDE EDGE M5_Small_Edge
  PATH LENGTH WideEdge1 >= M5_S_2_L
  PATH LENGTH WideEdge2 >= M5_S_2_L
}
M5.S.2.1.b { @ Min. space between two wide metals with parallel run length >= ^M5_S_2_L and same connection >=^M5_S_2_2 um
  M5_S5 = SHRINK (SHRINK (SHRINK (SHRINK M5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M5_G5 = GROW (GROW (GROW (GROW M5_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M5_Wide = M5_G5 AND M5
  M5_WideC = STAMP M5_Wide BY M5xd
  M5_S_REG = EXT M5_WideC < M5_S_2_2 CONNECTED OPPOSITE REGION
  M5_S_REG_CHECK = ENCLOSE RECTANGLE M5_S_REG GRID M5_S_2_L
  WideEdge = M5_S_REG_CHECK COIN OUTSIDE EDGE M5_Wide
  PATH LENGTH WideEdge >= M5_S_2_L
}

M5.E.1 { @ Min. extension of a M5 region beyond a VIA4 region < 0.09
   ENC VIA4 M5 < 0.09 ABUT<90 SINGULAR 
   VIA4 NOT M5    
}
M5.A.1 { @ Min. M5 area region < 0.562
  AREA M5 < 0.562
}



#IFDEF CHECK_ALRDL


// MD checks
//=============
MD.W.1 { @ Min. MD width < 0.44
  INT MD < 0.44 ABUT < 90 SINGULAR REGION
}
MD.S.1 { @ Min. MD space < 0.46
  EXT MD < 0.46 ABUT < 90 SINGULAR REGION
}
MD.S.2 { @ Min. space to wide MD (>10um) < 0.6
  MD_S5 = SHRINK (SHRINK (SHRINK (SHRINK MD RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  MD_G5 = GROW (GROW (GROW (GROW MD_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  MD_Wide = MD_G5 AND MD
  MD_Exp = SIZE MD_Wide BY 1 INSIDE OF MD STEP 0.322
  MD_Branch = MD_Exp NOT MD_Wide
  MD_Branch_edge = MD_Branch COIN INSIDE EDGE MD
  MD_Check = MD AND (SIZE MD_Exp BY 0.6)
  MD_Branch_Check = MD AND (EXPAND EDGE MD_Branch_edge OUTSIDE BY 0.6 CORNER FILL)
  MD_WideC = STAMP MD_Wide BY MDxd
  MD_CheckC = STAMP MD_Check BY MDxd
  MD_BranchC = STAMP MD_Branch BY MDxd
  MD_Branch_CheckC = STAMP MD_Branch_Check BY MDxd
  EXT MD_WideC MD_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT MD_BranchC MD_Branch_CheckC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
}
MD.S.2.1.a { @ Min. space betweem wide metal and small piece of metal with parallel run length >= ^MD_S_2_L and same connection >=^MD_S_2_1 um
  MD_S5 = SHRINK (SHRINK (SHRINK (SHRINK MD RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  MD_G5 = GROW (GROW (GROW (GROW MD_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  MD_Wide = MD_G5 AND MD
  MD_Small = MD NOT MD_Wide
  MD_WideC = STAMP MD_Wide BY MDxd
  MD_SmallC = STAMP MD_Small BY MDxd
  MD_S_REG = EXT MD_WideC MD_SmallC < MD_S_2_1 CONNECTED OPPOSITE REGION MEASURE ALL
  MD_S_REG_CHECK = ENCLOSE RECTANGLE MD_S_REG GRID MD_S_2_L 
  WideEdge1 = MD_S_REG_CHECK COIN OUTSIDE EDGE MD_Wide
  MD_Small_Edge = MD_Small COIN INSIDE EDGE MD
  WideEdge2 = MD_S_REG_CHECK COIN OUTSIDE EDGE MD_Small_Edge
  PATH LENGTH WideEdge1 >= MD_S_2_L
  PATH LENGTH WideEdge2 >= MD_S_2_L
}
MD.S.2.1.b { @ Min. space between two wide metals with parallel run length >= ^MD_S_2_L and same connection >=^MD_S_2_2 um
  MD_S5 = SHRINK (SHRINK (SHRINK (SHRINK MD RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  MD_G5 = GROW (GROW (GROW (GROW MD_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  MD_Wide = MD_G5 AND MD
  MD_WideC = STAMP MD_Wide BY MDxd
  MD_S_REG = EXT MD_WideC < MD_S_2_2 CONNECTED OPPOSITE REGION
  MD_S_REG_CHECK = ENCLOSE RECTANGLE MD_S_REG GRID MD_S_2_L
  WideEdge = MD_S_REG_CHECK COIN OUTSIDE EDGE MD_Wide
  PATH LENGTH WideEdge >= MD_S_2_L
}

MD.E.1 { @ Min. extension of a MD region beyond a VIAD region < 0.09
   ENC VIAD MD < 0.09 ABUT<90 SINGULAR 
   VIAD NOT MD    
}
MD.A.1 { @ Min. MD area region < 0.562
  AREA MD < 0.562
}
#ENDIF
#ENDIF
#ENDIF
#ENDIF








// MOM CHECKS
//===========
CHIP_MOM = COPY CHIPx 

MOM_M1 = MOMDMY_1 AND M1
MOM_M1_EDGE = M1 COIN INSIDE EDGE MOM_M1
MOM_M1_LINE_END = CONVEX EDGE MOM_M1_EDGE ANGLE1 == 90 ANGLE2 == 90
MOM_M1_SIDE_EDGE = MOM_M1_EDGE NOT COIN INSIDE EDGE MOM_M1_LINE_END
MOM_M1_SIDE_EDGE_FULL = M1i TOUCH INSIDE EDGE MOM_M1_SIDE_EDGE
MOM_M1_SPACE_pre = EXPAND EDGE (MOMDMY_1 NOT TOUCH OUTSIDE EDGE M1) OUTSIDE BY GRID CORNER FILL
MOM_M1_SPACE = (MOMDMY_1 OR MOM_M1_SPACE_pre) NOT M1
MOM_M1_SPACE_90_90 = CONVEX EDGE MOM_M1_SPACE ANGLE1 == 90 ANGLE2 == 90
MOM_M1_SPACE_90_90_1 = CONVEX EDGE MOM_M1_SPACE_90_90 ANGLE1 == 90 ANGLE2 == 90
MOM_M1_SPACE_90_90_2 = CONVEX EDGE MOM_M1_SPACE_90_90 ANGLE1 == 90 ANGLE2 == 0
LAST_M1_METAL_EDGE_pre = MOM_M1_SIDE_EDGE COIN INSIDE EDGE (MOM_M1_SIDE_EDGE_FULL TOUCH INSIDE EDGE (ENC [MOM_M1_SIDE_EDGE_FULL] MOM_M1_SPACE_90_90_2 < GRID ABUT == 90 INTERSECTING ONLY))
LAST_M1_METAL_EDGE = LAST_M1_METAL_EDGE_pre INSIDE EDGE (EXTENTS (EXPAND EDGE (MOM_M1_SPACE_90_90_1 OR EDGE MOM_M1_SPACE_90_90_2) INSIDE BY GRID))
MOM_M1_SPACE_90_90_3 = MOM_M1_SPACE_90_90 NOT COIN EDGE MOM_M1_SPACE_90_90_1
MOM_M1_SPACE_90_270 = CONVEX EDGE MOM_M1_SPACE ANGLE1 == 90 ANGLE2 == 270
MOM_M1_METAL = MOM_M1_SIDE_EDGE INSIDE EDGE (EXTENTS (EXPAND EDGE (MOM_M1_SPACE_90_90_3 OR EDGE MOM_M1_SPACE_90_270) INSIDE BY GRID))
MOM_M1_CAP_EDGE = MOM_M1_METAL NOT COIN EDGE LAST_M1_METAL_EDGE


MOM_M2 = MOMDMY_2 AND M2
MOM_M2_EDGE = M2 COIN INSIDE EDGE MOM_M2
MOM_M2_LINE_END = CONVEX EDGE MOM_M2_EDGE ANGLE1 == 90 ANGLE2 == 90
MOM_M2_SIDE_EDGE = MOM_M2_EDGE NOT COIN INSIDE EDGE MOM_M2_LINE_END
MOM_M2_SIDE_EDGE_FULL = M2i TOUCH INSIDE EDGE MOM_M2_SIDE_EDGE
MOM_M2_SPACE_pre = EXPAND EDGE (MOMDMY_2 NOT TOUCH OUTSIDE EDGE M2) OUTSIDE BY GRID CORNER FILL
MOM_M2_SPACE = (MOMDMY_2 OR MOM_M2_SPACE_pre) NOT M2
MOM_M2_SPACE_90_90 = CONVEX EDGE MOM_M2_SPACE ANGLE1 == 90 ANGLE2 == 90
MOM_M2_SPACE_90_90_1 = CONVEX EDGE MOM_M2_SPACE_90_90 ANGLE1 == 90 ANGLE2 == 90
MOM_M2_SPACE_90_90_2 = CONVEX EDGE MOM_M2_SPACE_90_90 ANGLE1 == 90 ANGLE2 == 0
LAST_M2_METAL_EDGE_pre = MOM_M2_SIDE_EDGE COIN INSIDE EDGE (MOM_M2_SIDE_EDGE_FULL TOUCH INSIDE EDGE (ENC [MOM_M2_SIDE_EDGE_FULL] MOM_M2_SPACE_90_90_2 < GRID ABUT == 90 INTERSECTING ONLY))
LAST_M2_METAL_EDGE = LAST_M2_METAL_EDGE_pre INSIDE EDGE (EXTENTS (EXPAND EDGE (MOM_M2_SPACE_90_90_1 OR EDGE MOM_M2_SPACE_90_90_2) INSIDE BY GRID))
MOM_M2_SPACE_90_90_3 = MOM_M2_SPACE_90_90 NOT COIN EDGE MOM_M2_SPACE_90_90_1
MOM_M2_SPACE_90_270 = CONVEX EDGE MOM_M2_SPACE ANGLE1 == 90 ANGLE2 == 270
MOM_M2_METAL = MOM_M2_SIDE_EDGE INSIDE EDGE (EXTENTS (EXPAND EDGE (MOM_M2_SPACE_90_90_3 OR EDGE MOM_M2_SPACE_90_270) INSIDE BY GRID))
MOM_M2_CAP_EDGE = MOM_M2_METAL NOT COIN EDGE LAST_M2_METAL_EDGE


MOM_M3 = MOMDMY_3 AND M3
MOM_M3_EDGE = M3 COIN INSIDE EDGE MOM_M3
MOM_M3_LINE_END = CONVEX EDGE MOM_M3_EDGE ANGLE1 == 90 ANGLE2 == 90
MOM_M3_SIDE_EDGE = MOM_M3_EDGE NOT COIN INSIDE EDGE MOM_M3_LINE_END
MOM_M3_SIDE_EDGE_FULL = M3i TOUCH INSIDE EDGE MOM_M3_SIDE_EDGE
MOM_M3_SPACE_pre = EXPAND EDGE (MOMDMY_3 NOT TOUCH OUTSIDE EDGE M3) OUTSIDE BY GRID CORNER FILL
MOM_M3_SPACE = (MOMDMY_3 OR MOM_M3_SPACE_pre) NOT M3
MOM_M3_SPACE_90_90 = CONVEX EDGE MOM_M3_SPACE ANGLE1 == 90 ANGLE2 == 90
MOM_M3_SPACE_90_90_1 = CONVEX EDGE MOM_M3_SPACE_90_90 ANGLE1 == 90 ANGLE2 == 90
MOM_M3_SPACE_90_90_2 = CONVEX EDGE MOM_M3_SPACE_90_90 ANGLE1 == 90 ANGLE2 == 0
LAST_M3_METAL_EDGE_pre = MOM_M3_SIDE_EDGE COIN INSIDE EDGE (MOM_M3_SIDE_EDGE_FULL TOUCH INSIDE EDGE (ENC [MOM_M3_SIDE_EDGE_FULL] MOM_M3_SPACE_90_90_2 < GRID ABUT == 90 INTERSECTING ONLY))
LAST_M3_METAL_EDGE = LAST_M3_METAL_EDGE_pre INSIDE EDGE (EXTENTS (EXPAND EDGE (MOM_M3_SPACE_90_90_1 OR EDGE MOM_M3_SPACE_90_90_2) INSIDE BY GRID))
MOM_M3_SPACE_90_90_3 = MOM_M3_SPACE_90_90 NOT COIN EDGE MOM_M3_SPACE_90_90_1
MOM_M3_SPACE_90_270 = CONVEX EDGE MOM_M3_SPACE ANGLE1 == 90 ANGLE2 == 270
MOM_M3_METAL = MOM_M3_SIDE_EDGE INSIDE EDGE (EXTENTS (EXPAND EDGE (MOM_M3_SPACE_90_90_3 OR EDGE MOM_M3_SPACE_90_270) INSIDE BY GRID))
MOM_M3_CAP_EDGE = MOM_M3_METAL NOT COIN EDGE LAST_M3_METAL_EDGE


MOM_M4 = MOMDMY_4 AND M4
MOM_M4_EDGE = M4 COIN INSIDE EDGE MOM_M4
MOM_M4_LINE_END = CONVEX EDGE MOM_M4_EDGE ANGLE1 == 90 ANGLE2 == 90
MOM_M4_SIDE_EDGE = MOM_M4_EDGE NOT COIN INSIDE EDGE MOM_M4_LINE_END
MOM_M4_SIDE_EDGE_FULL = M4i TOUCH INSIDE EDGE MOM_M4_SIDE_EDGE
MOM_M4_SPACE_pre = EXPAND EDGE (MOMDMY_4 NOT TOUCH OUTSIDE EDGE M4) OUTSIDE BY GRID CORNER FILL
MOM_M4_SPACE = (MOMDMY_4 OR MOM_M4_SPACE_pre) NOT M4
MOM_M4_SPACE_90_90 = CONVEX EDGE MOM_M4_SPACE ANGLE1 == 90 ANGLE2 == 90
MOM_M4_SPACE_90_90_1 = CONVEX EDGE MOM_M4_SPACE_90_90 ANGLE1 == 90 ANGLE2 == 90
MOM_M4_SPACE_90_90_2 = CONVEX EDGE MOM_M4_SPACE_90_90 ANGLE1 == 90 ANGLE2 == 0
LAST_M4_METAL_EDGE_pre = MOM_M4_SIDE_EDGE COIN INSIDE EDGE (MOM_M4_SIDE_EDGE_FULL TOUCH INSIDE EDGE (ENC [MOM_M4_SIDE_EDGE_FULL] MOM_M4_SPACE_90_90_2 < GRID ABUT == 90 INTERSECTING ONLY))
LAST_M4_METAL_EDGE = LAST_M4_METAL_EDGE_pre INSIDE EDGE (EXTENTS (EXPAND EDGE (MOM_M4_SPACE_90_90_1 OR EDGE MOM_M4_SPACE_90_90_2) INSIDE BY GRID))
MOM_M4_SPACE_90_90_3 = MOM_M4_SPACE_90_90 NOT COIN EDGE MOM_M4_SPACE_90_90_1
MOM_M4_SPACE_90_270 = CONVEX EDGE MOM_M4_SPACE ANGLE1 == 90 ANGLE2 == 270
MOM_M4_METAL = MOM_M4_SIDE_EDGE INSIDE EDGE (EXTENTS (EXPAND EDGE (MOM_M4_SPACE_90_90_3 OR EDGE MOM_M4_SPACE_90_270) INSIDE BY GRID))
MOM_M4_CAP_EDGE = MOM_M4_METAL NOT COIN EDGE LAST_M4_METAL_EDGE


MOM_M5 = MOMDMY_5 AND M5
MOM_M5_EDGE = M5 COIN INSIDE EDGE MOM_M5
MOM_M5_LINE_END = CONVEX EDGE MOM_M5_EDGE ANGLE1 == 90 ANGLE2 == 90
MOM_M5_SIDE_EDGE = MOM_M5_EDGE NOT COIN INSIDE EDGE MOM_M5_LINE_END
MOM_M5_SIDE_EDGE_FULL = M5i TOUCH INSIDE EDGE MOM_M5_SIDE_EDGE
MOM_M5_SPACE_pre = EXPAND EDGE (MOMDMY_5 NOT TOUCH OUTSIDE EDGE M5) OUTSIDE BY GRID CORNER FILL
MOM_M5_SPACE = (MOMDMY_5 OR MOM_M5_SPACE_pre) NOT M5
MOM_M5_SPACE_90_90 = CONVEX EDGE MOM_M5_SPACE ANGLE1 == 90 ANGLE2 == 90
MOM_M5_SPACE_90_90_1 = CONVEX EDGE MOM_M5_SPACE_90_90 ANGLE1 == 90 ANGLE2 == 90
MOM_M5_SPACE_90_90_2 = CONVEX EDGE MOM_M5_SPACE_90_90 ANGLE1 == 90 ANGLE2 == 0
LAST_M5_METAL_EDGE_pre = MOM_M5_SIDE_EDGE COIN INSIDE EDGE (MOM_M5_SIDE_EDGE_FULL TOUCH INSIDE EDGE (ENC [MOM_M5_SIDE_EDGE_FULL] MOM_M5_SPACE_90_90_2 < GRID ABUT == 90 INTERSECTING ONLY))
LAST_M5_METAL_EDGE = LAST_M5_METAL_EDGE_pre INSIDE EDGE (EXTENTS (EXPAND EDGE (MOM_M5_SPACE_90_90_1 OR EDGE MOM_M5_SPACE_90_90_2) INSIDE BY GRID))
MOM_M5_SPACE_90_90_3 = MOM_M5_SPACE_90_90 NOT COIN EDGE MOM_M5_SPACE_90_90_1
MOM_M5_SPACE_90_270 = CONVEX EDGE MOM_M5_SPACE ANGLE1 == 90 ANGLE2 == 270
MOM_M5_METAL = MOM_M5_SIDE_EDGE INSIDE EDGE (EXTENTS (EXPAND EDGE (MOM_M5_SPACE_90_90_3 OR EDGE MOM_M5_SPACE_90_270) INSIDE BY GRID))
MOM_M5_CAP_EDGE = MOM_M5_METAL NOT COIN EDGE LAST_M5_METAL_EDGE


MOM.A.1 { @ Maximum sidewall area of total metals in MOM without Via <= ^MOM_A_1
     MOM_SA = DFM PROPERTY CHIP_MOM  MOM_M1_CAP_EDGE  MOM_M2_CAP_EDGE  MOM_M3_CAP_EDGE  MOM_M4_CAP_EDGE  MOM_M5_CAP_EDGE  OVERLAP
   [
 	Sidewall_Area = (  LENGTH(MOM_M1_CAP_EDGE)*M1_THICKNESS+  LENGTH(MOM_M2_CAP_EDGE)*M2_THICKNESS+  LENGTH(MOM_M3_CAP_EDGE)*M3_THICKNESS+  LENGTH(MOM_M4_CAP_EDGE)*M4_THICKNESS+  LENGTH(MOM_M5_CAP_EDGE)*M5_THICKNESS)/2 
  ] > MOM_A_1
  MERGE MOM_SA
  DFM RDB MOM_SA MOM.A.1.a.rep NOEMPTY NOPSEUDO
}
MOM.S.2:M1 { @ Space of metal (M1/Mx) line end in MOMDMY_n >= ^MOM_S_2
  EXT MOM_M1_LINE_END M1 < MOM_S_2 ABUT < 90 REGION
}
// MOM.S.2 is checked by MOM.S.2:M1
MOM.S.2:M2 { @ Space of metal (M1/Mx) line end in MOMDMY_n >= ^MOM_S_2
  EXT MOM_M2_LINE_END M2 < MOM_S_2 ABUT < 90 REGION
}
// MOM.S.2 is checked by MOM.S.2:M2
MOM.S.2:M3 { @ Space of metal (M1/Mx) line end in MOMDMY_n >= ^MOM_S_2
  EXT MOM_M3_LINE_END M3 < MOM_S_2 ABUT < 90 REGION
}
// MOM.S.2 is checked by MOM.S.2:M3
MOM.S.2:M4 { @ Space of metal (M1/Mx) line end in MOMDMY_n >= ^MOM_S_2
  EXT MOM_M4_LINE_END M4 < MOM_S_2 ABUT < 90 REGION
}
// MOM.S.2 is checked by MOM.S.2:M4


MOM.R.1 { @ VIA in MOMDMY is not allowed.
  MOMDMY_1 AND VIA1
  MOMDMY_2 AND VIA1
  MOMDMY_2 AND VIA2
  MOMDMY_3 AND VIA2
  MOMDMY_3 AND VIA3
  MOMDMY_4 AND VIA3
  MOMDMY_4 AND VIA4
  MOMDMY_5 AND VIA4
}

#IFDEF FULL_CHIP
MOM.R.2 { @ Each MOM cell must be covered by MOMDMY_n (n=145;1~6/100). DRC only flags no MOMDMY_n (n=145;1~6/100) in the chip. But if there is no MOM cell in your chip, the violation can be waived.
  MERGE (CHIP NOT INTERACT MOMDMY_ALL)
}
#ENDIF
// connection building for MOM (All resistors, HVNW, HVPW and NBL are treat as broken, all LV nwell pwell are treat as connected, used to check MOM R rules)
//**************************************
// start connection building for _mom
//**************************************
EMPTY_mom = CHIP NOT (SIZE CHIP BY 20)
NWEL_mom   = (NWELi NOT (NWELi AND RWDMY)) NOT EMPTY_mom     //broke NW resistor
ILP1_mom   = (POLYi NOT RPO_RPDMY) NOT EMPTY_mom	           //broke poly resistor
NSD_mom  = (NSDc NOT RPO_RPDMY) NOT EMPTY_mom                //broke od resistor
PSD_mom  = (PSDc NOT RPO_RPDMY) NOT EMPTY_mom                //broke od resistor
NTAP_mom = NTAPc NOT EMPTY_mom
PTAP_mom =  PTAPc NOT EMPTY_mom
PWEL_mom = PWELi NOT EMPTY_mom

NWR_momT = NWRiT NOT EMPTY_mom
CO_mom   =  COi NOT EMPTY_mom
M1_mom = M1x NOT EMPTY_mom
VIA1_mom = VIA1i NOT EMPTY_mom
M2_mom = M2x NOT EMPTY_mom
VIA2_mom = VIA2i NOT EMPTY_mom
M3_mom = M3x NOT EMPTY_mom
VIA3_mom = VIA3i NOT EMPTY_mom
M4_mom = M4x NOT EMPTY_mom
VIA4_mom = VIA4i NOT EMPTY_mom
M5_mom = M5x NOT EMPTY_mom
VIAD_mom = VIADi NOT EMPTY_mom
MD_mom = MDx NOT EMPTY_mom



CTM1_mom = CTM1i NOT EMPTY_mom
VIA1k_mom = VIA1_mom NOT INTERACT CTM1_mom
CTM_VIA1_mom = VIA1_mom AND CTM1_mom
CTM2_mom = CTM2i NOT EMPTY_mom
VIA2k_mom = VIA2_mom NOT INTERACT CTM2_mom
CTM_VIA2_mom = VIA2_mom AND CTM2_mom
CTM3_mom = CTM3i NOT EMPTY_mom
VIA3k_mom = VIA3_mom NOT INTERACT CTM3_mom
CTM_VIA3_mom = VIA3_mom AND CTM3_mom
CTM4_mom = CTM4i NOT EMPTY_mom
VIA4k_mom = VIA4_mom NOT INTERACT CTM4_mom
CTM_VIA4_mom = VIA4_mom AND CTM4_mom
CB_mom =  CBi NOT EMPTY_mom
CBD_mom =  CBDi NOT EMPTY_mom
PPI_mom =  PPIi NOT EMPTY_mom
UBMn_mom =  UBMn NOT EMPTY_mom
UBMd_mom =  UBMd NOT EMPTY_mom

CONNECT	NTAP_mom NWEL_mom
CONNECT PTAP_mom PWEL_mom
CONNECT	NTAP_mom PSD_mom        //For butted pickup
CONNECT	PTAP_mom NSD_mom        //For butted pickup
CONNECT CO_mom PSD_mom          //For butted CO
CONNECT CO_mom NSD_mom          //For butted CO
CONNECT CO_mom ILP1_mom         //For butted CO
CONNECT	M1_mom ILP1_mom NTAP_mom PTAP_mom PSD_mom NSD_mom BY CO_mom
CONNECT M1_mom NWR_momT BY CO_mom      // for NW resistor terminal


CONNECT	M1_mom M2_mom BY VIA1k_mom
CONNECT CTM1_mom M2_mom BY CTM_VIA1_mom
CONNECT	M2_mom M3_mom BY VIA2k_mom
CONNECT CTM2_mom M3_mom BY CTM_VIA2_mom
CONNECT	M3_mom M4_mom BY VIA3k_mom
CONNECT CTM3_mom M4_mom BY CTM_VIA3_mom
CONNECT	M4_mom M5_mom BY VIA4k_mom
CONNECT CTM4_mom M5_mom BY CTM_VIA4_mom
CONNECT	M5_mom  MD_mom BY VIAD_mom
// Wire-Bond
CONNECT M5_mom CB_mom
// Flip-chip
// 1_Ground up
CONNECT M5_mom UBMn_mom BY CBD_mom       
// 2_RDL (before passivation)
CONNECT MD_mom UBMd_mom
// 3_PPI (After passivation)
CONNECT M5_mom PPI_mom BY CBD_mom
CONNECT PPI_mom UBMd_mom
// end connection building for _mom

MOM.R.3 { @ Poly shielding and underneath NW or PW must bias at same potential for reliability consideration. If poly shielding terminal could not be tied to the underneath NW or PW,
          @ customer should keep bias between poly terminal and underneath well within thin gate oxide (Without OD2) or thick gate oxide (With OD2) maximum applied voltage for reliability consideration.
          @ DRC only check following conditions:
          @ 1. {{PO INTERACT {OD OR DOD} NOT INSIDE OD2}} INTERACT {{MOMDMY(145;100) OR MOMDMY(145;0)} NOT {MOMDMY(145;27)} 
          @ [Poly shielding MOM with dummy OD underneath] and underneath NW or PW must bias at same potential through metal connection
          @ (All resistors, HVNW, HVPW and NBL are treat as broken, all nwell and pwell are treat as connected)
    MOM_OD = OD OR DOD      
    PO_MOM_mom = (ILP1_mom INTERACT (MOM_OD NOT INSIDE OD2)) INTERACT ((MOMDMY_100 OR MOMDMY_0) NOT MOMDMY_27) 
    NW_NOT_PO_mom = (NWEL_mom INTERACT PO_MOM_mom) NOT PO_MOM_mom
    PW_NOT_PO_mom = (PWEL_mom INTERACT PO_MOM_mom) NOT PO_MOM_mom
    EXT PO_MOM_mom NW_NOT_PO_mom < 0.001 ABUT == 0 NOT CONNECTED REGION
    EXT PO_MOM_mom PW_NOT_PO_mom < 0.001 ABUT == 0 NOT CONNECTED REGION
}



// LOGO CHECKS
//============

LOGO.S.1 { @ Min. LOGO space to NW, OD, PO, or Metals >= 3um
  LOGO_EXT = (SIZE LOGO BY 3) NOT LOGO      
  LOGO_EXT AND NWELi


  LOGO_EXT AND ALL_OD 
  LOGO_EXT AND ALL_PO
  LOGO_EXT AND (M1i OR M1DMY)
  LOGO_EXT AND (M2i OR M2DMY)
  LOGO_EXT AND (M3i OR M3DMY)
  LOGO_EXT AND (M4i OR M4DMY)
  LOGO_EXT AND (M5i OR M5DMY)
  LOGO_EXT AND (MDi OR MDDMY)
}

 

LOGO.S.2 { @ Min. LOGO space to NBL, SH_N, or HVDMY >= 3 um
  LOGO_EXT = SIZE LOGO BY 3 
  LOGO_EXT AND NBLi
  LOGO_EXT AND HVSHNi
  LOGO_EXT AND HVDMYi
}




LOGO.O.1 { @ LOGO overlap of CB, CBD, FW, PM, UBM, DOD, DPO, PPI or DMx is not allowed.
  LOGO AND CBi
  LOGO AND CBDi
  LOGO AND PPIi
  LOGO AND FWi
  LOGO AND PLMIDEi
  LOGO AND UBMi
  LOGO AND DOD
  LOGO AND DPO
  LOGO AND M1DMY
  LOGO AND M2DMY
  LOGO AND M3DMY
  LOGO AND M4DMY
  LOGO AND M5DMY
  LOGO AND MDDMY
}
LOGO.R.1 { @ A circuit in LOGO is not allowed.
  LOGO AND ALL_GATE
  LOGO AND PORES
  LOGO AND ODRES
  LOGO AND RNWEL
  LOGO AND HVBJT_DMY
  LOGO AND HVDIO_DMY
  LOGO AND BJTDUMMY
  LOGO AND DIODUMMY
  LOGO AND VARDMY

  LOGO AND CTM4i



}


// LOGO.R.2 has been check by other DRC rules
// LOGO.R.3 is checked by LOGO.S.1 & LOGO.S.2



#IFDEF FULL_CHIP
#IFDEF WITH_SEALRING

// Sealring Rulecheck
//=================================
SR.S.1 { @ Minimum width of Assembly isolation >= ^SR_S_1 um
	ASS_REGION AND COi
	ASS_REGION AND NBL 
	ASS_REGION AND NWELi
	ASS_REGION AND POLYi
	ASS_REGION AND DPO
	ASS_REGION AND ODi
	ASS_REGION AND DOD
	ASS_REGION AND VIA1i
	ASS_REGION AND VIA2i
	ASS_REGION AND VIA3i
	ASS_REGION AND VIA4i
	ASS_REGION AND M1i
	ASS_REGION AND M2i
	ASS_REGION AND M3i
	ASS_REGION AND M4i
	ASS_REGION AND M5i
	ASS_REGION AND VIADi
	ASS_REGION AND MDi
	ASS_REGION AND UBMi
	ASS_REGION AND CBDi
	ASS_REGION AND CBi
}

SR.R.1 { @ sealring layer (126;0) is a must if customer adds sealring by thenmselves.
	CHIPx NOT INTERACT SEALRING
}




SR.E.1 { @ Minimum extension of metal to CO/VIA in seal ring. >= ^SR_E_1 um
    ENC SR_CO M1 < SR_E_1 ABUT < 90 SINGULAR REGION
    SR_CO NOT M1
    ENC SR_VIA1 M1 < SR_E_1 ABUT < 90 SINGULAR REGION
    SR_VIA1 NOT M1 
    ENC SR_VIA1 M2 < SR_E_1 ABUT < 90 SINGULAR REGION
    SR_VIA1 NOT M2
    ENC SR_VIA2 M2 < SR_E_1 ABUT < 90 SINGULAR REGION
    SR_VIA2 NOT M2 
    ENC SR_VIA2 M3 < SR_E_1 ABUT < 90 SINGULAR REGION
    SR_VIA2 NOT M3
    ENC SR_VIA3 M3 < SR_E_1 ABUT < 90 SINGULAR REGION
    SR_VIA3 NOT M3 
    ENC SR_VIA3 M4 < SR_E_1 ABUT < 90 SINGULAR REGION
    SR_VIA3 NOT M4
    ENC SR_VIA4 M4 < SR_E_1 ABUT < 90 SINGULAR REGION
    SR_VIA4 NOT M4 
    ENC SR_VIA4 M5 < SR_E_1 ABUT < 90 SINGULAR REGION
    SR_VIA4 NOT M5
}

SR.E.2 { @ (OD interact sealring) enclosure of metal with the outer edge of sealring == ^SR_E_2 um
    SR_OD = OD INTERACT SEALRING
    SR_OD_HOLES = HOLES SR_OD
    SR_OD_FULL = SR_OD OR SR_OD_HOLES
    ENC SR_M1 SR_OD_FULL < SR_E_2 REGION
    ENC SR_M2 SR_OD_FULL < SR_E_2 REGION
    ENC SR_M3 SR_OD_FULL < SR_E_2 REGION
    ENC SR_M4 SR_OD_FULL < SR_E_2 REGION
    ENC SR_M5 SR_OD_FULL < SR_E_2 REGION
	SR_OD_FULL_SIZE = SIZE SR_OD_FULL BY -SR_E_2
	SR_OD_FULL_SIZE NOT COIN INSIDE EDGE SR_M1
	SR_OD_FULL_SIZE NOT COIN INSIDE EDGE SR_M2
	SR_OD_FULL_SIZE NOT COIN INSIDE EDGE SR_M3
	SR_OD_FULL_SIZE NOT COIN INSIDE EDGE SR_M4
	SR_OD_FULL_SIZE NOT COIN INSIDE EDGE SR_M5
}



SR.R.2 { @ It's not allowed that odd VIA bar(VIA1,3,5) overlap even VIA bar(VIA2,4)
	SR_VIA1 AND SR_VIA2
	SR_VIA2 AND SR_VIA3
	SR_VIA3 AND SR_VIA4
}
SR.R.4 { @ WLCSP are not allowed. UBM CU_PPI PM1 PM2 inside sealring not allowed
    UBMi AND SEALRING_ALL
    CU_PPIi AND SEALRING_ALL
    PM1 AND SEALRING_ALL
    PM2 AND SEALRING_ALL
}


SR.R.5 { @ NBL inside seal-ring region is not allowed
    NBL AND SEALRING_ALL
}

CO.W.2 { @ Minimum and maximum width of CO bar. CO bar is only allowed in seal ring. == ^CO_W_2 um
    INT SR_CO < CO_W_2 SINGULAR REGION
    SR_CO WITH WIDTH > CO_W_2
}

VIA1.W.2 { @ Minimum and maximum width of VIAx bar. VIAx bar is only allowed in seal ring. == ^VIA1_W_2 um
    INT SR_VIA1 < VIA1_W_2 SINGULAR REGION
    SR_VIA1 WITH WIDTH > VIA1_W_2
}
VIA2.W.2 { @ Minimum and maximum width of VIAx bar. VIAx bar is only allowed in seal ring. == ^VIA2_W_2 um
    INT SR_VIA2 < VIA2_W_2 SINGULAR REGION
    SR_VIA2 WITH WIDTH > VIA2_W_2
}
VIA3.W.2 { @ Minimum and maximum width of VIAx bar. VIAx bar is only allowed in seal ring. == ^VIA3_W_2 um
    INT SR_VIA3 < VIA3_W_2 SINGULAR REGION
    SR_VIA3 WITH WIDTH > VIA3_W_2
}


VIAn.W.2 { @ Minimum and maximum width of VIAn bar. VIAn bar is only allowed in seal ring. == ^VIAn_W_2 um
    INT SR_VIA4 < VIAn_W_2 SINGULAR REGION
    SR_VIA4 WITH WIDTH > VIAn_W_2
}


#IFDEF Recommend

CB.W.3 { @ Mininum width of CB/CBD bar in seal ring region(butts the outer edge of seal ring) >= 2.0 um
	ALL_PAD = CB OR CBD
    C = SEALRING_ALL OR (HOLES SEALRING_ALL)
	X = ALL_PAD TOUCH (HOLES ALL_PAD)
    INT X < 2.0 ABUT < 90 SINGULAR REGION
    Y = ALL_PAD OR (HOLES ALL_PAD)
    Y XOR C
}
#ENDIF



#ENDIF

#ENDIF



RM.WARN.1 { @ CO OVERLAP {RWDMY AND NW} is not allowed
    CO AND (RWDMY AND NWEL)
}


RM.WARN.3 { @ CO OVERLAP {RMDUMMY1 AND M1} is not allowed
	CO AND (RMDUMMY1 AND M1)
}

RM.WARN.4:M1 { @ VIA1 OVERLAP {RMDUMMY1 AND M1} is not allowed.
    (RMDUMMY1 AND M1) AND VIA1
}

RM.WARN.4:M2 { @ {VIA2 OR VIA1} OVERLAP {RMDUMMY2 AND M2} is not allowed.
    (RMDUMMY2 AND M2) AND (VIA2 OR VIA1)
}

RM.WARN.4:M3 { @ {VIA3 OR VIA2} OVERLAP {RMDUMMY3 AND M3} is not allowed.
    (RMDUMMY3 AND M3) AND (VIA3 OR VIA2)
}

RM.WARN.4:M4 { @ {VIA4 OR VIA3} OVERLAP {RMDUMMY4 AND M4} is not allowed.
    (RMDUMMY4 AND M4) AND (VIA4 OR VIA3)
}

RM.WARN.4:M5 { @ VIA4 OVERLAP {RMDUMMY5 AND M5} is not allowed.
    (RMDUMMY5 AND M5) AND VIA4
}




// Dummy Pad
//==========

GROUP DUMMY_PAD_CHECK ADP.S.2g ADP.W.3g ADP.W.4g

DP_V1 = DPDMY AND VIA1
DP_V2 = DPDMY AND VIA2
DP_V3 = DPDMY AND VIA3
DP_V4 = DPDMY AND VIA4
DP_VD = DPDMY AND VIAD

ADP.R.0A { @ chip corner dummy pad structure should be M1/M2.../M5
  DPDMY NOT M1
  DPDMY NOT M2
  DPDMY NOT M3
  DPDMY NOT M4
  DPDMY NOT M5
}  

ADP.R.0B { @ chip corner dummy pad structure should be VIA1/VIA2.../VIA5
  DPDMY NOT ENCLOSE VIA1
  DPDMY NOT ENCLOSE VIA2
  DPDMY NOT ENCLOSE VIA3
  DPDMY NOT ENCLOSE VIA4
}

ADP.R.0C { @ Via structure in Dummy Pad
  GRP1 = DP_V2 OR DP_V4
  GRP2 = (DP_V1 OR DP_V3) OR DP_VD
  GRP1 AND GRP2
}
ADP.S.1_VIA1 { @ Via1 spacing (the same level) < 0.58um.
  EXT DP_V1 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.1_VIA2 { @ Via2 spacing (the same level) < 0.58um.
  EXT DP_V2 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.1_VIA3 { @ Via3 spacing (the same level) < 0.58um.
  EXT DP_V3 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.1_VIA4 { @ Via4 spacing (the same level) < 0.58um.
  EXT DP_V4 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.1_VIAD { @ ViaD spacing (the same level) < 0.58um.
  EXT DP_VD < 0.58 ABUT<90 SINGULAR REGION
}

ADP.C.1_V1_V2 { @ Vias spacing (different level) < 0.23um.
  EXT DP_V1 DP_V2 < 0.23 ABUT<90 SINGULAR REGION
}
ADP.C.1_V2_V3 { @ Vias spacing (different level) < 0.23um.
  EXT DP_V2 DP_V3 < 0.23 ABUT<90 SINGULAR REGION
}

ADP.C.2_V3_V4 { @ Via3 and Via4 spacing < 0.16um.
  EXT DP_V3 DP_V4 < 0.16 ABUT<90 SINGULAR REGION
}
ADP.C.2_V4_VD { @ Via4 and ViaD spacing < 0.16um.
  EXT DP_V4 DP_VD < 0.16 ABUT<90 SINGULAR REGION
}


ADP.E.1_V1_M1 { @ Metal1 enclose Via1 in dummy pad < 3um.
  ENC DP_V1 M1 < 3 ABUT<90 SINGULAR REGION
}
ADP.E.1_V1_M2 { @ Metal2 enclose Via1 in dummy pad < 3um.
  ENC DP_V1 M2 < 3 ABUT<90 SINGULAR REGION
}
ADP.E.1_V2_M2 { @ Metal2 enclose Via2 in dummy pad < 3um.
  ENC DP_V2 M2 < 3 ABUT<90 SINGULAR REGION
}
ADP.E.1_V2_M3 { @ Metal3 enclose Via2 in dummy pad < 3um.
  ENC DP_V2 M3 < 3 ABUT<90 SINGULAR REGION
}
ADP.E.1_V3_M3 { @ Metal3 enclose Via3 in dummy pad < 3um.
  ENC DP_V3 M3 < 3 ABUT<90 SINGULAR REGION
}
ADP.E.1_V3_M4 { @ Metal4 enclose Via3 in dummy pad < 3um.
  ENC DP_V3 M4 < 3 ABUT<90 SINGULAR REGION
}
ADP.E.1_V4_M4 { @ Metal4 enclose Via4 in dummy pad < 3um.
  ENC DP_V4 M4 < 3 ABUT<90 SINGULAR REGION
}
ADP.E.1_V4_M5 { @ Metal5 enclose Via4 in dummy pad < 3um.
  ENC DP_V4 M5 < 3 ABUT<90 SINGULAR REGION
}
ADP.E.1_VD_M5 { @ Meta5l enclose ViaD in dummy pad < 3um.
  ENC DP_VD M5 < 3 ABUT<90 SINGULAR REGION
}
ADP.E.1_VD_MD { @ MD enclose ViaD in dummy pad < 3um.
  ENC DP_VD MD < 3 ABUT<90 SINGULAR REGION
}

// ADP.W.1 is checked by VIAx.W.1 ( x= 1..3)
// ADP.W.2 is checked by VIA4.W.1

// Guideline

ADP.S.2g { @ dummy pad spacing < 2um.
  EXT DPDMY < 2 ABUT<90 SINGULAR REGION
}

ADP.W.3g { @ dummy pad width > 80um
  DPADG = INT DPDMY <= 80 REGION OPPOSITE ABUT>0<90
  DPDMY NOT DPADG
}

ADP.W.4g { @ dummy pad width < 40um
  INT DPDMY < 40  ABUT>0<90 SINGULAR REGION
}



// Power Line
//===========

PL_V1 = PLDMY AND VIA1
PL_V2 = PLDMY AND VIA2
PL_V3 = PLDMY AND VIA3
PL_V4 = PLDMY AND VIA4
PL_VD = PLDMY AND VIAD


ADP.R.0D { @ Via structure in Power Line
  GRP1 = PL_V2 OR PL_V4
  GRP2 = (PL_V1 OR PL_V3) OR PL_VD
  GRP1 AND GRP2
}

ADP.S.1_PL_V1 { @ Via1 spacing (the same level) < 0.58um.
  EXT PL_V1 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.1_PL_V2 { @ Via2 spacing (the same level) < 0.58um.
  EXT PL_V2 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.1_PL_V3 { @ Via3 spacing (the same level) < 0.58um.
  EXT PL_V3 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.1_PL_V4 { @ Via4 spacing (the same level) < 0.58um.
  EXT PL_V4 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.1_PL_VD { @ ViaD spacing (the same level) < 0.58um.
  EXT PL_VD < 0.58 ABUT<90 SINGULAR REGION
}


ADP.C.1_PL_V1_V2 { @ Vias spacing (different level) < 0.23um.
  EXT PL_V1 PL_V2 < 0.23 ABUT<90 SINGULAR REGION
}
ADP.C.1_PL_V2_V3 { @ Vias spacing (different level) < 0.23um.
  EXT PL_V2 PL_V3 < 0.23 ABUT<90 SINGULAR REGION
}
ADP.C.2_PL_V3_V4 { @ Via3 and Via4 spacing < 0.16um.
  EXT PL_V3 PL_V4 < 0.16 ABUT<90 SINGULAR REGION
}
ADP.C.2_PL_V4_VD { @ Via4 and ViaD spacing < 0.16um.
  EXT PL_V4 PL_VD < 0.16 ABUT<90 SINGULAR REGION
}


ADP.E.2_V1_M1 { @ Metal1 enclose Via1 in chip corner power line < 0.2um.
  ENC PL_V1 M1 < 0.2 ABUT<90 SINGULAR REGION
}
ADP.E.2_V1_M2 { @ Metal2 enclose Via1 in chip corner power line < 0.2um.
  ENC PL_V1 M2 < 0.2 ABUT<90 SINGULAR REGION
}
ADP.E.2_V2_M2 { @ Metal2 enclose Via2 in chip corner power line < 0.2um.
  ENC PL_V2 M2 < 0.2 ABUT<90 SINGULAR REGION
}
ADP.E.2_V2_M3 { @ Metal3 enclose Via2 in chip corner power line < 0.2um.
  ENC PL_V2 M3 < 0.2 ABUT<90 SINGULAR REGION
}
ADP.E.2_V3_M3 { @ Metal3 enclose Via3 in chip corner power line < 0.2um.
  ENC PL_V3 M3 < 0.2 ABUT<90 SINGULAR REGION
}
ADP.E.2_V3_M4 { @ Metal4 enclose Via3 in chip corner power line < 0.2um.
  ENC PL_V3 M4 < 0.2 ABUT<90 SINGULAR REGION
}
ADP.E.2_V4_M4 { @ Metal4 enclose Via4 in chip corner power line < 0.2um.
  ENC PL_V4 M4 < 0.2 ABUT<90 SINGULAR REGION
}
ADP.E.2_V4_M5 { @ Metal5 enclose Via4 in chip corner power line < 0.2um.
  ENC PL_V4 M5 < 0.2 ABUT<90 SINGULAR REGION
}
ADP.E.2_VD_M5 { @ Metal5 enclose ViaD in chip corner power line < 0.2um.
  ENC PL_VD M5 < 0.2 ABUT<90 SINGULAR REGION
}
ADP.E.2_VD_MD { @ MD enclose ViaD in chip corner power line < 0.2um.
  ENC PL_VD MD < 0.2 ABUT<90 SINGULAR REGION
}



//METAL SLOT CHECKS
//================
//Bonding pad ,chip corner dummy pad ,and inductor need not put slot
VARIABLE MHOLE 10

CB_NON_CUP = CBi NOT INTERACT WBDMY
SLT_EXD  = CB_NON_CUP OR DPDMY
SLT_EXDT = CBi OR DPDMY

PAD_EXD = UBMi NOT INTERACT (MDxd OR PPIi)

M1EXD = M1xd NOT SLT_EXD

//M1 SLOT CHECKS
//==============
M1InnerHole = HOLES M1EXD INNER

M1BigHole   = SIZE M1InnerHole BY -MHOLE/2

M1Hole      = M1InnerHole OUTSIDE M1BigHole 
M1HoleSpace = M1Hole NOT M1EXD
FIM1c       = M1EXD OR M1HoleSpace
LM1XA       = (SIZE (SIZE FIM1c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM1c
LM1X        = ENCLOSE RECTANGLE LM1XA 35.005 35.005
M1HoleD    = M1HoleSpace AND LM1X

AMS.1.M1 { @ Wide Metal (>35um) must have slot.
  A = (SIZE ( SIZE M1EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER TRUNCATE 17.5 ) AND M1EXD
  ENCLOSE RECTANGLE A 35.005 35.005
}


CONNECT M1HoleD LM1X
AMS.DN.M1 { @ Min. Hole density for metal lines that need to apply slot  1.5%
    NET AREA RATIO LM1X M1HoleD < 0.015
	[ AREA(M1HoleD) / AREA(LM1X) ] RDB M1Hole.density2 LM1X M1HoleD 
}
DISCONNECT

M2EXD = M2xd NOT SLT_EXD

//M2 SLOT CHECKS
//==============
M2InnerHole = HOLES M2EXD INNER


M2BigHole   = SIZE M2InnerHole BY -MHOLE/2

M2Hole      = M2InnerHole OUTSIDE M2BigHole 
M2HoleSpace = M2Hole NOT M2EXD
FIM2c       = M2EXD OR M2HoleSpace
LM2XA       = (SIZE (SIZE FIM2c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM2c
LM2X        = ENCLOSE RECTANGLE LM2XA 35.005 35.005
M2HoleD    = M2HoleSpace AND LM2X

AMS.1.M2 { @ Wide Metal (>35um) must have slot.
  A = (SIZE ( SIZE M2EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER TRUNCATE 17.5 ) AND M2EXD
  ENCLOSE RECTANGLE A 35.005 35.005
}


CONNECT M2HoleD LM2X
AMS.DN.M2 { @ Min. Hole density for metal lines that need to apply slot  1.5%
    NET AREA RATIO LM2X M2HoleD < 0.015
	[ AREA(M2HoleD) / AREA(LM2X) ] RDB M2Hole.density2 LM2X M2HoleD 
}
DISCONNECT

M3EXD = M3xd NOT SLT_EXD

//M3 SLOT CHECKS
//==============
M3InnerHole = HOLES M3EXD INNER

M3BigHole   = SIZE M3InnerHole BY -MHOLE/2

M3Hole      = M3InnerHole OUTSIDE M3BigHole 
M3HoleSpace = M3Hole NOT M3EXD
FIM3c       = M3EXD OR M3HoleSpace
LM3XA       = (SIZE (SIZE FIM3c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM3c
LM3X        = ENCLOSE RECTANGLE LM3XA 35.005 35.005
M3HoleD    = M3HoleSpace AND LM3X

AMS.1.M3 { @ Wide Metal (>35um) must have slot.
  A = (SIZE ( SIZE M3EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER TRUNCATE 17.5 ) AND M3EXD
  ENCLOSE RECTANGLE A 35.005 35.005
}


CONNECT M3HoleD LM3X
AMS.DN.M3 { @ Min. Hole density for metal lines that need to apply slot  1.5%
    NET AREA RATIO LM3X M3HoleD < 0.015
	[ AREA(M3HoleD) / AREA(LM3X) ] RDB M3Hole.density2 LM3X M3HoleD 
}
DISCONNECT

M4EXD = M4xd NOT SLT_EXDT
//M4 SLOT CHECKS
//==============
M4InnerHole = HOLES M4EXD INNER

M4BigHole   = SIZE M4InnerHole BY -MHOLE/2

M4Hole      = M4InnerHole OUTSIDE M4BigHole 
M4HoleSpace = M4Hole NOT M4EXD
FIM4c       = M4EXD OR M4HoleSpace
LM4XA       = (SIZE (SIZE FIM4c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM4c
LM4X        = ENCLOSE RECTANGLE LM4XA 35.005 35.005
M4HoleD    = M4HoleSpace AND LM4X

AMS.1.M4 { @ Wide Metal (>35um) must have slot.
  A = (SIZE ( SIZE M4EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER TRUNCATE 17.5 ) AND M4EXD
  ENCLOSE RECTANGLE A 35.005 35.005
}


CONNECT M4HoleD LM4X
AMS.DN.M4 { @ Min. Hole density for metal lines that need to apply slot  1.5%
    NET AREA RATIO LM4X M4HoleD < 0.015
	[ AREA(M4HoleD) / AREA(LM4X) ] RDB M4Hole.density2 LM4X M4HoleD 
}
DISCONNECT

PAD_EXD5 = SIZE PAD_EXD BY 2 INSIDE OF M5xd STEP 0.32 
M5EXD = M5xd NOT ( SLT_EXDT OR PAD_EXD5 )
//M5 SLOT CHECKS
//==============
M5InnerHole = HOLES M5EXD INNER

M5BigHole   = SIZE M5InnerHole BY -MHOLE/2

M5Hole      = M5InnerHole OUTSIDE M5BigHole 
M5HoleSpace = M5Hole NOT M5EXD
FIM5c       = M5EXD OR M5HoleSpace
LM5XA       = (SIZE (SIZE FIM5c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIM5c
LM5X        = ENCLOSE RECTANGLE LM5XA 35.005 35.005
M5HoleD    = M5HoleSpace AND LM5X

AMS.1.M5 { @ Wide Metal (>35um) must have slot.
  A = (SIZE ( SIZE M5EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER TRUNCATE 17.5 ) AND M5EXD
  ENCLOSE RECTANGLE A 35.005 35.005
}


CONNECT M5HoleD LM5X
AMS.DN.M5 { @ Min. Hole density for metal lines that need to apply slot  1.5%
    NET AREA RATIO LM5X M5HoleD < 0.015
	[ AREA(M5HoleD) / AREA(LM5X) ] RDB M5Hole.density2 LM5X M5HoleD 
}
DISCONNECT


//MD SLOT CHECKS
//==============
// Bonding pad, chip corner dummy pad, and inductor need not put slot

UBM_EXDD    = SIZE UBMi BY 2 INSIDE OF MDxd STEP 0.32 	// For RDL
MDEXD       = MDxd NOT ( DPDMY OR UBM_EXDD )
MDInnerHole = HOLES MDEXD INNER
MDBigHole   = SIZE MDInnerHole BY -5  	// Holes with width less than 10um will be filled back
MDHole      = MDInnerHole OUTSIDE MDBigHole	
MDHoleSpace = MDHole NOT MDEXD
FIMDc       = MDEXD OR MDHoleSpace
LMDXA       = (SIZE (SIZE FIMDc BY 1.0 UNDEROVER) BY 17.5 UNDEROVER TRUNCATE 17.5) AND FIMDc
LMDX        = ENCLOSE RECTANGLE LMDXA 35.005 35.005 
MDHoleD     = MDHoleSpace AND LMDX
AMS.1.MD { @ Wide Metal (>35um) must have slot
  A = (SIZE ( SIZE MDEXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER TRUNCATE 17.5) AND MDEXD
  ENCLOSE RECTANGLE A 35.005 35.005    
}

CONNECT MDHoleD LMDX
AMS.DN.MD { @ Min. Hole density for metal lines that need to apply slot  1.5%
  NET AREA RATIO LMDX MDHoleD < 0.015
    [ AREA(MDHoleD) / AREA(LMDX) ] RDB MDHole.density2 LMDX MDHoleD 
}
DISCONNECT






H18NW      = NWEL INSIDE H18NWDMY 
MTP_NW	   = NWEL INSIDE MTP_2T2C
NLVT_H18_1 = (HOLES NLVT INNER) OR NLVT
NLVT_H18_2 = NLVT_H18_1 INTERACT H18NWDMY
NLVT_H18   = NLVT INTERACT NLVT_H18_2 

// LDPO CHECKS
//=============

LDPO.C.1{ @ min and max clearance from PO to (NLVT INTERACT H18NWDMY) for IOLDNMOS(channel length) == ^LDPO_C_1
    A = POLY INTERACT IOLDNMOS_GATE
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = B INTERACT OD
    D = POLY TOUCH OUTSIDE EDGE C
    E = EXPAND EDGE D INSIDE BY LDPO_C_1
    E NOT TOUCH NLVT
}
LDPO.E.1{ @ MIN AND MAX extension of PO beyond channel OD in channel length direction for IOLDNMOS == ^LDPO_E_1
    A = POLY INTERACT IOLDNMOS_GATE
    B = EXPAND EDGE A OUTSIDE BY GRID
    C = B INTERACT IOLDNMOS_region
    D = POLY TOUCH OUTSIDE EDGE C
    E = EXPAND EDGE D INSIDE BY LDPO_E_1
    E NOT TOUCH IOLDNMOS_CH
}


// LDOD CHECKS
//=============

LDOD.S.1{ @ min and max space between channel OD and drain OD for IOLDNMOS == ^LDOD_S_1
    IOLDNMOS_region NOT TOUCH IOLDNMOS_D
}
LDOD.O.1{ @ min and max overlap of NW and channel OD for IOLDNMOS == ^LDOD_O_1
    IOLDNMOS_CH NOT INTERACT NWEL
    A = NWEL INSIDE EDGE IOLDNMOS_CH
    B = EXPAND EDGE A INSIDE BY LDOD_O_1
    B NOT TOUCH IOLDNMOS_region
}
LDOD.C.1{ @ min clearance from H18NW to P+OD(for PW pick up) >= ^LDOD_C_1
    EXT H18NW PTAP < LDOD_C_1  ABUT < 90 SINGULAR REGION
} 
LDOD.E.1{ @ min and max extension of H18NW beyond drain OD for IOLDNMOS 
          @ except NW edge interact PO == ^LDOD_E_1
    A = EXPAND EDGE IOLDNMOS_D OUTSIDE BY GRID EXTEND BY -GRID
    B = A NOT INTERACT IOLDNMOS_region
    C = IOLDNMOS_D TOUCH OUTSIDE EDGE B
    D = EXPAND EDGE C OUTSIDE BY LDOD_E_1 EXTEND BY -GRID
    E = EXPAND EDGE H18NW OUTSIDE BY GRID 
    D NOT TOUCH E 
}
LDOD.W.1{@ min width of OD in channel width direction for IOLDNMOS >= ^LDOD_W_1 
    A = EXPAND EDGE IOLDNMOS_CH OUTSIDE BY GRID
    B = A INSIDE POLY
    C = IOLDNMOS_CH TOUCH OUTSIDE EDGE B
    PATH LENGTH C < LDOD_W_1
}
LDOD.R.1{ @ OD must be fully inside OD2 for IOLDNMOS and IO cascode
    A = OD INTERACT H18NWDMY
    A NOT OD2
}


// LDNLVT CHECKS
//=============

LDNLVT.C.1{ @ min and max clearance from NLVT ring to H18NW == ^LDNLVT_C_1
    A = NLVT INTERACT H18NWDMY
    B = HOLES A
    B XOR H18NW
}
LDNLVT.E.1{ @ min and max extension of NLVT beyond H18NWDMY == ^LDNLVT_E_1
    A = (HOLES NLVT_H18) OR NLVT_H18
    B = SIZE H18NWDMY BY LDNLVT_E_1
    A XOR B
}
LDNLVT.R.2{ @ NLVT is not allowed to interact more than one H18NW
    A = NWEL INSIDE H18NWDMY
    NLVT INTERACT A > 1  
}
LDNLVT.S.1{ @ min space between two(NLVT INTERACT H18NWDMY) region >= ^LDNLVT_S_1
    EXT NLVT_H18 < LDNLVT_S_1 ABUT <90 SINGULAR REGION
}

LDNLVT.R.1 {@ NLVT NOT INSIDE MTP_2T2C is not allowed
    NLVT NOT INSIDE MTP_2T2C
}

// H18NWDMY CHECKS
//=============

H18NWDMY.E.1{ @min and max extension of H18NWDMY beyond NW == ^H18NWDMY_E_1
    A = NWEL INTERACT H18NWDMY
    B = H18NWDMY INTERACT NWEL
    A XOR B
}
H18NWDMY.R.1{ @ H18NW must be fully inside OD2
    H18NW NOT OD2 
}
H18NWDMY.R.2{ @OD cut H18NWDMY is not allowed (butted is not allowed, except IOLDNMOS channel OD)
    A = OD NOT INTERACT IOLDNMOS_CH
    A CUT H18NWDMY
    OD TOUCH H18NWDMY
    OD COIN INSIDE EDGE H18NWDMY
}
H18NWDMY.R.3{ @ H18NW must be surrounded by NLVT ring.NW must be butted with{NLVT INTERACT H18NWDMY}edge
    A =  NWEL INSIDE H18NWDMY
    B =  HOLES NLVT INNER
    A NOT INTERACT B
    C = B INTERACT A
    C XOR A
}
H18NWDMY.R.4{ @ H18NWDMY layer must be inside MTP 2T2C(butted is not allowed)
    H18NWDMY NOT MTP_2T2C
    H18NWDMY TOUCH INSIDE EDGE MTP_2T2C
}
H18NWDMY.R.5 {@ H18NWDMY layer (GDS CAD layer 122;4) interact NBL is not allowed
    H18NWDMY INTERACT NBL
}


H18NWDMY.S.1{ @min space between H18NW and NW in MTP 2T2C region >= ^H18NWDMY_S_1
    EXT H18NW MTP_NW < H18NWDMY_S_1 ABUT <90 SINGULAR REGION
}
H18NWDMY.S.2{ @min space between H18NW and (NW outside MTP 2T2C region) >= ^H18NWDMY_S_2
    A = NWEL OUTSIDE MTP_2T2C
    EXT H18NW A < H18NWDMY_S_2 ABUT <90 SINGULAR REGION 
}
H18NWDMY.S.3{ @min space between two H18NW  >= ^H18NWDMY_S_3
    EXT H18NW < H18NWDMY_S_3 ABUT <90 SINGULAR REGION
}
H18NWDMY.C.1{ @min clearance from (NW inside MTP 2T2C region) to HVNW >= ^H18NWDMY_C_1
    EXT MTP_NW HVNW < H18NWDMY_C_1 ABUT <90 SINGULAR REGION
}

// MTP 2T2C CHECKS
//=============
MTP.C.1{ @ min clearance from NW to P+OD(PW pick up) inside MTP 2T2C region >= ^MTP_C_1
    A = PTAP INSIDE MTP_2T2C
    EXT A MTP_NW < MTP_C_1 ABUT <90 SINGULAR REGION 
}
DRM.R.1 {@ DRM.R.1 is a warining message to remind the users not to lack the related DRMs. Please refer to DRM.R.1 in the DRM for the detail.
COPY CHIP
}

//VARDMY CHECKS
//=============
VAR_GATE = GATE NOT OUTSIDE VARDMY
VARDMY.W.1 { @ Min width of {GATE AND VARDMY} region >= ^VARDMY_W_1 um
  INT VAR_GATE < VARDMY_W_1 ABUT < 90 REGION
}

VARDMY.S.1 { @ Min space between two VARDMY  == ^VARDMY_S_1 um
  EXT VARDMY < VARDMY_S_1 ABUT < 90 SINGULAR REGION
}

VARDMY.S.2 { @ Min space to active OD >= ^VARDMY_S_2 um
  EXT VARDMY DACT < VARDMY_S_2 ABUT < 90 SINGULAR REGION
}

VARDMY.E.1 { @ Min extension of VARDMY beyond PO region in channel length direction >= ^VARDMY_E_1 um
  ENC GATE_W VARDMY < VARDMY_E_1 ABUT < 90 REGION
}

VARDMY.E.2 { @ Min extension beyond beyond OD region >= ^VARDMY_E_2 um
  ENC OD VARDMY < VARDMY_E_2 ABUT < 90 SINGULAR REGION
}

//VARDMY.R.1 is un-checkable rule .
VARDMY.R.4 { @ Overlap of NT_N,NLVT,PP,or RPO is not allowed .
  VARDMY AND NTN
  VARDMY AND NLVT
  VARDMY AND PP
  VARDMY AND RPO
}

// POLY CHECKS
//==============

PO.W.2_HRI { @ Min. width of PO region for HRI poly resistor >= ^PO_W_2_HRI um
  HREPC = HREP INTERACT RLPPDMY
  A = HREPC NOT INTERACT SERPDMY
  INT A < PO_W_2_HRI ABUT < 90 SINGULAR REGION    
}
_PO.R.1A.MM { @ 90 degree L shape and U shape bent gates are not allowed
  NORM_GATE_W = GATE_W OUTSIDE EDGE (((VARDMY OR HVBJT_C_H) OR PNP_PB_OD) OR DIO_ZENER_NBL_M)
  EXT NORM_GATE_W < 0.18 ABUT == 90 INTERSECTING ONLY
  INT NORM_GATE_W < 0.18 ABUT == 90 INTERSECTING ONLY
}

// PP CHECKS
//============

_PP.E.6.MM { @ Min. extension of a PP region beyond a PO as resistor >= 0.18um
  ENC PORES PP < 0.18 ABUT < 90 SINGULAR REGION
  ((((RPO AND POLY)NOT INTERACT HVGATE) NOT IMP) NOT HRI3D3KDMY) NOT HRI
}

// RPO CHECKS
//=============
RPO.O.1_HRI { @ Min. and Max. overlap of a PP region to RPO region for HRI == 0.3um
  X = POLY_ISO INTERACT HRI3D3KDMY
  Y = RPO INSIDE EDGE X
  INT PP Y < 0.3 ABUT < 90
  Y OUTSIDE EDGE PP	// not overlap by P+ not allowed.
  Z = EXPAND EDGE Y INSIDE BY 0.30
  PPPO = PP AND POLY
  A = PPPO AND PORES
  B = A INTERACT HRI3D3KDMY
  B NOT Z
}

// CTM CHECK
//============




TCTM3  = CTM3 INTERACT VIA3	// True CTM
BPM3  = SIZE TCTM3 BY 2 INSIDE OF M3 STEP 0.28*0.7 TRUNCATE 0.28*0.7 // CBM = TCTM SIZE 2
DCTM3  = CTM3 NOT INTERACT VIA3    // Dummy CTM
DPM3  = M3 INTERACT DCTM3    // M3 as a dummy CBM
BPM3C = BPM3 COIN EDGE M3
TCTM4  = CTM4 INTERACT VIA4	// True CTM
BPM4  = SIZE TCTM4 BY 2 INSIDE OF M4 STEP 0.28*0.7 TRUNCATE 0.28*0.7 // CBM = TCTM SIZE 2
DCTM4  = CTM4 NOT INTERACT VIA4    // Dummy CTM
DPM4  = M4 INTERACT DCTM4    // M4 as a dummy CBM
BPM4C = BPM4 COIN EDGE M4



CTM3.W.1 { @ Min. width of a CTM3 region >= ^CTM_W_1 um
  INT TCTM3 < CTM_W_1 ABUT < 90 SINGULAR REGION
} 
CTM3.W.2 { @ Min. width of a dummy CTM3 region >= ^CTM_W_2 um
  INT DCTM3 < CTM_W_2 ABUT < 90 SINGULAR REGION
}
CTM3.S.1 { @ Min. space between two CTM3 regions >= ^CTM_S_1 um
  EXT TCTM3 < CTM_S_1 ABUT < 90 SINGULAR REGION
}
CTM3.S.2 { @ Min. space between a dummy CTM3 and a CTM3 region or two dummy CTM regions >= ^CTM_S_2 um
  EXT DCTM3 TCTM3 < CTM_S_2 ABUT < 90 SINGULAR REGION
  EXT DCTM3 < CTM_S_2 ABUT < 90 SINGULAR REGION
}
CTM3.R.2 { @ Min. density of all CTM3 area >= 3%
  DENSITY CTM3i > 0 < 0.03 PRINT CTM3i.density
}
//CTM.R.3 is not necessary to check

CTM3.W.4 { @ Max. dimension (one side) of a CTM3 region <= ^CTM_W_4 um
  ENCLOSE RECTANGLE TCTM3 CTM_W_1 CTM_W_4+GRID ORTHOGONAL ONLY // 4um is min TCTM width
  ENCLOSE RECTANGLE DCTM3 CTM_W_2 CTM_W_4+GRID ORTHOGONAL ONLY // 0.4um is min DCTM width
}
CTM3.A.1 { @ Min. area of CTM3 region >= ^CTM_A_1 um2
  AREA CTM3 < CTM_A_1
}
CTM4.W.1 { @ Min. width of a CTM4 region >= ^CTM_W_1 um
  INT TCTM4 < CTM_W_1 ABUT < 90 SINGULAR REGION
} 
CTM4.W.2 { @ Min. width of a dummy CTM4 region >= ^CTM_W_2 um
  INT DCTM4 < CTM_W_2 ABUT < 90 SINGULAR REGION
}
CTM4.S.1 { @ Min. space between two CTM4 regions >= ^CTM_S_1 um
  EXT TCTM4 < CTM_S_1 ABUT < 90 SINGULAR REGION
}
CTM4.S.2 { @ Min. space between a dummy CTM4 and a CTM4 region or two dummy CTM regions >= ^CTM_S_2 um
  EXT DCTM4 TCTM4 < CTM_S_2 ABUT < 90 SINGULAR REGION
  EXT DCTM4 < CTM_S_2 ABUT < 90 SINGULAR REGION
}
CTM4.R.2 { @ Min. density of all CTM4 area >= 3%
  DENSITY CTM4i > 0 < 0.03 PRINT CTM4i.density
}
//CTM.R.3 is not necessary to check

CTM4.W.4 { @ Max. dimension (one side) of a CTM4 region <= ^CTM_W_4 um
  ENCLOSE RECTANGLE TCTM4 CTM_W_1 CTM_W_4+GRID ORTHOGONAL ONLY // 4um is min TCTM width
  ENCLOSE RECTANGLE DCTM4 CTM_W_2 CTM_W_4+GRID ORTHOGONAL ONLY // 0.4um is min DCTM width
}
CTM4.A.1 { @ Min. area of CTM4 region >= ^CTM_A_1 um2
  AREA CTM4 < CTM_A_1
}

//CTM.R.1 is checked by MIM_M4.E.3

CTM.R.5 { @ The MIM capacitor must be placed between M5 and M4 or between M4 and M3
  COPY CTM1
  COPY CTM2
  COPY CTM5
} 


//Build connection for CTM.R.6
//============================

BULK2	= SIZE CHIP BY 2.0
EMPTY2i = CHIP NOT BULK2

M1m   = EMPTY2i OR M1i 
VIA1m = EMPTY2i OR VIA1i
M2m   = EMPTY2i OR M2i
VIA2m = EMPTY2i OR VIA2i
M3m   = EMPTY2i OR M3i
VIA3m = EMPTY2i OR VIA3i
M4m   = EMPTY2i OR M4i
VIA4m = EMPTY2i OR VIA4i
M5m   = EMPTY2i OR M5i
VIADm = EMPTY2i OR VIADi
MDm = EMPTY2i OR MDi



CBm = EMPTY2i OR CBi
CBDm = EMPTY2i OR CBDi
PPIm = EMPTY2i OR PPIi
UBMnm = EMPTY2i OR UBMn
UBMdm = EMPTY2i OR UBMd

CTM1m = EMPTY2i OR CTM1i
VIA1mi = VIA1m NOT INTERACT CTM1m
CTM_VIA1m = VIA1m AND CTM1m 

CONNECT	M1m M2m BY VIA1mi
CONNECT	M2m CTM_VIA1m
CTM2m = EMPTY2i OR CTM2i
VIA2mi = VIA2m NOT INTERACT CTM2m
CTM_VIA2m = VIA2m AND CTM2m 

CONNECT	M2m M3m BY VIA2mi
CONNECT	M3m CTM_VIA2m
CTM3m = EMPTY2i OR CTM3i
VIA3mi = VIA3m NOT INTERACT CTM3m
CTM_VIA3m = VIA3m AND CTM3m 

CONNECT	M3m M4m BY VIA3mi
CONNECT	M4m CTM_VIA3m
CTM4m = EMPTY2i OR CTM4i
VIA4mi = VIA4m NOT INTERACT CTM4m
CTM_VIA4m = VIA4m AND CTM4m 

CONNECT	M4m M5m BY VIA4mi
CONNECT	M5m CTM_VIA4m

CONNECT	M5m  MDm BY VIADm


// Wire-Bond
CONNECT M5m CBm
// Flip-chip
// 1_Ground up
CONNECT M5m UBMnm BY CBDm
// 2_RDL (before passivation)
CONNECT MDm UBMdm
// 3_PPI (After passivation)
CONNECT M5m PPIm BY CBDm
CONNECT PPIm UBMdm


CTM.R.6 { @ Two Metals connect to CTM without same connection is not allowed
    CTM1m INTERACT CTM_VIA1m BY NET > 1
    CTM2m INTERACT CTM_VIA2m BY NET > 1
    CTM3m INTERACT CTM_VIA3m BY NET > 1
    CTM4m INTERACT CTM_VIA4m BY NET > 1
}



// MIM_M4 CHECK
//==============
MIM_M3.W.1 { @ Max. dimension (both width and length) of M3 as MIM capacitor bottom metal <= ^MIM_M3_W_1 um
  SIZE BPM3 BY MIM_M3_W_1/2 UNDEROVER
}
MIM_M3.S.1 { @ Min. space between two M3 regions as MIM capacitor bottom metal >= ^MIM_M3_S_1 um
  EXT BPM3C < MIM_M3_S_1 ABUT < 90 REGION
}
MIM_M3.S.2 { @ Min. space between one M3 region as a dummy MIM capacitor bottom metal and 
              @ the other M3 region as MIM capacitor bottom metal >= ^MIM_M3_S_2 um
  EXT BPM3C DPM3 < MIM_M3_S_2 ABUT < 90 REGION
}
MIM_M3.E.3  { @ Minimum extension of an M3 resgion as MIM capacitor bottom metal beyound 
              @ a CTM3 resgion and dummy CTM3 region >= ^MIM_M3_E_3 um 
  ENC CTM3 M3 < MIM_M3_E_3 ABUT < 90 SINGULAR REGION
  CTM3 NOT M3  
}
MIM_M4.W.1 { @ Max. dimension (both width and length) of M4 as MIM capacitor bottom metal <= ^MIM_M4_W_1 um
  SIZE BPM4 BY MIM_M4_W_1/2 UNDEROVER
}
MIM_M4.S.1 { @ Min. space between two M4 regions as MIM capacitor bottom metal >= ^MIM_M4_S_1 um
  EXT BPM4C < MIM_M4_S_1 ABUT < 90 REGION
}
MIM_M4.S.2 { @ Min. space between one M4 region as a dummy MIM capacitor bottom metal and 
              @ the other M4 region as MIM capacitor bottom metal >= ^MIM_M4_S_2 um
  EXT BPM4C DPM4 < MIM_M4_S_2 ABUT < 90 REGION
}
MIM_M4.E.3  { @ Minimum extension of an M4 resgion as MIM capacitor bottom metal beyound 
              @ a CTM4 resgion and dummy CTM4 region >= ^MIM_M4_E_3 um 
  ENC CTM4 M4 < MIM_M4_E_3 ABUT < 90 SINGULAR REGION
  CTM4 NOT M4  
}



// MIMVIA CHECK
//===============
CTMV3 = VIA3 AND CTM3		// VIA3 locate on CTM
CBMV3 = (VIA3 AND BPM3) NOT CTM3 // VIA3 locate on CBM
CTMV4 = VIA4 AND CTM4		// VIA4 locate on CTM
CBMV4 = (VIA4 AND BPM4) NOT CTM4 // VIA4 locate on CBM
CONNECT CTMV3 TCTM3
CONNECT CBMV3 BPM3
CONNECT CTMV4 TCTM4
CONNECT CBMV4 BPM4










MIMVIA3.S.1 { @ Min. space between two VIA3 on the same CTM >= ^MIMVIA_S_1 um
  EXT CTMV3 < MIMVIA_S_1 ABUT < 90 SINGULAR REGION CONNECTED   
}
MIMVIA3.S.2 { @ Min. space between two VIA3 on the same M3 as MIM capacitor bottom metal >= ^MIMVIA_S_2 um
  EXT CBMV3 < MIMVIA_S_2 ABUT < 90 SINGULAR REGION CONNECTED     
}
MIMVIA3.E.1 { @ Min. extension of a CTM region beyond a VIA3 region >= ^MIMVIA_E_1 um
  ENC VIA3 CTM3 < MIMVIA_E_1 ABUT < 90 SINGULAR REGION
  VIA3 CUT CTM3    
}
MIMVIA3.E.2 { @ Min. extension of an M3 region as MIM capacitor bottom metal beyond a VIA2 or a VIA3 region >= ^MIMVIA_E_2 um
  ENC VIA2 BPM3C < MIMVIA_E_2 ABUT < 90 REGION
  ENC VIA3 BPM3C < MIMVIA_E_2 ABUT < 90 REGION
}
MIMVIA3.C.1 { @ Min. clearance of a VIA2 or a VIA3 to a CTM region >= ^MIMVIA_C_1 um
  EXT VIA2 CTM3 < MIMVIA_C_1 ABUT < 90 SINGULAR REGION
  EXT VIA3 CTM3 < MIMVIA_C_1 ABUT < 90 SINGULAR REGION
}    
MIMVIA4.S.1 { @ Min. space between two VIA4 on the same CTM >= ^MIMVIA_S_1 um
  EXT CTMV4 < MIMVIA_S_1 ABUT < 90 SINGULAR REGION CONNECTED   
}
MIMVIA4.S.2 { @ Min. space between two VIA4 on the same M4 as MIM capacitor bottom metal >= ^MIMVIA_S_2 um
  EXT CBMV4 < MIMVIA_S_2 ABUT < 90 SINGULAR REGION CONNECTED     
}
MIMVIA4.E.1 { @ Min. extension of a CTM region beyond a VIA4 region >= ^MIMVIA_E_1 um
  ENC VIA4 CTM4 < MIMVIA_E_1 ABUT < 90 SINGULAR REGION
  VIA4 CUT CTM4    
}
MIMVIA4.E.2 { @ Min. extension of an M4 region as MIM capacitor bottom metal beyond a VIA3 or a VIA4 region >= ^MIMVIA_E_2 um
  ENC VIA3 BPM4C < MIMVIA_E_2 ABUT < 90 REGION
  ENC VIA4 BPM4C < MIMVIA_E_2 ABUT < 90 REGION
}
MIMVIA4.C.1 { @ Min. clearance of a VIA3 or a VIA4 to a CTM region >= ^MIMVIA_C_1 um
  EXT VIA3 CTM4 < MIMVIA_C_1 ABUT < 90 SINGULAR REGION
  EXT VIA4 CTM4 < MIMVIA_C_1 ABUT < 90 SINGULAR REGION
}    



MIMVIA3.R.1 { @ Min. density of VIA3 on CTM >= 1%
  NET AREA RATIO CTMV3 TCTM3 < 0.01 RDB VIA4_DENSITY.log CTMV3 TCTM3
}
MIMVIA4.R.1 { @ Min. density of VIA4 on CTM >= 1%
  NET AREA RATIO CTMV4 TCTM4 < 0.01 RDB VIA4_DENSITY.log CTMV4 TCTM4
}

DISCONNECT
MIMVIA3.R.3 { @ VIA2 under CTM region is not allowed
  VIA2 AND CTM3
}
MIMVIA4.R.3 { @ VIA3 under CTM region is not allowed
  VIA3 AND CTM4
}




// M5 checks
//=============

M5T_NIND = M5xd NOT INDDMY

INDDMYI = SIZE INDDMY BY -7 //exclude M1 substrate pick up node
INDM = INDDMY AND M3
INDME = INDM COINCIDENT INSIDE EDGE INDDMY
INDDMYA = INDDMY WITH EDGE INDME <2
INDDMY3 = INDDMYA ENCLOSE M4 //for 3 terminals inductor(central tap)
INDDMY2 = INDDMY NOT INDDMY3 //for 2 terminals inductor


VARIABLE UTM30K_40K_A_2 	75
VARIABLE UTM30K_40K_A_2_S	10

M5_small = AREA M5 < UTM30K_40K_A_2
M5_convex = CONVEX EDGE M5_small == 2

M5_small_R_edge = (GROW M5_small RIGHT BY GRID) NOT M5_small
M5_small_R_end = ANGLE (M5_convex TOUCH EDGE M5_small_R_edge) == 90
M5_small_R_good = EXT [M5_small_R_end] M5 < UTM30K_40K_A_2_S OPPOSITE
M5_small_R_bad = M5_small_R_end NOT TOUCH EDGE M5_small_R_good
M5_small_R_excl = M5_small NOT WITH EDGE M5_small_R_bad

M5_small_T_edge = (GROW M5_small TOP BY GRID) NOT M5_small
M5_small_T_end = ANGLE (M5_convex TOUCH EDGE M5_small_T_edge) == 0
M5_small_T_good = EXT [M5_small_T_end] M5 < UTM30K_40K_A_2_S OPPOSITE
M5_small_T_bad = M5_small_T_end NOT TOUCH EDGE M5_small_T_good
M5_small_T_excl = M5_small NOT WITH EDGE M5_small_T_bad

M5_small_L_edge = (GROW M5_small LEFT BY GRID) NOT M5_small
M5_small_L_end = ANGLE (M5_convex TOUCH EDGE M5_small_L_edge) == 90
M5_small_L_good = EXT [M5_small_L_end] M5 < UTM30K_40K_A_2_S OPPOSITE
M5_small_L_bad = M5_small_L_end NOT TOUCH EDGE M5_small_L_good
M5_small_L_excl = M5_small NOT WITH EDGE M5_small_L_bad

M5_small_B_edge = (GROW M5_small BOTTOM BY GRID) NOT M5_small
M5_small_B_end = ANGLE (M5_convex TOUCH EDGE M5_small_B_edge) == 0
M5_small_B_good = EXT [M5_small_B_end] M5 < UTM30K_40K_A_2_S OPPOSITE
M5_small_B_bad = M5_small_B_end NOT TOUCH EDGE M5_small_B_good
M5_small_B_excl = M5_small NOT WITH EDGE M5_small_B_bad

#IFDEF THICK_40K
UTM40K.W.1 { @ Min. M5 width >= 2.60 um
  INT M5 < 2.60 ABUT < 90 SINGULAR REGION
}
UTM40K.S.1 { @ Min. M5 space >= 2.50 um
  EXT M5 < 2.50 ABUT < 90 SINGULAR REGION
}
UTM40K.E.1 { @ Min. extension of a M5 region beyond a VIA4 region >= 0.4 um
  ENC VIA4 M5 < 0.4 ABUT < 90 SINGULAR REGION
  VIA4 NOT M5  
}
UTM40K.E.2 { @ Min. extension of M5 end-of-line region beyond VIA4 region >= 0.45 um
  X = ENC [VIA4] M5 < 0.45 ABUT < 90 OPPOSITE	// a narrow side
  INT X < 0.36 ABUT == 90 INTERSECTING ONLY	// adjacent narrow sides
}
#IFDEF DTM
#IFDEF Recommend
UTM40K.E.3 { @ Min extension of Mn region beyond a VIAn/VIAx region(for dual top metal structure) >= ^UTM40K_E_3 um
  ENC VIA4 M4 < UTM40K_E_3 ABUT < 90 SINGULAR REGION
  ENC VIA3 M4 < UTM40K_E_3 ABUT < 90 SINGULAR REGION
}
#ENDIF
#ENDIF
UTM40K.S.2 { @ Min. space of Wide M5 (>16um) and M5 >= 4.0 um (exclude application for inductor)
  M5T_NIND_S8 = SHRINK (SHRINK (SHRINK (SHRINK M5T_NIND RIGHT BY 8) LEFT BY 8) TOP BY 8) BOTTOM BY 8
  M5T_NIND_G8 = GROW (GROW (GROW (GROW M5T_NIND_S8 RIGHT BY 8) LEFT BY 8) TOP BY 8) BOTTOM BY 8
  M5T_NIND_Wide = M5T_NIND_G8 AND M5T_NIND
  M5T_NIND_Exp = SIZE M5T_NIND_Wide BY 1 INSIDE OF M5T_NIND STEP 1.75
  M5T_NIND_Branch = M5T_NIND_Exp NOT M5T_NIND_Wide
  M5T_NIND_Branch_edge = M5T_NIND_Branch COIN INSIDE EDGE M5T_NIND
  M5T_NIND_Check = M5T_NIND AND (SIZE M5T_NIND_Exp BY 4.0)
  M5T_NIND_Branch_Check = M5T_NIND AND (EXPAND EDGE M5T_NIND_Branch_edge OUTSIDE BY 4.0 CORNER FILL)
  M5T_NIND_WideC = STAMP M5T_NIND_Wide BY M5xd
  M5T_NIND_CheckC = STAMP M5T_NIND_Check BY M5xd
  M5T_NIND_BranchC = STAMP M5T_NIND_Branch BY M5xd
  M5T_NIND_Branch_CheckC = STAMP M5T_NIND_Branch_Check BY M5xd
  EXT M5T_NIND_WideC M5T_NIND_CheckC < 4.0 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M5T_NIND_BranchC M5T_NIND_Branch_CheckC < 4.0 ABUT >0 <89.5 NOT CONNECTED REGION
}
UTM40K.A.1 { @ Min. area of M5 region >= 6.76 um2
  AREA M5 < 6.76
}
UTM40K.A.2 { @ Min. area of {UTM OR dummy UTM} island >= 75 um2
			 @ {UTM or dummy UTM} island: space to another adjacent edge of {UTM or dummy UTM} >= 10 um for orthogonal edges
  M5_small NOT INTERACT (((M5_small_R_excl OR M5_small_T_excl) OR M5_small_L_excl) OR M5_small_B_excl)
}
UTM40K.R.1 { @ Min. density of M5 area >= 30% (exclude application for inductor)
  CHIP_NIND = CHIP NOT INDDMY
  DENSITY M5T_NIND CHIP_NIND < 0.3 PRINT M5T_DENSITY.log
  [ AREA(M5T_NIND)/AREA(CHIP_NIND) ]
}
UTM40K.R.2 { @ Max. density of {UTM OR dummy UTM} area <= 80% 
			 @ Exclude application for inductor
  CHIP_NIND = CHIP NOT INDDMY
  DENSITY M5T_NIND CHIP_NIND > 0.8 PRINT M5T_DENSITY_MAX.log
  	[ AREA(M5T_NIND) / AREA(CHIP_NIND) ]
}
UTM40K.R.3 { @ The square number for dummy UTM <= 5 
			 @ DRC only flag rectangle
  M5DMY_REC = RECTANGLE M5DMY ORTHOGONAL ONLY
  NOT RECTANGLE M5DMY_REC ASPECT <= 5
}
#ENDIF
#IFDEF THICK_30K

UTM30K.W.1 { @ Min. M5 width >= 2.6 um
  INT M5 < 2.6 ABUT < 90 SINGULAR REGION
}
UTM30K.S.1 { @ Min. M5 spacing >= 1.90 um
  EXT M5 < 1.90 ABUT < 90 SINGULAR REGION
}
UTM30K.E.1 { @ Min. extension of a M5 region beyond a VIA4 region >= 0.4 um
  ENC VIA4 M5 < 0.4 ABUT < 90 SINGULAR REGION
  VIA4 NOT M5    
}
UTM30K.E.2 { @ Min. extension of M5 end-of-line region beyond VIA4 region >= 0.45 um
  X = ENC [VIA4] M5 < 0.45 ABUT < 90 OPPOSITE	// a narrow side
  INT X < 0.36 ABUT == 90 INTERSECTING ONLY	// adjacent narrow sides
}
#IFDEF DTM
#IFDEF Recommend
UTM30K.E.3 { @ Min extension of Mn region beyond a VIAn/VIAx region(for dual top metal structure) >= ^UTM30K_E_3 um
  ENC VIA4 M4 < UTM30K_E_3 ABUT < 90 SINGULAR REGION
  ENC VIA3 M4 < UTM30K_E_3 ABUT < 90 SINGULAR REGION
}
#ENDIF
#ENDIF
UTM30K.S.2 { @ Min. space of Wide M5 (>16um) and M5 >= 3.0 um (exclude application for inductor)
  M5T_NIND_S8 = SHRINK (SHRINK (SHRINK (SHRINK M5T_NIND RIGHT BY 8) LEFT BY 8) TOP BY 8) BOTTOM BY 8
  M5T_NIND_G8 = GROW (GROW (GROW (GROW M5T_NIND_S8 RIGHT BY 8) LEFT BY 8) TOP BY 8) BOTTOM BY 8
  M5T_NIND_Wide = M5T_NIND_G8 AND M5T_NIND
  M5T_NIND_Exp = SIZE M5T_NIND_Wide BY 1 INSIDE OF M5T_NIND STEP 1.33
  M5T_NIND_Branch = M5T_NIND_Exp NOT M5T_NIND_Wide
  M5T_NIND_Branch_edge = M5T_NIND_Branch COIN INSIDE EDGE M5T_NIND
  M5T_NIND_Check = M5T_NIND AND (SIZE M5T_NIND_Exp BY 3.0)
  M5T_NIND_Branch_Check = M5T_NIND AND (EXPAND EDGE M5T_NIND_Branch_edge OUTSIDE BY 3.0 CORNER FILL)
  M5T_NIND_WideC = STAMP M5T_NIND_Wide BY M5xd
  M5T_NIND_CheckC = STAMP M5T_NIND_Check BY M5xd
  M5T_NIND_BranchC = STAMP M5T_NIND_Branch BY M5xd
  M5T_NIND_Branch_CheckC = STAMP M5T_NIND_Branch_Check BY M5xd
  EXT M5T_NIND_WideC M5T_NIND_CheckC < 3.0 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M5T_NIND_BranchC M5T_NIND_Branch_CheckC < 3.0 ABUT >0 <89.5 NOT CONNECTED REGION
}
UTM30K.A.1 { @ Min. area of M5 region >= 6.76 um2
  AREA M5 < 6.76
}
UTM30K.A.2 { @ Min. area of {UTM OR dummy UTM} island >= 75 um2
			 @ {UTM or dummy UTM} island: space to another adjacent edge of {UTM or dummy UTM} >= 10 um for orthogonal edges
  M5_small NOT INTERACT (((M5_small_R_excl OR M5_small_T_excl) OR M5_small_L_excl) OR M5_small_B_excl)
}
UTM30K.R.1 { @ Min. density of M5 area >= 30% (exclude application for inductor)
  CHIP_NIND = CHIP NOT INDDMY
  DENSITY M5T_NIND CHIP_NIND < 0.3 PRINT M5T_DENSITY.log
  [ AREA(M5T_NIND)/AREA(CHIP_NIND) ]
}
UTM30K.R.4 { @ Max. density of {UTM OR dummy UTM} area <= 80% 
			 @ Exclude application for inductor
  CHIP_NIND = CHIP NOT INDDMY
  DENSITY M5T_NIND CHIP_NIND > 0.8 PRINT M5T_DENSITY_MAX.log
  	[ AREA(M5T_NIND) / AREA(CHIP_NIND) ]
}
UTM30K.R.5 { @ The square number for dummy UTM <= 5 
			 @ DRC only flag rectangle
  M5DMY_REC = RECTANGLE M5DMY ORTHOGONAL ONLY
  NOT RECTANGLE M5DMY_REC ASPECT <= 5
}
#ENDIF

#IFDEF THICK_15K
UTM15K.W.1 { @ Min. M5 width >= 1.0 um
  INT M5 < 1.0 ABUT < 90 SINGULAR REGION
}
UTM15K.S.1 { @ Min. M5 space >= 1.2 um
  EXT M5 < 1.2 ABUT < 90 SINGULAR REGION
}
UTM15K.E.1 { @ Min. extension of a M5 region beyond a VIA4 region >= 0.3 um
  ENC VIA4 M5 < 0.3 ABUT < 90 SINGULAR REGION
  VIA4 NOT M5  
}
UTM15K.E.1a { @ Min. extension of M5 end-of-line region beyond VIA4 region >= 0.45 um
  X = ENC [VIA4] M5 < 0.45 ABUT < 90 OPPOSITE	// a narrow side
  INT X < 0.36 ABUT == 90 INTERSECTING ONLY	// adjacent narrow sides
}
#IFDEF DTM
#IFDEF Recommend
UTM15K.E.3 { @ Min extension of Mn region beyond a VIAn/VIAx region(for dual top metal structure) >= ^UTM15K_E_3 um
  ENC VIA4 M4 < UTM15K_E_3 ABUT < 90 SINGULAR REGION
  ENC VIA3 M4 < UTM15K_E_3 ABUT < 90 SINGULAR REGION
}
#ENDIF
#ENDIF
UTM15K.S.2 { @ Min. space of Wide M5 (>10um) and M5 >= 2.0 um (exclude application for inductor)
  M5T_NIND_S5 = SHRINK (SHRINK (SHRINK (SHRINK M5T_NIND RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M5T_NIND_G5 = GROW (GROW (GROW (GROW M5T_NIND_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M5T_NIND_Wide = M5T_NIND_G5 AND M5T_NIND
  M5T_NIND_Exp = SIZE M5T_NIND_Wide BY 1 INSIDE OF M5T_NIND STEP 0.84
  M5T_NIND_Branch = M5T_NIND_Exp NOT M5T_NIND_Wide
  M5T_NIND_Branch_edge = M5T_NIND_Branch COIN INSIDE EDGE M5T_NIND
  M5T_NIND_Check = M5T_NIND AND (SIZE M5T_NIND_Exp BY 2.0)
  M5T_NIND_Branch_Check = M5T_NIND AND (EXPAND EDGE M5T_NIND_Branch_edge OUTSIDE BY 2.0 CORNER FILL)
  M5T_NIND_WideC = STAMP M5T_NIND_Wide BY M5xd
  M5T_NIND_CheckC = STAMP M5T_NIND_Check BY M5xd
  M5T_NIND_BranchC = STAMP M5T_NIND_Branch BY M5xd
  M5T_NIND_Branch_CheckC = STAMP M5T_NIND_Branch_Check BY M5xd
  EXT M5T_NIND_WideC M5T_NIND_CheckC < 2.0 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M5T_NIND_BranchC M5T_NIND_Branch_CheckC < 2.0 ABUT >0 <89.5 NOT CONNECTED REGION
}
UTM15K.A.1 { @ Min. area of M5 region >= 2.25 um2
  AREA M5 < 2.25
}
UTM15K.R.1 { @ Min. density of M5 area >= 30% (exclude application for inductor)
  CHIP_NIND = CHIP NOT INDDMY
  DENSITY M5T_NIND CHIP_NIND < 0.3 PRINT M5T_DENSITY.log
  [ AREA(M5T_NIND)/AREA(CHIP_NIND) ]
}
#ENDIF

// Assembly stress protection rules check


#IFDEF THICK_40K
M5_CHECK = (AREA M5 <= AMT_S_1_A) NOT M5DMY
AMT.S.1:M5 { @Space of MT. Customer must fill the dummy metal globally and uniformly even if the originally drawn MT has already met the density rule.
          @ DRC only check: The space to another adjacent edge for the MT [area <= ^AMT_S_1_A um2] <= ^AMT_S_1
    A = EXT [M5_CHECK] M5 <= AMT_S_1 ABUT <= 135 SINGULAR OPPOSITE EXTENDED AMT_S_1 PERPENDICULAR ALSO OBTUSE ALSO
    M5_CHECK NOT TOUCH EDGE A
}
#ELSE
#IFDEF THICK_30K
M5_CHECK = (AREA M5 <= AMT_S_1_A) NOT M5DMY
AMT.S.1:M5 { @Space of MT. Customer must fill the dummy metal globally and uniformly even if the originally drawn MT has already met the density rule.
          @ DRC only check: The space to another adjacent edge for the MT [area <= ^AMT_S_1_A um2] <= ^AMT_S_1
    A = EXT [M5_CHECK] M5 <= AMT_S_1 ABUT <= 135 SINGULAR OPPOSITE EXTENDED AMT_S_1 PERPENDICULAR ALSO OBTUSE ALSO
    M5_CHECK NOT TOUCH EDGE A
}
#ENDIF
#ENDIF

//AMT.S.1.1U is uncheckable 


// Matching check
//================

POLY_PAIR_CHECK = (POLY AND OD) INTERACT MATCHING           
POLY_PAIR_CHECK_G_M1 = POLY_PAIR_CHECK INSIDE M1xd
POLY_PAIR_CHECK_B_M1 = POLY_PAIR_CHECK CUT M1xd
POLY_PAIR_CHECK_O_M1 = POLY_PAIR_CHECK OUTSIDE M1xd
POLY_PAIR_CHECK_G_M2 = POLY_PAIR_CHECK INSIDE M2xd
POLY_PAIR_CHECK_B_M2 = POLY_PAIR_CHECK CUT M2xd
POLY_PAIR_CHECK_O_M2 = POLY_PAIR_CHECK OUTSIDE M2xd
POLY_PAIR_CHECK_G_M3 = POLY_PAIR_CHECK INSIDE M3xd
POLY_PAIR_CHECK_B_M3 = POLY_PAIR_CHECK CUT M3xd
POLY_PAIR_CHECK_O_M3 = POLY_PAIR_CHECK OUTSIDE M3xd
POLY_PAIR_CHECK_G_M4 = POLY_PAIR_CHECK INSIDE M4xd
POLY_PAIR_CHECK_B_M4 = POLY_PAIR_CHECK CUT M4xd
POLY_PAIR_CHECK_O_M4 = POLY_PAIR_CHECK OUTSIDE M4xd
POLY_PAIR_CHECK_G_M5 = POLY_PAIR_CHECK INSIDE M5xd
POLY_PAIR_CHECK_B_M5 = POLY_PAIR_CHECK CUT M5xd
POLY_PAIR_CHECK_O_M5 = POLY_PAIR_CHECK OUTSIDE M5xd
POLY_PAIR_CHECK_G_MD = POLY_PAIR_CHECK INSIDE MDxd
POLY_PAIR_CHECK_B_MD = POLY_PAIR_CHECK CUT MDxd
POLY_PAIR_CHECK_O_MD = POLY_PAIR_CHECK OUTSIDE MDxd

AN.R.40m_M1 { @ For the critical differential pair inside MATCHING layer, asymmetry metal (M1) shielding is not allowed.
		     @ DRC only flag: (1) One of differential pair covered by metal layer but without fully covered.
		  	 @ (2) One device of the differential pair fully covered by metal layer and the other is not fully covered.	  
  MATCHING INTERACT POLY_PAIR_CHECK_B_M1
  (MATCHING INTERACT POLY_PAIR_CHECK_G_M1) INTERACT POLY_PAIR_CHECK_O_M1
}

#IFDEF Recommend
AN.R.41m_M2 { @ For the critical differential pair inside MATCHING layer, asymmetry metal (M2) shielding is not recommended.
		     @ DRC only flag: (1) One of differential pair covered by metal layer but without fully covered.
			 @ (2) One device of the differential pair fully covered by metal layer and the other is not fully covered.	
  MATCHING INTERACT POLY_PAIR_CHECK_B_M2
  (MATCHING INTERACT POLY_PAIR_CHECK_G_M2) INTERACT POLY_PAIR_CHECK_O_M2
}
AN.R.41m_M3 { @ For the critical differential pair inside MATCHING layer, asymmetry metal (M3) shielding is not recommended.
		     @ DRC only flag: (1) One of differential pair covered by metal layer but without fully covered.
			 @ (2) One device of the differential pair fully covered by metal layer and the other is not fully covered.	
  MATCHING INTERACT POLY_PAIR_CHECK_B_M3
  (MATCHING INTERACT POLY_PAIR_CHECK_G_M3) INTERACT POLY_PAIR_CHECK_O_M3
}
AN.R.41m_M4 { @ For the critical differential pair inside MATCHING layer, asymmetry metal (M4) shielding is not recommended.
		     @ DRC only flag: (1) One of differential pair covered by metal layer but without fully covered.
			 @ (2) One device of the differential pair fully covered by metal layer and the other is not fully covered.	
  MATCHING INTERACT POLY_PAIR_CHECK_B_M4
  (MATCHING INTERACT POLY_PAIR_CHECK_G_M4) INTERACT POLY_PAIR_CHECK_O_M4
}
AN.R.41m_M5 { @ For the critical differential pair inside MATCHING layer, asymmetry metal (M5) shielding is not recommended.
		     @ DRC only flag: (1) One of differential pair covered by metal layer but without fully covered.
			 @ (2) One device of the differential pair fully covered by metal layer and the other is not fully covered.	
  MATCHING INTERACT POLY_PAIR_CHECK_B_M5
  (MATCHING INTERACT POLY_PAIR_CHECK_G_M5) INTERACT POLY_PAIR_CHECK_O_M5
}
#IFDEF CHECK_ALRDL
AN.R.41m_MD { @ For the critical differential pair inside MATCHING layer, asymmetry metal (MD) shielding is not recommended.
			 @ DRC only flag: (1) One of differential pair covered by metal layer but without fully covered.
			 @ (2) One device of the differential pair fully covered by metal layer and the other is not fully covered.	
  MATCHING INTERACT POLY_PAIR_CHECK_B_MD
  (MATCHING INTERACT POLY_PAIR_CHECK_G_MD) INTERACT POLY_PAIR_CHECK_O_MD
}
#ENDIF

#ENDIF


FPAD.R.1_M5 { @ Floating PAD is not allowed . please add protection diode to ground .
           @ Floating PAD in the DRC : {Mn INTERACT (CB OR CB2)} don't connect OD or POLY
  A = M5 INTERACT CB
  A1 = STAMP A BY M5xd
  B1 = NET AREA RATIO A1 NTAPi > 0
  B2 = NET AREA RATIO A1 PTAPi > 0
  B3 = NET AREA RATIO A1 NSDi > 0
  B4 = NET AREA RATIO A1 PSDi > 0
  B5 = NET AREA RATIO A1 ILP1i > 0
  A NOT ((((B1 OR B2) OR B3) OR B4) OR B5)
}

//DUMMY PO RULE
//================
//DPO VARIABLE
VARIABLE  DPO_W_1   0.6
VARIABLE  DPO_S_1   0.3
VARIABLE  DPO_C_1   1.2
VARIABLE  DPO_C_2   1.2
VARIABLE  DPO_C_4   1.2
VARIABLE  DPO_C_5   1.2
VARIABLE  DPO_C_6   3.0
VARIABLE  DPO_C_7   1.2


VARIABLE  DPO_C_8   10.0
VARIABLE  DPO_C_9   0.3

VARIABLE  DPO_C_10  10.0
VARIABLE  DPO_C_11  10.0

VARIABLE  DPO_C_12  10.0
VARIABLE  DPO_C_13  1.2
VARIABLE  DPO_C_14  10.0
VARIABLE  DPO_E_1   5.0
VARIABLE  DPO_A_1   1.2
VARIABLE  PO_R_5    0.14
VARIABLE  DPO_C_17	10.0
VARIABLE  DOD_C_17  10.0





DPO.W.1 { @Minimum width >= ^DPO_W_1 um
   INT DPO < DPO_W_1 ABUT < 90 SINGULAR REGION
}

DPO.S.1 { @Minimum space between two DPO >= ^DPO_S_1 um
   EXT DPO < DPO_S_1 ABUT < 90 SINGULAR REGION
}

DPO.C.1 { @Minimum clearance from DPO to OD (overlap is not allowed) >= ^DPO_C_1 um
   EXT DPO ODi < DPO_C_1 ABUT < 90 SINGULAR REGION
   DPO AND ODi
}

DPO.C.2 { @Minimum clearance from DPO to PO (overlap is not allowed) >= ^DPO_C_2 um
   EXT DPO POLYi < DPO_C_2 ABUT < 90 SINGULAR REGION
   DPO AND POLYi
}



DPO.C.4 { @Minimum clearance from DPO to FW (overlap is not allowed) >= ^DPO_C_4 um
   EXT DPO FWi < DPO_C_4 ABUT < 90 SINGULAR REGION
   DPO AND FWi
}
DPO.C.6 { @Minimum clearance from DPO to LOGO (overlap is not allowed) >= ^DPO_C_6 um
   EXT DPO LOGO < DPO_C_6 ABUT < 90 SINGULAR REGION
   DPO AND LOGO
}



DPO.C.8 { @Minimum clearance from DPO to HVNW (overlap is not allowed) >= ^DPO_C_8 um
   EXT DPO HVNWi < DPO_C_8 ABUT < 90 SINGULAR REGION
   DPO AND HVNWi
}
DPO.C.9 { @Minimum clearance from DPO to DOD (overlap is not allowed) >= ^DPO_C_9 um
   EXT DPO DOD < DPO_C_9 ABUT < 90 SINGULAR REGION
   DPO AND DOD
}

DPO.C.10 { @Minimum clearance from DPO to HVDMY (overlap is not allowed) >= ^DPO_C_10 um
   EXT DPO HVDMY < DPO_C_10 ABUT < 90 SINGULAR REGION
   DPO AND HVDMY
}
DPO.C.11 { @Minimum clearance from DPO to NLVT (overlap is not allowed) >= ^DPO_C_11 um
   EXT DPO NLVTi < DPO_C_11 ABUT < 90 SINGULAR REGION
   DPO AND NLVTi
}
DPO.C.12 { @Minimum clearance from DPO to {BJTDMY OR BJT4TDMY OR BJT5TDMY OR BJT7TDMY} (overlap is not allowed) >= ^DPO_C_12 um
   A = ((BJTDUMMY OR BJT4TDMY) OR BJT5TDMY) OR BJT7TDMY
   EXT DPO A < DPO_C_12 ABUT < 90 SINGULAR REGION
   DPO AND A
}


DPO.C.17 { @ Min clearance from DPO to SH_N[overlap is not allowed] >= ^DPO_C_17 um
  EXT DPO HVSHN < DPO_C_17 ABUT < 90 SINGULAR REGION
  DPO AND HVSHN
}
#IFDEF FULL_CHIP
DPO.E.1 { @Minimum extension of chip edge beyond DPO >= ^DPO_E_1
   DPO NOT (SIZE CHIP_CHAMFERED BY -DPO_E_1)   
}
#ENDIF

DPO.A.1 { @Minimum area of DPO >= ^DPO_A_1
   AREA DPO < DPO_A_1
}

#IFDEF FULL_CHIP
PO.R.5 { @Minimum {PO OR DPO} density across full chip >= ^PO_R_5
  DENSITY ALL_PO < PO_R_5 INSIDE OF LAYER CHIP PRINT PO_DN_5.density
}

#IFDEF Recommend

DPO.R.1 { @DPO is required. 
          @The DPO CAD layer (TSMC default, 13:1) must be a different layer from the PO CAD layer.
  CHIP_CHAMFERED NOT INTERACT DPO
}
#ENDIF


DPO.R.2 { @DPO inside chip corner stress relief area is not allowed.
  DPO INTERACT EMPTY_AREA
}
#ENDIF

DPO.R.3 { @The only shapes allowed are square (or rectangular) and solid
  HOLES DPO
  NOT RECTANGLE DPO ORTHOGONAL ONLY
}


//DUMMY OD RULE
//================
//DOD VARIABLE
VARIABLE  DOD_W_1   2.0
VARIABLE  DOD_S_1   1.2
VARIABLE  DOD_C_1   1.2
VARIABLE  DOD_C_2   1.2
VARIABLE  DOD_C_4   0.6
VARIABLE  DOD_C_5   1.2
VARIABLE  DOD_C_6   1.2
VARIABLE  DOD_C_7   1.2
VARIABLE  DOD_C_8   3.0
VARIABLE  DOD_C_9   1.2


VARIABLE  DOD_C_10  10.0
VARIABLE  DOD_C_11  10.0
VARIABLE  DOD_C_12  10.0




VARIABLE  DOD_C_13  10.0

VARIABLE  DOD_C_14  10.0
VARIABLE  DOD_C_15  10.0
VARIABLE  DOD_E_1   0.6
VARIABLE  DOD_E_2   5.0
VARIABLE  OD_R_1    0.2
VARIABLE  OD_R_2    0.8
VARIABLE  OD_R_W    500.0
VARIABLE  OD_R_S    250.0
VARIABLE  OD_R_A    62500.0
VARIABLE  OD_R_3    0.25
VARIABLE  OD_R_4    0.75

#IFDEF FULL_CHIP
OD_DEN_EXC = ((((((RWDMY OR FWi) OR LOGO) OR HVNW) OR HVDMY) OR NLVT) OR HVSHN) OR EMPTY_AREA // exclude check
#ELSE
OD_DEN_EXC = (((((RWDMY OR FWi) OR LOGO) OR HVNW) OR HVDMY) OR NLVT) OR HVSHN // exclude check
#ENDIF

#IFDEF DENSITY_IN_BLOCKAGE
OD_EXC = COPY OD_DEN_EXC
#ELSE
OD_EXC = OD_DEN_EXC OR ODBLK
#ENDIF




DOD.W.1 { @Minimum width >= ^DOD_W_1 um
   INT DOD < DOD_W_1 ABUT < 90 SINGULAR REGION
}

DOD.S.1 { @Minimum space between two DOD >= ^DOD_S_1 um
   EXT DOD < DOD_S_1 ABUT < 90 SINGULAR REGION
}

DOD.C.1 { @Minimum clearance from DOD to OD (overlap is not allowed) >= ^DOD_C_1 um
   EXT DOD ODi < DOD_C_1 ABUT < 90 SINGULAR REGION
   DOD AND ODi
}

DOD.C.2 { @Minimum clearance from DOD to PO (overlap is not allowed) >= ^DOD_C_2 um
   EXT DOD POLYi < DOD_C_2 ABUT < 90 SINGULAR REGION
   DOD AND POLYi
}


DOD.C.4 { @Minimum clearance from DOD to NW (cut is not allowed) >= ^DOD_C_4 um
   EXT DOD NWELi < DOD_C_4 ABUT < 90 SINGULAR REGION
   DOD CUT NWELi
}

DOD.C.5 { @Minimum clearance from DOD to FW (overlap is not allowed) >= ^DOD_C_5 um
   EXT DOD FWi < DOD_C_5 ABUT < 90 SINGULAR REGION
   DOD AND FWi
}
DOD.C.7 { @Minimum clearance from DOD to {RWDMY OR RWDMY(drawing1) OR RWDUMMY_PURE5V} (overlap is not allowed) >= ^DOD_C_7 um
   A = RWDMY OR RWDUMMY_PURE5V
   EXT DOD A < DOD_C_7 ABUT < 90 SINGULAR REGION
   DOD AND A
}

DOD.C.8 { @Minimum clearance from DOD to LOGO (overlap is not allowed) >= ^DOD_C_8 um
   EXT DOD LOGO < DOD_C_8 ABUT < 90 SINGULAR REGION
   DOD AND LOGO
}





DOD.C.10 { @Minimum clearance from DOD to HVNW (overlap is not allowed) >= ^DOD_C_10 um
   EXT DOD HVNWi < DOD_C_10 ABUT < 90 SINGULAR REGION
   DOD AND HVNWi 
}
DOD.C.11 { @Minimum clearance from DOD to HVDMY (overlap is not allowed) >= ^DOD_C_11 um
   EXT DOD HVDMY < DOD_C_11 ABUT < 90 SINGULAR REGION
   DOD AND HVDMY
}

DOD.C.12 { @Minimum clearance from DOD to NLVT (overlap is not allowed) >= ^DOD_C_12 um
   EXT DOD NLVTi < DOD_C_12 ABUT < 90 SINGULAR REGION
   DOD AND NLVTi
}

DOD.C.14 { @Minimum clearance from DOD to {BJTDMY OR BJT4TDMY OR BJT5TDMY OR BJT7TDMY} (overlap is not allowed) >= ^DOD_C_14 um
   A = ((BJTDUMMY OR BJT4TDMY) OR BJT5TDMY) OR BJT7TDMY
   EXT DOD A < DOD_C_14 ABUT < 90 SINGULAR REGION
   DOD AND A
}




DOD.C.17 { @ Min clearance from DOD to SH_N [overlap is not allowed] >= ^DOD_C_17 um
   EXT DOD HVSHN < DOD_C_17 ABUT < 90 SINGULAR REGION
   DOD AND HVSHN
}
DOD.E.1 { @Minimum extension of NW beyond DOD >= ^DOD_E_1
   ENC DOD NWELi < DOD_E_1 ABUT < 90 SINGULAR REGION
}

#IFDEF FULL_CHIP
DOD.E.2 { @Minimum extension of chip edge beyond DOD >= ^DOD_E_2
   DOD NOT (SIZE CHIP_CHAMFERED BY -DOD_E_2)
}
#ENDIF

#IFDEF FULL_CHIP
ODx = ALL_OD NOT EMPTY_AREA
CHIP_NOT_OD_EXC = COPY CHIP_CHAMFERED
#ELSE
ODx = COPY ALL_OD
CHIP_NOT_OD_EXC = COPY CHIP
#ENDIF

CHIPU_od25   = SIZE CHIP BY 25
CHIPU_od50   = SIZE CHIP BY 50
CHIPU_od75   = SIZE CHIP BY 75
CHIPU_od100   = SIZE CHIP BY 100
CHIPU_od125   = SIZE CHIP BY 125
CHIPU_od150   = SIZE CHIP BY 150
CHIPU_od175   = SIZE CHIP BY 175
CHIPU_od200   = SIZE CHIP BY 200
CHIPU_od225   = SIZE CHIP BY 225
OD.R.1 { @ {OD or DOD} local density (minimum) over window ^OD_R_W um x ^OD_R_W um stepping OD_R_Sum >= ^OD_R_1
  D0 = DENSITY ODx CHIP_NOT_OD_EXC < OD_R_1 WINDOW OD_R_W STEP OD_R_S BACKUP  
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D = RECTANGLE D0 == OD_R_W
  ERR1 = ( D0 NOT D ) NOT OD_EXC
  F1 = AREA ERR1 >= OD_R_A
  D1 = DENSITY ODx CHIP_NOT_OD_EXC < OD_R_1 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od25
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D2 = DENSITY ODx CHIP_NOT_OD_EXC < OD_R_1 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od50
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D3 = DENSITY ODx CHIP_NOT_OD_EXC < OD_R_1 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od75
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D4 = DENSITY ODx CHIP_NOT_OD_EXC < OD_R_1 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od100
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D5 = DENSITY ODx CHIP_NOT_OD_EXC < OD_R_1 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od125
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D6 = DENSITY ODx CHIP_NOT_OD_EXC < OD_R_1 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od150
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]

  D7 = DENSITY ODx CHIP_NOT_OD_EXC < OD_R_1 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od175
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D8 = DENSITY ODx CHIP_NOT_OD_EXC < OD_R_1 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od200
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D9 = DENSITY ODx CHIP_NOT_OD_EXC < OD_R_1 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od225
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  ERR2 = D INTERACT (((((((((D AND D1) AND D2) AND D3) AND D4) AND D5) AND D6) AND D7) AND D8) AND D9)  
  F2 = AREA ( ERR2 NOT OD_EXC ) >= OD_R_A
  F = F1 OR F2
  DENSITY F ODx CHIP_NOT_OD_EXC < OD_R_1 WINDOW OD_R_W STEP OD_R_S BACKUP PRINT OD_R_1.density 
          [ !AREA(F) + (AREA(ODx)/AREA(CHIP_NOT_OD_EXC)) ]       
}

OD.R.2 { @ {OD or DOD} local density (maximum) over window ^OD_R_W um x ^OD_R_W um stepping OD_R_Sum <= ^OD_R_2 
  D0 = DENSITY ODx CHIP_NOT_OD_EXC > OD_R_2 WINDOW OD_R_W STEP OD_R_S BACKUP  
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D = RECTANGLE D0 == OD_R_W
  ERR1 = ( D0 NOT D ) NOT OD_EXC
  F1 = AREA ERR1 >= OD_R_A
  D1 = DENSITY ODx CHIP_NOT_OD_EXC > OD_R_2 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od25
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D2 = DENSITY ODx CHIP_NOT_OD_EXC > OD_R_2 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od50
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D3 = DENSITY ODx CHIP_NOT_OD_EXC > OD_R_2 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od75
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D4 = DENSITY ODx CHIP_NOT_OD_EXC > OD_R_2 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od100
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D5 = DENSITY ODx CHIP_NOT_OD_EXC > OD_R_2 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od125
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D6 = DENSITY ODx CHIP_NOT_OD_EXC > OD_R_2 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od150
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D7 = DENSITY ODx CHIP_NOT_OD_EXC > OD_R_2 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od175
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D8 = DENSITY ODx CHIP_NOT_OD_EXC > OD_R_2 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od200
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  D9 = DENSITY ODx CHIP_NOT_OD_EXC > OD_R_2 WINDOW OD_R_W STEP OD_R_S BACKUP INSIDE OF LAYER CHIPU_od225
          [ AREA(ODx)/AREA(CHIP_NOT_OD_EXC) ]
  ERR2 = D INTERACT (((((((((D AND D1) AND D2) AND D3) AND D4) AND D5) AND D6) AND D7) AND D8) AND D9)
  F2 = AREA ( ERR2 NOT OD_EXC ) >= OD_R_A
  F = F1 OR F2
  DENSITY F ODx CHIP_NOT_OD_EXC > OD_R_2 WINDOW OD_R_W STEP OD_R_S BACKUP PRINT OD_R_2.density 
          [ !!AREA(F) * ((AREA(ODx)/AREA(CHIP_NOT_OD_EXC))) ]
}

#IFDEF FULL_CHIP
OD.R.3 { @Minimum {OD or DOD} density across full chip >= ^OD_R_3
  DENSITY ODx < OD_R_3 INSIDE OF LAYER CHIP PRINT OD_R_3.density
}
OD.R.4 { @Maximum {OD or DOD} density across full chip <= ^OD_R_4
  DENSITY ODx > OD_R_4 INSIDE OF LAYER CHIP PRINT OD_R_4.density
}  
#ENDIF

#IFDEF FULL_CHIP

DOD.R.1 { @DOD is required. 
          @The DOD CAD layer (TSMC default, 3:1) must be a different layer from the OD CAD layer.
  CHIP_CHAMFERED NOT INTERACT DOD
}


DOD.R.2 { @DOD inside chip corner stress relief area is not allowed.
  DOD INTERACT EMPTY_AREA
}
#ENDIF

DOD.R.3 { @The only shapes allowed are square(or rectangular) and solid
  HOLES DOD
  NOT RECTANGLE DOD ORTHOGONAL ONLY
}



// Stack diode CHECKS
//======================

DIODUMMY_SUM = (DIODUMMY OR DIO3TDMY) OR DIO4TDMY
PPOD_DIODE_pre = (PP AND OD) INSIDE DIODUMMY_SUM
NPOD_DIODE_pre = (NP AND OD) INSIDE DIODUMMY_SUM
PPOD_DIODE_mf = (PPi AND ODi) INSIDE DIODUMMY_SUM
NPOD_DIODE_mf = (NPi AND ODi) INSIDE DIODUMMY_SUM
CONNECT M1_mf PPOD_DIODE_mf BY CO_mf
CONNECT M1_mf NPOD_DIODE_mf BY CO_mf
PPOD_DIODE = STAMP PPOD_DIODE_pre BY PPOD_DIODE_mf
NPOD_DIODE = STAMP NPOD_DIODE_pre BY NPOD_DIODE_mf
PPOD_HVN_S = NET AREA RATIO PPOD_DIODE HV_S_N_C > 0
PPOD_HVN_D = NET AREA RATIO PPOD_DIODE HV_D_N_C > 0
PPOD_HVP_S = NET AREA RATIO PPOD_DIODE HV_S_P_C > 0
PPOD_HVP_D = NET AREA RATIO PPOD_DIODE HV_D_P_C > 0
PPOD_HV_SD = ((PPOD_HVN_S OR PPOD_HVN_D) OR PPOD_HVP_S) OR PPOD_HVP_D
LV_SD = (MOS NOT HVDMY) NOT POLY
PACT_realc = STAMP LV_SD BY PSD_mf
NACT_realc = STAMP LV_SD BY NSD_mf
PPOD_P_SD = NET AREA RATIO PPOD_DIODE PACT_realc > 0
PPOD_N_SD = NET AREA RATIO PPOD_DIODE NACT_realc > 0
PPOD_SD = PPOD_P_SD OR PPOD_N_SD

SDIO.R.1 { @ PPOD inside DIODMY or DIO3TDMY or DIO4TDMY connect to NPOD inside DIODMY or DIO3TDMY or DIO4TDMY is not allowed
         @ exclude PPOD inside DIODMY or DIO3TDMY or DIO4TDMY connect to PPOD inside DIODMY or DIO3TDMY or DIO4TDMY
         @ exclude PPOD inside DIODMY or DIO3TDMY or DIO4TDMY connect to two or more NPOD inside DIODMY or DIO3TDMY or DIO4TDMY
         @ exclude PPOD inside DIODMY or DIO3TDMY or DIO4TDMY connect to MOS OD
         @ exclude PPOD connect to PAD window
PPOD_NPOD = NET AREA RATIO PPOD_DIODE NPOD_DIODE > 0
PPOD_PAD = NET AREA RATIO PPOD_DIODE CB_mf CBD_mf UBMn_mf UBMd_mf > 0 [!!AREA(CB_mf) + !!AREA(CBD_mf) + !!AREA(UBMn_mf)+ !!AREA(UBMd_mf)]


PPOD_PPOD = NET AREA RATIO PPOD_DIODE > 1 [COUNT(PPOD_DIODE)] 
PPOD_NPOD_MORE = NET AREA RATIO PPOD_DIODE NPOD_DIODE > 1 [COUNT(NPOD_DIODE)]
PPOD_NPOD NOT (((((PPOD_PAD OR PPOD_PPOD) OR PPOD_NPOD_MORE) OR PPOD_HV_SD) OR PPOD_SD) OR DSDIO)
}

//I/O ESD Guidance 
//================

EPACT = (PACT AND SDI) NOT HVDMY
ENACT = (NACT AND SDI) NOT HVDMY

ECO = ((CO AND SDI) AND OD) NOT HVDMY
EPMOS = EPACT ENCLOSE ALL_GATE
ENMOS = ENACT ENCLOSE ALL_GATE
EGTE = (ALL_GATE AND SDI) NOT HVDMY
EGTE_W = EGTE INSIDE EDGE OD
EPSD = EPMOS NOT EGTE
ENSD = ENMOS NOT EGTE
ENSD_NCO = (ENSD NOT INTERACT ECO) NOT INTERACT PTAP
EPSD_NCO = (EPSD NOT INTERACT ECO) NOT INTERACT NTAP
ENSD_WCO = ENSD NOT ENSD_NCO
EPSD_WCO = EPSD NOT EPSD_NCO
ENSD_SRC = ENSD_WCO OUTSIDE RPO
PCL_ENMOS = ENMOS NOT INTERACT RPO

CONNECT ENSD NSD_mf
CONNECT EPSD PSD_mf
PTAP_real = PTAP_mf NOT DIODUMMY
NTAP_real = NTAP_mf NOT DIODUMMY
ENSD_SOURCE_pre = NET AREA RATIO ENSD PTAP_real > 0 INSIDE OF LAYER PWELi [!!AREA(ENSD)*!!AREA(PTAP_real)]
EPSD_SOURCE_pre = NET AREA RATIO EPSD NTAP_real > 0 INSIDE OF LAYER NWELi [!!AREA(EPSD)*!!AREA(NTAP_real)]
ENSD_SOURCE = ENSD_SOURCE_pre OR ((ENSD NOT PCL_ENMOS) OUTSIDE RPO)
EPSD_SOURCE = EPSD_SOURCE_pre OR (EPSD OUTSIDE RPO)
ENSD_DRAIN = ENSD NOT ENSD_SOURCE
EPSD_DRAIN = EPSD NOT EPSD_SOURCE
ENSD_DRAINc = ENSD_DRAIN INTERACT ECO
EPSD_DRAINc = EPSD_DRAIN INTERACT ECO
ENMOSc = STAMP ENMOS BY ENSD_DRAINc
EPMOSc = STAMP EPMOS BY EPSD_DRAINc
//Define PAD by _mf connection
PWR_M1_mf_BY_TEXT = M1_mf WITH TEXT VDD_TEXT M1_PIN_TEXT PRIMARY ONLY
GND_M1_mf_BY_TEXT = M1_mf WITH TEXT VSS_TEXT M1_PIN_TEXT PRIMARY ONLY
PAD_M1_mf_BY_TEXT = M1_mf WITH TEXT PAD_TEXT M1_PIN_TEXT PRIMARY ONLY
PWR_M2_mf_BY_TEXT = M2_mf WITH TEXT VDD_TEXT M2_PIN_TEXT PRIMARY ONLY
GND_M2_mf_BY_TEXT = M2_mf WITH TEXT VSS_TEXT M2_PIN_TEXT PRIMARY ONLY
PAD_M2_mf_BY_TEXT = M2_mf WITH TEXT PAD_TEXT M2_PIN_TEXT PRIMARY ONLY
PWR_M3_mf_BY_TEXT = M3_mf WITH TEXT VDD_TEXT M3_PIN_TEXT PRIMARY ONLY
GND_M3_mf_BY_TEXT = M3_mf WITH TEXT VSS_TEXT M3_PIN_TEXT PRIMARY ONLY
PAD_M3_mf_BY_TEXT = M3_mf WITH TEXT PAD_TEXT M3_PIN_TEXT PRIMARY ONLY
PWR_M4_mf_BY_TEXT = M4_mf WITH TEXT VDD_TEXT M4_PIN_TEXT PRIMARY ONLY
GND_M4_mf_BY_TEXT = M4_mf WITH TEXT VSS_TEXT M4_PIN_TEXT PRIMARY ONLY
PAD_M4_mf_BY_TEXT = M4_mf WITH TEXT PAD_TEXT M4_PIN_TEXT PRIMARY ONLY
PWR_M5_mf_BY_TEXT = M5_mf WITH TEXT VDD_TEXT M5_PIN_TEXT PRIMARY ONLY
GND_M5_mf_BY_TEXT = M5_mf WITH TEXT VSS_TEXT M5_PIN_TEXT PRIMARY ONLY
PAD_M5_mf_BY_TEXT = M5_mf WITH TEXT PAD_TEXT M5_PIN_TEXT PRIMARY ONLY
NTAP_mfx = NTAP_mf NOT INTERACT (RNWEL OR VARDMY)
PTAP_mfx = PTAP_mf NOT EMPTYi
//Recognize PAD by NW/PW strap
VDD_CB_mf = NET AREA RATIO CB_mf NTAP_mfx > 0            //VDD_CB connected to N+OD pickup
VSS_CB_mf = NET AREA RATIO CB_mf PTAP_mfx > 0        //VSS_CB connected to P+OD pickup
IO_CB_mf = (CB_mf NOT VDD_CB_mf) NOT VSS_CB_mf

VDD_UBMn_mf = NET AREA RATIO UBMn_mf NTAP_mfx > 0            //VDD_UBMn connected to N+OD pickup
VSS_UBMn_mf = NET AREA RATIO UBMn_mf PTAP_mfx > 0        //VSS_UBMn connected to P+OD pickup
IO_UBMn_mf = (UBMn_mf NOT VDD_UBMn_mf) NOT VSS_UBMn_mf

VDD_UBMd_mf = NET AREA RATIO UBMd_mf NTAP_mfx > 0            //VDD_UBMd connected to N+OD pickup
VSS_UBMd_mf = NET AREA RATIO UBMd_mf PTAP_mfx > 0        //VSS_UBMd connected to P+OD pickup
IO_UBMd_mf = (UBMd_mf NOT VDD_UBMd_mf) NOT VSS_UBMd_mf




 PSD_mf_PAD_strap = NET AREA RATIO PSD_mf OVER CB_mf  UBMn_mf  UBMd_mf    > 0
 PSD_mf_IOPAD_strap = NET AREA RATIO PSD_mf OVER IO_CB_mf  IO_UBMn_mf  IO_UBMd_mf    > 0
 PSD_mf_VSSPAD_strap = NET AREA RATIO PSD_mf OVER VSS_CB_mf  VSS_UBMn_mf  VSS_UBMd_mf    > 0
 PSD_mf_VDDPAD_strap = NET AREA RATIO PSD_mf OVER VDD_CB_mf  VDD_UBMn_mf  VDD_UBMd_mf    > 0


 NSD_mf_PAD_strap = NET AREA RATIO NSD_mf OVER CB_mf  UBMn_mf  UBMd_mf    > 0
 NSD_mf_IOPAD_strap = NET AREA RATIO NSD_mf OVER IO_CB_mf  IO_UBMn_mf  IO_UBMd_mf    > 0
 NSD_mf_VSSPAD_strap = NET AREA RATIO NSD_mf OVER VSS_CB_mf  VSS_UBMn_mf  VSS_UBMd_mf    > 0
 NSD_mf_VDDPAD_strap = NET AREA RATIO NSD_mf OVER VDD_CB_mf  VDD_UBMn_mf  VDD_UBMd_mf    > 0







//Recognize PAD by Dummy

CB_mf_DUMMY = CB_mf INTERACT VDD_VSS_DUMMY
CB_mf_VDD_DUMMY = CB_mf INTERACT VDDDMY
CB_mf_VSS_DUMMY = CB_mf INTERACT VSSDMY

UBMn_mf_DUMMY = UBMn_mf INTERACT VDD_VSS_DUMMY
UBMn_mf_VDD_DUMMY = UBMn_mf INTERACT VDDDMY
UBMn_mf_VSS_DUMMY = UBMn_mf INTERACT VSSDMY

UBMd_mf_DUMMY = UBMd_mf INTERACT VDD_VSS_DUMMY
UBMd_mf_VDD_DUMMY = UBMd_mf INTERACT VDDDMY
UBMd_mf_VSS_DUMMY = UBMd_mf INTERACT VSSDMY




 PSD_mf_VDD_VSS_PAD_DUMMY = NET AREA RATIO PSD_mf OVER CB_mf_DUMMY  UBMn_mf_DUMMY  UBMd_mf_DUMMY    > 0
 PSD_mf_VDD_PAD_DUMMY = NET AREA RATIO PSD_mf OVER CB_mf_VDD_DUMMY  UBMn_mf_VDD_DUMMY  UBMd_mf_VDD_DUMMY    > 0
 PSD_mf_VSS_PAD_DUMMY = NET AREA RATIO PSD_mf OVER CB_mf_VSS_DUMMY  UBMn_mf_VSS_DUMMY  UBMd_mf_VSS_DUMMY    > 0


 NSD_mf_VDD_VSS_PAD_DUMMY = NET AREA RATIO NSD_mf OVER CB_mf_DUMMY  UBMn_mf_DUMMY  UBMd_mf_DUMMY    > 0
 NSD_mf_VDD_PAD_DUMMY = NET AREA RATIO NSD_mf OVER CB_mf_VDD_DUMMY  UBMn_mf_VDD_DUMMY  UBMd_mf_VDD_DUMMY    > 0
 NSD_mf_VSS_PAD_DUMMY = NET AREA RATIO NSD_mf OVER CB_mf_VSS_DUMMY  UBMn_mf_VSS_DUMMY  UBMd_mf_VSS_DUMMY    > 0







//recognize pad by Pin Text
 PSD_mf_PAD_TEXT = NET AREA RATIO PSD_mf OVER PAD_M1_mf_BY_TEXT PAD_M2_mf_BY_TEXT PAD_M3_mf_BY_TEXT PAD_M4_mf_BY_TEXT PAD_M5_mf_BY_TEXT     > 0
 PSD_mf_VDD_VSS_PAD_TEXT = NET AREA RATIO PSD_mf OVER PWR_M1_mf_BY_TEXT PWR_M2_mf_BY_TEXT PWR_M3_mf_BY_TEXT PWR_M4_mf_BY_TEXT PWR_M5_mf_BY_TEXT     GND_M1_mf_BY_TEXT GND_M2_mf_BY_TEXT GND_M3_mf_BY_TEXT GND_M4_mf_BY_TEXT GND_M5_mf_BY_TEXT     > 0
 PSD_mf_VDD_PAD_TEXT = NET AREA RATIO PSD_mf OVER PWR_M1_mf_BY_TEXT PWR_M2_mf_BY_TEXT PWR_M3_mf_BY_TEXT PWR_M4_mf_BY_TEXT PWR_M5_mf_BY_TEXT     > 0
 PSD_mf_VSS_PAD_TEXT = NET AREA RATIO PSD_mf OVER GND_M1_mf_BY_TEXT GND_M2_mf_BY_TEXT GND_M3_mf_BY_TEXT GND_M4_mf_BY_TEXT GND_M5_mf_BY_TEXT     > 0


 NSD_mf_PAD_TEXT = NET AREA RATIO NSD_mf OVER PAD_M1_mf_BY_TEXT PAD_M2_mf_BY_TEXT PAD_M3_mf_BY_TEXT PAD_M4_mf_BY_TEXT PAD_M5_mf_BY_TEXT     > 0
 NSD_mf_VDD_VSS_PAD_TEXT = NET AREA RATIO NSD_mf OVER PWR_M1_mf_BY_TEXT PWR_M2_mf_BY_TEXT PWR_M3_mf_BY_TEXT PWR_M4_mf_BY_TEXT PWR_M5_mf_BY_TEXT     GND_M1_mf_BY_TEXT GND_M2_mf_BY_TEXT GND_M3_mf_BY_TEXT GND_M4_mf_BY_TEXT GND_M5_mf_BY_TEXT     > 0
 NSD_mf_VDD_PAD_TEXT = NET AREA RATIO NSD_mf OVER PWR_M1_mf_BY_TEXT PWR_M2_mf_BY_TEXT PWR_M3_mf_BY_TEXT PWR_M4_mf_BY_TEXT PWR_M5_mf_BY_TEXT     > 0
 NSD_mf_VSS_PAD_TEXT = NET AREA RATIO NSD_mf OVER GND_M1_mf_BY_TEXT GND_M2_mf_BY_TEXT GND_M3_mf_BY_TEXT GND_M4_mf_BY_TEXT GND_M5_mf_BY_TEXT     > 0







// VDD/VSS Text | VDD/VSS DUMMY | NW/PW strap > IO TEXT
#IFDEF CHECK_LATCHUP_BY_TEXT 
PSD_mf_IOPAD_ALL = (PSD_mf_IOPAD_strap OR PSD_mf_PAD_TEXT) NOT (PSD_mf_VDD_VSS_PAD_TEXT OR PSD_mf_VDD_VSS_PAD_DUMMY)

NSD_mf_IOPAD_ALL = (NSD_mf_IOPAD_strap OR NSD_mf_PAD_TEXT) NOT (NSD_mf_VDD_VSS_PAD_TEXT OR NSD_mf_VDD_VSS_PAD_DUMMY)




#ENDIF
#IFNDEF CHECK_LATCHUP_BY_TEXT 
PSD_mf_IOPAD_ALL = PSD_mf_IOPAD_strap NOT PSD_mf_VDD_VSS_PAD_DUMMY

NSD_mf_IOPAD_ALL = NSD_mf_IOPAD_strap NOT NSD_mf_VDD_VSS_PAD_DUMMY




#ENDIF

PC_ENMOS_WI_RPO_SOURCE_pre = ENSD OUTSIDE RPO
PC_ENMOS_WI_RPO_DRAIN_pre = ENSD NOT PC_ENMOS_WI_RPO_SOURCE_pre 
#IFDEF CHECK_LATCHUP_BY_TEXT
PC_ENMOS_WI_RPO_SOURCE_VSS = PC_ENMOS_WI_RPO_SOURCE_pre INTERACT ((NSD_mf_VSSPAD_strap OR NSD_mf_VSS_PAD_DUMMY) OR NSD_mf_VSS_PAD_TEXT) 
PC_ENMOS_WI_RPO_DRAIN_VDD = PC_ENMOS_WI_RPO_DRAIN_pre INTERACT ((NSD_mf_VDDPAD_strap OR NSD_mf_VDD_PAD_DUMMY) OR NSD_mf_VDD_PAD_TEXT)
#ELSE
PC_ENMOS_WI_RPO_SOURCE_VSS = PC_ENMOS_WI_RPO_SOURCE_pre INTERACT (NSD_mf_VSSPAD_strap OR NSD_mf_VSS_PAD_DUMMY)
PC_ENMOS_WI_RPO_DRAIN_VDD = PC_ENMOS_WI_RPO_DRAIN_pre INTERACT (NSD_mf_VDDPAD_strap OR NSD_mf_VDD_PAD_DUMMY)
#ENDIF
ENSD_PCL_WI_RPO_GATE = (EGTE INTERACT PC_ENMOS_WI_RPO_SOURCE_VSS) INTERACT PC_ENMOS_WI_RPO_DRAIN_VDD
LV_ENSD_PCL_WI_RPO_GATE_W = ((ENSD_PCL_WI_RPO_GATE INSIDE EDGE OD) NOT INSIDE EDGE OD2) INSIDE EDGE NP
LV_ENSD_PCL_WI_RPO_GATE_W_EXP = EXPAND EDGE LV_ENSD_PCL_WI_RPO_GATE_W OUTSIDE BY GRID
LV_ENSD_PCL_WI_RPO_GATE_W_EXPc = STAMP LV_ENSD_PCL_WI_RPO_GATE_W_EXP BY ENSD_DRAINc 

ESD_PMOS_GATE_W = EGTE_W INSIDE EDGE PP
ESD_NMOS_GATE_W = ((EGTE NOT INTERACT PCL_ENMOS) INSIDE EDGE OD) INSIDE EDGE NP
ESD_PCL_GATE_W = (((EGTE INTERACT PCL_ENMOS) INSIDE EDGE OD) NOT INSIDE EDGE OD2) INSIDE EDGE NP
ESD_PMOS_GATE_W_EXP = EXPAND EDGE ESD_PMOS_GATE_W OUTSIDE BY GRID
ESD_NMOS_GATE_W_EXP = EXPAND EDGE ESD_NMOS_GATE_W OUTSIDE BY GRID
ESD_PCL_GATE_W_EXP = EXPAND EDGE ESD_PCL_GATE_W OUTSIDE BY GRID
ESD_PMOS_GATE_W_EXPc = STAMP ESD_PMOS_GATE_W_EXP BY EPSD_DRAINc
ESD_NMOS_GATE_W_EXPc = STAMP ESD_NMOS_GATE_W_EXP BY ENSD_DRAINc
ESD_PCL_GATE_W_EXPc = STAMP ESD_PCL_GATE_W_EXP BY ENSD_DRAINc

LV_ESD_FPCL_GATE_W = (((EGTE INTERACT PCL_ENMOS) INSIDE EDGE OD) NOT INSIDE EDGE OD2) INSIDE EDGE NP   //fully silicided type 1.8V NMOS power clamp
HV_ESD_FPCL_GATE_W = (((EGTE INTERACT PCL_ENMOS) INSIDE EDGE OD) INSIDE EDGE OD2) INSIDE EDGE NP   //fully silicided type 5V NMOS power clamp
LV_ESD_FPCL_GATE_W_EXP = EXPAND EDGE LV_ESD_FPCL_GATE_W OUTSIDE BY GRID
HV_ESD_FPCL_GATE_W_EXP = EXPAND EDGE HV_ESD_FPCL_GATE_W OUTSIDE BY GRID
LV_ESD_FPCL_GATE_W_EXPc = STAMP LV_ESD_FPCL_GATE_W_EXP BY ENSD_DRAINc
HV_ESD_FPCL_GATE_W_EXPc = STAMP HV_ESD_FPCL_GATE_W_EXP BY ENSD_DRAINc
ESD1_GATE = EGTE AND ESD1DMY
ESD1_NCS_GATE = ESD1_GATE NOT INTERACT ENSD_NCO
ESD1_TOL = (ENMOS AND ESD1DMY) INTERACT ENSD_NCO
ESD1_NCS = (ENMOS AND ESD1DMY) NOT INTERACT ENSD_NCO
ENSD_NCO_ESD1DMY = ENSD_NCO INTERACT ESD1DMY
ESD1_TOL_GATE = EGTE INTERACT ENSD_NCO_ESD1DMY
ESD1_TOL_GATE1 = ESD1_TOL_GATE NOT INTERACT ENSD_SRC
ESD1_TOL_GATE2 = ESD1_TOL_GATE INTERACT ENSD_SRC
ESD1_NCS_GATE_W = ESD1_NCS_GATE INSIDE EDGE OD
ESD1_TOL_GATE1_W = ESD1_TOL_GATE1 INSIDE EDGE OD
ESD1_TOL_GATE2_W = ESD1_TOL_GATE2 INSIDE EDGE OD

ESD2_GATE = EGTE AND ESD2DMY
ESD2_REG_GATE = ESD2_GATE NOT INTERACT ENSD_NCO
ESD2_TOL_GATE = ESD2_GATE INTERACT ENSD_NCO
ESD2_TOL_GATE1 = ESD2_TOL_GATE NOT INTERACT ENSD_SRC
ESD2_TOL_GATE2 = ESD2_TOL_GATE INTERACT ENSD_SRC
ESD2_TOL = (ENMOS AND ESD2DMY) INTERACT ENSD_NCO
ESD2_REG = (ENMOS AND ESD2DMY) NOT INTERACT ENSD_NCO
ESD2_REG_GATE_W = ESD2_REG_GATE INSIDE EDGE OD
ESD2_TOL_GATE1_W = ESD2_TOL_GATE1 INSIDE EDGE OD
ESD2_TOL_GATE2_W = ESD2_TOL_GATE2 INSIDE EDGE OD

RPO1 = (((RPO AND SDI) OUTSIDE ESD1DMY) OUTSIDE ESD2DMY) OUTSIDE HVESD1DMY
EGTE1 = ((EGTE OUTSIDE ESD1DMY) OUTSIDE ESD2DMY) NOT INTERACT ENSD_NCO
EGTE1_W = EGTE1 INSIDE EDGE OD

ERPO = RPO AND SDI
ERPOH = HOLES ERPO
ERPOA = ERPOH OR ERPO
ECOS = ECO OUTSIDE ERPOA
HEGT = (EGTE AND OD2) NOT PCL_ENMOS
LEGT = (EGTE NOT OD2) NOT PCL_ENMOS
HEGN = (HEGT AND NP) NOT PCL_ENMOS
HEGP = HEGT AND PP

#IFDEF GUIDELINE_ESD


// For ESD.1g
//=============
PMOSi = (PACTi INTERACT POLYi) INTERACT COi 
NMOSi = (NACTi INTERACT POLYi) INTERACT COi

NSDk_HVMOS = (NSDk INTERACT NMOSi) INTERACT OD2
NSDk_LVMOS = (NSDk INTERACT NMOSi) NOT INTERACT OD2
PSDk_HVMOS = (PSDk INTERACT PMOSi) INTERACT OD2
PSDk_LVMOS = (PSDk INTERACT PMOSi) NOT INTERACT OD2

NSDk_HVMOS_SDI = NSDk_HVMOS INTERACT SDI 
NSDk_LVMOS_SDI = NSDk_LVMOS INTERACT SDI 
PSDk_HVMOS_SDI = PSDk_HVMOS INTERACT SDI 
PSDk_LVMOS_SDI = PSDk_LVMOS INTERACT SDI

HV_GATEk = STAMP HVGT BY ILP1k
LV_GATEk = STAMP LVGT BY ILP1k


ESD.1g { @ Use thin oxide transistor for thin oxide power clamp and thin oxide I/O buffers; 
		 @ Use thick oxide transistor for the thick oxide Power Clamp and thick oxide I/O buffers.
		 @ DRC only flag ((MOS INTERACT OD2) INTERACT SDI) connected to (MOS NOT INTERACT OD2).
		 @ DRC will exclude D/S/G connected to PWSTRAP.
  NET AREA RATIO NSDk_HVMOS_SDI NSDk_LVMOS PSDk_LVMOS LV_GATEk PTAPk > 0 
	[!!AREA(NSDk_HVMOS_SDI)*!AREA(PTAPk)*(!!AREA(NSDk_LVMOS)+!!AREA(PSDk_LVMOS)+!!AREA(LV_GATEk))] 
	RDB ESD.1g.hv_n.rep NSDk_HVMOS_SDI NSDk_LVMOS PSDk_LVMOS LV_GATEk
  NET AREA RATIO PSDk_HVMOS_SDI NSDk_LVMOS PSDk_LVMOS LV_GATEk PTAPk > 0
	[!!AREA(PSDk_HVMOS_SDI)*!AREA(PTAPk)*(!!AREA(NSDk_LVMOS)+!!AREA(PSDk_LVMOS)+!!AREA(LV_GATEk))]
    RDB ESD.1g.hv_p.rep PSDk_HVMOS_SDI NSDk_LVMOS PSDk_LVMOS LV_GATEk
}


ESD.7g { @ For same type OD of the I/O buffer and Power Clamp should be surrounded by a guard-ring. 
		 @ All other type ODs should be placed outside this guard-ring.
  EPMOS NOT INSIDE NTAP_guard_ring_hole 
  ENMOS NOT INSIDE PTAP_guard_ring_hole 
}

ESD.9g { @ The OD area of the edge side of I/O buffer and Power Clamp should be Source or Bulk rather than Drain 
		 @ to avoid an unwanted parasitic bipolar effect or an abnormal discharge path in ESD zapping.
		 @ DRC only flag (((OD INTERACT SDI) NOT PO) INTERACT one Gate) does not connect to STRAP.
  EDGE_NSD = NSDu INTERACT EGTE == 1
  NET AREA RATIO EDGE_NSD PTAPu > 0 [!!AREA(EDGE_NSD)*!AREA(PTAPu)]
  EDGE_PSD = PSDu INTERACT EGTE == 1
  NET AREA RATIO EDGE_PSD NTAPu > 0 [!!AREA(EDGE_PSD)*!AREA(NTAPu)]
}

NTAPkx = NTAPk NOT INTERACT (RNWEL OR VARDMY)
PTAPkx = PTAPk NOT EMPTYi
//Recognize PAD by NW/PW strap
VDD_CBk = NET AREA RATIO CBk NTAPkx > 0            //VDD_CB connected to N+OD pickup
VSS_CBk = NET AREA RATIO CBk PTAPkx > 0        //VSS_CB connected to P+OD pickup
IO_CBk = (CBk NOT VDD_CBk) NOT VSS_CBk

VDD_UBMnk = NET AREA RATIO UBMnk NTAPkx > 0            //VDD_UBMn connected to N+OD pickup
VSS_UBMnk = NET AREA RATIO UBMnk PTAPkx > 0        //VSS_UBMn connected to P+OD pickup
IO_UBMnk = (UBMnk NOT VDD_UBMnk) NOT VSS_UBMnk

VDD_UBMdk = NET AREA RATIO UBMdk NTAPkx > 0            //VDD_UBMd connected to N+OD pickup
VSS_UBMdk = NET AREA RATIO UBMdk PTAPkx > 0        //VSS_UBMd connected to P+OD pickup
IO_UBMdk = (UBMdk NOT VDD_UBMdk) NOT VSS_UBMdk




 PSDk_PAD_strap = NET AREA RATIO PSDk OVER CBk  UBMnk  UBMdk    > 0
 PSDk_IOPAD_strap = NET AREA RATIO PSDk OVER IO_CBk  IO_UBMnk  IO_UBMdk    > 0
 PSDk_VSSPAD_strap = NET AREA RATIO PSDk OVER VSS_CBk  VSS_UBMnk  VSS_UBMdk    > 0
 PSDk_VDDPAD_strap = NET AREA RATIO PSDk OVER VDD_CBk  VDD_UBMnk  VDD_UBMdk    > 0


 NSDk_PAD_strap = NET AREA RATIO NSDk OVER CBk  UBMnk  UBMdk    > 0
 NSDk_IOPAD_strap = NET AREA RATIO NSDk OVER IO_CBk  IO_UBMnk  IO_UBMdk    > 0
 NSDk_VSSPAD_strap = NET AREA RATIO NSDk OVER VSS_CBk  VSS_UBMnk  VSS_UBMdk    > 0
 NSDk_VDDPAD_strap = NET AREA RATIO NSDk OVER VDD_CBk  VDD_UBMnk  VDD_UBMdk    > 0


 NWRTk_PAD_strap = NET AREA RATIO NWRTk OVER CBk  UBMnk  UBMdk    > 0
 NWRTk_IOPAD_strap = NET AREA RATIO NWRTk OVER IO_CBk  IO_UBMnk  IO_UBMdk    > 0
 NWRTk_VSSPAD_strap = NET AREA RATIO NWRTk OVER VSS_CBk  VSS_UBMnk  VSS_UBMdk    > 0
 NWRTk_VDDPAD_strap = NET AREA RATIO NWRTk OVER VDD_CBk  VDD_UBMnk  VDD_UBMdk    > 0


 ODRTk_PAD_strap = NET AREA RATIO ODRTk OVER CBk  UBMnk  UBMdk    > 0
 ODRTk_IOPAD_strap = NET AREA RATIO ODRTk OVER IO_CBk  IO_UBMnk  IO_UBMdk    > 0
 ODRTk_VSSPAD_strap = NET AREA RATIO ODRTk OVER VSS_CBk  VSS_UBMnk  VSS_UBMdk    > 0
 ODRTk_VDDPAD_strap = NET AREA RATIO ODRTk OVER VDD_CBk  VDD_UBMnk  VDD_UBMdk    > 0





//Recognize PAD by Dummy

CBk_DUMMY = CBk INTERACT VDD_VSS_DUMMY
CBk_VDD_DUMMY = CBk INTERACT VDDDMY
CBk_VSS_DUMMY = CBk INTERACT VSSDMY

UBMnk_DUMMY = UBMnk INTERACT VDD_VSS_DUMMY
UBMnk_VDD_DUMMY = UBMnk INTERACT VDDDMY
UBMnk_VSS_DUMMY = UBMnk INTERACT VSSDMY

UBMdk_DUMMY = UBMdk INTERACT VDD_VSS_DUMMY
UBMdk_VDD_DUMMY = UBMdk INTERACT VDDDMY
UBMdk_VSS_DUMMY = UBMdk INTERACT VSSDMY




 PSDk_VDD_VSS_PAD_DUMMY = NET AREA RATIO PSDk OVER CBk_DUMMY  UBMnk_DUMMY  UBMdk_DUMMY    > 0
 PSDk_VDD_PAD_DUMMY = NET AREA RATIO PSDk OVER CBk_VDD_DUMMY  UBMnk_VDD_DUMMY  UBMdk_VDD_DUMMY    > 0
 PSDk_VSS_PAD_DUMMY = NET AREA RATIO PSDk OVER CBk_VSS_DUMMY  UBMnk_VSS_DUMMY  UBMdk_VSS_DUMMY    > 0


 NSDk_VDD_VSS_PAD_DUMMY = NET AREA RATIO NSDk OVER CBk_DUMMY  UBMnk_DUMMY  UBMdk_DUMMY    > 0
 NSDk_VDD_PAD_DUMMY = NET AREA RATIO NSDk OVER CBk_VDD_DUMMY  UBMnk_VDD_DUMMY  UBMdk_VDD_DUMMY    > 0
 NSDk_VSS_PAD_DUMMY = NET AREA RATIO NSDk OVER CBk_VSS_DUMMY  UBMnk_VSS_DUMMY  UBMdk_VSS_DUMMY    > 0


 NWRTk_VDD_VSS_PAD_DUMMY = NET AREA RATIO NWRTk OVER CBk_DUMMY  UBMnk_DUMMY  UBMdk_DUMMY    > 0
 NWRTk_VDD_PAD_DUMMY = NET AREA RATIO NWRTk OVER CBk_VDD_DUMMY  UBMnk_VDD_DUMMY  UBMdk_VDD_DUMMY    > 0
 NWRTk_VSS_PAD_DUMMY = NET AREA RATIO NWRTk OVER CBk_VSS_DUMMY  UBMnk_VSS_DUMMY  UBMdk_VSS_DUMMY    > 0


 ODRTk_VDD_VSS_PAD_DUMMY = NET AREA RATIO ODRTk OVER CBk_DUMMY  UBMnk_DUMMY  UBMdk_DUMMY    > 0
 ODRTk_VDD_PAD_DUMMY = NET AREA RATIO ODRTk OVER CBk_VDD_DUMMY  UBMnk_VDD_DUMMY  UBMdk_VDD_DUMMY    > 0
 ODRTk_VSS_PAD_DUMMY = NET AREA RATIO ODRTk OVER CBk_VSS_DUMMY  UBMnk_VSS_DUMMY  UBMdk_VSS_DUMMY    > 0





//recognize pad by Pin Text
 PSDk_PAD_TEXT = NET AREA RATIO PSDk OVER PAD_M1k_BY_TEXT PAD_M2k_BY_TEXT PAD_M3k_BY_TEXT PAD_M4k_BY_TEXT PAD_M5k_BY_TEXT     > 0
 PSDk_VDD_VSS_PAD_TEXT = NET AREA RATIO PSDk OVER PWR_M1k_BY_TEXT PWR_M2k_BY_TEXT PWR_M3k_BY_TEXT PWR_M4k_BY_TEXT PWR_M5k_BY_TEXT     GND_M1k_BY_TEXT GND_M2k_BY_TEXT GND_M3k_BY_TEXT GND_M4k_BY_TEXT GND_M5k_BY_TEXT     > 0
 PSDk_VDD_PAD_TEXT = NET AREA RATIO PSDk OVER PWR_M1k_BY_TEXT PWR_M2k_BY_TEXT PWR_M3k_BY_TEXT PWR_M4k_BY_TEXT PWR_M5k_BY_TEXT     > 0
 PSDk_VSS_PAD_TEXT = NET AREA RATIO PSDk OVER GND_M1k_BY_TEXT GND_M2k_BY_TEXT GND_M3k_BY_TEXT GND_M4k_BY_TEXT GND_M5k_BY_TEXT     > 0


 NSDk_PAD_TEXT = NET AREA RATIO NSDk OVER PAD_M1k_BY_TEXT PAD_M2k_BY_TEXT PAD_M3k_BY_TEXT PAD_M4k_BY_TEXT PAD_M5k_BY_TEXT     > 0
 NSDk_VDD_VSS_PAD_TEXT = NET AREA RATIO NSDk OVER PWR_M1k_BY_TEXT PWR_M2k_BY_TEXT PWR_M3k_BY_TEXT PWR_M4k_BY_TEXT PWR_M5k_BY_TEXT     GND_M1k_BY_TEXT GND_M2k_BY_TEXT GND_M3k_BY_TEXT GND_M4k_BY_TEXT GND_M5k_BY_TEXT     > 0
 NSDk_VDD_PAD_TEXT = NET AREA RATIO NSDk OVER PWR_M1k_BY_TEXT PWR_M2k_BY_TEXT PWR_M3k_BY_TEXT PWR_M4k_BY_TEXT PWR_M5k_BY_TEXT     > 0
 NSDk_VSS_PAD_TEXT = NET AREA RATIO NSDk OVER GND_M1k_BY_TEXT GND_M2k_BY_TEXT GND_M3k_BY_TEXT GND_M4k_BY_TEXT GND_M5k_BY_TEXT     > 0


 NWRTk_PAD_TEXT = NET AREA RATIO NWRTk OVER PAD_M1k_BY_TEXT PAD_M2k_BY_TEXT PAD_M3k_BY_TEXT PAD_M4k_BY_TEXT PAD_M5k_BY_TEXT     > 0
 NWRTk_VDD_VSS_PAD_TEXT = NET AREA RATIO NWRTk OVER PWR_M1k_BY_TEXT PWR_M2k_BY_TEXT PWR_M3k_BY_TEXT PWR_M4k_BY_TEXT PWR_M5k_BY_TEXT     GND_M1k_BY_TEXT GND_M2k_BY_TEXT GND_M3k_BY_TEXT GND_M4k_BY_TEXT GND_M5k_BY_TEXT     > 0
 NWRTk_VDD_PAD_TEXT = NET AREA RATIO NWRTk OVER PWR_M1k_BY_TEXT PWR_M2k_BY_TEXT PWR_M3k_BY_TEXT PWR_M4k_BY_TEXT PWR_M5k_BY_TEXT     > 0
 NWRTk_VSS_PAD_TEXT = NET AREA RATIO NWRTk OVER GND_M1k_BY_TEXT GND_M2k_BY_TEXT GND_M3k_BY_TEXT GND_M4k_BY_TEXT GND_M5k_BY_TEXT     > 0


 ODRTk_PAD_TEXT = NET AREA RATIO ODRTk OVER PAD_M1k_BY_TEXT PAD_M2k_BY_TEXT PAD_M3k_BY_TEXT PAD_M4k_BY_TEXT PAD_M5k_BY_TEXT     > 0
 ODRTk_VDD_VSS_PAD_TEXT = NET AREA RATIO ODRTk OVER PWR_M1k_BY_TEXT PWR_M2k_BY_TEXT PWR_M3k_BY_TEXT PWR_M4k_BY_TEXT PWR_M5k_BY_TEXT     GND_M1k_BY_TEXT GND_M2k_BY_TEXT GND_M3k_BY_TEXT GND_M4k_BY_TEXT GND_M5k_BY_TEXT     > 0
 ODRTk_VDD_PAD_TEXT = NET AREA RATIO ODRTk OVER PWR_M1k_BY_TEXT PWR_M2k_BY_TEXT PWR_M3k_BY_TEXT PWR_M4k_BY_TEXT PWR_M5k_BY_TEXT     > 0
 ODRTk_VSS_PAD_TEXT = NET AREA RATIO ODRTk OVER GND_M1k_BY_TEXT GND_M2k_BY_TEXT GND_M3k_BY_TEXT GND_M4k_BY_TEXT GND_M5k_BY_TEXT     > 0





// VDD/VSS Text | VDD/VSS DUMMY | NW/PW strap > IO TEXT
#IFDEF CHECK_LATCHUP_BY_TEXT 
PSDk_IOPAD_ALL = (PSDk_IOPAD_strap OR PSDk_PAD_TEXT) NOT (PSDk_VDD_VSS_PAD_TEXT OR PSDk_VDD_VSS_PAD_DUMMY)

NSDk_IOPAD_ALL = (NSDk_IOPAD_strap OR NSDk_PAD_TEXT) NOT (NSDk_VDD_VSS_PAD_TEXT OR NSDk_VDD_VSS_PAD_DUMMY)

NWRTk_IOPAD_ALL = (NWRTk_IOPAD_strap OR NWRTk_PAD_TEXT) NOT (NWRTk_VDD_VSS_PAD_TEXT OR NWRTk_VDD_VSS_PAD_DUMMY)

ODRTk_IOPAD_ALL = (ODRTk_IOPAD_strap OR ODRTk_PAD_TEXT) NOT (ODRTk_VDD_VSS_PAD_TEXT OR ODRTk_VDD_VSS_PAD_DUMMY)


#ENDIF
#IFNDEF CHECK_LATCHUP_BY_TEXT 
PSDk_IOPAD_ALL = PSDk_IOPAD_strap NOT PSDk_VDD_VSS_PAD_DUMMY

NSDk_IOPAD_ALL = NSDk_IOPAD_strap NOT NSDk_VDD_VSS_PAD_DUMMY

NWRTk_IOPAD_ALL = NWRTk_IOPAD_strap NOT NWRTk_VDD_VSS_PAD_DUMMY

ODRTk_IOPAD_ALL = ODRTk_IOPAD_strap NOT ODRTk_VDD_VSS_PAD_DUMMY


#ENDIF

PSDk_CB = PSDk INTERACT PSDk_IOPAD_ALL  
NSDk_CB = NSDk INTERACT NSDk_IOPAD_ALL  

NWELc = COPY NWEL
CONNECT NWELc
PWELc = COPY PWEL
CONNECT PWELc

ESD.10g { @ Except the ESD device, either of the following two condition must be followed.
		  @ 1. The space of two same type ODs >= ^ESD_10g um. 
		  @ 2. Two same type ODs should be separated by different type OD.    
          @ The same type ODs are N+OD and N+OD in the same PW, or P+OD and P+OD in the same NW, which connect to two different Pad.
  PACT_CHECK = (PACT INTERACT PSDk_CB) NOT EPMOS 
  PACT_CHECK_CB = STAMP (PACT_CHECK INTERACT PSDk_CB == 1 BY NET) BY PSDk_CB
  P1 = EXT PACT_CHECK_CB < ESD_10g ABUT < 90 SINGULAR REGION NOT CONNECTED
  PACT_CHECK_NW = STAMP (PACT_CHECK INTERACT P1) BY NWELc
  P2 = EXT PACT_CHECK_NW < ESD_10g ABUT < 90 SINGULAR REGION CONNECTED
  ESD_P3 = P1 AND P2
  (ESD_P3 NOT NTAPi) INTERACT PACT_CHECK_CB > 1 BY NET
  PACT_CHECK INTERACT PSDk_CB > 1 BY NET

  NACT_CHECK = (NACT INTERACT NSDk_CB) NOT ENMOS 
  NACT_CHECK_CB = STAMP (NACT_CHECK INTERACT NSDk_CB == 1 BY NET) BY NSDk_CB
  N1 = EXT NACT_CHECK_CB < ESD_10g ABUT < 90 SINGULAR REGION NOT CONNECTED
  NACT_CHECK_PW = STAMP (NACT_CHECK INTERACT N1) BY PWELc
  N2 = EXT NACT_CHECK_PW < ESD_10g ABUT < 90 SINGULAR REGION CONNECTED
  ESD_N3 = N1 AND N2
  (ESD_N3 NOT PTAPi) INTERACT NACT_CHECK_CB > 1 BY NET  
  NACT_CHECK INTERACT NSDk_CB > 1 BY NET

}


ESD.3g { @ Total finger width for 5.0V, 3.3V, 2.5V, 1.8V and 1.5V N/PMOS I/O buffer in same connection of drain >= ^ESD_3g
A =	NET AREA RATIO ESD_PMOS_GATE_W_EXPc >= ESD_3g
		[AREA(ESD_PMOS_GATE_W_EXPc)/GRID]
EPMOS NOT INTERACT A
B =	NET AREA RATIO ESD_NMOS_GATE_W_EXPc >= ESD_3g
		[AREA(ESD_NMOS_GATE_W_EXPc)/GRID]
(ENMOS NOT INTERACT PCL_ENMOS) NOT INTERACT B
}
//ESD.4g is checked by ESD.3g
ESD.5g { @ Total finger width for 1.8V and 1.5V NMOS power clamp in same connection of drain >= ^ESD_5g
    NET AREA RATIO LV_ENSD_PCL_WI_RPO_GATE_W_EXPc < ESD_5g
		[AREA(LV_ENSD_PCL_WI_RPO_GATE_W_EXPc)/GRID]
        RDB ESD.5g.rep LV_ENSD_PCL_WI_RPO_GATE_W_EXPc
}
ESD.5.1g{@Total finger width of 1.8V NMOS based fully silicided type active Power Clamp in same connection of drain. >= ^ESD_5_1g	
  NET AREA RATIO LV_ESD_FPCL_GATE_W_EXPc < ESD_5_1g
      [AREA(LV_ESD_FPCL_GATE_W_EXPc)/GRID]
      RDB ESD.5.1g.rep LV_ESD_FPCL_GATE_W_EXPc 
}

ESD.5.2g {@Total finger width of 5V NMOS based fully silicided type active Power Clamp in same connection of drain. >= ^ESD_5_2g
  NET AREA RATIO HV_ESD_FPCL_GATE_W_EXPc < ESD_5_2g 
      [AREA(HV_ESD_FPCL_GATE_W_EXPc)/GRID]
      RDB ESD.5.2g.rep HV_ESD_FPCL_GATE_W_EXPc
}


ESD.6g { @ Unit finger width of NMOS and PMOS for I/O buffer and power clamp device 15um <= width <= 60um.
  PATH LENGTH EGTE_W >0  < 15
  PATH LENGTH EGTE_W >60 < 999
}
// begin of ESD.8, butted or inserted pickup is not allowed
ESD.8g { @ It is strictly prohitibied to butting or inserted substrat/well pickups for ESD N/PMOS.
  
  EAct = (EPACT OR ENACT) NOT DIO3TDMY
  DTap = NTAP OR PTAP
  EActUp3 = SIZE EAct BY 3 OUTSIDE OF DTap STEP 0.22*0.7
  D1 = DTap INTERACT EActUp3
  
  D1R1 = SHRINK D1 RIGHT BY 0.001
  D1R2 = D1 NOT D1R1 
  D1R3 = D1 COIN EDGE D1R2
  D1R4 = LENGTH D1R3 > 0.001
  D1R5 = EXT [D1R4] EAct < 3 ABUT < 90 OPPOSITE  
  D1L  = D1 WITH EDGE D1R5 
  D1L1 = SHRINK D1L LEFT BY 0.001
  D1L2 = D1L NOT D1L1 
  D1L3 = D1L COIN EDGE D1L2
  D1L4 = LENGTH D1L3 > 0.001
  D1L5 = EXT [D1L4] EAct < 3 ABUT < 90 OPPOSITE  
  D1X  = D1L WITH EDGE D1L5 
  D1T1 = SHRINK D1 TOP BY 0.001
  D1T2 = D1 NOT D1T1 
  D1T3 = D1 COIN EDGE D1T2
  D1T4 = LENGTH D1T3 > 0.001
  D1T5 = EXT [D1T4] EAct < 3 ABUT < 90 OPPOSITE  
  D1B  = D1 WITH EDGE D1T5 
  D1B1 = SHRINK D1B BOTTOM BY 0.001
  D1B2 = D1B NOT D1B1 
  D1B3 = D1B COIN EDGE D1B2
  D1B4 = LENGTH D1B3 > 0.001
  D1B5 = EXT [D1B4] EAct < 3 ABUT < 90 OPPOSITE  
  D1Y  = D1B WITH EDGE D1B5
  DTap2Check=D1X OR D1Y
  
  DTapHole = HOLES DTap2Check INNER
  DTapSuspect = DTap2Check NOT TOUCH DTapHole
  ENCLOSE RECTANGLE DTapSuspect 0.22 20
}


#IFDEF 1.5V
ESD.18g_1.5V { @ Minimum 1.5V IO ESD NMOS/PMOS gate length >=0.2um
  INT LEGT < 0.2 ABUT < 90 SINGULAR REGION
}
#ENDIF
#IFDEF 1.8V
ESD.18g_1.8V { @ Minimum 1.8V IO ESD NMOS/PMOS gate length >=0.25um
  INT LEGT < 0.25 ABUT < 90 SINGULAR REGION
}
#ENDIF
#IFDEF 2.5V
ESD.18g_2.5V_N { @ Minimum 2.5V IO ESD NMOS gate length >= 0.3um
  INT HEGN < 0.3 ABUT < 90 SINGULAR REGION
}
ESD.18g_2.5V_P { @ Minimum 2.5V IO ESD PMOS gate length >= 0.25um
  INT HEGP < 0.25 ABUT < 90 SINGULAR REGION
}
#ENDIF
#IFDEF 3.3V
ESD.18g_3.3V_N { @ Minimum 3.3V IO ESD NMOS gate length >= 0.4um
  INT HEGN < 0.4 ABUT < 90 SINGULAR REGION
}
ESD.18g_3.3V_P { @ Minimum 3.3V IO ESD PMOS gate length >= 0.3um
  INT HEGP < 0.3 ABUT < 90 SINGULAR REGION
}
#ENDIF

#IFDEF 5V
HEGN1 = HEGN INTERACT ESD
HEGN2 = HEGN NOT HEGN1
ESD.18g_5V_NESD { @ Minimum 5.0V IO ESD NMOS(without ESD implant)/PMOS gate length >= 0.6um
  INT HEGN2 < 0.6 ABUT<90 SINGULAR REGION
}
ESD.18g_5V_P { @ Minimum 5.0V IO ESD NMOS(without ESD implant)/PMOS gate length >= 0.6um
  INT HEGP < 0.6 ABUT<90 SINGULAR REGION
}
ESD.18g_5V_WESD { @ Minimum 5.0V IO ESD NMOS (with ESD implant) gate length >=0.9um
  INT HEGN1 < 0.9 ABUT<90 SINGULAR REGION
}
#ENDIF


ESD.19g { @ NMOS and PMOS of I/O buffer should have a nonsalicide area on drain side, that is, RPO mask should
          @ block drain side of device (except contact region should keep silicided).
   ( EGTE INSIDE EPMOS ) NOT INTERACT ( EPSD INTERACT RPO )
   ( EGTE INSIDE ( ENMOS INTERACT RPO)) NOT INTERACT ( ENSD INTERACT RPO )
}

ESD.21g { @ For regular I/O designed by 5V, 3.3V, 2.5V, 1.8V and 1.5V NMOS (see N3 in Fig.6a)
    	  @ Minimum and maximum overlap from RPO on the drain side to the active poly gate 0.05um or 0.06um
  X = ESD2_REG_GATE NOT RPO
  ESD2_REG NOT INTERACT X
  ESD2_REG_GATE OUTSIDE RPO
  INT ESD2_REG_GATE RPO < 0.05 ABUT < 90 OPPOSITE REGION 
  ESD2_REG_GATE_RPO = ESD2_REG_GATE CUT RPO
  ESD2_REG_GATE_RPO_CH = ESD2_REG_GATE_RPO AND RPO
  A = SIZE ESD2_REG_GATE_RPO_CH BY 0.025 UNDEROVER
  INT A < 0.06 ABUT < 90 OPPOSITE REGION
  SIZE A BY 0.03 UNDEROVER
}
// ESD.22g is checked by ESD.21g
// ESD.23g is checked by ESD.21g
ESD.24g { @ The minimum width of RPO on drain side (X) for 5V,3.3V, 2.5V, 1.8V and 1.5V NMOS and PMOS.
    	  @ exclude 1.8V and 1.5V NMOS when used as power clamp device>=1.95um 
  X = ((ENSD_WCO OR EPSD_WCO ) AND ESD2DMY) AND RPO
  Y = EGTE COIN OUTSIDE EDGE X
  Z = RPO COIN INSIDE EDGE X 
  ENC Y Z < 1.95 ABUT < 90 REGION 
}
ESD.25g { @ The minimum clearance from poly edge to CO edge on source side for NMOS and PMOS (Except ESD.26g)>=0.5um
  X = ECOS AND ((ENMOS OR EPMOS ) INTERACT RPO)     
  EXT X EGTE_W < 0.5 ABUT < 90 OPPOSITE REGION
  Y = ECO AND ESD1_NCS
  EXT Y EGTE_W < 0.5 ABUT < 90 OPPOSITE REGION
}
ESD.26g { @ The minimum clearance of poly edge to CO edge on D/S side for 1.8V and 1.5V Unsilicided type power clamp device>=0.25um 
  X = ECO AND ( ENMOS INTERACT ENSD_PCL_WI_RPO_GATE)
  EXT X EGTE_W < 0.25 ABUT < 90 OPPOSITE REGION    
}

ESD.27g { @ For RPO DRC purpose,we need a dummy layers in ESD protection device.layers should cover all ESD protection devices.
          @ ESD2DMY is for the cascade NMOS in high voltage tolerant I/O designed by 3.3V/2.5V NMOS (see Fig.5b), regular IO designed by
	  @ 5V/3.3V/2.5V/1.8V/1.5V NMOS and PMOS (see Fig.6b), power clmap designed by 5V/3.3V/2.5V NMOS.
   X = EGTE CUT RPO
   ( EGTE INSIDE ( ENMOS ENCLOSE X )) NOT ESD2DMY
   ( EGTE INSIDE ( EPMOS ENCLOSE X )) NOT ESD2DMY
}
// ESD.29g is checked by ESD.19g
ESD.30g { @ For regular 1.8V I/O in NMOS region : Minumum clearance from RPO to poly spacing >=0.45um.
  EXT RPO1 EGTE1_W < 0.45 ABUT < 90 OPPOSITE REGION
  EGTE1 AND RPO1
}
//ESD.31g is checked by ESD.30g
ESD.32g { @The minimum width of RPO on drain side (X) for 1.8V NMOS and 5V/3.3V/1.8V/1.5V PMOS.>=1.5um
  Y = RPO1 INSIDE EDGE OD
  INT Y < 1.5 ABUT < 90 REGION
}
//ESD.33g is checked by ESD.25g
ESD.34g { @ 5V, 3.3V and 2.5V NMOS devices when used as power clamp devices, the RPO can fully cover the 
    	  @ uncontacted poly gate, source/drain (except contact region should keep silicided). 
  ( ENMOS INTERACT ESD1DMY ) NOT ERPOA        
}

NCS_SD_1 = ((OD INTERACT EGTE) NOT POLY) AND ESD1DMY
NCS_SD = STAMP NCS_SD_1 BY NSD_mf
NCS_S  = NET AREA RATIO NCS_SD PTAP_mf >0
NCS_D  = NCS_SD NOT NCS_S
ESD.35g{ @ Minimum width of RPO on drain side (X) for 5V, 3.3V and 2.5V NMOS devices when used as power clamp 
    	 @ devices. Ncs Drain is defined as (((OD INTERACT GATE) NOT PO) AND ESD1DMY) 
	 @ which not connect to PW Pickup.>=1.95um
  X = NCS_D AND RPO 
  Y = EGTE COIN OUTSIDE EDGE NCS_D
  Z = RPO COIN INSIDE EDGE X 
  ENC Y Z < 1.95 ABUT < 90 REGION 
  
}
//ESD.36g is checked by ESD.25g

ESD.37g { @  For RPO DRC purpose, we need a dummy layers for 5V, 3.3Vand 2.5V NMOS devices when used as power 
    	  @  clamp devices. The layers should cover all ESD protection devices.   
   X = EGTE NOT INSIDE RPO
   Y = ENMOS NOT ENCLOSE X
   Y NOT INTERACT ESD1DMY
   ESD1DMY AND GATE_PP
   ( EGTE INSIDE (ENMOS ENCLOSE ESD1_GATE)) NOT ESD1DMY // ESD1DMY should cover all EGTE in new design rule.
}
//ESD.38g is checked by ESD.3g
//ESD.39g IS checked by ESD.3g



ESD.WARN.1 { @ CO can't inserted between gate and RPO for 1.8V NMOS and all PMOS I/O pattern.
  RED  = (EPSD OR ENSD) INTERACT RPO1
  XRPO = RED NOT RPO1
  XRPG = XRPO TOUCH EGTE1
  XRPG INTERACT ECO
}


#IFDEF 5V
ESD.WARN.2 { @ ESD3DMY is not allowed in 5V process.
  COPY ESD3DMY
}
#ENDIF
#IFNDEF 5V
ESD.WARN.3 { @ ESD is not allowed in processes except 5V.    
  COPY ESD
}
#ENDIF
ESD.WARN.4 { @ Any pad should connect to ESD protection devices. DRC flags pads (recognized by CB and UBM) which do not connect to OD covered by SDI (58;0).
    @Exception: Sealring region, assembly region or dummy pad
   WAIVE_REGION = SEALRING_ALL OR ASS_REGION
   ESD_NSDk = NSDk AND SDI
   ESD_PSDk = PSDk AND SDI
   ESD_PTAPk = PTAPk AND SDI
   ESD_NTAPk = NTAPk AND SDI
   CB_NOT_DUMMY = CBk AND (NET AREA RATIO CBk OVER COk > 0)
   UBMn_NOT_DUMMY = UBMnk AND (NET AREA RATIO UBMnk OVER COk > 0)
   UBMd_NOT_DUMMY = UBMdk AND (NET AREA RATIO UBMdk OVER COk > 0)

   PAD_VDD_CB = NET AREA RATIO CB_NOT_DUMMY OVER VDD_CB CB_VDD_DUMMY > 0 
   PAD_IOVSS_CB = NET AREA RATIO CB_NOT_DUMMY OVER VDD_CB CB_VDD_DUMMY == 0 
   MERGE ((NET AREA RATIO PAD_VDD_CB OVER ESD_NSDk ESD_PSDk ESD_PTAPk ESD_NTAPk == 0) NOT WAIVE_REGION)
   MERGE ((NET AREA RATIO PAD_IOVSS_CB OVER ESD_NSDk ESD_PSDk ESD_PTAPk ESD_NTAPk == 0) NOT WAIVE_REGION)

   PAD_VDD_UBMn = NET AREA RATIO UBMn_NOT_DUMMY OVER VDD_UBMn UBMn_VDD_DUMMY > 0 
   PAD_IOVSS_UBMn = NET AREA RATIO UBMn_NOT_DUMMY OVER VDD_UBMn UBMn_VDD_DUMMY == 0 
   MERGE ((NET AREA RATIO PAD_VDD_UBMn OVER ESD_NSDk ESD_PSDk ESD_PTAPk ESD_NTAPk == 0) NOT WAIVE_REGION)
   MERGE ((NET AREA RATIO PAD_IOVSS_UBMn OVER ESD_NSDk ESD_PSDk ESD_PTAPk ESD_NTAPk == 0) NOT WAIVE_REGION)

   PAD_VDD_UBMd = NET AREA RATIO UBMd_NOT_DUMMY OVER VDD_UBMd UBMd_VDD_DUMMY > 0 
   PAD_IOVSS_UBMd = NET AREA RATIO UBMd_NOT_DUMMY OVER VDD_UBMd UBMd_VDD_DUMMY == 0 
   MERGE ((NET AREA RATIO PAD_VDD_UBMd OVER ESD_NSDk ESD_PSDk ESD_PTAPk ESD_NTAPk == 0) NOT WAIVE_REGION)
   MERGE ((NET AREA RATIO PAD_IOVSS_UBMd OVER ESD_NSDk ESD_PSDk ESD_PTAPk ESD_NTAPk == 0) NOT WAIVE_REGION)

}

ESD.WARN.5 { @ SDI encloure of LV ACTIVE >= 0
    LV_ACT = DACT OUTSIDE HVDMY
    (LV_ACT INTERACT SDI) NOT SDI

}

PWR_M1k_BY_TEXT = M1k WITH TEXT VDD_TEXT M1_PIN_TEXT PRIMARY ONLY
GND_M1k_BY_TEXT = M1k WITH TEXT VSS_TEXT M1_PIN_TEXT PRIMARY ONLY
PAD_M1k_BY_TEXT = M1k WITH TEXT PAD_TEXT M1_PIN_TEXT PRIMARY ONLY
PWR_M2k_BY_TEXT = M2k WITH TEXT VDD_TEXT M2_PIN_TEXT PRIMARY ONLY
GND_M2k_BY_TEXT = M2k WITH TEXT VSS_TEXT M2_PIN_TEXT PRIMARY ONLY
PAD_M2k_BY_TEXT = M2k WITH TEXT PAD_TEXT M2_PIN_TEXT PRIMARY ONLY
PWR_M3k_BY_TEXT = M3k WITH TEXT VDD_TEXT M3_PIN_TEXT PRIMARY ONLY
GND_M3k_BY_TEXT = M3k WITH TEXT VSS_TEXT M3_PIN_TEXT PRIMARY ONLY
PAD_M3k_BY_TEXT = M3k WITH TEXT PAD_TEXT M3_PIN_TEXT PRIMARY ONLY
PWR_M4k_BY_TEXT = M4k WITH TEXT VDD_TEXT M4_PIN_TEXT PRIMARY ONLY
GND_M4k_BY_TEXT = M4k WITH TEXT VSS_TEXT M4_PIN_TEXT PRIMARY ONLY
PAD_M4k_BY_TEXT = M4k WITH TEXT PAD_TEXT M4_PIN_TEXT PRIMARY ONLY
PWR_M5k_BY_TEXT = M5k WITH TEXT VDD_TEXT M5_PIN_TEXT PRIMARY ONLY
GND_M5k_BY_TEXT = M5k WITH TEXT VSS_TEXT M5_PIN_TEXT PRIMARY ONLY
PAD_M5k_BY_TEXT = M5k WITH TEXT PAD_TEXT M5_PIN_TEXT PRIMARY ONLY

NWR_T   = (NWELi INTERACT RWDMY) NOT RWDMY
NWRTk = STAMP NWR_T BY COk
ODRES_a    = ODRES AND RPDUMMY
ODR_T = ((OD NOT POLY) INTERACT ODRES_a) NOT ODRES_a
ODRTk = STAMP ODR_T BY COk

ESD.40 { @ It is not allowed to use Unsilicided OD resistors or NW resistors connected to IO PAD
		 @ DRC will use (1) {((RPDMY OR DPDMY(drawing1)) AND (OD NOT INTERACT PO)) AND RPO} to recognize Unsilicided OD resistor
		 @ (2) {(RWDMY OR RWDMY(drawing1)) INTERACT NW} to recognize NW resistor.
         COPY NWRTk_IOPAD_ALL 
         COPY ODRTk_IOPAD_ALL
}
#ENDIF


// ESD checks
//===========

ESD.W.1{ @ Minimum esd width < 0.6
  INT ESD < 0.6 SINGULAR ABUT < 90 REGION
}
ESD.S.1{ @ Minimum esd space < 0.6
  EXT ESD < 0.6 ABUT < 90 REGION
}
ESD.S.2{ @ Minimum space between ESD and NP or PP < 0.3
  EXT ESD PP < 0.3 ABUT >0<90 SINGULAR REGION
  EXT ESD NP < 0.3 ABUT <90 SINGULAR REGION
  X = EXT ESD [PP] < 0.001 ABUT == 0
  Y = EXPAND EDGE X OUTSIDE BY 0.001
  Y NOT INTERACT NPOD
}
ESD.C.1{ @ Minimum clearance from an ESD to an NP OD < 0.6
  EXT ESD NPOD < 0.6 SINGULAR ABUT < 90 REGION
}
ESD.C.2{ @ Minimum clearance from an ESD to a N-ch PO gate < 0.45
  ENC GATE_W ESD < 0.45 ABUT REGION
  ALL_GATE CUT ESD    
}
ESD.O.1{ @ Minimum overlap from an ESD edge to an OD region < 0.45
  INT ESD OD < 0.45 SINGULAR ABUT>0 <90 REGION 
}
ESD.C.4 { @ Min. space from ESD to ESD OD < 0.6
  X = NPOD INTERACT ESD
  EXT ESD X < 0.6 ABUT <90 SINGULAR REGION
}
ESD.E.1{ @ Minimum extension of an ESD region beyond an ESD OD < 0.25
  ENC OD ESD < 0.25 SINGULAR ABUT < 90 REGION
  ESD INSIDE OD
}
// ESD.C.5 is not necessary to check
ESD.R.1 { @ ESD and PP not allowed on same POLY region
  A = ESD AND POLY
  A AND PP
}


VARIABLE HVLUP_W_1_HVDMY_5_GA 0.42
VARIABLE HVLUP_W_2_HVDMY_5_GA 0.42
VARIABLE HVLUP_W_3_HVDMY_5_GA 0.42
VARIABLE HVLUP_W_4_HVDMY_5_GA 0.42
VARIABLE HVLUP_W_5_HVDMY_5_GA 0.42
VARIABLE HVLUP_W_6_HVDMY_5_GA 0.42
VARIABLE HVLUP_W_7_HVDMY_5_GA 3.0
VARIABLE HVLUP_W_8_HVDMY_5_GA 3.0
VARIABLE HVLUP_W_9_HVDMY_5_GA 0.42
VARIABLE HVLUP_W_10_HVDMY_5_GA 0.42
VARIABLE HVLUP_W_11_HVDMY_5_GA 0.42

#IFDEF CHECK_HVLUP_WITH_175C 
VARIABLE HVLUP_C_2_HVDMY_5_GA 10.0
VARIABLE HVLUP_C_3_HVDMY_5_GA 10.0
VARIABLE HVLUP_C_4_HVDMY_5_GA 10.0
VARIABLE HVLUP_C_5_HVDMY_5_GA 10.0
VARIABLE HVLUP_C_6_HVDMY_5_GA 10.0
VARIABLE HVLUP_C_7_HVDMY_5_GA 10.0
VARIABLE HVLUP_C_8_HVDMY_5_GA 10.0
VARIABLE HVLUP_C_9_HVDMY_5_GA 10.0
#ENDIF
VARIABLE HVLUP_E_1_HVDMY_5_GA 0.5
VARIABLE HVLUP_E_2_HVDMY_5_GA 0.5
VARIABLE HVLUP_E_3_HVDMY_5_GA 0.5
VARIABLE HVLUP_E_4_HVDMY_5_GA 0.5
VARIABLE HVLUP_E_7_HVDMY_5_GA 0.0
VARIABLE HVLUP_E_8_HVDMY_5_GA 0.0
VARIABLE HVLUP_C_10_HVDMY_5_GA 0.5
VARIABLE HVLUP_C_11_HVDMY_5_GA 0.5

#IFNDEF CHECK_HVLUP_WITH_175C 
VARIABLE HVLUP_C_2_HVDMY_5_GA 10.0
VARIABLE HVLUP_C_3_HVDMY_5_GA 10.0
VARIABLE HVLUP_C_4_HVDMY_5_GA 10.0
VARIABLE HVLUP_C_5_HVDMY_5_GA 10.0
VARIABLE HVLUP_C_6_HVDMY_5_GA 10.0
VARIABLE HVLUP_C_7_HVDMY_5_GA 10.0
VARIABLE HVLUP_C_8_HVDMY_5_GA 10.0
VARIABLE HVLUP_C_9_HVDMY_5_GA 10.0
#ENDIF


VARIABLE HVLUP_W_1_HVDMY_36_GB 3.0
VARIABLE HVLUP_W_2_HVDMY_36_GB 3.0
VARIABLE HVLUP_W_3_HVDMY_36_GB 3.0
VARIABLE HVLUP_W_4_HVDMY_36_GB 3.0
VARIABLE HVLUP_W_5_HVDMY_36_GB 3.0
VARIABLE HVLUP_W_6_HVDMY_36_GB 3.0
VARIABLE HVLUP_W_7_HVDMY_36_GB 3.5
VARIABLE HVLUP_W_8_HVDMY_36_GB 3.5
VARIABLE HVLUP_W_11_HVDMY_36_GB 0.42

#IFDEF CHECK_HVLUP_WITH_175C 
VARIABLE HVLUP_C_2_HVDMY_36_GB 70.0
VARIABLE HVLUP_C_3_HVDMY_36_GB 70.0
VARIABLE HVLUP_C_4_HVDMY_36_GB 70.0
VARIABLE HVLUP_C_5_HVDMY_36_GB 70.0
VARIABLE HVLUP_C_6_HVDMY_36_GB 70.0
VARIABLE HVLUP_C_7_HVDMY_36_GB 70.0
VARIABLE HVLUP_C_8_HVDMY_36_GB 70.0
VARIABLE HVLUP_C_9_HVDMY_36_GB 70.0
#ENDIF
VARIABLE HVLUP_E_1_HVDMY_36_GB 1.0
VARIABLE HVLUP_E_2_HVDMY_36_GB 1.0
VARIABLE HVLUP_E_3_HVDMY_36_GB 1.0
VARIABLE HVLUP_E_4_HVDMY_36_GB 1.0
VARIABLE HVLUP_E_7_HVDMY_36_GB 6.0
VARIABLE HVLUP_E_8_HVDMY_36_GB 6.0
VARIABLE HVLUP_C_10_HVDMY_36_GB 1.0
VARIABLE HVLUP_C_11_HVDMY_36_GB 1.0

#IFNDEF CHECK_HVLUP_WITH_175C 
VARIABLE HVLUP_C_2_HVDMY_36_GB 60.0
VARIABLE HVLUP_C_3_HVDMY_36_GB 60.0
VARIABLE HVLUP_C_4_HVDMY_36_GB 60.0
VARIABLE HVLUP_C_5_HVDMY_36_GB 60.0
VARIABLE HVLUP_C_6_HVDMY_36_GB 60.0
VARIABLE HVLUP_C_7_HVDMY_36_GB 60.0
VARIABLE HVLUP_C_8_HVDMY_36_GB 60.0
VARIABLE HVLUP_C_9_HVDMY_36_GB 60.0
#ENDIF




VARIABLE HVLUP_W_1_HVDMY_45_GB	3.0
VARIABLE HVLUP_W_1_HVDMY_29_GA  2.5
VARIABLE HVLUP_W_1_HVDMY_24_20_16_12_9_6_GA	2.0
VARIABLE HVLUP_W_2_HVDMY_45_GB	3.0
VARIABLE HVLUP_W_2_HVDMY_29_GA	2.5
VARIABLE HVLUP_W_2_HVDMY_24_20_16_12_9_6_GA	2.0
VARIABLE HVLUP_W_3_HVDMY_45_GB	3.0
VARIABLE HVLUP_W_3_HVDMY_29_GA	2.5
VARIABLE HVLUP_W_3_HVDMY_24_20_16_12_9_6_GA	2.0
VARIABLE HVLUP_W_4_HVDMY_45_GB	3.0
VARIABLE HVLUP_W_4_HVDMY_29_GA	2.5
VARIABLE HVLUP_W_4_HVDMY_24_20_16_12_9_6_GA	2.0
VARIABLE HVLUP_W_5_HVDMY_29_GA	2.5
VARIABLE HVLUP_W_5_HVDMY_45_GB  3.0
VARIABLE HVLUP_W_5_HVDMY_24_20_16_12_9_6_GA	2.0
VARIABLE HVLUP_W_6_HVDMY_45_GB	3.0
VARIABLE HVLUP_W_6_HVDMY_29_GA	2.5
VARIABLE HVLUP_W_6_HVDMY_24_20_16_12_9_6_GA	2.0
VARIABLE HVLUP_W_7_HVDMY_45_GB	3.5
VARIABLE HVLUP_W_7_HVDMY_29_GA	3.0
VARIABLE HVLUP_W_7_HVDMY_24_20_16_12_9_6_GA	3.0
VARIABLE HVLUP_W_8_HVDMY_45_GB	3.5
VARIABLE HVLUP_W_8_HVDMY_29_GA	3.0
VARIABLE HVLUP_W_8_HVDMY_24_20_16_12_9_6_GA	3.0
VARIABLE HVLUP_W_9_HVDMY_24_20_16_12_9_6_GA				2.0
VARIABLE HVLUP_W_10_HVDMY_24_20_16_12_9_6_GA			2.0
VARIABLE HVLUP_W_11_HVDMY_45_GB	0.42
VARIABLE HVLUP_W_11_HVDMY_29_GA	0.42
VARIABLE HVLUP_W_11_HVDMY_24_20_16_12_9_6_GA	0.42
VARIABLE HVLUP_C_1				200

#IFNDEF CHECK_HVLUP_WITH_175C
VARIABLE HVLUP_C_2_HVDMY_45_GB	70
VARIABLE HVLUP_C_2_HVDMY_29_GA	36
VARIABLE HVLUP_C_2_HVDMY_24_20_16_12_9_6_GA	30
VARIABLE HVLUP_C_3_HVDMY_45_GB	70
VARIABLE HVLUP_C_3_HVDMY_29_GA	36
VARIABLE HVLUP_C_3_HVDMY_24_20_16_12_9_6_GA	30
VARIABLE HVLUP_C_4_HVDMY_45_GB	70
VARIABLE HVLUP_C_4_HVDMY_29_GA	36
VARIABLE HVLUP_C_4_HVDMY_24_20_16_12_9_6_GA	30
VARIABLE HVLUP_C_5_HVDMY_45_GB	70
VARIABLE HVLUP_C_5_HVDMY_29_GA	36
VARIABLE HVLUP_C_5_HVDMY_24_20_16_12_9_6_GA	30
VARIABLE HVLUP_C_6_HVDMY_45_GB	70
VARIABLE HVLUP_C_6_HVDMY_29_GA	36
VARIABLE HVLUP_C_6_HVDMY_24_20_16_12_9_6_GA	30
VARIABLE HVLUP_C_7_HVDMY_45_GB	70
VARIABLE HVLUP_C_7_HVDMY_29_GA	36
VARIABLE HVLUP_C_7_HVDMY_24_20_16_12_9_6_GA	30
VARIABLE HVLUP_C_8_HVDMY_45_GB	70
VARIABLE HVLUP_C_8_HVDMY_29_GA	36
VARIABLE HVLUP_C_8_HVDMY_24_20_16_12_9_6_GA	30
VARIABLE HVLUP_C_9_HVDMY_45_GB	70
VARIABLE HVLUP_C_9_HVDMY_29_GA	36
VARIABLE HVLUP_C_9_HVDMY_24_20_16_12_9_6_GA	30
#ENDIF

#IFDEF CHECK_HVLUP_WITH_175C
VARIABLE HVLUP_C_2_HVDMY_45_GB	80
VARIABLE HVLUP_C_2_HVDMY_29_GA	70
VARIABLE HVLUP_C_2_HVDMY_24_20_16_12_9_6_GA	60
VARIABLE HVLUP_C_3_HVDMY_45_GB	80
VARIABLE HVLUP_C_3_HVDMY_29_GA	70
VARIABLE HVLUP_C_3_HVDMY_24_20_16_12_9_6_GA	60
VARIABLE HVLUP_C_4_HVDMY_45_GB	80
VARIABLE HVLUP_C_4_HVDMY_29_GA	70
VARIABLE HVLUP_C_4_HVDMY_24_20_16_12_9_6_GA	60
VARIABLE HVLUP_C_5_HVDMY_45_GB	80
VARIABLE HVLUP_C_5_HVDMY_29_GA	70
VARIABLE HVLUP_C_5_HVDMY_24_20_16_12_9_6_GA	60
VARIABLE HVLUP_C_6_HVDMY_45_GB	80
VARIABLE HVLUP_C_6_HVDMY_29_GA	70
VARIABLE HVLUP_C_6_HVDMY_24_20_16_12_9_6_GA	60
VARIABLE HVLUP_C_7_HVDMY_45_GB	80
VARIABLE HVLUP_C_7_HVDMY_29_GA	70
VARIABLE HVLUP_C_7_HVDMY_24_20_16_12_9_6_GA	60
VARIABLE HVLUP_C_8_HVDMY_45_GB	80
VARIABLE HVLUP_C_8_HVDMY_29_GA	70
VARIABLE HVLUP_C_8_HVDMY_24_20_16_12_9_6_GA	60
VARIABLE HVLUP_C_9_HVDMY_45_GB	80
VARIABLE HVLUP_C_9_HVDMY_29_GA	70
VARIABLE HVLUP_C_9_HVDMY_24_20_16_12_9_6_GA	60
#ENDIF

VARIABLE HVLUP_C_10_HVDMY_45_GB	1.0
VARIABLE HVLUP_C_10_HVDMY_29_GA	0.5
VARIABLE HVLUP_C_10_HVDMY_24_20_16_12_9_6_GA	0.5
VARIABLE HVLUP_C_11_HVDMY_45_GB	1.0
VARIABLE HVLUP_C_11_HVDMY_29_GA	0.5
VARIABLE HVLUP_C_11_HVDMY_24_20_16_12_9_6_GA	0.5
VARIABLE HVLUP_E_1_HVDMY_45_GB	1.0
VARIABLE HVLUP_E_1_HVDMY_29_GA	0.5
VARIABLE HVLUP_E_1_HVDMY_24_20_16_12_9_6_GA	0.5
VARIABLE HVLUP_E_2_HVDMY_45_GB	1.0
VARIABLE HVLUP_E_2_HVDMY_29_GA	0.5
VARIABLE HVLUP_E_2_HVDMY_24_20_16_12_9_6_GA	0.5
VARIABLE HVLUP_E_3_HVDMY_45_GB	1.0
VARIABLE HVLUP_E_3_HVDMY_29_GA	0.5
VARIABLE HVLUP_E_3_HVDMY_24_20_16_12_9_6_GA	0.5
VARIABLE HVLUP_E_4_HVDMY_45_GB	1.0
VARIABLE HVLUP_E_4_HVDMY_29_GA	0.5
VARIABLE HVLUP_E_4_HVDMY_24_20_16_12_9_6_GA	0.5
VARIABLE HVLUP_E_7_HVDMY_45_GB	8.0
VARIABLE HVLUP_E_7_HVDMY_29_GA	2.5
VARIABLE HVLUP_E_7_HVDMY_24_20_16_12_9_6_GA	2.2
VARIABLE HVLUP_E_8_HVDMY_45_GB  8.0	
VARIABLE HVLUP_E_8_HVDMY_29_GA	2.5
VARIABLE HVLUP_E_8_HVDMY_24_20_16_12_9_6_GA	2.2
VARIABLE ALL_TEXT  "?"   // pin name of all bond pad

HP_PICKUP = (( PPOD NOT ALL_HVPMOS_OD ) NOT HVSHN ) AND HVDMY
HN_PICKUP = ( NPOD NOT ALL_HVNMOS_OD ) AND HVSHN 
HVSHP = COPY SH_P
HV_GATE_N = COPY HVNGATE
HV_GATE_P = COPY HVPGATE
GATE = COPY ALL_GATE

NACT_HV = ALL_HVNMOS_OD NOT PP
NACT_HV_NOT = ALL_HVNMOS_OD NOT CHIP
PACT_HV = ALL_HVPMOS_OD NOT NP
PACT_HV_NOT = ALL_HVPMOS_OD NOT CHIP

HV_S_N = COPY ALL_HVNMOS_S
HV_D_N = COPY ALL_HVNMOS_D

HV_S_P  = COPY ALL_HVPMOS_S
HV_D_P  = COPY ALL_HVPMOS_D 
HVDMY_45_GB = COPY HV45DMY
HVDMY_36_GB = COPY HV36DMY
HVDMY_29_GA = COPY HV29DMY
HVDMY_24_20_16_12_9_6_GA = ((((HV24DMY OR HV20DMY) OR HV16DMY) OR HV12DMY) OR HV9DMY) OR HV6DMY
HVDMY_5_GA = COPY HV5DMY


ALL_BOND_PAD = ((CBi OR UBMn) OR UBMd) NOT SEALRING_ALL
BOND_PAD_M1_BY_TEXT = ALL_BOND_PAD WITH TEXT ALL_TEXT M1_PIN_TEXT PRIMARY ONLY
BOND_PAD_M2_BY_TEXT = ALL_BOND_PAD WITH TEXT ALL_TEXT M2_PIN_TEXT PRIMARY ONLY
BOND_PAD_M3_BY_TEXT = ALL_BOND_PAD WITH TEXT ALL_TEXT M3_PIN_TEXT PRIMARY ONLY
BOND_PAD_M4_BY_TEXT = ALL_BOND_PAD WITH TEXT ALL_TEXT M4_PIN_TEXT PRIMARY ONLY
BOND_PAD_M5_BY_TEXT = ALL_BOND_PAD WITH TEXT ALL_TEXT M5_PIN_TEXT PRIMARY ONLY

 ALL_BOND_PAD_WI_TEXT =  (((BOND_PAD_M1_BY_TEXT OR BOND_PAD_M2_BY_TEXT) OR BOND_PAD_M3_BY_TEXT) OR BOND_PAD_M4_BY_TEXT) OR BOND_PAD_M5_BY_TEXT
ALL_BOND_PAD_WO_TEXT = ALL_BOND_PAD NOT ALL_BOND_PAD_WI_TEXT




NW_HV_PROCESSi = ((NONWRi OR HVSHN) OR NDDi) NOT PANTi
NW_HV_PROCESS_ri = ((NWELi OR HVSHN) OR NDDi) NOT PANTi
PW_HV_PROCESSi = (PWELi OR HVPWi) OR PANTi

EMPTYi = CHIP  NOT BULK

// Latch-Up CHECKS
//================
NWRiT = (NWELi INTERACT RWDMY) NOT RWDMY // NWR terminal
SRM = COPY EXCL
UBMn = (UBMi NOT INTERACT PPIi) NOT INTERACT MDi  // UBM lie on Top Metal
UBMd = UBMi NOT UBMn                             // UBM lie on PPI or MD
CONNECT NWEL NBL 
// Wire-Bond
CONNECT M5xd CBi
// Flip-chip
// 1_Ground up
CONNECT M5xd UBMn BY CBDi
// 2_RDL (before passivation)
//CONNECT M6xd MDxd BY VIADi
CONNECT MDxd UBMd
// 3_PPI (After passivation)
CONNECT M5xd PPIi BY CBDi
CONNECT PPIi UBMd


NPODc = NPi AND ODi
PPODc = PPi AND ODi
NTAPc = NPODc AND NW_HV_PROCESSi
PTAPc = PPODc AND PW_HV_PROCESSi
NACTc = NPODc AND PW_HV_PROCESSi
PACTc = PPODc AND NW_HV_PROCESSi

NSDc  = NACTc NOT POLYi		// NMOS source/drain
PSDc  = PACTc NOT POLYi		// PMOS source/drain
RPO_RPDMY = RPOi OR RPDUMMY





//Build connection for RES200
//============================
OD_RES_200ohm = (ODi AND RPDUMMY) AND RES200
PO_RES_200ohm = (POLYi AND RPDUMMY) AND RES200
NW_RES_200ohm = (NWELi AND RWDMY) AND RES200
NWELj = NWELi NOT NW_RES_200ohm
ILP1j   = POLYi NOT PO_RES_200ohm
NSDj  = NSDc NOT OD_RES_200ohm
PSDj  = PSDc NOT OD_RES_200ohm
NBLj = EMPTYi OR NBLi
NTAPj = EMPTYi OR (NPODc AND NW_HV_PROCESS_ri)
NTAPj_NBL = EMPTYi OR NTAPi_NBL 
PTAPj = EMPTYi OR PTAPc
PWELj = EMPTYi OR PWELi

NWRjT = EMPTYi OR NWRiT
COj   = EMPTYi OR COi
M1j   = EMPTYi OR M1x

VIA1j = EMPTYi OR VIA1i
M2j   = EMPTYi OR M2x

VIA2j = EMPTYi OR VIA2i
M3j   = EMPTYi OR M3x

VIA3j = EMPTYi OR VIA3i
M4j   = EMPTYi OR M4x

VIA4j = EMPTYi OR VIA4i
M5j   = EMPTYi OR M5x

VIADj = EMPTYi OR VIADi
MDj = EMPTYi OR MDx

CTM1j = EMPTYi OR CTM1i
VIA1jj = VIA1j NOT INTERACT CTM1j
CTM_VIA1j = VIA1j AND CTM1j
CTM2j = EMPTYi OR CTM2i
VIA2jj = VIA2j NOT INTERACT CTM2j
CTM_VIA2j = VIA2j AND CTM2j
CTM3j = EMPTYi OR CTM3i
VIA3jj = VIA3j NOT INTERACT CTM3j
CTM_VIA3j = VIA3j AND CTM3j
CTM4j = EMPTYi OR CTM4i
VIA4jj = VIA4j NOT INTERACT CTM4j
CTM_VIA4j = VIA4j AND CTM4j
CBj = EMPTYi OR CBi
CBDj = EMPTYi OR CBDi
PPIj = EMPTYi OR PPIi
UBMnj = EMPTYi OR UBMn
UBMdj = EMPTYi OR UBMd






//Build connection for CONNECT_ALL_RESISTOR
//============================

NWELu   = COPY NWELi 
ILP1u   = COPY POLYi
NSDu  = COPY NSDc
PSDu  = COPY PSDc
NBLu = COPY NBLi
NTAPu = NPODc AND NW_HV_PROCESS_ri
NTAPu_NBL = COPY NTAPi_NBL 
PTAPu = COPY PTAPc
PWELu = COPY PWELi

NWRuT = COPY NWRiT
COu   = COPY COi
M1u   = COPY M1x
MSIu = COPY MSIi
M0u = COPY M0i
SICR_V1u = COPY SICR_V1i
VIA1u = COPY VIA1i
M2u   = COPY M2x

VIA2u = COPY VIA2i
M3u   = COPY M3x

VIA3u = COPY VIA3i
M4u   = COPY M4x

VIA4u = COPY VIA4i
M5u   = COPY M5x

VIADu = COPY VIADi
MDu = COPY MDx

CTM1u = COPY CTM1i
VIA1uu = VIA1u NOT INTERACT CTM1u
CTM_VIA1u = VIA1u AND CTM1u
CTM2u = COPY CTM2i
VIA2uu = VIA2u NOT INTERACT CTM2u
CTM_VIA2u = VIA2u AND CTM2u
CTM3u = COPY CTM3i
VIA3uu = VIA3u NOT INTERACT CTM3u
CTM_VIA3u = VIA3u AND CTM3u
CTM4u = COPY CTM4i
VIA4uu = VIA4u NOT INTERACT CTM4u
CTM_VIA4u = VIA4u AND CTM4u

CBu = COPY CBi
CBDu = COPY CBDi
PPIu = COPY PPIi
UBMnu = COPY UBMn
UBMdu = COPY UBMd








//Build connection for DISCONNECT_ALL_RESISTOR
//============================

NWELk   = NWELi NOT (NWELi AND RWDMY) 

ILP1k   = POLYi NOT RPO_RPDMY	
NSDk  = (NSDc NOT RPO_RPDMY) NOT EMPTYi
PSDk  = (PSDc NOT RPO_RPDMY) NOT EMPTYi
NBLk = NBLi NOT EMPTYi
NTAPk = NTAPc NOT EMPTYi
NTAPk_NBL = NTAPi_NBL NOT EMPTYi
PTAPk =  PTAPc NOT EMPTYi
PWELk = PWELi NOT EMPTYi

NWRkT = NWRiT NOT EMPTYi
COk   =  COi NOT EMPTYi
M1k   =  M1x NOT EMPTYi

VIA1k =  VIA1i NOT EMPTYi
M2k   =  M2x NOT EMPTYi

VIA2k =  VIA2i NOT EMPTYi
M3k   =  M3x NOT EMPTYi

VIA3k =  VIA3i NOT EMPTYi
M4k   =  M4x NOT EMPTYi

VIA4k =  VIA4i NOT EMPTYi
M5k   =  M5x NOT EMPTYi

VIADk =  VIADi NOT EMPTYi
MDk =  MDx NOT EMPTYi

CTM1k = CTM1i NOT EMPTYi
VIA1kk = VIA1k NOT INTERACT CTM1k
CTM_VIA1k = VIA1k AND CTM1k
CTM2k = CTM2i NOT EMPTYi
VIA2kk = VIA2k NOT INTERACT CTM2k
CTM_VIA2k = VIA2k AND CTM2k
CTM3k = CTM3i NOT EMPTYi
VIA3kk = VIA3k NOT INTERACT CTM3k
CTM_VIA3k = VIA3k AND CTM3k
CTM4k = CTM4i NOT EMPTYi
VIA4kk = VIA4k NOT INTERACT CTM4k
CTM_VIA4k = VIA4k AND CTM4k
CBk =  CBi NOT EMPTYi
CBDk =  CBDi NOT EMPTYi
PPIk =  PPIi NOT EMPTYi
UBMnk =  UBMn NOT EMPTYi
UBMdk =  UBMd NOT EMPTYi










CONNECT    NBLj NTAPj_NBL
CONNECT    NTAPj NTAPj_NBL
CONNECT	NTAPj NWELj
CONNECT	NTAPj PSDj
CONNECT	PTAPj NSDj
CONNECT	M1j ILP1j NTAPj PTAPj PSDj NSDj BY COj
CONNECT M1j NWRjT BY COj


CONNECT	M1j M2j BY VIA1jj
CONNECT CTM1j M2j BY CTM_VIA1j
CONNECT	M2j M3j BY VIA2jj
CONNECT CTM2j M3j BY CTM_VIA2j
CONNECT	M3j M4j BY VIA3jj
CONNECT CTM3j M4j BY CTM_VIA3j
CONNECT	M4j M5j BY VIA4jj
CONNECT CTM4j M5j BY CTM_VIA4j
CONNECT	M5j  MDj BY VIADj
// Wire-Bond
CONNECT M5j CBj
// Flip-chip
// 1_Ground up
CONNECT M5j UBMnj BY CBDj       
// 2_RDL (before passivation)
CONNECT MDj UBMdj
// 3_PPI (After passivation)
CONNECT M5j PPIj BY CBDj
CONNECT PPIj UBMdj





CONNECT    NBLu NTAPu_NBL
CONNECT    NTAPu NTAPu_NBL
CONNECT	NTAPu NWELu
CONNECT	NTAPu PSDu
CONNECT	PTAPu NSDu
CONNECT	M1u ILP1u NTAPu PTAPu PSDu NSDu BY COu
CONNECT M1u NWRuT BY COu


CONNECT M0u M2u BY SICR_V1u
CONNECT M0u MSIu
CONNECT	M1u M2u BY VIA1uu
CONNECT CTM1u M2u BY CTM_VIA1u
CONNECT	M2u M3u BY VIA2uu
CONNECT CTM2u M3u BY CTM_VIA2u
CONNECT	M3u M4u BY VIA3uu
CONNECT CTM3u M4u BY CTM_VIA3u
CONNECT	M4u M5u BY VIA4uu
CONNECT CTM4u M5u BY CTM_VIA4u
CONNECT	M5u  MDu BY VIADu

// Wire-Bond
CONNECT M5u CBu
// Flip-chip
// 1_Ground up
CONNECT M5u UBMnu BY CBDu       
// 2_RDL (before passivation)
CONNECT MDu UBMdu
// 3_PPI (After passivation)
CONNECT M5u PPIu BY CBDu
CONNECT PPIu UBMdu



CONNECT    NBLk NTAPk_NBL
CONNECT    NTAPk NTAPk_NBL
CONNECT	NTAPk NWELk
CONNECT	NTAPk PSDk
CONNECT	PTAPk NSDk
CONNECT	M1k ILP1k NTAPk PTAPk PSDk NSDk BY COk
CONNECT M1k NWRkT BY COk


CONNECT	M1k M2k BY VIA1kk
CONNECT CTM1k M2k BY CTM_VIA1k
CONNECT	M2k M3k BY VIA2kk
CONNECT CTM2k M3k BY CTM_VIA2k
CONNECT	M3k M4k BY VIA3kk
CONNECT CTM3k M4k BY CTM_VIA3k
CONNECT	M4k M5k BY VIA4kk
CONNECT CTM4k M5k BY CTM_VIA4k
CONNECT	M5k  MDk BY VIADk
// Wire-Bond
CONNECT M5k CBk
// Flip-chip
// 1_Ground up
CONNECT M5k UBMnk BY CBDk       
// 2_RDL (before passivation)
CONNECT MDk UBMdk
// 3_PPI (After passivation)
CONNECT M5k PPIk BY CBDk
CONNECT PPIk UBMdk






#IFDEF DISCONNECT_ALL_RESISTOR
NWELLiu = NWELk NOT EMPTYi
NBLiu = NBLk NOT EMPTYi
NTAPiu = NTAPk NOT EMPTYi
PTAPiu = PTAPk NOT EMPTYi
NWRiu  = NWRkT NOT EMPTYi
NSDiu  = NSDk  NOT EMPTYi
PSDiu  = PSDk  NOT EMPTYi
ILP1iu = ILP1k NOT EMPTYi
M1iu = M1k NOT EMPTYi
COiu = COk NOT EMPTYi
CBiu   = CBk   NOT EMPTYi 
UBMniu  = UBMnk  NOT EMPTYi
UBMdiu  = UBMdk  NOT EMPTYi


CONNECT NWELLiu NWELk
CONNECT NBLiu NBLk
CONNECT NTAPiu NTAPk
CONNECT PTAPiu PTAPk
CONNECT NSDiu NSDk
CONNECT PSDiu PSDk
CONNECT M1iu M1k
CONNECT COiu COk
PWR_M1iu_BY_TEXT = M1k WITH TEXT VDD_TEXT M1_PIN_TEXT PRIMARY ONLY
GND_M1iu_BY_TEXT = M1k WITH TEXT VSS_TEXT M1_PIN_TEXT PRIMARY ONLY
PAD_M1iu_BY_TEXT = M1k WITH TEXT PAD_TEXT M1_PIN_TEXT PRIMARY ONLY
GND_M1iu_TEXT = EXPAND TEXT VSS_TEXT M1_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M1iu_TEXT = EXPAND TEXT VDD_TEXT M1_PIN_TEXT BY 1 PRIMARY ONLY

PWR_M2iu_BY_TEXT = M2k WITH TEXT VDD_TEXT M2_PIN_TEXT PRIMARY ONLY
GND_M2iu_BY_TEXT = M2k WITH TEXT VSS_TEXT M2_PIN_TEXT PRIMARY ONLY
PAD_M2iu_BY_TEXT = M2k WITH TEXT PAD_TEXT M2_PIN_TEXT PRIMARY ONLY
GND_M2iu_TEXT = EXPAND TEXT VSS_TEXT M2_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M2iu_TEXT = EXPAND TEXT VDD_TEXT M2_PIN_TEXT BY 1 PRIMARY ONLY

PWR_M3iu_BY_TEXT = M3k WITH TEXT VDD_TEXT M3_PIN_TEXT PRIMARY ONLY
GND_M3iu_BY_TEXT = M3k WITH TEXT VSS_TEXT M3_PIN_TEXT PRIMARY ONLY
PAD_M3iu_BY_TEXT = M3k WITH TEXT PAD_TEXT M3_PIN_TEXT PRIMARY ONLY
GND_M3iu_TEXT = EXPAND TEXT VSS_TEXT M3_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M3iu_TEXT = EXPAND TEXT VDD_TEXT M3_PIN_TEXT BY 1 PRIMARY ONLY

PWR_M4iu_BY_TEXT = M4k WITH TEXT VDD_TEXT M4_PIN_TEXT PRIMARY ONLY
GND_M4iu_BY_TEXT = M4k WITH TEXT VSS_TEXT M4_PIN_TEXT PRIMARY ONLY
PAD_M4iu_BY_TEXT = M4k WITH TEXT PAD_TEXT M4_PIN_TEXT PRIMARY ONLY
GND_M4iu_TEXT = EXPAND TEXT VSS_TEXT M4_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M4iu_TEXT = EXPAND TEXT VDD_TEXT M4_PIN_TEXT BY 1 PRIMARY ONLY

PWR_M5iu_BY_TEXT = M5k WITH TEXT VDD_TEXT M5_PIN_TEXT PRIMARY ONLY
GND_M5iu_BY_TEXT = M5k WITH TEXT VSS_TEXT M5_PIN_TEXT PRIMARY ONLY
PAD_M5iu_BY_TEXT = M5k WITH TEXT PAD_TEXT M5_PIN_TEXT PRIMARY ONLY
GND_M5iu_TEXT = EXPAND TEXT VSS_TEXT M5_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M5iu_TEXT = EXPAND TEXT VDD_TEXT M5_PIN_TEXT BY 1 PRIMARY ONLY


#ELSE
#IFDEF CONNECT_ALL_RESISTOR


NWELLiu = NWELu NOT EMPTYi
NBLiu = NBLu NOT EMPTYi
NTAPiu = NTAPu NOT EMPTYi
PTAPiu = PTAPu NOT EMPTYi
NWRiu  = NWRuT NOT EMPTYi
NSDiu  = NSDu  NOT EMPTYi
PSDiu  = PSDu  NOT EMPTYi
ILP1iu = ILP1u NOT EMPTYi
M1iu = M1u NOT EMPTYi
COiu = COu NOT EMPTYi
CBiu   = CBu   NOT EMPTYi 
UBMniu  = UBMnu  NOT EMPTYi
UBMdiu  = UBMdu  NOT EMPTYi


CONNECT NWELLiu NWELu
CONNECT NBLiu NBLu

CONNECT NTAPiu NTAPu
CONNECT PTAPiu PTAPu
CONNECT NSDiu NSDu
CONNECT PSDiu PSDu
CONNECT M1iu M1u
CONNECT COiu COu
PWR_M1iu_BY_TEXT = M1u WITH TEXT VDD_TEXT M1_PIN_TEXT PRIMARY ONLY
GND_M1iu_BY_TEXT = M1u WITH TEXT VSS_TEXT M1_PIN_TEXT PRIMARY ONLY
PAD_M1iu_BY_TEXT = M1u WITH TEXT PAD_TEXT M1_PIN_TEXT PRIMARY ONLY
GND_M1iu_TEXT = EXPAND TEXT VSS_TEXT M1_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M1iu_TEXT = EXPAND TEXT VDD_TEXT M1_PIN_TEXT BY 1 PRIMARY ONLY

PWR_M2iu_BY_TEXT = M2u WITH TEXT VDD_TEXT M2_PIN_TEXT PRIMARY ONLY
GND_M2iu_BY_TEXT = M2u WITH TEXT VSS_TEXT M2_PIN_TEXT PRIMARY ONLY
PAD_M2iu_BY_TEXT = M2u WITH TEXT PAD_TEXT M2_PIN_TEXT PRIMARY ONLY
GND_M2iu_TEXT = EXPAND TEXT VSS_TEXT M2_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M2iu_TEXT = EXPAND TEXT VDD_TEXT M2_PIN_TEXT BY 1 PRIMARY ONLY

PWR_M3iu_BY_TEXT = M3u WITH TEXT VDD_TEXT M3_PIN_TEXT PRIMARY ONLY
GND_M3iu_BY_TEXT = M3u WITH TEXT VSS_TEXT M3_PIN_TEXT PRIMARY ONLY
PAD_M3iu_BY_TEXT = M3u WITH TEXT PAD_TEXT M3_PIN_TEXT PRIMARY ONLY
GND_M3iu_TEXT = EXPAND TEXT VSS_TEXT M3_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M3iu_TEXT = EXPAND TEXT VDD_TEXT M3_PIN_TEXT BY 1 PRIMARY ONLY

PWR_M4iu_BY_TEXT = M4u WITH TEXT VDD_TEXT M4_PIN_TEXT PRIMARY ONLY
GND_M4iu_BY_TEXT = M4u WITH TEXT VSS_TEXT M4_PIN_TEXT PRIMARY ONLY
PAD_M4iu_BY_TEXT = M4u WITH TEXT PAD_TEXT M4_PIN_TEXT PRIMARY ONLY
GND_M4iu_TEXT = EXPAND TEXT VSS_TEXT M4_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M4iu_TEXT = EXPAND TEXT VDD_TEXT M4_PIN_TEXT BY 1 PRIMARY ONLY

PWR_M5iu_BY_TEXT = M5u WITH TEXT VDD_TEXT M5_PIN_TEXT PRIMARY ONLY
GND_M5iu_BY_TEXT = M5u WITH TEXT VSS_TEXT M5_PIN_TEXT PRIMARY ONLY
PAD_M5iu_BY_TEXT = M5u WITH TEXT PAD_TEXT M5_PIN_TEXT PRIMARY ONLY
GND_M5iu_TEXT = EXPAND TEXT VSS_TEXT M5_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M5iu_TEXT = EXPAND TEXT VDD_TEXT M5_PIN_TEXT BY 1 PRIMARY ONLY




#ELSE

NWELLiu = NWELj NOT EMPTYi
NBLiu = NBLj NOT EMPTYi
NTAPiu = NTAPj NOT EMPTYi
PTAPiu = PTAPj NOT EMPTYi
NWRiu  = NWRjT NOT EMPTYi	
NSDiu  = NSDj  NOT EMPTYi
PSDiu  = PSDj  NOT EMPTYi
ILP1iu = ILP1j NOT EMPTYi
M1iu = M1j NOT EMPTYi
COiu = COj NOT EMPTYi

CBiu   = CBj   NOT EMPTYi 
UBMniu  = UBMnj  NOT EMPTYi
UBMdiu  = UBMdj  NOT EMPTYi


CONNECT NWELLiu NWELj
CONNECT NBLiu NBLj
CONNECT NTAPiu NTAPj
CONNECT PTAPiu PTAPj
CONNECT NSDiu NSDj
CONNECT PSDiu PSDj
CONNECT M1iu M1j
CONNECT COiu COj
PWR_M1iu_BY_TEXT = M1j WITH TEXT VDD_TEXT M1_PIN_TEXT PRIMARY ONLY
GND_M1iu_BY_TEXT = M1j WITH TEXT VSS_TEXT M1_PIN_TEXT PRIMARY ONLY
PAD_M1iu_BY_TEXT = M1j WITH TEXT PAD_TEXT M1_PIN_TEXT PRIMARY ONLY
GND_M1iu_TEXT = EXPAND TEXT VSS_TEXT M1_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M1iu_TEXT = EXPAND TEXT VDD_TEXT M1_PIN_TEXT BY 1 PRIMARY ONLY

PWR_M2iu_BY_TEXT = M2j WITH TEXT VDD_TEXT M2_PIN_TEXT PRIMARY ONLY
GND_M2iu_BY_TEXT = M2j WITH TEXT VSS_TEXT M2_PIN_TEXT PRIMARY ONLY
PAD_M2iu_BY_TEXT = M2j WITH TEXT PAD_TEXT M2_PIN_TEXT PRIMARY ONLY
GND_M2iu_TEXT = EXPAND TEXT VSS_TEXT M2_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M2iu_TEXT = EXPAND TEXT VDD_TEXT M2_PIN_TEXT BY 1 PRIMARY ONLY

PWR_M3iu_BY_TEXT = M3j WITH TEXT VDD_TEXT M3_PIN_TEXT PRIMARY ONLY
GND_M3iu_BY_TEXT = M3j WITH TEXT VSS_TEXT M3_PIN_TEXT PRIMARY ONLY
PAD_M3iu_BY_TEXT = M3j WITH TEXT PAD_TEXT M3_PIN_TEXT PRIMARY ONLY
GND_M3iu_TEXT = EXPAND TEXT VSS_TEXT M3_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M3iu_TEXT = EXPAND TEXT VDD_TEXT M3_PIN_TEXT BY 1 PRIMARY ONLY

PWR_M4iu_BY_TEXT = M4j WITH TEXT VDD_TEXT M4_PIN_TEXT PRIMARY ONLY
GND_M4iu_BY_TEXT = M4j WITH TEXT VSS_TEXT M4_PIN_TEXT PRIMARY ONLY
PAD_M4iu_BY_TEXT = M4j WITH TEXT PAD_TEXT M4_PIN_TEXT PRIMARY ONLY
GND_M4iu_TEXT = EXPAND TEXT VSS_TEXT M4_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M4iu_TEXT = EXPAND TEXT VDD_TEXT M4_PIN_TEXT BY 1 PRIMARY ONLY

PWR_M5iu_BY_TEXT = M5j WITH TEXT VDD_TEXT M5_PIN_TEXT PRIMARY ONLY
GND_M5iu_BY_TEXT = M5j WITH TEXT VSS_TEXT M5_PIN_TEXT PRIMARY ONLY
PAD_M5iu_BY_TEXT = M5j WITH TEXT PAD_TEXT M5_PIN_TEXT PRIMARY ONLY
GND_M5iu_TEXT = EXPAND TEXT VSS_TEXT M5_PIN_TEXT BY 1 PRIMARY ONLY
PWR_M5iu_TEXT = EXPAND TEXT VDD_TEXT M5_PIN_TEXT BY 1 PRIMARY ONLY



#ENDIF
#ENDIF


VARIABLE  LUP_2   20.0
VARIABLE  LUP_2_S 8.0
VARIABLE  LUP_3_1 4.0
VARIABLE  LUP_3_2 6.0
VARIABLE  LUP_3_3 12.0
VARIABLE  LUP_3_4 23.0
VARIABLE  LUP_4   0.42
VARIABLE  LUP_5_1 4.0
VARIABLE  LUP_5_2 6.0
VARIABLE  LUP_5_3 12.0
VARIABLE  LUP_5_4 23.0
VARIABLE  LUP_5_4_1 40.0
VARIABLE  LUP_6   30.0
VARIABLE  LUP_6_SRAM 40.0
VARIABLE  LUP_10	150.0
VARIABLE  LUP_2_2g	30.0
VARIABLE  LUP_13	15.0
VARIABLE  LUP_14  0.42
VARIABLE  NW_S_1  0.6

NTAPux = NTAPiu NOT INTERACT (RNWEL OR VARDMY)


// Power PAD
VDD_CB = NET AREA RATIO CBiu NTAPux > 0
VSS_CB = NET AREA RATIO CBiu PTAPiu > 0
VDD_UBMn = NET AREA RATIO UBMniu NTAPux > 0  // VDD_UMBn connect to N+ OD pickup
VSS_UBMn = NET AREA RATIO UBMniu PTAPiu > 0  // VSS_UMBn connect to P+ OD pickup
VDD_UBMd = NET AREA RATIO UBMdiu NTAPux > 0  // VDD_UMBd connect to N+ OD pickup
VSS_UBMd = NET AREA RATIO UBMdiu PTAPiu > 0  // VSS_UMBd connect to P+ OD pickup

// Signal PAD
IO_CB  = (CBiu NOT VDD_CB) NOT VSS_CB 
IO_UBMn = (UBMniu NOT VDD_UBMn) NOT VSS_UBMn
IO_UBMd = (UBMdiu NOT VDD_UBMd) NOT VSS_UBMd



PSD_PAD = NET AREA RATIO PSDiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu) + !!AREA(UBMniu)+ !!AREA(UBMdiu)]       // P+ S/D, and connect to all CB/UBM pad
NSD_PAD = NET AREA RATIO NSDiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu) + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
PSD_IOPAD = NET AREA RATIO PSDiu IO_CB IO_UBMn IO_UBMd > 0 [!!AREA(IO_CB) + !!AREA(IO_UBMn)+ !!AREA(IO_UBMd)] // P+ S/D, and connect to I/O pad only
NSD_IOPAD = NET AREA RATIO NSDiu IO_CB IO_UBMn IO_UBMd > 0 [!!AREA(IO_CB) + !!AREA(IO_UBMn)+ !!AREA(IO_UBMd)]
NWR_IOPAD = NET AREA RATIO NWRiu IO_CB IO_UBMn IO_UBMd > 0 [!!AREA(IO_CB) + !!AREA(IO_UBMn)+ !!AREA(IO_UBMd)]





VDD_VSS_DUMMY = VDDDMY OR VSSDMY
CB_DUMMY = CBiu INTERACT VDD_VSS_DUMMY
CB_VDD_DUMMY = CBiu INTERACT VDDDMY
CB_VSS_DUMMY = CBiu INTERACT VSSDMY
UBMn_DUMMY = UBMniu INTERACT VDD_VSS_DUMMY
UBMn_VDD_DUMMY = UBMniu INTERACT VDDDMY
UBMn_VSS_DUMMY = UBMniu INTERACT VSSDMY
UBMd_DUMMY = UBMdiu INTERACT VDD_VSS_DUMMY
UBMd_VDD_DUMMY = UBMdiu INTERACT VDDDMY
UBMd_VSS_DUMMY = UBMdiu INTERACT VSSDMY





PSD_VDD_VSS_PAD_DUMMY = NET AREA RATIO PSDiu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0
PSD_VDD_PAD_DUMMY = NET AREA RATIO PSDiu OVER CB_VDD_DUMMY UBMn_VDD_DUMMY UBMd_VDD_DUMMY >0
PSD_VSS_PAD_DUMMY = NET AREA RATIO PSDiu OVER CB_VSS_DUMMY UBMn_VSS_DUMMY UBMd_VSS_DUMMY >0
NSD_VDD_VSS_PAD_DUMMY = NET AREA RATIO NSDiu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0
NWR_VDD_VSS_PAD_DUMMY = NET AREA RATIO NWRiu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0

NSD_VDD_PAD_DUMMY = NET AREA RATIO NSDiu OVER CB_VDD_DUMMY UBMn_VDD_DUMMY UBMd_VDD_DUMMY >0
NSD_VSS_PAD_DUMMY = NET AREA RATIO NSDiu OVER CB_VSS_DUMMY UBMn_VSS_DUMMY UBMd_VSS_DUMMY >0





 PSD_PAD_TEXT = NET AREA RATIO PSDiu OVER  PAD_M1iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_M5iu_BY_TEXT > 0 
 NSD_PAD_TEXT = NET AREA RATIO NSDiu OVER  PAD_M1iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_M5iu_BY_TEXT > 0 
 NWR_PAD_TEXT = NET AREA RATIO NWRiu OVER  PAD_M1iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_M5iu_BY_TEXT > 0 


 PSD_VDD_VSS_PAD_TEXT = NET AREA RATIO PSDiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_M5iu_BY_TEXT GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_M5iu_BY_TEXT > 0 
 NSD_VDD_VSS_PAD_TEXT = NET AREA RATIO NSDiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_M5iu_BY_TEXT GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_M5iu_BY_TEXT > 0 

 NWR_VDD_VSS_PAD_TEXT = NET AREA RATIO NWRiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_M5iu_BY_TEXT GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_M5iu_BY_TEXT > 0 


 PSD_VDD_PAD_TEXT = NET AREA RATIO PSDiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_M5iu_BY_TEXT > 0 
 NSD_VDD_PAD_TEXT = NET AREA RATIO NSDiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_M5iu_BY_TEXT > 0 
 PSD_VSS_PAD_TEXT = NET AREA RATIO PSDiu OVER  GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_M5iu_BY_TEXT > 0 
 NSD_VSS_PAD_TEXT = NET AREA RATIO NSDiu OVER  GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_M5iu_BY_TEXT > 0 

 PWR_TEXT =  ( (  ( PWR_M1iu_TEXT OR PWR_M2iu_TEXT ) OR PWR_M3iu_TEXT ) OR PWR_M4iu_TEXT )  OR PWR_M5iu_TEXT  
 GND_TEXT =  ( (  ( GND_M1iu_TEXT OR GND_M2iu_TEXT )  OR GND_M3iu_TEXT )  OR GND_M4iu_TEXT )   OR GND_M5iu_TEXT  


#IFDEF  CHECK_LATCHUP_BY_TEXT
PSD_IOPAD_ALL = (PSD_IOPAD OR PSD_PAD_TEXT) NOT (PSD_VDD_VSS_PAD_TEXT OR PSD_VDD_VSS_PAD_DUMMY)
NSD_IOPAD_ALL = (NSD_IOPAD OR NSD_PAD_TEXT) NOT (NSD_VDD_VSS_PAD_TEXT OR NSD_VDD_VSS_PAD_DUMMY)
SD_IOPAD = PSD_IOPAD_ALL OR NSD_IOPAD_ALL
NWR_IOPAD_ALL = (NWR_IOPAD OR NWR_PAD_TEXT) NOT (NWR_VDD_VSS_PAD_TEXT OR NWR_VDD_VSS_PAD_DUMMY)

MOS = DACT INTERACT ALL_GATE
PMOS_filter = COPY EMPTYi
NMOS_filter = COPY EMPTYi
#ENDIF

#IFNDEF  CHECK_LATCHUP_BY_TEXT
PSD_IOPAD_ALL = PSD_IOPAD  NOT PSD_VDD_VSS_PAD_DUMMY
NSD_IOPAD_ALL = NSD_IOPAD  NOT NSD_VDD_VSS_PAD_DUMMY
SD_IOPAD = PSD_IOPAD_ALL OR NSD_IOPAD_ALL
NWR_IOPAD_ALL = NWR_IOPAD NOT NWR_VDD_VSS_PAD_DUMMY
MOS = DACT INTERACT ALL_GATE
PMOS_filter = (MOS INTERACT PSD_PAD == 1 BY NET) NOT (FGDDMY INTERACT (ALL_GATE INTERACT PP))
NMOS_filter = (MOS INTERACT NSD_PAD == 1 BY NET) NOT (FGDDMY INTERACT (ALL_GATE INTERACT PP))
#ENDIF

DUMMY_MOS = (MOS NOT INTERACT CO) NOT INTERACT (POLY INTERACT CO)

DACT_real =  (DACT NOT DUMMY_MOS) NOT HVDMY

PACT_real = PACT AND DACT_real
NACT_real = NACT AND DACT_real

POST_DRIVER_ACT = (((DACT_real NOT PMOS_filter) NOT NMOS_filter) NOT LUPWDMY) INTERACT SD_IOPAD
OD_INJECTOR = (POST_DRIVER_ACT OR (OD INTERACT NWR_IOPAD)) NOT HVDMY
NPOD_INJECTOR = (POST_DRIVER_NACT OR (NPOD INTERACT NWR_IOPAD)) NOT HVDMY
PPOD_INJECTOR = (POST_DRIVER_PACT OR (PPOD INTERACT NWR_IOPAD)) NOT HVDMY




// For LUP.1/LUP.2/LUP.4 - GuardRing
//====================================
NW_inside_guard_ring_pre1 = NWELi NOT NTAPi
NW_inside_guard_ring_pre2 = NW_inside_guard_ring_pre1 NOT COIN OUTSIDE EDGE NTAPi
NW_inside_guard_ring = NW_inside_guard_ring_pre1 NOT WITH EDGE NW_inside_guard_ring_pre2
PW_inside_guard_ring_pre1 = PWELi NOT PTAPi
PW_inside_guard_ring_pre2 = PW_inside_guard_ring_pre1 NOT COIN OUTSIDE EDGE PTAPi
PW_inside_guard_ring = PW_inside_guard_ring_pre1 NOT WITH EDGE PW_inside_guard_ring_pre2
NTAP_guard_ring_hole = ((HOLES NTAPi INNER) INSIDE NWELi) OR NW_inside_guard_ring
PTAP_guard_ring_hole = ((HOLES PTAPi INNER) INSIDE PWELi) OR PW_inside_guard_ring



// For LUP.1 - I/O PAD N/P ACTIVE
//=================================
POST_DRIVER_PACT = (POST_DRIVER_ACT INTERACT PSDiu) NOT INSIDE LUPWDMY
POST_DRIVER_NACT = (POST_DRIVER_ACT INTERACT NSDiu) NOT INSIDE LUPWDMY
// For LUP.3
//==================
POST_DRIVER_PMOS = POST_DRIVER_PACT INTERACT ALL_GATE
POST_DRIVER_PMOS_NW = STAMP POST_DRIVER_PMOS BY NWEL

POST_DRIVER_PMOS_NW_HV  = POST_DRIVER_PMOS_NW INTERACT HVGT
POST_DRIVER_PMOS_NW_33V = POST_DRIVER_PMOS_NW_HV INTERACT OD2i
POST_DRIVER_PMOS_NW_25V = POST_DRIVER_PMOS_NW_HV INTERACT OD2i

POST_DRIVER_PMOS_NW_50V = POST_DRIVER_PMOS_NW_HV INTERACT OD2i

POST_DRIVER_PMOS_NW_LV  = POST_DRIVER_PMOS_NW NOT POST_DRIVER_PMOS_NW_HV
POST_DRIVER_PMOS_NWi = STAMP POST_DRIVER_PMOS BY NWELLiu

POST_DRIVER_PMOS_NWi_HV  = POST_DRIVER_PMOS_NWi INTERACT HVGT
POST_DRIVER_PMOS_NWi_33V = POST_DRIVER_PMOS_NWi_HV INTERACT OD2i
POST_DRIVER_PMOS_NWi_25V = POST_DRIVER_PMOS_NWi_HV INTERACT OD2i
POST_DRIVER_PMOS_NWi_50V = POST_DRIVER_PMOS_NWi_HV INTERACT OD2i

POST_DRIVER_PMOS_NWi_LV  = POST_DRIVER_PMOS_NWi NOT POST_DRIVER_PMOS_NWi_HV
POST_DRIVER_NMOS = POST_DRIVER_NACT INTERACT ALL_GATE
POST_DRIVER_NMOS_RW = STAMP (POST_DRIVER_NMOS INSIDE NBL) BY NBL
POST_DRIVER_NMOS_PW = POST_DRIVER_NMOS NOT POST_DRIVER_NMOS_RW
POST_DRIVER_NMOS_RW_HV  = POST_DRIVER_NMOS_RW INTERACT HVGT
POST_DRIVER_NMOS_RW_33V = POST_DRIVER_NMOS_RW_HV INTERACT OD2i
POST_DRIVER_NMOS_RW_25V = POST_DRIVER_NMOS_RW_HV INTERACT OD2i
POST_DRIVER_NMOS_RW_50V = POST_DRIVER_NMOS_RW_HV INTERACT OD2i

POST_DRIVER_NMOS_RW_LV  = POST_DRIVER_NMOS_RW NOT POST_DRIVER_NMOS_RW_HV
POST_DRIVER_NMOS_PW_HV  = POST_DRIVER_NMOS_PW INTERACT HVGT
POST_DRIVER_NMOS_PW_33V = POST_DRIVER_NMOS_PW_HV INTERACT OD2i
POST_DRIVER_NMOS_PW_25V = POST_DRIVER_NMOS_PW_HV INTERACT OD2i
POST_DRIVER_NMOS_PW_50V = POST_DRIVER_NMOS_PW_HV INTERACT OD2i

POST_DRIVER_NMOS_PW_LV  = POST_DRIVER_NMOS_PW NOT POST_DRIVER_NMOS_PW_HV

POST_DRIVER_NMOS_RWi = STAMP (POST_DRIVER_NMOS INSIDE NBLiu) BY NBLiu 
POST_DRIVER_NMOS_RWi_HV  = POST_DRIVER_NMOS_RWi INTERACT HVGT
POST_DRIVER_NMOS_RWi_33V = POST_DRIVER_NMOS_RWi_HV INTERACT OD2i
POST_DRIVER_NMOS_RWi_25V = POST_DRIVER_NMOS_RWi_HV INTERACT OD2i
POST_DRIVER_NMOS_RWi_50V = POST_DRIVER_NMOS_RWi_HV INTERACT OD2i

POST_DRIVER_NMOS_RWi_LV  = POST_DRIVER_NMOS_RWi NOT POST_DRIVER_NMOS_RWi_HV


POST_DRIVER_MOS = POST_DRIVER_NMOS OR POST_DRIVER_PMOS
BESIDE_POST_DRIVER = SIZE POST_DRIVER_MOS BY LUP_2
BESIDE_POST_DRIVER_NMOS = (((NACT_real INTERACT ALL_GATE) NOT OUTSIDE BESIDE_POST_DRIVER) NOT POST_DRIVER_NACT) NOT DUMMY_MOS
BESIDE_POST_DRIVER_PMOS = (((PACT_real INTERACT ALL_GATE) NOT OUTSIDE BESIDE_POST_DRIVER) NOT POST_DRIVER_PACT) NOT DUMMY_MOS

// for LUP.5.4
BESIDE_POST_DRIVER_1 = SIZE POST_DRIVER_MOS BY LUP_5_4_1
BESIDE_POST_DRIVER_NMOS_1 = (((NACT_real INTERACT ALL_GATE) NOT OUTSIDE BESIDE_POST_DRIVER_1) NOT POST_DRIVER_NACT) NOT DUMMY_MOS
BESIDE_POST_DRIVER_PMOS_1 = (((PACT_real INTERACT ALL_GATE) NOT OUTSIDE BESIDE_POST_DRIVER_1) NOT POST_DRIVER_PACT) NOT DUMMY_MOS
#IFDEF ALL_AREA_IO
BESIDE_POST_DRIVER_2 = SIZE OD_INJECTOR BY LUP_2_2g
#ELSE
BESIDE_POST_DRIVER_2 = SIZE (OD_INJECTOR NOT OUTSIDE LUPWDMY_2) BY LUP_2_2g
#ENDIF
BESIDE_POST_DRIVER_NMOS_2 = (((NACT_real INTERACT ALL_GATE) NOT OUTSIDE BESIDE_POST_DRIVER_2) NOT POST_DRIVER_NACT) NOT DUMMY_MOS
BESIDE_POST_DRIVER_PMOS_2 = (((PACT_real INTERACT ALL_GATE) NOT OUTSIDE BESIDE_POST_DRIVER_2) NOT POST_DRIVER_PACT) NOT DUMMY_MOS
POST_DRIVER_NMOS_NBL_WAIVE = (NBL INTERACT (NSDiu INTERACT GATE)) NOT INTERACT (NWEL INTERACT (PSDiu INTERACT GATE))

BESIDE_POST_DRIVER_PMOS_NW = STAMP BESIDE_POST_DRIVER_PMOS BY NWEL

BESIDE_POST_DRIVER_PMOS_NW_HV  = BESIDE_POST_DRIVER_PMOS_NW INTERACT HVGT
BESIDE_POST_DRIVER_PMOS_NW_33V = BESIDE_POST_DRIVER_PMOS_NW_HV INTERACT OD2i
BESIDE_POST_DRIVER_PMOS_NW_25V = BESIDE_POST_DRIVER_PMOS_NW_HV INTERACT OD2i
BESIDE_POST_DRIVER_PMOS_NW_50V = BESIDE_POST_DRIVER_PMOS_NW_HV INTERACT OD2i

BESIDE_POST_DRIVER_PMOS_NW_LV  = BESIDE_POST_DRIVER_PMOS_NW NOT BESIDE_POST_DRIVER_PMOS_NW_HV
BESIDE_POST_DRIVER_PMOS_NWi = STAMP BESIDE_POST_DRIVER_PMOS BY NWELLiu

BESIDE_POST_DRIVER_PMOS_NWi_HV  = BESIDE_POST_DRIVER_PMOS_NWi INTERACT HVGT
BESIDE_POST_DRIVER_PMOS_NWi_33V = BESIDE_POST_DRIVER_PMOS_NWi_HV INTERACT OD2i
BESIDE_POST_DRIVER_PMOS_NWi_25V = BESIDE_POST_DRIVER_PMOS_NWi_HV INTERACT OD2i
BESIDE_POST_DRIVER_PMOS_NWi_50V = BESIDE_POST_DRIVER_PMOS_NWi_HV INTERACT OD2i

BESIDE_POST_DRIVER_PMOS_NWi_LV  = BESIDE_POST_DRIVER_PMOS_NWi NOT BESIDE_POST_DRIVER_PMOS_NWi_HV
BESIDE_POST_DRIVER_NMOS_RW = STAMP (BESIDE_POST_DRIVER_NMOS INSIDE NBL) BY NBL
BESIDE_POST_DRIVER_NMOS_PW = BESIDE_POST_DRIVER_NMOS NOT BESIDE_POST_DRIVER_NMOS_RW
BESIDE_POST_DRIVER_NMOS_RW_HV  = BESIDE_POST_DRIVER_NMOS_RW INTERACT HVGT
BESIDE_POST_DRIVER_NMOS_RW_33V = BESIDE_POST_DRIVER_NMOS_RW_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_RW_25V = BESIDE_POST_DRIVER_NMOS_RW_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_RW_50V = BESIDE_POST_DRIVER_NMOS_RW_HV INTERACT OD2i

BESIDE_POST_DRIVER_NMOS_RW_LV  = BESIDE_POST_DRIVER_NMOS_RW NOT BESIDE_POST_DRIVER_NMOS_RW_HV
BESIDE_POST_DRIVER_NMOS_PW_HV  = BESIDE_POST_DRIVER_NMOS_PW INTERACT HVGT
BESIDE_POST_DRIVER_NMOS_PW_33V = BESIDE_POST_DRIVER_NMOS_PW_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_PW_25V = BESIDE_POST_DRIVER_NMOS_PW_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_PW_50V = BESIDE_POST_DRIVER_NMOS_PW_HV INTERACT OD2i

BESIDE_POST_DRIVER_NMOS_PW_LV  = BESIDE_POST_DRIVER_NMOS_PW NOT BESIDE_POST_DRIVER_NMOS_PW_HV
BESIDE_POST_DRIVER_NMOS_RWi = STAMP (BESIDE_POST_DRIVER_NMOS INSIDE NBLiu) BY NBLiu
BESIDE_POST_DRIVER_NMOS_RWi_HV  = BESIDE_POST_DRIVER_NMOS_RWi INTERACT HVGT
BESIDE_POST_DRIVER_NMOS_RWi_33V = BESIDE_POST_DRIVER_NMOS_RWi_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_RWi_25V = BESIDE_POST_DRIVER_NMOS_RWi_HV INTERACT OD2i
BESIDE_POST_DRIVER_NMOS_RWi_50V = BESIDE_POST_DRIVER_NMOS_RWi_HV INTERACT OD2i

BESIDE_POST_DRIVER_NMOS_RWi_LV  = BESIDE_POST_DRIVER_NMOS_RWi NOT BESIDE_POST_DRIVER_NMOS_RWi_HV

// for LUP.5.4
BESIDE_POST_DRIVER_PMOS_NW_1 = STAMP BESIDE_POST_DRIVER_PMOS_1 BY NWEL
BESIDE_POST_DRIVER_PMOS_NWi_1 = STAMP BESIDE_POST_DRIVER_PMOS_1 BY NWELLiu


BESIDE_POST_DRIVER_NMOS_RW_1 = STAMP (BESIDE_POST_DRIVER_NMOS_1 INSIDE NBL) BY NBL
BESIDE_POST_DRIVER_NMOS_PW_1 = BESIDE_POST_DRIVER_NMOS_1 NOT BESIDE_POST_DRIVER_NMOS_RW_1
BESIDE_POST_DRIVER_NMOS_RWi_1 = STAMP (BESIDE_POST_DRIVER_NMOS_1 INSIDE NBLiu) BY NBLiu 

#IFDEF GUIDELINE_LUP

LUP.1g {@ Any N+Active or an N+Active cluster connected to an I/O pad must be surrounded by a P+ guard-ring.
@ Any P+Active or a P+Active cluster connected to an I/O pad must be surrounded by a N+ guard-ring
   POST_DRIVER_NACT NOT INSIDE PTAP_guard_ring_hole  
   POST_DRIVER_PACT NOT INSIDE NTAP_guard_ring_hole 

}


LUP.2g {@ Within ^LUP_2 um space from the MOS connected to an I/O pad, a P+ guard-ring is required to surround an NMOS or an NMOS cluster. And an N+ guard-ring is required to surround a PMOS or a PMOS cluster.
  X = EXT POST_DRIVER_PMOS_NW BESIDE_POST_DRIVER_NMOS_RW < LUP_2_S ABUT < 90 SINGULAR REGION CONNECTED
  Y = EXT POST_DRIVER_PMOS_NWi BESIDE_POST_DRIVER_NMOS_RWi < LUP_2_S ABUT < 90 SINGULAR REGION NOT CONNECTED
  BESIDE_POST_DRIVER_NMOS_waive = (BESIDE_POST_DRIVER_NMOS_RWi NOT INTERACT X) NOT INTERACT Y

  (BESIDE_POST_DRIVER_NMOS NOT BESIDE_POST_DRIVER_NMOS_waive) NOT INSIDE PTAP_guard_ring_hole
   BESIDE_POST_DRIVER_PMOS NOT INSIDE NTAP_guard_ring_hole
}

LUP.3.1g_1.8V {@ For the N/PMOS which connects to an I/O pad, space between the NMOS and the 1.8V PMOS.Except the NMOS is enclosed by a DNW and the NW of the checked PMOS is not interacted to the DNW. >= ^LUP_3_1 um
  EXT POST_DRIVER_PMOS_NW_LV POST_DRIVER_NMOS_PW < LUP_3_1 ABUT < 90 SINGULAR REGION
  EXT POST_DRIVER_PMOS_NW_LV POST_DRIVER_NMOS_RW < LUP_3_1 ABUT < 90 SINGULAR REGION CONNECTED
  EXT POST_DRIVER_PMOS_NWi_LV POST_DRIVER_NMOS_RWi < LUP_3_1 ABUT < 90 SINGULAR REGION NOT CONNECTED
}







LUP.3.4g_5V {@ For the 5V N/PMOS which connects to an I/O pad directly, space between the 1.8V NMOS and the 5V/1.8V PMOS, space between the 1.8V PMOS and the 5V/1.8V NMOS, Except the NMOS is enclosed by a NBL and the NW of the checked PMOS is not interacted to the NBL.  >= ^LUP_3_4 um
  EXT POST_DRIVER_NMOS_PW_50V POST_DRIVER_PMOS_NW_50V < LUP_3_4 ABUT < 90 SINGULAR REGION
  EXT POST_DRIVER_NMOS_PW_50V POST_DRIVER_PMOS_NW_LV  < LUP_3_4 ABUT < 90 SINGULAR REGION
  EXT POST_DRIVER_NMOS_PW_LV  POST_DRIVER_PMOS_NW_50V < LUP_3_4 ABUT < 90 SINGULAR REGION
  EXT POST_DRIVER_NMOS_RW_50V POST_DRIVER_PMOS_NW_50V < LUP_3_4 ABUT < 90 SINGULAR REGION CONNECTED
  EXT POST_DRIVER_NMOS_RW_50V POST_DRIVER_PMOS_NW_LV  < LUP_3_4 ABUT < 90 SINGULAR REGION CONNECTED
  EXT POST_DRIVER_NMOS_RW_LV  POST_DRIVER_PMOS_NW_50V < LUP_3_4 ABUT < 90 SINGULAR REGION CONNECTED
  EXT POST_DRIVER_NMOS_RWi_50V POST_DRIVER_PMOS_NWi_50V < LUP_3_4 ABUT < 90 SINGULAR REGION NOT CONNECTED
  EXT POST_DRIVER_NMOS_RWi_50V POST_DRIVER_PMOS_NWi_LV  < LUP_3_4 ABUT < 90 SINGULAR REGION NOT CONNECTED
  EXT POST_DRIVER_NMOS_RWi_LV  POST_DRIVER_PMOS_NWi_50V < LUP_3_4 ABUT < 90 SINGULAR REGION NOT CONNECTED
}





LUP.4g {@ Width of the N+ guard-ring, P+ guard-ring, N+ STRAP and P+ STRAP for the Active connected to an I/O pad, and also MOS within 20um space from the MOS connected to an I/O pad. >= ^LUP_4 um
  PTAP_guard_ring_holex = PTAP_guard_ring_hole ENCLOSE (POST_DRIVER_NACT OR BESIDE_POST_DRIVER_NMOS)
  NTAP_guard_ring_holex = NTAP_guard_ring_hole ENCLOSE (POST_DRIVER_PACT OR BESIDE_POST_DRIVER_PMOS)
  PTAP_guard_ring_wide = (PTAPi TOUCH PTAP_guard_ring_holex) WITH WIDTH >= LUP_4
  NTAP_guard_ring_wide = (NTAPi TOUCH NTAP_guard_ring_holex) WITH WIDTH >= LUP_4
  PTAP_guard_ring_wide_hole = (HOLES PTAP_guard_ring_wide INNER) INSIDE PWELi
  NTAP_guard_ring_wide_hole = (HOLES NTAP_guard_ring_wide INNER) INSIDE NWELi

  PTAP_guard_ring_hole_check = PTAP_guard_ring_holex NOT INSIDE PTAP_guard_ring_wide_hole
  NTAP_guard_ring_hole_check = NTAP_guard_ring_holex NOT INSIDE NTAP_guard_ring_wide_hole
  PTAP_guard_ring_check = PTAPi COIN OUTSIDE EDGE PTAP_guard_ring_hole_check
  NTAP_guard_ring_check = NTAPi COIN OUTSIDE EDGE NTAP_guard_ring_hole_check
  INT PTAP_guard_ring_check PTAPi < LUP_4 ABUT < 90 REGION
  INT NTAP_guard_ring_check NTAPi < LUP_4 ABUT < 90 REGION
}

//LUP.3g is checked by LUP.3.1g_1.8V
//LUP.3g is checked by LUP.3.4g_5V 
//LUP.5g is checked by LUP.5.4g_5V 
//LUP.5g is checked by LUP.5.1g_1.8V
LUP.5.1g_1.8V {@ Minimum space >= ^LUP_5_1 um

               @ 1. between 1.8V-1.5V NMOS which connects to the IO pad and the the PMOS in the internal circuit 
               @ 2. between 1.8V-1.5V PMOS which connects to the IO pad and the the NMOS in the internal circuit  
   EXT POST_DRIVER_PMOS_NW_LV BESIDE_POST_DRIVER_NMOS_PW  < LUP_5_1  ABUT <90 SINGULAR REGION
   EXT POST_DRIVER_PMOS_NW_LV BESIDE_POST_DRIVER_NMOS_RW  < LUP_5_1  ABUT <90 SINGULAR REGION CONNECTED
   EXT POST_DRIVER_PMOS_NWi_LV BESIDE_POST_DRIVER_NMOS_RWi < LUP_5_1  ABUT <90 SINGULAR REGION NOT CONNECTED
   EXT POST_DRIVER_NMOS_PW_LV BESIDE_POST_DRIVER_PMOS_NW  < LUP_5_1 ABUT <90 SINGULAR REGION
   EXT POST_DRIVER_NMOS_RW_LV BESIDE_POST_DRIVER_PMOS_NW  < LUP_5_1 ABUT <90 SINGULAR REGION CONNECTED
   EXT POST_DRIVER_NMOS_RWi_LV BESIDE_POST_DRIVER_PMOS_NWi  < LUP_5_1 ABUT <90 SINGULAR REGION NOT CONNECTED
}


















LUP.5.4g_5V {@ Minimum space >= ^LUP_5_4 um
@ 1. between 5V NMOS which connects to the IO pad and the the PMOS in the internal circuit 
@ 2. between 5V PMOS which connects to the IO pad and the the NMOS in the internal circuit


   EXT POST_DRIVER_PMOS_NW_50V BESIDE_POST_DRIVER_NMOS_PW_1  < LUP_5_4  ABUT <90 SINGULAR REGION
   EXT POST_DRIVER_PMOS_NW_50V BESIDE_POST_DRIVER_NMOS_RW_1  < LUP_5_4  ABUT <90 SINGULAR REGION CONNECTED
   EXT POST_DRIVER_PMOS_NWi_50V BESIDE_POST_DRIVER_NMOS_RWi_1 < LUP_5_4  ABUT <90 SINGULAR REGION NOT CONNECTED
   EXT POST_DRIVER_NMOS_PW_50V BESIDE_POST_DRIVER_PMOS_NW_1  < LUP_5_4 ABUT <90 SINGULAR REGION
   EXT POST_DRIVER_NMOS_RW_50V BESIDE_POST_DRIVER_PMOS_NW_1  < LUP_5_4 ABUT <90 SINGULAR REGION CONNECTED
   EXT POST_DRIVER_NMOS_RWi_50V BESIDE_POST_DRIVER_PMOS_NWi_1  < LUP_5_4 ABUT <90 SINGULAR REGION NOT CONNECTED
}



#IFDEF DISCONNECT_ALL_RESISTOR
#IFDEF CONNECT_ALL_RESISTOR
LUP.WARN.1 {@ 1. Default setting: RES200 usage; Turns off both "DISCONNECT_AFTER_RESISTOR", and "CONNECT_ALL_RESISTOR": circuits after RES200 will NOT be recognized as OD injector. 
	        @ 2. Turns on "DISCONNECT_AFTER_RESISTOR" only: circuits after any resistor will NOT recognized as OD injector.
			@ 3. Turns on "CONNECT_ALL_RESISTOR" only: circuits after any resistor will always be recognized as OD injector.
			@ Please DO NOT turn on both "DISCONNECT_AFTER_RESISTOR" and "CONNECT_ALL_RESISTOR" at the same time. Otherwise "DISCONNECT_AFTER_RESISTOR" will have higher priority.
	A = COPY CHIP
    MERGE A
}
#ENDIF
#ENDIF



#ENDIF

CO_PACT = COi OR (PSDc NOT OUTSIDE COi)
NPUi = ( NTAPi INTERACT CO_PACT ) NOT HVDMY
NPUi_SRAM = ( NPUi INSIDE SRM ) NOT HVDMY


NSTP_OS = SIZE NPUi BY LUP_6 INSIDE OF NWELi STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7
NSTP_OS_SRAM = SIZE NPUi_SRAM BY LUP_6_SRAM INSIDE OF NWELi STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7



PACT_CHECK = ( ((PACTi INTERACT COi) INTERACT POLYi) NOT POLYi ) NOT HVDMY

PACT_CHECK_NON_SRAM = PACT_CHECK NOT INSIDE SRM 
PACT_CHECK_SRAM =  PACT_CHECK INSIDE SRM
CO_NACT = COi OR (NSDc NOT OUTSIDE COi)
PPUi = (PTAPi INTERACT CO_NACT) NOT HVDMY
PPUi_SRAM = (PPUi INSIDE SRM) NOT HVDMY

PSTP_OS = SIZE PPUi BY LUP_6 INSIDE OF PWELi STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7
PSTP_OS_SRAM = SIZE PPUi_SRAM BY LUP_6_SRAM INSIDE OF PWELi STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7

NACT_CHECK = (((NACTi INTERACT COi) INTERACT POLYi) NOT POLYi ) NOT HVDMY

NACT_CHECK_NON_SRAM = NACT_CHECK NOT INSIDE SRM 
NACT_CHECK_SRAM =  NACT_CHECK INSIDE SRM

LUP.6 { @ Any point inside NMOS source/drain space to the nearest PW STRAP in the same PW <= ^LUP_6 um
        @ Any point inside PMOS source/drain space to the nearest NW STRAP in the same NW <= ^LUP_6 um
	@ In SRAM bit cell region, the rule is relaxed to ^LUP_6_SRAM um    
  (PACT_CHECK_NON_SRAM NOT NSTP_OS) NOT (MTP_2T2C AND MCEL)
  (PACT_CHECK_SRAM NOT (NSTP_OS OR NSTP_OS_SRAM)) NOT (MTP_2T2C AND MCEL)
  (NACT_CHECK_NON_SRAM NOT PSTP_OS) NOT (MTP_2T2C AND MCEL)
  (NACT_CHECK_SRAM NOT (PSTP_OS OR PSTP_OS_SRAM)) NOT (MTP_2T2C AND MCEL)

}
LUP.2.2g {@For Area I/O: Within ^LUP_2_2g um space from the MOS connected to an I/O pad, 
    @a P+ guard-ring is required to surround an NMOS or an NMOS cluster. And an N+ guard-ring is required to surround a PMOS or a PMOS cluster. 
    @When the NMOS is enclosed by a NBL, and the NW of the checked PMOS does not interact with the NBL, and 
    @The voltage of the SH_N INTERACT NBL is larger the voltage of the NW of the checked PMOS. However, DRC can waive the same connection.
   X = BESIDE_POST_DRIVER_NMOS_RWi INTERACT POST_DRIVER_NMOS_NBL_WAIVE
   Y = NET AREA RATIO X BESIDE_POST_DRIVER_PMOS_NWi > 0
   (BESIDE_POST_DRIVER_NMOS_2 NOT Y) NOT INSIDE PTAP_guard_ring_hole
   BESIDE_POST_DRIVER_PMOS_2 NOT INSIDE NTAP_guard_ring_hole
}

// LUP.10 is checked by LUP.10__LUP.13
// LUP.13 is checked by LUP.10__LUP.13
LUP.10g__LUP.13g { @ For Area I/O, within ^LUP_2_2g~^LUP_10 um from OD injector (covered by LUPWDMY_2 or turn on ALL_AREA_IO switch)
@ Any point inside NMOS source/drain space to the nearest PW STRAP in the same PW <= ^LUP_13 um
@ Any point inside PMOS source/drain space to the nearest NW STRAP in the same NW <= ^LUP_13 um
#IFDEF ALL_AREA_IO
  TRIGGER_SOURCE  = COPY OD_INJECTOR 
#ELSE
  TRIGGER_SOURCE  = OD_INJECTOR NOT OUTSIDE LUPWDMY_2
#ENDIF
  CORE_LOGIC_NACT = (NACT_CHECK NOT TRIGGER_SOURCE) NOT INSIDE PTAP_guard_ring_hole
  CORE_LOGIC_PACT = (PACT_CHECK NOT TRIGGER_SOURCE) NOT INSIDE NTAP_guard_ring_hole
  NACT_LUP_pre = CORE_LOGIC_NACT NOT OUTSIDE (SIZE TRIGGER_SOURCE BY LUP_10)
  PACT_LUP_pre = CORE_LOGIC_PACT NOT OUTSIDE (SIZE TRIGGER_SOURCE BY LUP_10)
  NACT_LUP = NACT_LUP_pre OUTSIDE (SIZE TRIGGER_SOURCE BY LUP_2_2g)
  PACT_LUP = PACT_LUP_pre OUTSIDE (SIZE TRIGGER_SOURCE BY LUP_2_2g)
  PSTP_OS = SIZE PPUi BY LUP_13 INSIDE OF PWELi STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7
  NACT_LUP NOT PSTP_OS

  NSTP_OS = SIZE NPUi BY LUP_13 INSIDE OF NWELi STEP NW_S_1*0.7 TRUNCATE NW_S_1*0.7
  PACT_LUP NOT NSTP_OS
}
// LUP.11 is not necessary to check. It is checked in Calibre PERC.
// LUP.12 is not necessary to check. It is checked in Calibre PERC.
LUP.14g { @ For Area I/O, width of picup ring and guard rings for the OD injector >= ^LUP_14
#IFDEF ALL_AREA_IO
  AREA_IO_NACT = COPY NPOD_INJECTOR 
  AREA_IO_PACT = COPY PPOD_INJECTOR 
#ELSE
  AREA_IO_NACT = NPOD_INJECTOR NOT OUTSIDE LUPWDMY_2
  AREA_IO_PACT = PPOD_INJECTOR NOT OUTSIDE LUPWDMY_2
#ENDIF
  AREA_IO_NACT NOT INSIDE PTAP_guard_ring_hole
  AREA_IO_PACT NOT INSIDE NTAP_guard_ring_hole
  PTAP_guard_ring_2nd = ((HOLES PTAPi INNER) INTERACT AREA_IO_PACT) NOT INTERACT NACT
  NTAP_guard_ring_2nd = ((HOLES NTAPi INNER) INTERACT AREA_IO_NACT) NOT INTERACT PACT
  AREA_IO_NACT NOT INSIDE NTAP_guard_ring_2nd
  AREA_IO_PACT NOT INSIDE PTAP_guard_ring_2nd

  PTAP_guard_ring_hole_edge = PTAPi COIN OUTSIDE EDGE (PTAP_guard_ring_hole INTERACT AREA_IO_NACT)
  NTAP_guard_ring_hole_edge = NTAPi COIN OUTSIDE EDGE (NTAP_guard_ring_hole INTERACT AREA_IO_PACT)
  INT PTAP_guard_ring_hole_edge PTAPi < LUP_14 ABUT < 90 REGION
  INT NTAP_guard_ring_hole_edge NTAPi < LUP_14 ABUT < 90 REGION

  PTAP_guard_ring_2nd_edge = PTAPi COIN OUTSIDE EDGE PTAP_guard_ring_2nd
  NTAP_guard_ring_2nd_edge = NTAPi COIN OUTSIDE EDGE NTAP_guard_ring_2nd
  INT PTAP_guard_ring_2nd_edge PTAPi < LUP_14 ABUT < 90 REGION
  INT NTAP_guard_ring_2nd_edge NTAPi < LUP_14 ABUT < 90 REGION

}






//
//==========================
// For HV Latch-up rule check
//==========================
//


HV_PACT_real = (((PACT AND HVDMY) OR PACT_HV ) NOT HVESD_merge ) NOT PACT_HV_NOT
HVESD_merge_real = HVESD_merge AND HVESD_BH
HV_NACT_real = (((NACT AND HVDMY) OR NACT_HV) OR HVESD_merge_real) NOT NACT_HV_NOT
//find the special tapi connected to VDD/VSS 
PTAPI_PAD = NET AREA RATIO PTAPiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu) + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
NTAPI_PAD = NET AREA RATIO NTAPiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu) + !!AREA(UBMniu)+ !!AREA(UBMdiu)]

PTAPI_VDD_VSS_PAD_DUMMY = NET AREA RATIO PTAPiu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0
PTAPI_VDD_PAD_DUMMY = NET AREA RATIO PTAPiu OVER CB_VDD_DUMMY UBMn_VDD_DUMMY UBMd_VDD_DUMMY >0
PTAPI_VSS_PAD_DUMMY = NET AREA RATIO PTAPiu OVER CB_VSS_DUMMY UBMn_VSS_DUMMY UBMd_VSS_DUMMY >0
NTAPI_VDD_VSS_PAD_DUMMY = NET AREA RATIO NTAPiu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0
NTAPI_VDD_PAD_DUMMY = NET AREA RATIO NTAPiu OVER CB_VDD_DUMMY UBMn_VDD_DUMMY UBMd_VDD_DUMMY >0
NTAPI_VSS_PAD_DUMMY = NET AREA RATIO NTAPiu OVER CB_VSS_DUMMY UBMn_VSS_DUMMY UBMd_VSS_DUMMY >0




 PTAPI_PAD_TEXT = NET AREA RATIO PTAPiu OVER  PAD_M1iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_M5iu_BY_TEXT > 0  
 NTAPI_PAD_TEXT = NET AREA RATIO NTAPiu OVER  PAD_M1iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_M5iu_BY_TEXT > 0  
 PTAPI_VDD_VSS_PAD_TEXT = NET AREA RATIO PTAPiu OVER  PWR_M1iu_BY_TEXT  PWR_M2iu_BY_TEXT  PWR_M3iu_BY_TEXT  PWR_M4iu_BY_TEXT  PWR_M5iu_BY_TEXT  GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_M5iu_BY_TEXT > 0  
 PTAPI_VDD_PAD_TEXT = NET AREA RATIO PTAPiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_M5iu_BY_TEXT > 0  
 PTAPI_VSS_PAD_TEXT = NET AREA RATIO PTAPiu OVER  GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_M5iu_BY_TEXT > 0  

 NTAPI_VDD_VSS_PAD_TEXT = NET AREA RATIO NTAPiu OVER  PWR_M1iu_BY_TEXT  PWR_M2iu_BY_TEXT  PWR_M3iu_BY_TEXT  PWR_M4iu_BY_TEXT  PWR_M5iu_BY_TEXT  GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_M5iu_BY_TEXT > 0  
 NTAPI_VDD_PAD_TEXT = NET AREA RATIO NTAPiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_M5iu_BY_TEXT > 0  
 NTAPI_VSS_PAD_TEXT = NET AREA RATIO NTAPiu OVER  GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_M5iu_BY_TEXT > 0  



//find the special acti connected to VDD/VSS
PACTI_PAD = NET AREA RATIO PSDiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu) + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
NACTI_PAD = NET AREA RATIO NSDiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu) + !!AREA(UBMniu)+ !!AREA(UBMdiu)]

PACTI_VDD_VSS_PAD_DUMMY = NET AREA RATIO PSDiu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0
PACTI_VDD_PAD_DUMMY = NET AREA RATIO PSDiu OVER CB_VDD_DUMMY UBMn_VDD_DUMMY UBMd_VDD_DUMMY >0
PACTI_VSS_PAD_DUMMY = NET AREA RATIO PSDiu OVER CB_VSS_DUMMY UBMn_VSS_DUMMY UBMd_VSS_DUMMY >0
NACTI_VDD_VSS_PAD_DUMMY = NET AREA RATIO NSDiu OVER CB_DUMMY UBMn_DUMMY UBMd_DUMMY >0
NACTI_VDD_PAD_DUMMY = NET AREA RATIO NSDiu OVER CB_VDD_DUMMY UBMn_VDD_DUMMY UBMd_VDD_DUMMY >0
NACTI_VSS_PAD_DUMMY = NET AREA RATIO NSDiu OVER CB_VSS_DUMMY UBMn_VSS_DUMMY UBMd_VSS_DUMMY >0


 PACTI_PAD_TEXT = NET AREA RATIO PSDiu OVER  PAD_M1iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_M5iu_BY_TEXT > 0  
 NACTI_PAD_TEXT = NET AREA RATIO NSDiu OVER  PAD_M1iu_BY_TEXT PAD_M2iu_BY_TEXT PAD_M3iu_BY_TEXT PAD_M4iu_BY_TEXT PAD_M5iu_BY_TEXT > 0  
 PACTI_VDD_VSS_PAD_TEXT = NET AREA RATIO PSDiu OVER  PWR_M1iu_BY_TEXT  PWR_M2iu_BY_TEXT  PWR_M3iu_BY_TEXT  PWR_M4iu_BY_TEXT  PWR_M5iu_BY_TEXT  GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_M5iu_BY_TEXT > 0  
 PACTI_VDD_PAD_TEXT = NET AREA RATIO PSDiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_M5iu_BY_TEXT > 0  
 PACTI_VSS_PAD_TEXT = NET AREA RATIO PSDiu OVER  GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_M5iu_BY_TEXT > 0  

 NACTI_VDD_VSS_PAD_TEXT = NET AREA RATIO NSDiu OVER  PWR_M1iu_BY_TEXT  PWR_M2iu_BY_TEXT  PWR_M3iu_BY_TEXT  PWR_M4iu_BY_TEXT  PWR_M5iu_BY_TEXT  GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_M5iu_BY_TEXT > 0  
 NACTI_VDD_PAD_TEXT = NET AREA RATIO NSDiu OVER  PWR_M1iu_BY_TEXT PWR_M2iu_BY_TEXT PWR_M3iu_BY_TEXT PWR_M4iu_BY_TEXT PWR_M5iu_BY_TEXT > 0  
 NACTI_VSS_PAD_TEXT = NET AREA RATIO NSDiu OVER  GND_M1iu_BY_TEXT GND_M2iu_BY_TEXT GND_M3iu_BY_TEXT GND_M4iu_BY_TEXT GND_M5iu_BY_TEXT > 0  



#IFDEF  CHECK_LATCHUP_BY_TEXT
PTAPI_IOPAD_ALL = (PTAPI_PAD OR PTAPI_PAD_TEXT) NOT (PTAPI_VDD_VSS_PAD_TEXT OR PTAPI_VDD_VSS_PAD_DUMMY)
NTAPI_IOPAD_ALL = (NTAPI_PAD OR NTAPI_PAD_TEXT) NOT (NTAPI_VDD_VSS_PAD_TEXT OR NTAPI_VDD_VSS_PAD_DUMMY)
PACTI_IOPAD_ALL = (PACTI_PAD OR PACTI_PAD_TEXT) NOT (PACTI_VDD_VSS_PAD_TEXT OR PACTI_VDD_VSS_PAD_DUMMY)
NACTI_IOPAD_ALL = (NACTI_PAD OR NACTI_PAD_TEXT) NOT (NACTI_VDD_VSS_PAD_TEXT OR NACTI_VDD_VSS_PAD_DUMMY)
HV_VDD_VSS = ((((((PTAPI_VDD_VSS_PAD_TEXT OR NTAPI_VDD_VSS_PAD_TEXT) OR PACTI_VDD_VSS_PAD_DUMMY) OR NACTI_VDD_VSS_PAD_DUMMY) OR PACTI_VDD_VSS_PAD_TEXT) OR NACTI_VDD_VSS_PAD_TEXT) OR PTAPI_VDD_VSS_PAD_DUMMY) OR NTAPI_VDD_VSS_PAD_DUMMY
HV_VDD = ((((((PTAPI_VDD_PAD_TEXT OR NTAPI_VDD_PAD_TEXT) OR PACTI_VDD_PAD_DUMMY) OR NACTI_VDD_PAD_DUMMY) OR PACTI_VDD_PAD_TEXT) OR NACTI_VDD_PAD_TEXT) OR PTAPI_VDD_PAD_DUMMY) OR NTAPI_VDD_PAD_DUMMY
HV_VSS = ((((((PTAPI_VSS_PAD_TEXT OR NTAPI_VSS_PAD_TEXT) OR PACTI_VSS_PAD_DUMMY) OR NACTI_VSS_PAD_DUMMY) OR PACTI_VSS_PAD_TEXT) OR NACTI_VSS_PAD_TEXT) OR PTAPI_VSS_PAD_DUMMY) OR NTAPI_VSS_PAD_DUMMY
#ENDIF

#IFNDEF  CHECK_LATCHUP_BY_TEXT
PTAPI_IOPAD_ALL = PTAPI_PAD  NOT PTAPI_VDD_VSS_PAD_DUMMY
NTAPI_IOPAD_ALL = NTAPI_PAD  NOT NTAPI_VDD_VSS_PAD_DUMMY
PACTI_IOPAD_ALL = PACTI_PAD  NOT PACTI_VDD_VSS_PAD_DUMMY
NACTI_IOPAD_ALL = NACTI_PAD  NOT NACTI_VDD_VSS_PAD_DUMMY
HV_VDD_VSS = ((PACTI_VDD_VSS_PAD_DUMMY OR NACTI_VDD_VSS_PAD_DUMMY) OR PTAPI_VDD_VSS_PAD_DUMMY) OR NTAPI_VDD_VSS_PAD_DUMMY
HV_VSS = ((PACTI_VSS_PAD_DUMMY OR NACTI_VSS_PAD_DUMMY) OR PTAPI_VSS_PAD_DUMMY) OR NTAPI_VSS_PAD_DUMMY
HV_VDD = ((PACTI_VDD_PAD_DUMMY OR NACTI_VDD_PAD_DUMMY) OR PTAPI_VDD_PAD_DUMMY) OR NTAPI_VDD_PAD_DUMMY
#ENDIF

HVOD_IOPAD = ((PACTI_IOPAD_ALL OR NACTI_IOPAD_ALL) OR PTAPI_IOPAD_ALL ) OR NTAPI_IOPAD_ALL

// ESD device [covered by dummy layers]
HV_POST_DRIVER_PACT1 = HV_PACT_real AND EMPTYi    // MOS with active region in SDI
HV_POST_DRIVER_NACT1 = HV_NACT_real AND EMPTYi    // MOS with active region in SDI
// ESD device [connected to Signal PAD but not connected to one PAD only]
HV_POST_DRIVER_PACT2 = HV_PACT_real INTERACT HVOD_IOPAD
HV_POST_DRIVER_NACT2 = HV_NACT_real INTERACT (HVOD_IOPAD OR (HVESD1DMY INTERACT HVOD_IOPAD))

HV_POST_DRIVER_PACT = HV_POST_DRIVER_PACT1 OR HV_POST_DRIVER_PACT2
HV_POST_DRIVER_NACT = HV_POST_DRIVER_NACT1 OR HV_POST_DRIVER_NACT2
HV_POST_DRIVER_ACT = HV_POST_DRIVER_PACT OR HV_POST_DRIVER_NACT


N_DRAIN_VDD = HV_D_N INTERACT HV_VDD
N_SOURCE_IO = HV_S_N INTERACT HVOD_IOPAD
HVESD_E_VDD = HVESD_EOD INTERACT HV_VDD
HVESD_E_IO = HVESD_EOD INTERACT HVOD_IOPAD
#IFDEF CHECK_ALL_IO_LATCHUP
POST_DRIVER_ACT_HVN_HS = (HV_POST_DRIVER_ACT AND HV_NACT_real) INTERACT (((N_SOURCE_IO NOT ((((((((NLD9G5_S OR NLD12G5_S) OR NLD16G5_S) OR NLD20G5_S) OR NA29G5_S)  OR NLD6G5_DE_S) OR NLD6G5_SA_S) OR NLD24G5_SWITCH_S) OR NLD24G5_S)) OR HVESD_E_VDD) OR (HVESD1DMY INTERACT HVESD_E_VDD))
#ELSE
POST_DRIVER_ACT_HVN_HS = (HV_POST_DRIVER_ACT AND HV_NACT_real) INTERACT (((N_DRAIN_VDD NOT ((((((((NLD9G5_D OR NLD12G5_D) OR NLD16G5_D) OR NLD20G5_D) OR NA29G5_D)  OR NLD6G5_DE_S) OR NLD6G5_SA_S) OR NLD24G5_SWITCH_S) OR NLD24G5_S)) OR HVESD_E_VDD) OR (HVESD1DMY INTERACT HVESD_E_VDD))
#ENDIF


N_SOURCE_VSS = HV_S_N INTERACT HV_VSS
N_DRAIN_IO = HV_D_N INTERACT HVOD_IOPAD
HVESD_C_VSS = HVESD_COD INTERACT HV_VSS
HVESD_POWER_CLAMP = (HVESD_merge_real INTERACT HVESD_C_VSS) INTERACT HVESD_E_VDD


#IFDEF CHECK_ALL_IO_LATCHUP
POST_DRIVER_ACT_HVN_LS = (HV_POST_DRIVER_ACT AND HV_NACT_real) INTERACT ((N_DRAIN_IO OR HVESD_C_VSS) OR (HVESD1DMY INTERACT HVESD_C_VSS)) 
#ELSE
POST_DRIVER_ACT_HVN_LS = (HV_POST_DRIVER_ACT AND HV_NACT_real) INTERACT ((N_SOURCE_VSS OR HVESD_C_VSS) OR (HVESD1DMY INTERACT HVESD_C_VSS))
#ENDIF
POST_DRIVER_ACT_HVN_LS_HS = POST_DRIVER_ACT_HVN_LS OR POST_DRIVER_ACT_HVN_HS




POST_DRIVER_ACT_HVN_HS_HVDMY_45_GB = POST_DRIVER_ACT_HVN_HS INTERACT HVDMY_45_GB
POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB = POST_DRIVER_ACT_HVN_LS INTERACT HVDMY_45_GB

POST_DRIVER_ACT_HVN_HS_HVDMY_36_GB = POST_DRIVER_ACT_HVN_HS INTERACT HVDMY_36_GB
POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB = POST_DRIVER_ACT_HVN_LS INTERACT HVDMY_36_GB

POST_DRIVER_ACT_HVN_HS_HVDMY_29_GA = POST_DRIVER_ACT_HVN_HS INTERACT HVDMY_29_GA
POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA = POST_DRIVER_ACT_HVN_LS INTERACT HVDMY_29_GA

POST_DRIVER_ACT_HVN_HS_HVDMY_24_20_16_12_9_6_GA = POST_DRIVER_ACT_HVN_HS INTERACT HVDMY_24_20_16_12_9_6_GA
POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA = POST_DRIVER_ACT_HVN_LS INTERACT HVDMY_24_20_16_12_9_6_GA

POST_DRIVER_ACT_HVN_HS_HVDMY_5_GA = POST_DRIVER_ACT_HVN_HS INTERACT HVDMY_5_GA
POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA = POST_DRIVER_ACT_HVN_LS INTERACT HVDMY_5_GA



P_SOURCE_IO = HV_S_P INTERACT HVOD_IOPAD
P_DRAIN_VSS = HV_D_P INTERACT HV_VSS
#IFDEF CHECK_ALL_IO_LATCHUP
POST_DRIVER_ACT_HVP_LS = (HV_POST_DRIVER_PACT AND HV_PACT_real) INTERACT P_SOURCE_IO
#ELSE
POST_DRIVER_ACT_HVP_LS = (HV_POST_DRIVER_PACT AND HV_PACT_real) INTERACT P_DRAIN_VSS

#ENDIF
POST_DRIVER_ACT_HVP_LS_HVDMY_45_GB = POST_DRIVER_ACT_HVP_LS INTERACT HVDMY_45_GB
POST_DRIVER_ACT_HVP_LS_HVDMY_36_GB = POST_DRIVER_ACT_HVP_LS INTERACT HVDMY_36_GB
POST_DRIVER_ACT_HVP_LS_HVDMY_29_GA = POST_DRIVER_ACT_HVP_LS INTERACT HVDMY_29_GA
POST_DRIVER_ACT_HVP_LS_HVDMY_24_20_16_12_9_6_GA = POST_DRIVER_ACT_HVP_LS INTERACT HVDMY_24_20_16_12_9_6_GA
POST_DRIVER_ACT_HVP_LS_HVDMY_5_GA = POST_DRIVER_ACT_HVP_LS INTERACT HVDMY_5_GA


P_SOURCE_VDD = HV_S_P INTERACT HV_VDD
P_DRAIN_IO = HV_D_P INTERACT HVOD_IOPAD
#IFDEF CHECK_ALL_IO_LATCHUP
POST_DRIVER_ACT_HVP_HS = (HV_POST_DRIVER_PACT AND HV_PACT_real) INTERACT P_DRAIN_IO
#ELSE

POST_DRIVER_ACT_HVP_HS = (HV_POST_DRIVER_PACT AND HV_PACT_real) INTERACT P_SOURCE_VDD
#ENDIF

POST_DRIVER_ACT_HVP_HS_HVDMY_45_GB = POST_DRIVER_ACT_HVP_HS INTERACT HVDMY_45_GB

POST_DRIVER_ACT_HVP_HS_HVDMY_36_GB = POST_DRIVER_ACT_HVP_HS INTERACT HVDMY_36_GB

POST_DRIVER_ACT_HVP_HS_HVDMY_29_GA = POST_DRIVER_ACT_HVP_HS INTERACT HVDMY_29_GA

POST_DRIVER_ACT_HVP_HS_HVDMY_24_20_16_12_9_6_GA = POST_DRIVER_ACT_HVP_HS INTERACT HVDMY_24_20_16_12_9_6_GA

POST_DRIVER_ACT_HVP_HS_HVDMY_5_GA = POST_DRIVER_ACT_HVP_HS INTERACT HVDMY_5_GA



HV_POST_DRIVER_PACT_HVDMY_45_GB = HV_POST_DRIVER_PACT INTERACT HVDMY_45_GB
HV_POST_DRIVER_NACT_HVDMY_45_GB = HV_POST_DRIVER_NACT INTERACT HVDMY_45_GB
HV_POST_DRIVER_PACT_HVDMY_36_GB = HV_POST_DRIVER_PACT INTERACT HVDMY_36_GB
HV_POST_DRIVER_NACT_HVDMY_36_GB = HV_POST_DRIVER_NACT INTERACT HVDMY_36_GB
HV_POST_DRIVER_PACT_HVDMY_29_GA = HV_POST_DRIVER_PACT INTERACT HVDMY_29_GA
HV_POST_DRIVER_NACT_HVDMY_29_GA = HV_POST_DRIVER_NACT INTERACT HVDMY_29_GA
HV_POST_DRIVER_PACT_HVDMY_24_20_16_12_9_6_GA = HV_POST_DRIVER_PACT INTERACT HVDMY_24_20_16_12_9_6_GA
HV_POST_DRIVER_NACT_HVDMY_24_20_16_12_9_6_GA = HV_POST_DRIVER_NACT INTERACT HVDMY_24_20_16_12_9_6_GA
HV_POST_DRIVER_PACT_HVDMY_5_GA = HV_POST_DRIVER_PACT INTERACT HVDMY_5_GA
HV_POST_DRIVER_NACT_HVDMY_5_GA = HV_POST_DRIVER_NACT INTERACT HVDMY_5_GA



//===============================
//HVNW pick up ring 
//===============================
HVNW_NPOD_ISO_R_1 = (((NPOD  AND HVSHN) AND NBL) NOT (ALL_HVMOS_OD OR LV_ACT)) OR HVESD_BOD
// for HVDMY_45_GB
HVNW_NPOD_ISO_LUP_H_1_HVDMY_45_GB = (( HOLES HVNW_NPOD_ISO_R_1 INNER ) NOT HVNW_NPOD_ISO_R_1) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_45_GB OR HV_POST_DRIVER_PACT_HVDMY_45_GB)
HVNW_NPOD_ISO_R_1_HVDMY_45_GB = HVNW_NPOD_ISO_R_1 TOUCH HVNW_NPOD_ISO_LUP_H_1_HVDMY_45_GB
HVNW_NPOD_ISO_R_2_HVDMY_45_GB = SIZE HVNW_NPOD_ISO_R_1_HVDMY_45_GB BY (HVOD_W_2/2)-GRID UNDEROVER
HVNW_NPOD_ISO_LUP_H_HVDMY_45_GB = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_45_GB) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_45_GB
HVNW_NPOD_ISO_R_HVDMY_45_GB_C = HVNW_NPOD_ISO_R_2_HVDMY_45_GB TOUCH HVNW_NPOD_ISO_LUP_H_HVDMY_45_GB
HVNW_NPOD_ISO_R_HVDMY_45_GB = STAMP HVNW_NPOD_ISO_R_HVDMY_45_GB_C BY NTAPiu
// for HVDMY_36_GB
HVNW_NPOD_ISO_LUP_H_1_HVDMY_36_GB = (( HOLES HVNW_NPOD_ISO_R_1 INNER ) NOT HVNW_NPOD_ISO_R_1) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_36_GB OR HV_POST_DRIVER_PACT_HVDMY_36_GB)
HVNW_NPOD_ISO_R_1_HVDMY_36_GB = HVNW_NPOD_ISO_R_1 TOUCH HVNW_NPOD_ISO_LUP_H_1_HVDMY_36_GB
HVNW_NPOD_ISO_R_2_HVDMY_36_GB = SIZE HVNW_NPOD_ISO_R_1_HVDMY_36_GB BY (HVOD_W_2/2)-GRID UNDEROVER
HVNW_NPOD_ISO_LUP_H_HVDMY_36_GB = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_36_GB) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_36_GB
HVNW_NPOD_ISO_R_HVDMY_36_GB_C = HVNW_NPOD_ISO_R_2_HVDMY_36_GB TOUCH HVNW_NPOD_ISO_LUP_H_HVDMY_36_GB
HVNW_NPOD_ISO_R_HVDMY_36_GB = STAMP HVNW_NPOD_ISO_R_HVDMY_36_GB_C BY NTAPiu
// for HVDMY_29_GA
HVNW_NPOD_ISO_LUP_H_1_HVDMY_29_GA = (( HOLES HVNW_NPOD_ISO_R_1 INNER ) NOT HVNW_NPOD_ISO_R_1) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_29_GA OR HV_POST_DRIVER_PACT_HVDMY_29_GA)
HVNW_NPOD_ISO_R_1_HVDMY_29_GA = HVNW_NPOD_ISO_R_1 TOUCH HVNW_NPOD_ISO_LUP_H_1_HVDMY_29_GA
HVNW_NPOD_ISO_R_2_HVDMY_29_GA = SIZE HVNW_NPOD_ISO_R_1_HVDMY_29_GA BY (HVOD_W_2/2)-GRID UNDEROVER
HVNW_NPOD_ISO_LUP_H_HVDMY_29_GA = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_29_GA) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_29_GA
HVNW_NPOD_ISO_R_HVDMY_29_GA_C = HVNW_NPOD_ISO_R_2_HVDMY_29_GA TOUCH HVNW_NPOD_ISO_LUP_H_HVDMY_29_GA
HVNW_NPOD_ISO_R_HVDMY_29_GA = STAMP HVNW_NPOD_ISO_R_HVDMY_29_GA_C BY NTAPiu
// for HVDMY_24_20_16_12_9_6_GA
HVNW_NPOD_ISO_LUP_H_1_HVDMY_24_20_16_12_9_6_GA = (( HOLES HVNW_NPOD_ISO_R_1 INNER ) NOT HVNW_NPOD_ISO_R_1) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_24_20_16_12_9_6_GA OR HV_POST_DRIVER_PACT_HVDMY_24_20_16_12_9_6_GA)
HVNW_NPOD_ISO_R_1_HVDMY_24_20_16_12_9_6_GA = HVNW_NPOD_ISO_R_1 TOUCH HVNW_NPOD_ISO_LUP_H_1_HVDMY_24_20_16_12_9_6_GA
HVNW_NPOD_ISO_R_2_HVDMY_24_20_16_12_9_6_GA = SIZE HVNW_NPOD_ISO_R_1_HVDMY_24_20_16_12_9_6_GA BY (HVOD_W_2/2)-GRID UNDEROVER
HVNW_NPOD_ISO_LUP_H_HVDMY_24_20_16_12_9_6_GA = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_24_20_16_12_9_6_GA) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_24_20_16_12_9_6_GA
HVNW_NPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA_C = HVNW_NPOD_ISO_R_2_HVDMY_24_20_16_12_9_6_GA TOUCH HVNW_NPOD_ISO_LUP_H_HVDMY_24_20_16_12_9_6_GA
HVNW_NPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA = STAMP HVNW_NPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA_C BY NTAPiu
// for HVDMY_5_GA
HVNW_NPOD_ISO_LUP_H_1_HVDMY_5_GA = (( HOLES HVNW_NPOD_ISO_R_1 INNER ) NOT HVNW_NPOD_ISO_R_1) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_5_GA OR HV_POST_DRIVER_PACT_HVDMY_5_GA)
HVNW_NPOD_ISO_R_1_HVDMY_5_GA = HVNW_NPOD_ISO_R_1 TOUCH HVNW_NPOD_ISO_LUP_H_1_HVDMY_5_GA
HVNW_NPOD_ISO_R_2_HVDMY_5_GA = SIZE HVNW_NPOD_ISO_R_1_HVDMY_5_GA BY (HVOD_W_2/2)-GRID UNDEROVER
HVNW_NPOD_ISO_LUP_H_HVDMY_5_GA = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_5_GA) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_5_GA
HVNW_NPOD_ISO_R_HVDMY_5_GA_C = HVNW_NPOD_ISO_R_2_HVDMY_5_GA TOUCH HVNW_NPOD_ISO_LUP_H_HVDMY_5_GA
HVNW_NPOD_ISO_R_HVDMY_5_GA = STAMP HVNW_NPOD_ISO_R_HVDMY_5_GA_C BY NTAPiu

HVNW_NPOD_ISO_LUP_H = (((HVNW_NPOD_ISO_LUP_H_HVDMY_45_GB OR HVNW_NPOD_ISO_LUP_H_HVDMY_36_GB) OR HVNW_NPOD_ISO_LUP_H_HVDMY_29_GA) OR HVNW_NPOD_ISO_LUP_H_HVDMY_24_20_16_12_9_6_GA) OR HVNW_NPOD_ISO_LUP_H_HVDMY_5_GA
HVNW_NPOD_ISO_R = (((HVNW_NPOD_ISO_R_HVDMY_45_GB OR HVNW_NPOD_ISO_R_HVDMY_36_GB) OR HVNW_NPOD_ISO_R_HVDMY_29_GA) OR HVNW_NPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA) OR HVNW_NPOD_ISO_R_HVDMY_5_GA 


//===========================================
//HVNW pick up ring for Low-side/High-side 
//===========================================
// for HVDMY_45_GB
HVNW_NPOD_ISO_LUP_LS_H_HVDMY_45_GB = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_45_GB) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB
HVNW_NPOD_ISO_LS_R_HVDMY_45_GB_C = HVNW_NPOD_ISO_R_2_HVDMY_45_GB TOUCH HVNW_NPOD_ISO_LUP_LS_H_HVDMY_45_GB
HVNW_NPOD_ISO_LUP_HS_H_HVDMY_45_GB = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_45_GB) ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_45_GB
HVNW_NPOD_ISO_HS_R_HVDMY_45_GB_C = HVNW_NPOD_ISO_R_2_HVDMY_45_GB TOUCH HVNW_NPOD_ISO_LUP_HS_H_HVDMY_45_GB
// for HVDMY_36_GB
HVNW_NPOD_ISO_LUP_LS_H_HVDMY_36_GB = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_36_GB) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB
HVNW_NPOD_ISO_LS_R_HVDMY_36_GB_C = HVNW_NPOD_ISO_R_2_HVDMY_36_GB TOUCH HVNW_NPOD_ISO_LUP_LS_H_HVDMY_36_GB
HVNW_NPOD_ISO_LUP_HS_H_HVDMY_36_GB = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_36_GB) ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_36_GB
HVNW_NPOD_ISO_HS_R_HVDMY_36_GB_C = HVNW_NPOD_ISO_R_2_HVDMY_36_GB TOUCH HVNW_NPOD_ISO_LUP_HS_H_HVDMY_36_GB
// for HVDMY_29_GA
HVNW_NPOD_ISO_LUP_LS_H_HVDMY_29_GA = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_29_GA) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA
HVNW_NPOD_ISO_LS_R_HVDMY_29_GA_C = HVNW_NPOD_ISO_R_2_HVDMY_29_GA TOUCH HVNW_NPOD_ISO_LUP_LS_H_HVDMY_29_GA
HVNW_NPOD_ISO_LUP_HS_H_HVDMY_29_GA = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_29_GA) ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_29_GA
HVNW_NPOD_ISO_HS_R_HVDMY_29_GA_C = HVNW_NPOD_ISO_R_2_HVDMY_29_GA TOUCH HVNW_NPOD_ISO_LUP_HS_H_HVDMY_29_GA
// for HVDMY_24_20_16_12_9_6_GA
HVNW_NPOD_ISO_LUP_LS_H_HVDMY_24_20_16_12_9_6_GA = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_24_20_16_12_9_6_GA) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA
HVNW_NPOD_ISO_LS_R_HVDMY_24_20_16_12_9_6_GA_C = HVNW_NPOD_ISO_R_2_HVDMY_24_20_16_12_9_6_GA TOUCH HVNW_NPOD_ISO_LUP_LS_H_HVDMY_24_20_16_12_9_6_GA
HVNW_NPOD_ISO_LUP_HS_H_HVDMY_24_20_16_12_9_6_GA = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_24_20_16_12_9_6_GA) ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_24_20_16_12_9_6_GA
HVNW_NPOD_ISO_HS_R_HVDMY_24_20_16_12_9_6_GA_C = HVNW_NPOD_ISO_R_2_HVDMY_24_20_16_12_9_6_GA TOUCH HVNW_NPOD_ISO_LUP_HS_H_HVDMY_24_20_16_12_9_6_GA
// for HVDMY_5_GA
HVNW_NPOD_ISO_LUP_LS_H_HVDMY_5_GA = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_5_GA) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA
HVNW_NPOD_ISO_LS_R_HVDMY_5_GA_C = HVNW_NPOD_ISO_R_2_HVDMY_5_GA TOUCH HVNW_NPOD_ISO_LUP_LS_H_HVDMY_5_GA
HVNW_NPOD_ISO_LUP_HS_H_HVDMY_5_GA = (HOLES HVNW_NPOD_ISO_R_2_HVDMY_5_GA) ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_5_GA
HVNW_NPOD_ISO_HS_R_HVDMY_5_GA_C = HVNW_NPOD_ISO_R_2_HVDMY_5_GA TOUCH HVNW_NPOD_ISO_LUP_HS_H_HVDMY_5_GA

HVNW_NPOD_ISO_LS_R = (((HVNW_NPOD_ISO_LS_R_HVDMY_45_GB_C OR HVNW_NPOD_ISO_LS_R_HVDMY_36_GB_C) OR HVNW_NPOD_ISO_LS_R_HVDMY_29_GA_C) OR HVNW_NPOD_ISO_LS_R_HVDMY_24_20_16_12_9_6_GA_C) OR HVNW_NPOD_ISO_LS_R_HVDMY_5_GA_C
HVNW_NPOD_ISO_HS_R = (((HVNW_NPOD_ISO_HS_R_HVDMY_45_GB_C OR HVNW_NPOD_ISO_HS_R_HVDMY_36_GB_C) OR HVNW_NPOD_ISO_HS_R_HVDMY_29_GA_C) OR HVNW_NPOD_ISO_HS_R_HVDMY_24_20_16_12_9_6_GA_C) OR HVNW_NPOD_ISO_HS_R_HVDMY_5_GA_C


HVNW_RING_HVDMY_45_GB_VDD_C = HVNW_NPOD_ISO_R_HVDMY_45_GB_C INTERACT HV_VDD
HVNW_RING_HVDMY_45_GB_VDD =  STAMP HVNW_RING_HVDMY_45_GB_VDD_C BY NTAPiu
HVNW_RING_HVDMY_36_GB_VDD_C = HVNW_NPOD_ISO_R_HVDMY_36_GB_C INTERACT HV_VDD
HVNW_RING_HVDMY_36_GB_VDD =  STAMP HVNW_RING_HVDMY_36_GB_VDD_C BY NTAPiu
HVNW_RING_HVDMY_29_GA_VDD_C = HVNW_NPOD_ISO_R_HVDMY_29_GA_C INTERACT HV_VDD
HVNW_RING_HVDMY_29_GA_VDD =  STAMP HVNW_RING_HVDMY_29_GA_VDD_C BY NTAPiu
HVNW_RING_HVDMY_24_20_16_12_9_6_GA_VDD_C = HVNW_NPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA_C INTERACT HV_VDD
HVNW_RING_HVDMY_24_20_16_12_9_6_GA_VDD =  STAMP HVNW_RING_HVDMY_24_20_16_12_9_6_GA_VDD_C BY NTAPiu
HVNW_RING_HVDMY_5_GA_VDD_C = HVNW_NPOD_ISO_R_HVDMY_5_GA_C INTERACT HV_VDD
HVNW_RING_HVDMY_5_GA_VDD =  STAMP HVNW_RING_HVDMY_5_GA_VDD_C BY NTAPiu


//==============================
//HVNW connection for Low side Full iso
//==============================
// for HVDMY_45_GB
HV_D_N_HVDMY_45_GB = HV_D_N INTERACT HV_POST_DRIVER_NACT_HVDMY_45_GB
HV_E_E_HVDMY_45_GB = HVESD_EOD INTERACT HV_POST_DRIVER_NACT_HVDMY_45_GB
HV_D_N_HVDMY_45_GB_DD = STAMP HV_D_N_HVDMY_45_GB BY NTAPiu
HV_E_E_HVDMY_45_GB_EE = STAMP HV_E_E_HVDMY_45_GB BY PSDiu

HVNW_RING_HVDMY_45_GB_TO_DRAIN = NET AREA RATIO HVNW_NPOD_ISO_R_HVDMY_45_GB HV_D_N_HVDMY_45_GB_DD >0
HVNW_RING_HVDMY_45_GB_TO_VDD = NET AREA RATIO HVNW_NPOD_ISO_R_HVDMY_45_GB HVNW_RING_HVDMY_45_GB_VDD >0
HVNW_NPOD_ISO_LUP_H_HVDMY_45_GB_DRAIN = (HOLES HVNW_RING_HVDMY_45_GB_TO_DRAIN INNER) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_45_GB


HVNW_NPOD_ISO_LUP_H_HVDMY_45_GB_VDD = (HOLES HVNW_RING_HVDMY_45_GB_TO_VDD INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB
POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_FULL = POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB INSIDE HVNW_NPOD_ISO_LUP_H_HVDMY_45_GB_VDD
HVNW_NPOD_ISO_LUP_A_HVDMY_45_GB_VDD = HVNW_NPOD_ISO_LUP_H_HVDMY_45_GB_VDD OR HVNW_RING_HVDMY_45_GB_TO_VDD
POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_NONFULL = POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB NOT POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_FULL

// for HVDMY_36_GB
HV_D_N_HVDMY_36_GB = HV_D_N INTERACT HV_POST_DRIVER_NACT_HVDMY_36_GB
HV_E_E_HVDMY_36_GB = HVESD_EOD INTERACT HV_POST_DRIVER_NACT_HVDMY_36_GB
HV_D_N_HVDMY_36_GB_DD = STAMP HV_D_N_HVDMY_36_GB BY NTAPiu
HV_E_E_HVDMY_36_GB_EE = STAMP HV_E_E_HVDMY_36_GB BY PSDiu

HVNW_RING_HVDMY_36_GB_TO_DRAIN = NET AREA RATIO HVNW_NPOD_ISO_R_HVDMY_36_GB HV_D_N_HVDMY_36_GB_DD >0
HVNW_RING_HVDMY_36_GB_TO_VDD = NET AREA RATIO HVNW_NPOD_ISO_R_HVDMY_36_GB HVNW_RING_HVDMY_36_GB_VDD >0
HVNW_NPOD_ISO_LUP_H_HVDMY_36_GB_DRAIN = (HOLES HVNW_RING_HVDMY_36_GB_TO_DRAIN INNER) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_36_GB


HVNW_NPOD_ISO_LUP_H_HVDMY_36_GB_VDD = (HOLES HVNW_RING_HVDMY_36_GB_TO_VDD INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB
POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_FULL = POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB INSIDE HVNW_NPOD_ISO_LUP_H_HVDMY_36_GB_VDD
HVNW_NPOD_ISO_LUP_A_HVDMY_36_GB_VDD = HVNW_NPOD_ISO_LUP_H_HVDMY_36_GB_VDD OR HVNW_RING_HVDMY_36_GB_TO_VDD
POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_NONFULL = POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB NOT POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_FULL

// for HVDMY_29_GA
HV_D_N_HVDMY_29_GA = HV_D_N INTERACT HV_POST_DRIVER_NACT_HVDMY_29_GA
HV_E_E_HVDMY_29_GA = HVESD_EOD INTERACT HV_POST_DRIVER_NACT_HVDMY_29_GA
HV_D_N_HVDMY_29_GA_DD = STAMP HV_D_N_HVDMY_29_GA BY NTAPiu
HV_E_E_HVDMY_29_GA_EE = STAMP HV_E_E_HVDMY_29_GA BY PSDiu

HVNW_RING_HVDMY_29_GA_TO_DRAIN = NET AREA RATIO HVNW_NPOD_ISO_R_HVDMY_29_GA HV_D_N_HVDMY_29_GA_DD >0
HVNW_RING_HVDMY_29_GA_TO_VDD = NET AREA RATIO HVNW_NPOD_ISO_R_HVDMY_29_GA HVNW_RING_HVDMY_29_GA_VDD >0
HVNW_NPOD_ISO_LUP_H_HVDMY_29_GA_DRAIN = (HOLES HVNW_RING_HVDMY_29_GA_TO_DRAIN INNER) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_29_GA


HVNW_NPOD_ISO_LUP_H_HVDMY_29_GA_VDD = (HOLES HVNW_RING_HVDMY_29_GA_TO_VDD INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA
POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_FULL = POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA INSIDE HVNW_NPOD_ISO_LUP_H_HVDMY_29_GA_VDD
HVNW_NPOD_ISO_LUP_A_HVDMY_29_GA_VDD = HVNW_NPOD_ISO_LUP_H_HVDMY_29_GA_VDD OR HVNW_RING_HVDMY_29_GA_TO_VDD
POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_NONFULL = POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA NOT POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_FULL

// for HVDMY_24_20_16_12_9_6_GA
HV_D_N_HVDMY_24_20_16_12_9_6_GA = HV_D_N INTERACT HV_POST_DRIVER_NACT_HVDMY_24_20_16_12_9_6_GA
HV_E_E_HVDMY_24_20_16_12_9_6_GA = HVESD_EOD INTERACT HV_POST_DRIVER_NACT_HVDMY_24_20_16_12_9_6_GA
HV_D_N_HVDMY_24_20_16_12_9_6_GA_DD = STAMP HV_D_N_HVDMY_24_20_16_12_9_6_GA BY NTAPiu
HV_E_E_HVDMY_24_20_16_12_9_6_GA_EE = STAMP HV_E_E_HVDMY_24_20_16_12_9_6_GA BY PSDiu

HVNW_RING_HVDMY_24_20_16_12_9_6_GA_TO_DRAIN = NET AREA RATIO HVNW_NPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA HV_D_N_HVDMY_24_20_16_12_9_6_GA_DD >0
HVNW_RING_HVDMY_24_20_16_12_9_6_GA_TO_VDD = NET AREA RATIO HVNW_NPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA HVNW_RING_HVDMY_24_20_16_12_9_6_GA_VDD >0
HVNW_NPOD_ISO_LUP_H_HVDMY_24_20_16_12_9_6_GA_DRAIN = (HOLES HVNW_RING_HVDMY_24_20_16_12_9_6_GA_TO_DRAIN INNER) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_24_20_16_12_9_6_GA


HVNW_NPOD_ISO_LUP_H_HVDMY_24_20_16_12_9_6_GA_VDD = (HOLES HVNW_RING_HVDMY_24_20_16_12_9_6_GA_TO_VDD INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA
POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_FULL = POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA INSIDE HVNW_NPOD_ISO_LUP_H_HVDMY_24_20_16_12_9_6_GA_VDD
HVNW_NPOD_ISO_LUP_A_HVDMY_24_20_16_12_9_6_GA_VDD = HVNW_NPOD_ISO_LUP_H_HVDMY_24_20_16_12_9_6_GA_VDD OR HVNW_RING_HVDMY_24_20_16_12_9_6_GA_TO_VDD
POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_NONFULL = POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA NOT POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_FULL

// for HVDMY_5_GA
HV_D_N_HVDMY_5_GA = HV_D_N INTERACT HV_POST_DRIVER_NACT_HVDMY_5_GA
HV_E_E_HVDMY_5_GA = HVESD_EOD INTERACT HV_POST_DRIVER_NACT_HVDMY_5_GA
HV_D_N_HVDMY_5_GA_DD = STAMP HV_D_N_HVDMY_5_GA BY NTAPiu
HV_E_E_HVDMY_5_GA_EE = STAMP HV_E_E_HVDMY_5_GA BY PSDiu

HVNW_RING_HVDMY_5_GA_TO_DRAIN = NET AREA RATIO HVNW_NPOD_ISO_R_HVDMY_5_GA HV_D_N_HVDMY_5_GA_DD >0
HVNW_RING_HVDMY_5_GA_TO_VDD = NET AREA RATIO HVNW_NPOD_ISO_R_HVDMY_5_GA HVNW_RING_HVDMY_5_GA_VDD >0
HVNW_NPOD_ISO_LUP_H_HVDMY_5_GA_DRAIN = (HOLES HVNW_RING_HVDMY_5_GA_TO_DRAIN INNER) ENCLOSE HV_POST_DRIVER_NACT_HVDMY_5_GA


HVNW_NPOD_ISO_LUP_H_HVDMY_5_GA_VDD = (HOLES HVNW_RING_HVDMY_5_GA_TO_VDD INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA
POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_FULL = POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA INSIDE HVNW_NPOD_ISO_LUP_H_HVDMY_5_GA_VDD
HVNW_NPOD_ISO_LUP_A_HVDMY_5_GA_VDD = HVNW_NPOD_ISO_LUP_H_HVDMY_5_GA_VDD OR HVNW_RING_HVDMY_5_GA_TO_VDD
POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_NONFULL = POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA NOT POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_FULL


POST_DRIVER_ACT_HVN_LS_NONFULL = (((POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_NONFULL OR POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_NONFULL) OR POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_NONFULL) OR POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_NONFULL) OR POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_NONFULL
POST_DRIVER_ACT_HVN_LS_FULL = (((POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_FULL OR POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_FULL) OR POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_FULL) OR POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_FULL) OR POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_FULL





//===============================
//P+ isolation ring for HV LUP (Low Side)
//===============================
// for HVDMY_45_GB
PPOD_ISO_H_1_HVDMY_45_GB = (( HOLES PPOD_ISO_R_1 INNER ) NOT PPOD_ISO_R_1) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_45_GB OR POST_DRIVER_ACT_HVP_LS_HVDMY_45_GB)
PPOD_ISO_R_1_HVDMY_45_GB  = PPOD_ISO_R_1 TOUCH PPOD_ISO_H_1_HVDMY_45_GB

PPOD_ISO_R_2_HVDMY_45_GB = SIZE PPOD_ISO_R_1_HVDMY_45_GB BY (HVLUP_W_4_HVDMY_45_GB/2)-0.001 UNDEROVER


PPOD_ISO_H_HVDMY_45_GB = (HOLES PPOD_ISO_R_2_HVDMY_45_GB INNER) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_45_GB OR POST_DRIVER_ACT_HVP_LS_HVDMY_45_GB)
PPOD_ISO_R_HVDMY_45_GB = PPOD_ISO_R_2_HVDMY_45_GB TOUCH PPOD_ISO_H_HVDMY_45_GB
PPOD_ISO_H_HL_HVDMY_45_GB = PPOD_ISO_H_HVDMY_45_GB ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
PPOD_ISO_R_HL_HVDMY_45_GB = PPOD_ISO_R_HVDMY_45_GB TOUCH PPOD_ISO_H_HL_HVDMY_45_GB

PPOD_ISO_H_LS_HVDMY_45_GB = PPOD_ISO_H_HVDMY_45_GB ENCLOSE (POST_DRIVER_ACT_HVN_LS OR POST_DRIVER_ACT_HVP_LS)		// HV P+ ISO RING of NMOS
PPOD_ISO_R_LS_HVDMY_45_GB = PPOD_ISO_R_HVDMY_45_GB TOUCH PPOD_ISO_H_LS_HVDMY_45_GB		// HV P+ ISO RING of NMOS

// for HVDMY_36_GB
PPOD_ISO_H_1_HVDMY_36_GB = (( HOLES PPOD_ISO_R_1 INNER ) NOT PPOD_ISO_R_1) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_36_GB OR POST_DRIVER_ACT_HVP_LS_HVDMY_36_GB)
PPOD_ISO_R_1_HVDMY_36_GB  = PPOD_ISO_R_1 TOUCH PPOD_ISO_H_1_HVDMY_36_GB

PPOD_ISO_R_2_HVDMY_36_GB = SIZE PPOD_ISO_R_1_HVDMY_36_GB BY (HVLUP_W_4_HVDMY_36_GB/2)-0.001 UNDEROVER


PPOD_ISO_H_HVDMY_36_GB = (HOLES PPOD_ISO_R_2_HVDMY_36_GB INNER) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_36_GB OR POST_DRIVER_ACT_HVP_LS_HVDMY_36_GB)
PPOD_ISO_R_HVDMY_36_GB = PPOD_ISO_R_2_HVDMY_36_GB TOUCH PPOD_ISO_H_HVDMY_36_GB
PPOD_ISO_H_HL_HVDMY_36_GB = PPOD_ISO_H_HVDMY_36_GB ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
PPOD_ISO_R_HL_HVDMY_36_GB = PPOD_ISO_R_HVDMY_36_GB TOUCH PPOD_ISO_H_HL_HVDMY_36_GB

PPOD_ISO_H_LS_HVDMY_36_GB = PPOD_ISO_H_HVDMY_36_GB ENCLOSE (POST_DRIVER_ACT_HVN_LS OR POST_DRIVER_ACT_HVP_LS)		// HV P+ ISO RING of NMOS
PPOD_ISO_R_LS_HVDMY_36_GB = PPOD_ISO_R_HVDMY_36_GB TOUCH PPOD_ISO_H_LS_HVDMY_36_GB		// HV P+ ISO RING of NMOS

// for HVDMY_29_GA
PPOD_ISO_H_1_HVDMY_29_GA = (( HOLES PPOD_ISO_R_1 INNER ) NOT PPOD_ISO_R_1) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_29_GA OR POST_DRIVER_ACT_HVP_LS_HVDMY_29_GA)
PPOD_ISO_R_1_HVDMY_29_GA  = PPOD_ISO_R_1 TOUCH PPOD_ISO_H_1_HVDMY_29_GA

PPOD_ISO_R_2_HVDMY_29_GA = SIZE PPOD_ISO_R_1_HVDMY_29_GA BY (HVLUP_W_4_HVDMY_29_GA/2)-0.001 UNDEROVER


PPOD_ISO_H_HVDMY_29_GA = (HOLES PPOD_ISO_R_2_HVDMY_29_GA INNER) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_29_GA OR POST_DRIVER_ACT_HVP_LS_HVDMY_29_GA)
PPOD_ISO_R_HVDMY_29_GA = PPOD_ISO_R_2_HVDMY_29_GA TOUCH PPOD_ISO_H_HVDMY_29_GA
PPOD_ISO_H_HL_HVDMY_29_GA = PPOD_ISO_H_HVDMY_29_GA ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
PPOD_ISO_R_HL_HVDMY_29_GA = PPOD_ISO_R_HVDMY_29_GA TOUCH PPOD_ISO_H_HL_HVDMY_29_GA

PPOD_ISO_H_LS_HVDMY_29_GA = PPOD_ISO_H_HVDMY_29_GA ENCLOSE (POST_DRIVER_ACT_HVN_LS OR POST_DRIVER_ACT_HVP_LS)		// HV P+ ISO RING of NMOS
PPOD_ISO_R_LS_HVDMY_29_GA = PPOD_ISO_R_HVDMY_29_GA TOUCH PPOD_ISO_H_LS_HVDMY_29_GA		// HV P+ ISO RING of NMOS

// for HVDMY_24_20_16_12_9_6_GA
PPOD_ISO_H_1_HVDMY_24_20_16_12_9_6_GA = (( HOLES PPOD_ISO_R_1 INNER ) NOT PPOD_ISO_R_1) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_24_20_16_12_9_6_GA OR POST_DRIVER_ACT_HVP_LS_HVDMY_24_20_16_12_9_6_GA)
PPOD_ISO_R_1_HVDMY_24_20_16_12_9_6_GA  = PPOD_ISO_R_1 TOUCH PPOD_ISO_H_1_HVDMY_24_20_16_12_9_6_GA

PPOD_ISO_R_2_HVDMY_24_20_16_12_9_6_GA = SIZE PPOD_ISO_R_1_HVDMY_24_20_16_12_9_6_GA BY (HVLUP_W_4_HVDMY_24_20_16_12_9_6_GA/2)-0.001 UNDEROVER


PPOD_ISO_H_HVDMY_24_20_16_12_9_6_GA = (HOLES PPOD_ISO_R_2_HVDMY_24_20_16_12_9_6_GA INNER) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_24_20_16_12_9_6_GA OR POST_DRIVER_ACT_HVP_LS_HVDMY_24_20_16_12_9_6_GA)
PPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA = PPOD_ISO_R_2_HVDMY_24_20_16_12_9_6_GA TOUCH PPOD_ISO_H_HVDMY_24_20_16_12_9_6_GA
PPOD_ISO_H_HL_HVDMY_24_20_16_12_9_6_GA = PPOD_ISO_H_HVDMY_24_20_16_12_9_6_GA ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
PPOD_ISO_R_HL_HVDMY_24_20_16_12_9_6_GA = PPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA TOUCH PPOD_ISO_H_HL_HVDMY_24_20_16_12_9_6_GA

PPOD_ISO_H_LS_HVDMY_24_20_16_12_9_6_GA = PPOD_ISO_H_HVDMY_24_20_16_12_9_6_GA ENCLOSE (POST_DRIVER_ACT_HVN_LS OR POST_DRIVER_ACT_HVP_LS)		// HV P+ ISO RING of NMOS
PPOD_ISO_R_LS_HVDMY_24_20_16_12_9_6_GA = PPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA TOUCH PPOD_ISO_H_LS_HVDMY_24_20_16_12_9_6_GA		// HV P+ ISO RING of NMOS

// for HVDMY_5_GA
PPOD_ISO_H_1_HVDMY_5_GA = (( HOLES PPOD_ISO_R_1 INNER ) NOT PPOD_ISO_R_1) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_5_GA OR POST_DRIVER_ACT_HVP_LS_HVDMY_5_GA)
PPOD_ISO_R_1_HVDMY_5_GA  = PPOD_ISO_R_1 TOUCH PPOD_ISO_H_1_HVDMY_5_GA

PPOD_ISO_R_2_HVDMY_5_GA = SIZE PPOD_ISO_R_1_HVDMY_5_GA BY (HVLUP_W_4_HVDMY_5_GA/2)-0.001 UNDEROVER


PPOD_ISO_H_HVDMY_5_GA = (HOLES PPOD_ISO_R_2_HVDMY_5_GA INNER) ENCLOSE (HV_POST_DRIVER_NACT_HVDMY_5_GA OR POST_DRIVER_ACT_HVP_LS_HVDMY_5_GA)
PPOD_ISO_R_HVDMY_5_GA = PPOD_ISO_R_2_HVDMY_5_GA TOUCH PPOD_ISO_H_HVDMY_5_GA
PPOD_ISO_H_HL_HVDMY_5_GA = PPOD_ISO_H_HVDMY_5_GA ENCLOSE POST_DRIVER_ACT_HVN_LS_HS
PPOD_ISO_R_HL_HVDMY_5_GA = PPOD_ISO_R_HVDMY_5_GA TOUCH PPOD_ISO_H_HL_HVDMY_5_GA

PPOD_ISO_H_LS_HVDMY_5_GA = PPOD_ISO_H_HVDMY_5_GA ENCLOSE (POST_DRIVER_ACT_HVN_LS OR POST_DRIVER_ACT_HVP_LS)		// HV P+ ISO RING of NMOS
PPOD_ISO_R_LS_HVDMY_5_GA = PPOD_ISO_R_HVDMY_5_GA TOUCH PPOD_ISO_H_LS_HVDMY_5_GA		// HV P+ ISO RING of NMOS


PPOD_ISO_H_LU = (((PPOD_ISO_H_HVDMY_45_GB OR PPOD_ISO_H_HVDMY_36_GB) OR PPOD_ISO_H_HVDMY_29_GA) OR PPOD_ISO_H_HVDMY_24_20_16_12_9_6_GA) OR PPOD_ISO_H_HVDMY_5_GA
PPOD_ISO_R_LU = (((PPOD_ISO_R_HVDMY_45_GB OR PPOD_ISO_R_HVDMY_36_GB) OR PPOD_ISO_R_HVDMY_29_GA) OR PPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA) OR PPOD_ISO_R_HVDMY_5_GA


//==============================
//N+ isolation ring for HV LUP (High Side)
//==============================
NPOD_ISO_R_1  = (( NPOD  AND HVSHN ) AND NBL ) NOT ALL_HVNMOS_OD

// for HVDMY_45_GB
NPOD_ISO_LUP_H_1_HVDMY_45_GB = (( HOLES NPOD_ISO_R_1 INNER ) NOT NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_45_GB
NPOD_ISO_R_1_HVDMY_45_GB = NPOD_ISO_R_1 TOUCH NPOD_ISO_LUP_H_1_HVDMY_45_GB

NPOD_ISO_R_2_HVDMY_45_GB = SIZE NPOD_ISO_R_1_HVDMY_45_GB BY (HVLUP_W_1_HVDMY_45_GB/2)-0.001 UNDEROVER
NPOD_ISO_LUP_H_HVDMY_45_GB = (HOLES NPOD_ISO_R_2_HVDMY_45_GB) ENCLOSE POST_DRIVER_ACT_HVP_HS_HVDMY_45_GB 
NPOD_ISO_R_HVDMY_45_GB = NPOD_ISO_R_2_HVDMY_45_GB TOUCH NPOD_ISO_LUP_H_HVDMY_45_GB

// for HVDMY_36_GB
NPOD_ISO_LUP_H_1_HVDMY_36_GB = (( HOLES NPOD_ISO_R_1 INNER ) NOT NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_36_GB
NPOD_ISO_R_1_HVDMY_36_GB = NPOD_ISO_R_1 TOUCH NPOD_ISO_LUP_H_1_HVDMY_36_GB

NPOD_ISO_R_2_HVDMY_36_GB = SIZE NPOD_ISO_R_1_HVDMY_36_GB BY (HVLUP_W_1_HVDMY_36_GB/2)-0.001 UNDEROVER
NPOD_ISO_LUP_H_HVDMY_36_GB = (HOLES NPOD_ISO_R_2_HVDMY_36_GB) ENCLOSE POST_DRIVER_ACT_HVP_HS_HVDMY_36_GB 
NPOD_ISO_R_HVDMY_36_GB = NPOD_ISO_R_2_HVDMY_36_GB TOUCH NPOD_ISO_LUP_H_HVDMY_36_GB

// for HVDMY_29_GA
NPOD_ISO_LUP_H_1_HVDMY_29_GA = (( HOLES NPOD_ISO_R_1 INNER ) NOT NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_29_GA
NPOD_ISO_R_1_HVDMY_29_GA = NPOD_ISO_R_1 TOUCH NPOD_ISO_LUP_H_1_HVDMY_29_GA

NPOD_ISO_R_2_HVDMY_29_GA = SIZE NPOD_ISO_R_1_HVDMY_29_GA BY (HVLUP_W_1_HVDMY_29_GA/2)-0.001 UNDEROVER
NPOD_ISO_LUP_H_HVDMY_29_GA = (HOLES NPOD_ISO_R_2_HVDMY_29_GA) ENCLOSE POST_DRIVER_ACT_HVP_HS_HVDMY_29_GA 
NPOD_ISO_R_HVDMY_29_GA = NPOD_ISO_R_2_HVDMY_29_GA TOUCH NPOD_ISO_LUP_H_HVDMY_29_GA

// for HVDMY_24_20_16_12_9_6_GA
NPOD_ISO_LUP_H_1_HVDMY_24_20_16_12_9_6_GA = (( HOLES NPOD_ISO_R_1 INNER ) NOT NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_24_20_16_12_9_6_GA
NPOD_ISO_R_1_HVDMY_24_20_16_12_9_6_GA = NPOD_ISO_R_1 TOUCH NPOD_ISO_LUP_H_1_HVDMY_24_20_16_12_9_6_GA

NPOD_ISO_R_2_HVDMY_24_20_16_12_9_6_GA = SIZE NPOD_ISO_R_1_HVDMY_24_20_16_12_9_6_GA BY (HVLUP_W_1_HVDMY_24_20_16_12_9_6_GA/2)-0.001 UNDEROVER
NPOD_ISO_LUP_H_HVDMY_24_20_16_12_9_6_GA = (HOLES NPOD_ISO_R_2_HVDMY_24_20_16_12_9_6_GA) ENCLOSE POST_DRIVER_ACT_HVP_HS_HVDMY_24_20_16_12_9_6_GA 
NPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA = NPOD_ISO_R_2_HVDMY_24_20_16_12_9_6_GA TOUCH NPOD_ISO_LUP_H_HVDMY_24_20_16_12_9_6_GA

// for HVDMY_5_GA
NPOD_ISO_LUP_H_1_HVDMY_5_GA = (( HOLES NPOD_ISO_R_1 INNER ) NOT NPOD_ISO_R_1) ENCLOSE HV_POST_DRIVER_PACT_HVDMY_5_GA
NPOD_ISO_R_1_HVDMY_5_GA = NPOD_ISO_R_1 TOUCH NPOD_ISO_LUP_H_1_HVDMY_5_GA

NPOD_ISO_R_2_HVDMY_5_GA = SIZE NPOD_ISO_R_1_HVDMY_5_GA BY (HVLUP_W_1_HVDMY_5_GA/2)-0.001 UNDEROVER
NPOD_ISO_LUP_H_HVDMY_5_GA = (HOLES NPOD_ISO_R_2_HVDMY_5_GA) ENCLOSE POST_DRIVER_ACT_HVP_HS_HVDMY_5_GA 
NPOD_ISO_R_HVDMY_5_GA = NPOD_ISO_R_2_HVDMY_5_GA TOUCH NPOD_ISO_LUP_H_HVDMY_5_GA


NPOD_ISO_LUP_H = (((NPOD_ISO_LUP_H_HVDMY_45_GB OR NPOD_ISO_LUP_H_HVDMY_36_GB) OR NPOD_ISO_LUP_H_HVDMY_29_GA) OR NPOD_ISO_LUP_H_HVDMY_24_20_16_12_9_6_GA) OR NPOD_ISO_LUP_H_HVDMY_5_GA
NPOD_ISO_LUP_R = (((NPOD_ISO_R_HVDMY_45_GB OR NPOD_ISO_R_HVDMY_36_GB) OR NPOD_ISO_R_HVDMY_29_GA) OR NPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA) OR NPOD_ISO_R_HVDMY_5_GA



//===============================
//P+ guard ring for HV LUP (High Side)
//===============================
PPOD_GR_R_1  = HP_PICKUP NOT NBL

// for HVDMY_45_GB
PPOD_GR_H_1_HVDMY_45_GB = (( HOLES PPOD_GR_R_1 INNER) NOT PPOD_GR_R_1 ) ENCLOSE (NPOD_ISO_R_HVDMY_45_GB OR POST_DRIVER_ACT_HVN_HS_HVDMY_45_GB)
PPOD_GR_R_1_HVDMY_45_GB  = PPOD_GR_R_1 TOUCH PPOD_GR_H_1_HVDMY_45_GB

PPOD_GR_R_2_HVDMY_45_GB = SIZE PPOD_GR_R_1_HVDMY_45_GB BY (HVLUP_W_2_HVDMY_45_GB/2)-0.001 UNDEROVER
PPOD_GR_H_HVDMY_45_GB = (HOLES PPOD_GR_R_2_HVDMY_45_GB INNER) ENCLOSE (NPOD_ISO_R_HVDMY_45_GB OR POST_DRIVER_ACT_HVN_HS_HVDMY_45_GB)
PPOD_GR_R_HVDMY_45_GB = PPOD_GR_R_2_HVDMY_45_GB TOUCH PPOD_GR_H_HVDMY_45_GB

PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_45_GB = PPOD_GR_H_HVDMY_45_GB ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_45_GB
PPOD_GR_R_POST_DRIVER_ACT_HVN_HS_HVDMY_45_GB = PPOD_GR_R_2_HVDMY_45_GB TOUCH PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_45_GB 

// for HVDMY_36_GB
PPOD_GR_H_1_HVDMY_36_GB = (( HOLES PPOD_GR_R_1 INNER) NOT PPOD_GR_R_1 ) ENCLOSE (NPOD_ISO_R_HVDMY_36_GB OR POST_DRIVER_ACT_HVN_HS_HVDMY_36_GB)
PPOD_GR_R_1_HVDMY_36_GB  = PPOD_GR_R_1 TOUCH PPOD_GR_H_1_HVDMY_36_GB

PPOD_GR_R_2_HVDMY_36_GB = SIZE PPOD_GR_R_1_HVDMY_36_GB BY (HVLUP_W_2_HVDMY_36_GB/2)-0.001 UNDEROVER
PPOD_GR_H_HVDMY_36_GB = (HOLES PPOD_GR_R_2_HVDMY_36_GB INNER) ENCLOSE (NPOD_ISO_R_HVDMY_36_GB OR POST_DRIVER_ACT_HVN_HS_HVDMY_36_GB)
PPOD_GR_R_HVDMY_36_GB = PPOD_GR_R_2_HVDMY_36_GB TOUCH PPOD_GR_H_HVDMY_36_GB

PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_36_GB = PPOD_GR_H_HVDMY_36_GB ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_36_GB
PPOD_GR_R_POST_DRIVER_ACT_HVN_HS_HVDMY_36_GB = PPOD_GR_R_2_HVDMY_36_GB TOUCH PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_36_GB 

// for HVDMY_29_GA
PPOD_GR_H_1_HVDMY_29_GA = (( HOLES PPOD_GR_R_1 INNER) NOT PPOD_GR_R_1 ) ENCLOSE (NPOD_ISO_R_HVDMY_29_GA OR POST_DRIVER_ACT_HVN_HS_HVDMY_29_GA)
PPOD_GR_R_1_HVDMY_29_GA  = PPOD_GR_R_1 TOUCH PPOD_GR_H_1_HVDMY_29_GA

PPOD_GR_R_2_HVDMY_29_GA = SIZE PPOD_GR_R_1_HVDMY_29_GA BY (HVLUP_W_2_HVDMY_29_GA/2)-0.001 UNDEROVER
PPOD_GR_H_HVDMY_29_GA = (HOLES PPOD_GR_R_2_HVDMY_29_GA INNER) ENCLOSE (NPOD_ISO_R_HVDMY_29_GA OR POST_DRIVER_ACT_HVN_HS_HVDMY_29_GA)
PPOD_GR_R_HVDMY_29_GA = PPOD_GR_R_2_HVDMY_29_GA TOUCH PPOD_GR_H_HVDMY_29_GA

PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_29_GA = PPOD_GR_H_HVDMY_29_GA ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_29_GA
PPOD_GR_R_POST_DRIVER_ACT_HVN_HS_HVDMY_29_GA = PPOD_GR_R_2_HVDMY_29_GA TOUCH PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_29_GA 

// for HVDMY_24_20_16_12_9_6_GA
PPOD_GR_H_1_HVDMY_24_20_16_12_9_6_GA = (( HOLES PPOD_GR_R_1 INNER) NOT PPOD_GR_R_1 ) ENCLOSE (NPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA OR POST_DRIVER_ACT_HVN_HS_HVDMY_24_20_16_12_9_6_GA)
PPOD_GR_R_1_HVDMY_24_20_16_12_9_6_GA  = PPOD_GR_R_1 TOUCH PPOD_GR_H_1_HVDMY_24_20_16_12_9_6_GA

PPOD_GR_R_2_HVDMY_24_20_16_12_9_6_GA = SIZE PPOD_GR_R_1_HVDMY_24_20_16_12_9_6_GA BY (HVLUP_W_2_HVDMY_24_20_16_12_9_6_GA/2)-0.001 UNDEROVER
PPOD_GR_H_HVDMY_24_20_16_12_9_6_GA = (HOLES PPOD_GR_R_2_HVDMY_24_20_16_12_9_6_GA INNER) ENCLOSE (NPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA OR POST_DRIVER_ACT_HVN_HS_HVDMY_24_20_16_12_9_6_GA)
PPOD_GR_R_HVDMY_24_20_16_12_9_6_GA = PPOD_GR_R_2_HVDMY_24_20_16_12_9_6_GA TOUCH PPOD_GR_H_HVDMY_24_20_16_12_9_6_GA

PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_24_20_16_12_9_6_GA = PPOD_GR_H_HVDMY_24_20_16_12_9_6_GA ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_24_20_16_12_9_6_GA
PPOD_GR_R_POST_DRIVER_ACT_HVN_HS_HVDMY_24_20_16_12_9_6_GA = PPOD_GR_R_2_HVDMY_24_20_16_12_9_6_GA TOUCH PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_24_20_16_12_9_6_GA 

// for HVDMY_5_GA
PPOD_GR_H_1_HVDMY_5_GA = (( HOLES PPOD_GR_R_1 INNER) NOT PPOD_GR_R_1 ) ENCLOSE (NPOD_ISO_R_HVDMY_5_GA OR POST_DRIVER_ACT_HVN_HS_HVDMY_5_GA)
PPOD_GR_R_1_HVDMY_5_GA  = PPOD_GR_R_1 TOUCH PPOD_GR_H_1_HVDMY_5_GA

PPOD_GR_R_2_HVDMY_5_GA = SIZE PPOD_GR_R_1_HVDMY_5_GA BY (HVLUP_W_2_HVDMY_5_GA/2)-0.001 UNDEROVER
PPOD_GR_H_HVDMY_5_GA = (HOLES PPOD_GR_R_2_HVDMY_5_GA INNER) ENCLOSE (NPOD_ISO_R_HVDMY_5_GA OR POST_DRIVER_ACT_HVN_HS_HVDMY_5_GA)
PPOD_GR_R_HVDMY_5_GA = PPOD_GR_R_2_HVDMY_5_GA TOUCH PPOD_GR_H_HVDMY_5_GA

PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_5_GA = PPOD_GR_H_HVDMY_5_GA ENCLOSE POST_DRIVER_ACT_HVN_HS_HVDMY_5_GA
PPOD_GR_R_POST_DRIVER_ACT_HVN_HS_HVDMY_5_GA = PPOD_GR_R_2_HVDMY_5_GA TOUCH PPOD_GR_H_POST_DRIVER_ACT_HVN_HS_HVDMY_5_GA 



PPOD_GR_H = (((PPOD_GR_H_HVDMY_45_GB OR PPOD_GR_H_HVDMY_36_GB) OR PPOD_GR_H_HVDMY_29_GA) OR PPOD_GR_H_HVDMY_24_20_16_12_9_6_GA) OR PPOD_GR_H_HVDMY_5_GA
PPOD_GR_R = (((PPOD_GR_R_HVDMY_45_GB OR PPOD_GR_R_HVDMY_36_GB) OR PPOD_GR_R_HVDMY_29_GA) OR PPOD_GR_R_HVDMY_24_20_16_12_9_6_GA) OR PPOD_GR_R_HVDMY_5_GA


//===========================
//N+ guard ring for HV LUP (Low Side)
//===========================
NPOD_GR_R_1  = (HN_PICKUP NOT (NBL NOT NBL_RING_VOL)) NOT HVESD_merge
// for HVDMY_45_GB
NPOD_GR_H_1_HVDMY_45_GB = (( HOLES NPOD_GR_R_1 INNER ) NOT NPOD_GR_R_1 ) ENCLOSE PPOD_ISO_R_HVDMY_45_GB
NPOD_GR_R_1_HVDMY_45_GB = NPOD_GR_R_1 TOUCH NPOD_GR_H_1_HVDMY_45_GB
NPOD_GR_R_2_HVDMY_45_GB = SIZE NPOD_GR_R_1_HVDMY_45_GB BY (HVLUP_W_3_HVDMY_45_GB/2) - 0.001 UNDEROVER


NPOD_GR_H_HVDMY_45_GB = (HOLES NPOD_GR_R_2_HVDMY_45_GB) ENCLOSE PPOD_ISO_R_HVDMY_45_GB
NPOD_GR_R_HVDMY_45_GB = NPOD_GR_R_2_HVDMY_45_GB TOUCH NPOD_GR_H_HVDMY_45_GB

NPOD_GR_H_L_HVDMY_45_GB = NPOD_GR_H_HVDMY_45_GB ENCLOSE (POST_DRIVER_ACT_HVN_LS OR POST_DRIVER_ACT_HVP_LS)
NPOD_GR_R_L_HVDMY_45_GB = NPOD_GR_R_HVDMY_45_GB TOUCH NPOD_GR_H_L_HVDMY_45_GB

// for HVDMY_36_GB
NPOD_GR_H_1_HVDMY_36_GB = (( HOLES NPOD_GR_R_1 INNER ) NOT NPOD_GR_R_1 ) ENCLOSE PPOD_ISO_R_HVDMY_36_GB
NPOD_GR_R_1_HVDMY_36_GB = NPOD_GR_R_1 TOUCH NPOD_GR_H_1_HVDMY_36_GB
NPOD_GR_R_2_HVDMY_36_GB = SIZE NPOD_GR_R_1_HVDMY_36_GB BY (HVLUP_W_3_HVDMY_36_GB/2) - 0.001 UNDEROVER


NPOD_GR_H_HVDMY_36_GB = (HOLES NPOD_GR_R_2_HVDMY_36_GB) ENCLOSE PPOD_ISO_R_HVDMY_36_GB
NPOD_GR_R_HVDMY_36_GB = NPOD_GR_R_2_HVDMY_36_GB TOUCH NPOD_GR_H_HVDMY_36_GB

NPOD_GR_H_L_HVDMY_36_GB = NPOD_GR_H_HVDMY_36_GB ENCLOSE (POST_DRIVER_ACT_HVN_LS OR POST_DRIVER_ACT_HVP_LS)
NPOD_GR_R_L_HVDMY_36_GB = NPOD_GR_R_HVDMY_36_GB TOUCH NPOD_GR_H_L_HVDMY_36_GB

// for HVDMY_29_GA
NPOD_GR_H_1_HVDMY_29_GA = (( HOLES NPOD_GR_R_1 INNER ) NOT NPOD_GR_R_1 ) ENCLOSE PPOD_ISO_R_HVDMY_29_GA
NPOD_GR_R_1_HVDMY_29_GA = NPOD_GR_R_1 TOUCH NPOD_GR_H_1_HVDMY_29_GA
NPOD_GR_R_2_HVDMY_29_GA = SIZE NPOD_GR_R_1_HVDMY_29_GA BY (HVLUP_W_3_HVDMY_29_GA/2) - 0.001 UNDEROVER


NPOD_GR_H_HVDMY_29_GA = (HOLES NPOD_GR_R_2_HVDMY_29_GA) ENCLOSE PPOD_ISO_R_HVDMY_29_GA
NPOD_GR_R_HVDMY_29_GA = NPOD_GR_R_2_HVDMY_29_GA TOUCH NPOD_GR_H_HVDMY_29_GA

NPOD_GR_H_L_HVDMY_29_GA = NPOD_GR_H_HVDMY_29_GA ENCLOSE (POST_DRIVER_ACT_HVN_LS OR POST_DRIVER_ACT_HVP_LS)
NPOD_GR_R_L_HVDMY_29_GA = NPOD_GR_R_HVDMY_29_GA TOUCH NPOD_GR_H_L_HVDMY_29_GA

// for HVDMY_24_20_16_12_9_6_GA
NPOD_GR_H_1_HVDMY_24_20_16_12_9_6_GA = (( HOLES NPOD_GR_R_1 INNER ) NOT NPOD_GR_R_1 ) ENCLOSE PPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA
NPOD_GR_R_1_HVDMY_24_20_16_12_9_6_GA = NPOD_GR_R_1 TOUCH NPOD_GR_H_1_HVDMY_24_20_16_12_9_6_GA
NPOD_GR_R_2_HVDMY_24_20_16_12_9_6_GA = SIZE NPOD_GR_R_1_HVDMY_24_20_16_12_9_6_GA BY (HVLUP_W_3_HVDMY_24_20_16_12_9_6_GA/2) - 0.001 UNDEROVER


NPOD_GR_H_HVDMY_24_20_16_12_9_6_GA = (HOLES NPOD_GR_R_2_HVDMY_24_20_16_12_9_6_GA) ENCLOSE PPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA
NPOD_GR_R_HVDMY_24_20_16_12_9_6_GA = NPOD_GR_R_2_HVDMY_24_20_16_12_9_6_GA TOUCH NPOD_GR_H_HVDMY_24_20_16_12_9_6_GA

NPOD_GR_H_L_HVDMY_24_20_16_12_9_6_GA = NPOD_GR_H_HVDMY_24_20_16_12_9_6_GA ENCLOSE (POST_DRIVER_ACT_HVN_LS OR POST_DRIVER_ACT_HVP_LS)
NPOD_GR_R_L_HVDMY_24_20_16_12_9_6_GA = NPOD_GR_R_HVDMY_24_20_16_12_9_6_GA TOUCH NPOD_GR_H_L_HVDMY_24_20_16_12_9_6_GA

// for HVDMY_5_GA
NPOD_GR_H_1_HVDMY_5_GA = (( HOLES NPOD_GR_R_1 INNER ) NOT NPOD_GR_R_1 ) ENCLOSE PPOD_ISO_R_HVDMY_5_GA
NPOD_GR_R_1_HVDMY_5_GA = NPOD_GR_R_1 TOUCH NPOD_GR_H_1_HVDMY_5_GA
NPOD_GR_R_2_HVDMY_5_GA = SIZE NPOD_GR_R_1_HVDMY_5_GA BY (HVLUP_W_3_HVDMY_5_GA/2) - 0.001 UNDEROVER


NPOD_GR_H_HVDMY_5_GA = (HOLES NPOD_GR_R_2_HVDMY_5_GA) ENCLOSE PPOD_ISO_R_HVDMY_5_GA
NPOD_GR_R_HVDMY_5_GA = NPOD_GR_R_2_HVDMY_5_GA TOUCH NPOD_GR_H_HVDMY_5_GA

NPOD_GR_H_L_HVDMY_5_GA = NPOD_GR_H_HVDMY_5_GA ENCLOSE (POST_DRIVER_ACT_HVN_LS OR POST_DRIVER_ACT_HVP_LS)
NPOD_GR_R_L_HVDMY_5_GA = NPOD_GR_R_HVDMY_5_GA TOUCH NPOD_GR_H_L_HVDMY_5_GA



NPOD_GR_H_L = (((NPOD_GR_H_L_HVDMY_45_GB OR NPOD_GR_H_L_HVDMY_36_GB) OR NPOD_GR_H_L_HVDMY_29_GA) OR NPOD_GR_H_L_HVDMY_24_20_16_12_9_6_GA) OR NPOD_GR_H_L_HVDMY_5_GA
NPOD_GR_R_L = (((NPOD_GR_R_L_HVDMY_45_GB OR NPOD_GR_R_L_HVDMY_36_GB) OR NPOD_GR_R_L_HVDMY_29_GA) OR NPOD_GR_R_L_HVDMY_24_20_16_12_9_6_GA) OR NPOD_GR_R_L_HVDMY_5_GA


NPOD_GR_H = (((NPOD_GR_H_HVDMY_45_GB OR NPOD_GR_H_HVDMY_36_GB) OR NPOD_GR_H_HVDMY_29_GA) OR NPOD_GR_H_HVDMY_24_20_16_12_9_6_GA) OR NPOD_GR_H_HVDMY_5_GA
NPOD_GR_R = (((NPOD_GR_R_HVDMY_45_GB OR NPOD_GR_R_HVDMY_36_GB) OR NPOD_GR_R_HVDMY_29_GA) OR NPOD_GR_R_HVDMY_24_20_16_12_9_6_GA) OR NPOD_GR_R_HVDMY_5_GA




//==========================================
//P+ HVLUP bulk ring for Low side N+ active.
//==========================================
// for HVDMY_45_GB
PPOD_BULK_H_1_HVDMY_45_GB = (( HOLES PPOD_BULK_R_1 INNER ) NOT PPOD_BULK_R_1) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB
PPOD_BULK_R_1_HVDMY_45_GB  = PPOD_BULK_R_1 TOUCH PPOD_BULK_H_1_HVDMY_45_GB

PPOD_BULK_R_2_HVDMY_45_GB = SIZE PPOD_BULK_R_1_HVDMY_45_GB BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_BULK_H_HVDMY_45_GB = (HOLES PPOD_BULK_R_2_HVDMY_45_GB INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB
PPOD_BULK_R_HVDMY_45_GB = PPOD_BULK_R_2_HVDMY_45_GB TOUCH PPOD_BULK_H_HVDMY_45_GB

PPOD_BULK_H_FULL_HVDMY_45_GB = (HOLES PPOD_BULK_R_2_HVDMY_45_GB INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_FULL
PPOD_BULK_R_FULL_HVDMY_45_GB = PPOD_BULK_R_2_HVDMY_45_GB TOUCH PPOD_BULK_H_FULL_HVDMY_45_GB
// for HVDMY_36_GB
PPOD_BULK_H_1_HVDMY_36_GB = (( HOLES PPOD_BULK_R_1 INNER ) NOT PPOD_BULK_R_1) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB
PPOD_BULK_R_1_HVDMY_36_GB  = PPOD_BULK_R_1 TOUCH PPOD_BULK_H_1_HVDMY_36_GB

PPOD_BULK_R_2_HVDMY_36_GB = SIZE PPOD_BULK_R_1_HVDMY_36_GB BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_BULK_H_HVDMY_36_GB = (HOLES PPOD_BULK_R_2_HVDMY_36_GB INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB
PPOD_BULK_R_HVDMY_36_GB = PPOD_BULK_R_2_HVDMY_36_GB TOUCH PPOD_BULK_H_HVDMY_36_GB

PPOD_BULK_H_FULL_HVDMY_36_GB = (HOLES PPOD_BULK_R_2_HVDMY_36_GB INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_FULL
PPOD_BULK_R_FULL_HVDMY_36_GB = PPOD_BULK_R_2_HVDMY_36_GB TOUCH PPOD_BULK_H_FULL_HVDMY_36_GB
// for HVDMY_29_GA
PPOD_BULK_H_1_HVDMY_29_GA = (( HOLES PPOD_BULK_R_1 INNER ) NOT PPOD_BULK_R_1) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA
PPOD_BULK_R_1_HVDMY_29_GA  = PPOD_BULK_R_1 TOUCH PPOD_BULK_H_1_HVDMY_29_GA

PPOD_BULK_R_2_HVDMY_29_GA = SIZE PPOD_BULK_R_1_HVDMY_29_GA BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_BULK_H_HVDMY_29_GA = (HOLES PPOD_BULK_R_2_HVDMY_29_GA INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA
PPOD_BULK_R_HVDMY_29_GA = PPOD_BULK_R_2_HVDMY_29_GA TOUCH PPOD_BULK_H_HVDMY_29_GA

PPOD_BULK_H_FULL_HVDMY_29_GA = (HOLES PPOD_BULK_R_2_HVDMY_29_GA INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_FULL
PPOD_BULK_R_FULL_HVDMY_29_GA = PPOD_BULK_R_2_HVDMY_29_GA TOUCH PPOD_BULK_H_FULL_HVDMY_29_GA
// for HVDMY_24_20_16_12_9_6_GA
PPOD_BULK_H_1_HVDMY_24_20_16_12_9_6_GA = (( HOLES PPOD_BULK_R_1 INNER ) NOT PPOD_BULK_R_1) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA
PPOD_BULK_R_1_HVDMY_24_20_16_12_9_6_GA  = PPOD_BULK_R_1 TOUCH PPOD_BULK_H_1_HVDMY_24_20_16_12_9_6_GA

PPOD_BULK_R_2_HVDMY_24_20_16_12_9_6_GA = SIZE PPOD_BULK_R_1_HVDMY_24_20_16_12_9_6_GA BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_BULK_H_HVDMY_24_20_16_12_9_6_GA = (HOLES PPOD_BULK_R_2_HVDMY_24_20_16_12_9_6_GA INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA
PPOD_BULK_R_HVDMY_24_20_16_12_9_6_GA = PPOD_BULK_R_2_HVDMY_24_20_16_12_9_6_GA TOUCH PPOD_BULK_H_HVDMY_24_20_16_12_9_6_GA

PPOD_BULK_H_FULL_HVDMY_24_20_16_12_9_6_GA = (HOLES PPOD_BULK_R_2_HVDMY_24_20_16_12_9_6_GA INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_FULL
PPOD_BULK_R_FULL_HVDMY_24_20_16_12_9_6_GA = PPOD_BULK_R_2_HVDMY_24_20_16_12_9_6_GA TOUCH PPOD_BULK_H_FULL_HVDMY_24_20_16_12_9_6_GA
// for HVDMY_5_GA
PPOD_BULK_H_1_HVDMY_5_GA = (( HOLES PPOD_BULK_R_1 INNER ) NOT PPOD_BULK_R_1) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA
PPOD_BULK_R_1_HVDMY_5_GA  = PPOD_BULK_R_1 TOUCH PPOD_BULK_H_1_HVDMY_5_GA

PPOD_BULK_R_2_HVDMY_5_GA = SIZE PPOD_BULK_R_1_HVDMY_5_GA BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_BULK_H_HVDMY_5_GA = (HOLES PPOD_BULK_R_2_HVDMY_5_GA INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA
PPOD_BULK_R_HVDMY_5_GA = PPOD_BULK_R_2_HVDMY_5_GA TOUCH PPOD_BULK_H_HVDMY_5_GA

PPOD_BULK_H_FULL_HVDMY_5_GA = (HOLES PPOD_BULK_R_2_HVDMY_5_GA INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_FULL
PPOD_BULK_R_FULL_HVDMY_5_GA = PPOD_BULK_R_2_HVDMY_5_GA TOUCH PPOD_BULK_H_FULL_HVDMY_5_GA





//==================================================
//P+ isolation for N+ ACTIVE outside N+ guard ring.
//==================================================

// for HVDMY_45_GB
PPOD_ISO_OUT_R_1_HVDMY_45_GB =  ((PPOD AND HVPW) NOT NBL) NOT NPOD_GR_H_HVDMY_45_GB
PPOD_ISO_OUT_H_1_HVDMY_45_GB = ((HOLES PPOD_ISO_OUT_R_1_HVDMY_45_GB INNER) NOT PPOD_ISO_OUT_R_1_HVDMY_45_GB) ENCLOSE (NPOD_GR_R_HVDMY_45_GB OR POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB)

PPOD_ISO_OUT_R_2_HVDMY_45_GB = PPOD_ISO_OUT_R_1_HVDMY_45_GB TOUCH PPOD_ISO_OUT_H_1_HVDMY_45_GB

PPOD_ISO_OUT_R_3_HVDMY_45_GB = SIZE PPOD_ISO_OUT_R_2_HVDMY_45_GB BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_ISO_OUT_H_HVDMY_45_GB = (HOLES PPOD_ISO_OUT_R_3_HVDMY_45_GB) ENCLOSE (NPOD_GR_R_HVDMY_45_GB OR POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB)

PPOD_ISO_OUT_R_HVDMY_45_GB = PPOD_ISO_OUT_R_3_HVDMY_45_GB TOUCH PPOD_ISO_OUT_H_HVDMY_45_GB

// for HVDMY_36_GB
PPOD_ISO_OUT_R_1_HVDMY_36_GB =  ((PPOD AND HVPW) NOT NBL) NOT NPOD_GR_H_HVDMY_36_GB
PPOD_ISO_OUT_H_1_HVDMY_36_GB = ((HOLES PPOD_ISO_OUT_R_1_HVDMY_36_GB INNER) NOT PPOD_ISO_OUT_R_1_HVDMY_36_GB) ENCLOSE (NPOD_GR_R_HVDMY_36_GB OR POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB)

PPOD_ISO_OUT_R_2_HVDMY_36_GB = PPOD_ISO_OUT_R_1_HVDMY_36_GB TOUCH PPOD_ISO_OUT_H_1_HVDMY_36_GB

PPOD_ISO_OUT_R_3_HVDMY_36_GB = SIZE PPOD_ISO_OUT_R_2_HVDMY_36_GB BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_ISO_OUT_H_HVDMY_36_GB = (HOLES PPOD_ISO_OUT_R_3_HVDMY_36_GB) ENCLOSE (NPOD_GR_R_HVDMY_36_GB OR POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB)

PPOD_ISO_OUT_R_HVDMY_36_GB = PPOD_ISO_OUT_R_3_HVDMY_36_GB TOUCH PPOD_ISO_OUT_H_HVDMY_36_GB

// for HVDMY_29_GA
PPOD_ISO_OUT_R_1_HVDMY_29_GA =  ((PPOD AND HVPW) NOT NBL) NOT NPOD_GR_H_HVDMY_29_GA
PPOD_ISO_OUT_H_1_HVDMY_29_GA = ((HOLES PPOD_ISO_OUT_R_1_HVDMY_29_GA INNER) NOT PPOD_ISO_OUT_R_1_HVDMY_29_GA) ENCLOSE (NPOD_GR_R_HVDMY_29_GA OR POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA)

PPOD_ISO_OUT_R_2_HVDMY_29_GA = PPOD_ISO_OUT_R_1_HVDMY_29_GA TOUCH PPOD_ISO_OUT_H_1_HVDMY_29_GA

PPOD_ISO_OUT_R_3_HVDMY_29_GA = SIZE PPOD_ISO_OUT_R_2_HVDMY_29_GA BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_ISO_OUT_H_HVDMY_29_GA = (HOLES PPOD_ISO_OUT_R_3_HVDMY_29_GA) ENCLOSE (NPOD_GR_R_HVDMY_29_GA OR POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA)

PPOD_ISO_OUT_R_HVDMY_29_GA = PPOD_ISO_OUT_R_3_HVDMY_29_GA TOUCH PPOD_ISO_OUT_H_HVDMY_29_GA

// for HVDMY_24_20_16_12_9_6_GA
PPOD_ISO_OUT_R_1_HVDMY_24_20_16_12_9_6_GA =  ((PPOD AND HVPW) NOT NBL) NOT NPOD_GR_H_HVDMY_24_20_16_12_9_6_GA
PPOD_ISO_OUT_H_1_HVDMY_24_20_16_12_9_6_GA = ((HOLES PPOD_ISO_OUT_R_1_HVDMY_24_20_16_12_9_6_GA INNER) NOT PPOD_ISO_OUT_R_1_HVDMY_24_20_16_12_9_6_GA) ENCLOSE (NPOD_GR_R_HVDMY_24_20_16_12_9_6_GA OR POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA)

PPOD_ISO_OUT_R_2_HVDMY_24_20_16_12_9_6_GA = PPOD_ISO_OUT_R_1_HVDMY_24_20_16_12_9_6_GA TOUCH PPOD_ISO_OUT_H_1_HVDMY_24_20_16_12_9_6_GA

PPOD_ISO_OUT_R_3_HVDMY_24_20_16_12_9_6_GA = SIZE PPOD_ISO_OUT_R_2_HVDMY_24_20_16_12_9_6_GA BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_ISO_OUT_H_HVDMY_24_20_16_12_9_6_GA = (HOLES PPOD_ISO_OUT_R_3_HVDMY_24_20_16_12_9_6_GA) ENCLOSE (NPOD_GR_R_HVDMY_24_20_16_12_9_6_GA OR POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA)

PPOD_ISO_OUT_R_HVDMY_24_20_16_12_9_6_GA = PPOD_ISO_OUT_R_3_HVDMY_24_20_16_12_9_6_GA TOUCH PPOD_ISO_OUT_H_HVDMY_24_20_16_12_9_6_GA

// for HVDMY_5_GA
PPOD_ISO_OUT_R_1_HVDMY_5_GA =  ((PPOD AND HVPW) NOT NBL) NOT NPOD_GR_H_HVDMY_5_GA
PPOD_ISO_OUT_H_1_HVDMY_5_GA = ((HOLES PPOD_ISO_OUT_R_1_HVDMY_5_GA INNER) NOT PPOD_ISO_OUT_R_1_HVDMY_5_GA) ENCLOSE (NPOD_GR_R_HVDMY_5_GA OR POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA)

PPOD_ISO_OUT_R_2_HVDMY_5_GA = PPOD_ISO_OUT_R_1_HVDMY_5_GA TOUCH PPOD_ISO_OUT_H_1_HVDMY_5_GA

PPOD_ISO_OUT_R_3_HVDMY_5_GA = SIZE PPOD_ISO_OUT_R_2_HVDMY_5_GA BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_ISO_OUT_H_HVDMY_5_GA = (HOLES PPOD_ISO_OUT_R_3_HVDMY_5_GA) ENCLOSE (NPOD_GR_R_HVDMY_5_GA OR POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA)

PPOD_ISO_OUT_R_HVDMY_5_GA = PPOD_ISO_OUT_R_3_HVDMY_5_GA TOUCH PPOD_ISO_OUT_H_HVDMY_5_GA



PPOD_ISO_OUT_H = (((PPOD_ISO_OUT_H_HVDMY_45_GB OR PPOD_ISO_OUT_H_HVDMY_36_GB) OR PPOD_ISO_OUT_H_HVDMY_29_GA)OR PPOD_ISO_OUT_H_HVDMY_24_20_16_12_9_6_GA) OR PPOD_ISO_OUT_H_HVDMY_5_GA
PPOD_ISO_OUT_R = (((PPOD_ISO_OUT_R_HVDMY_45_GB OR PPOD_ISO_OUT_R_HVDMY_36_GB) OR PPOD_ISO_OUT_R_HVDMY_29_GA)OR PPOD_ISO_OUT_R_HVDMY_24_20_16_12_9_6_GA) OR PPOD_ISO_OUT_R_HVDMY_5_GA




// HVSTRAP
CHIP_HVDMY_45_GB = CHIP INTERACT HVDMY_45_GB
CHIP_HVDMY_36_GB = (CHIP INTERACT HVDMY_36_GB) NOT INTERACT HVDMY_45_GB
CHIP_HVDMY_29_GA = ((CHIP INTERACT HVDMY_29_GA) NOT INTERACT HVDMY_45_GB) NOT INTERACT HVDMY_36_GB
CHIP_HVDMY_24_20_16_12_9_6_GA = (((CHIP INTERACT HVDMY_24_20_16_12_9_6_GA) NOT INTERACT HVDMY_45_GB) NOT INTERACT HVDMY_36_GB) NOT INTERACT HVDMY_29_GA
CHIP_HVDMY_5_GA = ((((CHIP INTERACT HVDMY_5_GA) NOT INTERACT HVDMY_45_GB) NOT INTERACT HVDMY_36_GB) NOT INTERACT HVDMY_29_GA) NOT INTERACT HVDMY_24_20_16_12_9_6_GA









STRAPDMY_HVDMY_45_GB = STRAPDMY INTERACT CHIP_HVDMY_45_GB
HVNP_STRAP_HVDMY_45_GB = (NP AND HVOD) AND STRAPDMY_HVDMY_45_GB
HVPP_STRAP_HVDMY_45_GB = (PP AND HVOD) AND STRAPDMY_HVDMY_45_GB

STRAPDMY_HVDMY_36_GB = STRAPDMY INTERACT CHIP_HVDMY_36_GB
HVNP_STRAP_HVDMY_36_GB = (NP AND HVOD) AND STRAPDMY_HVDMY_36_GB
HVPP_STRAP_HVDMY_36_GB = (PP AND HVOD) AND STRAPDMY_HVDMY_36_GB

STRAPDMY_HVDMY_29_GA = STRAPDMY INTERACT CHIP_HVDMY_29_GA
HVNP_STRAP_HVDMY_29_GA = (NP AND HVOD) AND STRAPDMY_HVDMY_29_GA
HVPP_STRAP_HVDMY_29_GA = (PP AND HVOD) AND STRAPDMY_HVDMY_29_GA

STRAPDMY_HVDMY_24_20_16_12_9_6_GA = STRAPDMY INTERACT CHIP_HVDMY_24_20_16_12_9_6_GA
HVNP_STRAP_HVDMY_24_20_16_12_9_6_GA = (NP AND HVOD) AND STRAPDMY_HVDMY_24_20_16_12_9_6_GA
HVPP_STRAP_HVDMY_24_20_16_12_9_6_GA = (PP AND HVOD) AND STRAPDMY_HVDMY_24_20_16_12_9_6_GA

STRAPDMY_HVDMY_5_GA = STRAPDMY INTERACT CHIP_HVDMY_5_GA
HVNP_STRAP_HVDMY_5_GA = (NP AND HVOD) AND STRAPDMY_HVDMY_5_GA
HVPP_STRAP_HVDMY_5_GA = (PP AND HVOD) AND STRAPDMY_HVDMY_5_GA


HVNP_STRAP = (((HVNP_STRAP_HVDMY_45_GB OR HVNP_STRAP_HVDMY_36_GB) OR HVNP_STRAP_HVDMY_29_GA) OR HVNP_STRAP_HVDMY_24_20_16_12_9_6_GA) OR HVNP_STRAP_HVDMY_5_GA
HVPP_STRAP = (((HVPP_STRAP_HVDMY_45_GB OR HVPP_STRAP_HVDMY_36_GB) OR HVPP_STRAP_HVDMY_29_GA) OR HVPP_STRAP_HVDMY_24_20_16_12_9_6_GA) OR HVPP_STRAP_HVDMY_5_GA


HVLUP.W.1_HVDMY_45_GB { @ min width of N+ HV LUP isolation ring of High side I/O HV HV PMOS >= ^HVLUP_W_1_HVDMY_45_GB
     POST_DRIVER_ACT_HVP_HS_HVDMY_45_GB NOT INSIDE NPOD_ISO_LUP_H_HVDMY_45_GB
}
//HVLUP.W.1 is checked by HVLUP.W.1_HVDMY_45_GB

HVLUP.W.1_HVDMY_36_GB { @ min width of N+ HV LUP isolation ring of High side I/O HV HV PMOS >= ^HVLUP_W_1_HVDMY_36_GB
     POST_DRIVER_ACT_HVP_HS_HVDMY_36_GB NOT INSIDE NPOD_ISO_LUP_H_HVDMY_36_GB
}
//HVLUP.W.1 is checked by HVLUP.W.1_HVDMY_36_GB

HVLUP.W.1_HVDMY_29_GA { @ min width of N+ HV LUP isolation ring of High side I/O HV HV PMOS >= ^HVLUP_W_1_HVDMY_29_GA
     POST_DRIVER_ACT_HVP_HS_HVDMY_29_GA NOT INSIDE NPOD_ISO_LUP_H_HVDMY_29_GA
}
//HVLUP.W.1 is checked by HVLUP.W.1_HVDMY_29_GA

HVLUP.W.1_HVDMY_24_20_16_12_9_6_GA { @ min width of N+ HV LUP isolation ring of High side I/O HV HV PMOS >= ^HVLUP_W_1_HVDMY_24_20_16_12_9_6_GA
     POST_DRIVER_ACT_HVP_HS_HVDMY_24_20_16_12_9_6_GA NOT INSIDE NPOD_ISO_LUP_H_HVDMY_24_20_16_12_9_6_GA
}
//HVLUP.W.1 is checked by HVLUP.W.1_HVDMY_24_20_16_12_9_6_GA

HVLUP.W.1_HVDMY_5_GA { @ min width of N+ HV LUP isolation ring of High side I/O HV HV PMOS >= ^HVLUP_W_1_HVDMY_5_GA
     POST_DRIVER_ACT_HVP_HS_HVDMY_5_GA NOT INSIDE NPOD_ISO_LUP_H_HVDMY_5_GA
}
//HVLUP.W.1 is checked by HVLUP.W.1_HVDMY_5_GA







HVLUP.W.2_HVDMY_45_GB { @ min width of P+ HV LUP guard ring of High-side I/O HV PMOS >= ^HVLUP_W_2_HVDMY_45_GB
     ((POST_DRIVER_ACT_HVP_HS INTERACT GATE) AND HVDMY_45_GB) NOT INSIDE PPOD_GR_H_HVDMY_45_GB
}
//HVLUP.W.2 is checked by HVLUP.W.2_HVDMY_45_GB

HVLUP.W.2_HVDMY_36_GB { @ min width of P+ HV LUP guard ring of High-side I/O HV PMOS >= ^HVLUP_W_2_HVDMY_36_GB
     ((POST_DRIVER_ACT_HVP_HS INTERACT GATE) AND HVDMY_36_GB) NOT INSIDE PPOD_GR_H_HVDMY_36_GB
}
//HVLUP.W.2 is checked by HVLUP.W.2_HVDMY_36_GB

HVLUP.W.2_HVDMY_29_GA { @ min width of P+ HV LUP guard ring of High-side I/O HV PMOS >= ^HVLUP_W_2_HVDMY_29_GA
     ((POST_DRIVER_ACT_HVP_HS INTERACT GATE) AND HVDMY_29_GA) NOT INSIDE PPOD_GR_H_HVDMY_29_GA
}
//HVLUP.W.2 is checked by HVLUP.W.2_HVDMY_29_GA

HVLUP.W.2_HVDMY_24_20_16_12_9_6_GA { @ min width of P+ HV LUP guard ring of High-side I/O HV PMOS >= ^HVLUP_W_2_HVDMY_24_20_16_12_9_6_GA
     ((POST_DRIVER_ACT_HVP_HS INTERACT GATE) AND HVDMY_24_20_16_12_9_6_GA) NOT INSIDE PPOD_GR_H_HVDMY_24_20_16_12_9_6_GA
}
//HVLUP.W.2 is checked by HVLUP.W.2_HVDMY_24_20_16_12_9_6_GA

HVLUP.W.2_HVDMY_5_GA { @ min width of P+ HV LUP guard ring of High-side I/O HV PMOS >= ^HVLUP_W_2_HVDMY_5_GA
     ((POST_DRIVER_ACT_HVP_HS INTERACT GATE) AND HVDMY_5_GA) NOT INSIDE PPOD_GR_H_HVDMY_5_GA
}
//HVLUP.W.2 is checked by HVLUP.W.2_HVDMY_5_GA




HVLUP.W.3_HVDMY_45_GB { @ Min width of N+ HV LUP guard ring of Low-side I/O HV device(except Fully-isolated Low-side I/O HVNMOS) >= ^HVLUP_W_3_HVDMY_45_GB
					   @ (N+ HVLUP guard ring is an additional ring for Low-side I/O HV device)
	POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_NONFULL NOT INSIDE NPOD_GR_H_L_HVDMY_45_GB
	POST_DRIVER_ACT_HVP_LS_HVDMY_45_GB NOT INSIDE NPOD_GR_H_L_HVDMY_45_GB
}
HVLUP.W.3_HVDMY_36_GB { @ Min width of N+ HV LUP guard ring of Low-side I/O HV device(except Fully-isolated Low-side I/O HVNMOS) >= ^HVLUP_W_3_HVDMY_36_GB
					   @ (N+ HVLUP guard ring is an additional ring for Low-side I/O HV device)
	POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_NONFULL NOT INSIDE NPOD_GR_H_L_HVDMY_36_GB
	POST_DRIVER_ACT_HVP_LS_HVDMY_36_GB NOT INSIDE NPOD_GR_H_L_HVDMY_36_GB
}
HVLUP.W.3_HVDMY_29_GA { @ Min width of N+ HV LUP guard ring of Low-side I/O HV device(except Fully-isolated Low-side I/O HVNMOS) >= ^HVLUP_W_3_HVDMY_29_GA
					   @ (N+ HVLUP guard ring is an additional ring for Low-side I/O HV device)
	POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_NONFULL NOT INSIDE NPOD_GR_H_L_HVDMY_29_GA
	POST_DRIVER_ACT_HVP_LS_HVDMY_29_GA NOT INSIDE NPOD_GR_H_L_HVDMY_29_GA
}
HVLUP.W.3_HVDMY_24_20_16_12_9_6_GA { @ Min width of N+ HV LUP guard ring of Low-side I/O HV device(except Fully-isolated Low-side I/O HVNMOS) >= ^HVLUP_W_3_HVDMY_24_20_16_12_9_6_GA
					   @ (N+ HVLUP guard ring is an additional ring for Low-side I/O HV device)
	POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_NONFULL NOT INSIDE NPOD_GR_H_L_HVDMY_24_20_16_12_9_6_GA
	POST_DRIVER_ACT_HVP_LS_HVDMY_24_20_16_12_9_6_GA NOT INSIDE NPOD_GR_H_L_HVDMY_24_20_16_12_9_6_GA
}
HVLUP.W.3_HVDMY_5_GA { @ Min width of N+ HV LUP guard ring of Low-side I/O HV device(except Fully-isolated Low-side I/O HVNMOS) >= ^HVLUP_W_3_HVDMY_5_GA
					   @ (N+ HVLUP guard ring is an additional ring for Low-side I/O HV device)
	POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_NONFULL NOT INSIDE NPOD_GR_H_L_HVDMY_5_GA
	POST_DRIVER_ACT_HVP_LS_HVDMY_5_GA NOT INSIDE NPOD_GR_H_L_HVDMY_5_GA
}

HVLUP.W.4_HVDMY_45_GB { @ min width of P+ HV LUP isolation ring of low_side I/O HV N+ ACTIVE >= ^HVLUP_W_4_HVDMY_45_GB
	POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_NONFULL NOT INSIDE PPOD_ISO_H_LS_HVDMY_45_GB
}
HVLUP.W.4_HVDMY_36_GB { @ min width of P+ HV LUP isolation ring of low_side I/O HV N+ ACTIVE >= ^HVLUP_W_4_HVDMY_36_GB
	POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_NONFULL NOT INSIDE PPOD_ISO_H_LS_HVDMY_36_GB
}
HVLUP.W.4_HVDMY_29_GA { @ min width of P+ HV LUP isolation ring of low_side I/O HV N+ ACTIVE >= ^HVLUP_W_4_HVDMY_29_GA
	POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_NONFULL NOT INSIDE PPOD_ISO_H_LS_HVDMY_29_GA
}
HVLUP.W.4_HVDMY_24_20_16_12_9_6_GA { @ min width of P+ HV LUP isolation ring of low_side I/O HV N+ ACTIVE >= ^HVLUP_W_4_HVDMY_24_20_16_12_9_6_GA
	POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_NONFULL NOT INSIDE PPOD_ISO_H_LS_HVDMY_24_20_16_12_9_6_GA
}
HVLUP.W.4_HVDMY_5_GA { @ min width of P+ HV LUP isolation ring of low_side I/O HV N+ ACTIVE >= ^HVLUP_W_4_HVDMY_5_GA
	POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_NONFULL NOT INSIDE PPOD_ISO_H_LS_HVDMY_5_GA
}
HVLUP.W.4.1_HVDMY_45_GB { @ min width of P+ HV LUP isolation ring of low_side I/O HV P+ ACTIVE >= ^HVLUP_W_4_HVDMY_45_GB
	POST_DRIVER_ACT_HVP_LS_HVDMY_45_GB NOT INSIDE PPOD_ISO_H_LS_HVDMY_45_GB
}
HVLUP.W.4.1_HVDMY_36_GB { @ min width of P+ HV LUP isolation ring of low_side I/O HV P+ ACTIVE >= ^HVLUP_W_4_HVDMY_36_GB
	POST_DRIVER_ACT_HVP_LS_HVDMY_36_GB NOT INSIDE PPOD_ISO_H_LS_HVDMY_36_GB
}
HVLUP.W.4.1_HVDMY_29_GA { @ min width of P+ HV LUP isolation ring of low_side I/O HV P+ ACTIVE >= ^HVLUP_W_4_HVDMY_29_GA
	POST_DRIVER_ACT_HVP_LS_HVDMY_29_GA NOT INSIDE PPOD_ISO_H_LS_HVDMY_29_GA
}
HVLUP.W.4.1_HVDMY_24_20_16_12_9_6_GA { @ min width of P+ HV LUP isolation ring of low_side I/O HV P+ ACTIVE >= ^HVLUP_W_4_HVDMY_24_20_16_12_9_6_GA
	POST_DRIVER_ACT_HVP_LS_HVDMY_24_20_16_12_9_6_GA NOT INSIDE PPOD_ISO_H_LS_HVDMY_24_20_16_12_9_6_GA
}
HVLUP.W.4.1_HVDMY_5_GA { @ min width of P+ HV LUP isolation ring of low_side I/O HV P+ ACTIVE >= ^HVLUP_W_4_HVDMY_5_GA
	POST_DRIVER_ACT_HVP_LS_HVDMY_5_GA NOT INSIDE PPOD_ISO_H_LS_HVDMY_5_GA
}

HVLUP.W.5_HVDMY_45_GB { @ min width of SH_N pickup ring of high-side I/O HVNMOS or High-side HVESD BJT >= ^HVLUP_W_5_HVDMY_45_GB
     INT HVNW_NPOD_ISO_HS_R_HVDMY_45_GB_C < HVLUP_W_5_HVDMY_45_GB ABUT < 90 SINGULAR REGION
}
HVLUP.W.5_HVDMY_36_GB { @ min width of SH_N pickup ring of high-side I/O HVNMOS or High-side HVESD BJT >= ^HVLUP_W_5_HVDMY_36_GB
     INT HVNW_NPOD_ISO_HS_R_HVDMY_36_GB_C < HVLUP_W_5_HVDMY_36_GB ABUT < 90 SINGULAR REGION
}
HVLUP.W.5_HVDMY_29_GA { @ min width of SH_N pickup ring of high-side I/O HVNMOS or High-side HVESD BJT >= ^HVLUP_W_5_HVDMY_29_GA
     INT HVNW_NPOD_ISO_HS_R_HVDMY_29_GA_C < HVLUP_W_5_HVDMY_29_GA ABUT < 90 SINGULAR REGION
}
HVLUP.W.5_HVDMY_24_20_16_12_9_6_GA { @ min width of SH_N pickup ring of high-side I/O HVNMOS or High-side HVESD BJT >= ^HVLUP_W_5_HVDMY_24_20_16_12_9_6_GA
     INT HVNW_NPOD_ISO_HS_R_HVDMY_24_20_16_12_9_6_GA_C < HVLUP_W_5_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
}
HVLUP.W.5_HVDMY_5_GA { @ min width of SH_N pickup ring of high-side I/O HVNMOS or High-side HVESD BJT >= ^HVLUP_W_5_HVDMY_5_GA
     INT HVNW_NPOD_ISO_HS_R_HVDMY_5_GA_C < HVLUP_W_5_HVDMY_5_GA ABUT < 90 SINGULAR REGION
}

HVLUP.W.6_HVDMY_45_GB { @ min width of P+ HV LUP guard ring of High-side I/O HVNMOS OR High-side I/O HVESD BJT >= ^HVLUP_W_6_HVDMY_45_GB
     POST_DRIVER_ACT_HVN_HS_HVDMY_45_GB NOT INSIDE PPOD_GR_H_HVDMY_45_GB
}
HVLUP.W.6_HVDMY_36_GB { @ min width of P+ HV LUP guard ring of High-side I/O HVNMOS OR High-side I/O HVESD BJT >= ^HVLUP_W_6_HVDMY_36_GB
     POST_DRIVER_ACT_HVN_HS_HVDMY_36_GB NOT INSIDE PPOD_GR_H_HVDMY_36_GB
}
HVLUP.W.6_HVDMY_29_GA { @ min width of P+ HV LUP guard ring of High-side I/O HVNMOS OR High-side I/O HVESD BJT >= ^HVLUP_W_6_HVDMY_29_GA
     POST_DRIVER_ACT_HVN_HS_HVDMY_29_GA NOT INSIDE PPOD_GR_H_HVDMY_29_GA
}
HVLUP.W.6_HVDMY_24_20_16_12_9_6_GA { @ min width of P+ HV LUP guard ring of High-side I/O HVNMOS OR High-side I/O HVESD BJT >= ^HVLUP_W_6_HVDMY_24_20_16_12_9_6_GA
     POST_DRIVER_ACT_HVN_HS_HVDMY_24_20_16_12_9_6_GA NOT INSIDE PPOD_GR_H_HVDMY_24_20_16_12_9_6_GA
}
HVLUP.W.6_HVDMY_5_GA { @ min width of P+ HV LUP guard ring of High-side I/O HVNMOS OR High-side I/O HVESD BJT >= ^HVLUP_W_6_HVDMY_5_GA
     POST_DRIVER_ACT_HVN_HS_HVDMY_5_GA NOT INSIDE PPOD_GR_H_HVDMY_5_GA
}



HVLUP.W.7_HVDMY_45_GB { @ min width of N+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_7_HVDMY_45_GB
    INT HVNP_STRAP_HVDMY_45_GB < HVLUP_W_7_HVDMY_45_GB ABUT < 90 SINGULAR REGION
}
//HVLUP.W.7 is checked by HVLUP.W.7_HVDMY_45_GB

HVLUP.W.7_HVDMY_36_GB { @ min width of N+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_7_HVDMY_36_GB
    INT HVNP_STRAP_HVDMY_36_GB < HVLUP_W_7_HVDMY_36_GB ABUT < 90 SINGULAR REGION
}
//HVLUP.W.7 is checked by HVLUP.W.7_HVDMY_36_GB

HVLUP.W.7_HVDMY_29_GA { @ min width of N+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_7_HVDMY_29_GA
    INT HVNP_STRAP_HVDMY_29_GA < HVLUP_W_7_HVDMY_29_GA ABUT < 90 SINGULAR REGION
}
//HVLUP.W.7 is checked by HVLUP.W.7_HVDMY_29_GA

HVLUP.W.7_HVDMY_24_20_16_12_9_6_GA { @ min width of N+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_7_HVDMY_24_20_16_12_9_6_GA
    INT HVNP_STRAP_HVDMY_24_20_16_12_9_6_GA < HVLUP_W_7_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
}
//HVLUP.W.7 is checked by HVLUP.W.7_HVDMY_24_20_16_12_9_6_GA

HVLUP.W.7_HVDMY_5_GA { @ min width of N+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_7_HVDMY_5_GA
    INT HVNP_STRAP_HVDMY_5_GA < HVLUP_W_7_HVDMY_5_GA ABUT < 90 SINGULAR REGION
}
//HVLUP.W.7 is checked by HVLUP.W.7_HVDMY_5_GA

HVLUP.W.8_HVDMY_45_GB { @ min width of P+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_8_HVDMY_45_GB 
    INT HVPP_STRAP_HVDMY_45_GB  < HVLUP_W_8_HVDMY_45_GB  ABUT < 90 SINGULAR REGION
}
//HVLUP.W.8 is checked by HVLUP.W.8_HVDMY_45_GB

HVLUP.W.8_HVDMY_36_GB { @ min width of P+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_8_HVDMY_36_GB 
    INT HVPP_STRAP_HVDMY_36_GB  < HVLUP_W_8_HVDMY_36_GB  ABUT < 90 SINGULAR REGION
}
//HVLUP.W.8 is checked by HVLUP.W.8_HVDMY_36_GB

HVLUP.W.8_HVDMY_29_GA { @ min width of P+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_8_HVDMY_29_GA 
    INT HVPP_STRAP_HVDMY_29_GA  < HVLUP_W_8_HVDMY_29_GA  ABUT < 90 SINGULAR REGION
}
//HVLUP.W.8 is checked by HVLUP.W.8_HVDMY_29_GA

HVLUP.W.8_HVDMY_24_20_16_12_9_6_GA { @ min width of P+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_8_HVDMY_24_20_16_12_9_6_GA 
    INT HVPP_STRAP_HVDMY_24_20_16_12_9_6_GA  < HVLUP_W_8_HVDMY_24_20_16_12_9_6_GA  ABUT < 90 SINGULAR REGION
}
//HVLUP.W.8 is checked by HVLUP.W.8_HVDMY_24_20_16_12_9_6_GA

HVLUP.W.8_HVDMY_5_GA { @ min width of P+HV STRAP between HV I/O devices and non-HV I/O devices >= ^HVLUP_W_8_HVDMY_5_GA 
    INT HVPP_STRAP_HVDMY_5_GA  < HVLUP_W_8_HVDMY_5_GA  ABUT < 90 SINGULAR REGION
}
//HVLUP.W.8 is checked by HVLUP.W.8_HVDMY_5_GA







HVLUP.W.9_HVDMY_24_20_16_12_9_6_GA { @ min width of P+ HVLUP bulk ring of fully iso Low-side I/O HV N+ active >= ^HVLUP_W_9_HVDMY_24_20_16_12_9_6_GA
    INT PPOD_BULK_R_FULL_HVDMY_24_20_16_12_9_6_GA < HVLUP_W_9_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
    POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_FULL NOT INSIDE PPOD_BULK_H_FULL_HVDMY_24_20_16_12_9_6_GA 
}

HVLUP.W.10_HVDMY_24_20_16_12_9_6_GA { @ min width of HVNW pickup ring of fully iso Low-side I/O HV N+ active >= ^HVLUP_W_10_HVDMY_24_20_16_12_9_6_GA
	A = (HOLES HVNW_NPOD_ISO_LS_R_HVDMY_24_20_16_12_9_6_GA_C INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_FULL
	B = HVNW_NPOD_ISO_LS_R_HVDMY_24_20_16_12_9_6_GA_C TOUCH A
    INT B < HVLUP_W_10_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION 
}

HVLUP.W.9_HVDMY_5_GA { @ min width of P+ HVLUP bulk ring of fully iso Low-side I/O HV N+ active >= ^HVLUP_W_9_HVDMY_5_GA
    INT PPOD_BULK_R_FULL_HVDMY_5_GA < HVLUP_W_9_HVDMY_5_GA ABUT < 90 SINGULAR REGION
    POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_FULL NOT INSIDE PPOD_BULK_H_FULL_HVDMY_5_GA 
}

HVLUP.W.10_HVDMY_5_GA { @ min width of HVNW pickup ring of fully iso Low-side I/O HV N+ active >= ^HVLUP_W_10_HVDMY_5_GA
	A = (HOLES HVNW_NPOD_ISO_LS_R_HVDMY_5_GA_C INNER) ENCLOSE POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_FULL
	B = HVNW_NPOD_ISO_LS_R_HVDMY_5_GA_C TOUCH A
    INT B < HVLUP_W_10_HVDMY_5_GA ABUT < 90 SINGULAR REGION 
}


HVLUP.W.11_HVDMY_45_GB { @ Min width of P+ SH_P isolation ring >= ^HVLUP_W_11_HVDMY_45_GB
    INT PPOD_ISO_OUT_R_HVDMY_45_GB < HVLUP_W_11_HVDMY_45_GB ABUT < 90 SINGULAR REGION
	POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB NOT INSIDE PPOD_ISO_OUT_H_HVDMY_45_GB
}
HVLUP.W.11_HVDMY_36_GB { @ Min width of P+ SH_P isolation ring >= ^HVLUP_W_11_HVDMY_36_GB
    INT PPOD_ISO_OUT_R_HVDMY_36_GB < HVLUP_W_11_HVDMY_36_GB ABUT < 90 SINGULAR REGION
	POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB NOT INSIDE PPOD_ISO_OUT_H_HVDMY_36_GB
}
HVLUP.W.11_HVDMY_29_GA { @ Min width of P+ SH_P isolation ring >= ^HVLUP_W_11_HVDMY_29_GA
    INT PPOD_ISO_OUT_R_HVDMY_29_GA < HVLUP_W_11_HVDMY_29_GA ABUT < 90 SINGULAR REGION
	POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA NOT INSIDE PPOD_ISO_OUT_H_HVDMY_29_GA
}
HVLUP.W.11_HVDMY_24_20_16_12_9_6_GA { @ Min width of P+ SH_P isolation ring >= ^HVLUP_W_11_HVDMY_24_20_16_12_9_6_GA
    INT PPOD_ISO_OUT_R_HVDMY_24_20_16_12_9_6_GA < HVLUP_W_11_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
	POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA NOT INSIDE PPOD_ISO_OUT_H_HVDMY_24_20_16_12_9_6_GA
}
HVLUP.W.11_HVDMY_5_GA { @ Min width of P+ SH_P isolation ring >= ^HVLUP_W_11_HVDMY_5_GA
    INT PPOD_ISO_OUT_R_HVDMY_5_GA < HVLUP_W_11_HVDMY_5_GA ABUT < 90 SINGULAR REGION
	POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA NOT INSIDE PPOD_ISO_OUT_H_HVDMY_5_GA
}

NACT_LV = (NACT INTERACT ALL_GATE) NOT HVDMY
PACT_LV = (PACT INTERACT ALL_GATE) NOT HVDMY



HVLUP.C.1 { @ min clearance from SH_N of the (N+ HVLUP isolation ring or N+ HVLUP guard ring) to LVMOS without pickup ring or NBL isolation ring>= ^HVLUP_C_1 
            @ WIthin this rule, all LV devices should be surrounded by their own guard ring.
    A1 = NACT_LV NOT INSIDE (PTAP_guard_ring_hole OR NBL_ISO_HOLE)
    A2 = PACT_LV NOT INSIDE (NTAP_guard_ring_hole OR NBL_ISO_HOLE)
    A = A1 OR A2
	B = HVSHN INTERACT ((NPOD_ISO_LUP_R OR NPOD_GR_R) OR HVNW_NPOD_ISO_R)
    EXT B A < HVLUP_C_1  ABUT < 90 SINGULAR REGION
}


PTAPiu_D = PTAPiu INTERACT HV_D_P
CONNECT PTAPiu_D PTAPiu

NTAPiu_D_B = NTAPiu INTERACT (HV_D_N OR HVESD_BOD)
CONNECT NTAPiu_D_B NTAPiu

NSDiu_S = NSDiu INTERACT HV_S_N
CONNECT NSDiu_S NSDiu
HVESD_CODc = HVESD_COD OR EMPTYi
CONNECT HVESD_CODc M1iu BY COiu



HVNW_HV_POST_DRIVER_PACT_C = (HVSHN OR NBL) INTERACT HV_PACT_real
HVNW_POST_DRIVER_ACT_HVN_LS_C = ((HVSHN OR NDD) OR (NBL NOT INTERACT NLD24G5_ISO_SWITCH_GATE)) INTERACT HV_NACT_real
HVNW_POST_DRIVER_ACT_HVN_HS_C = (((HVSHN OR NDD) OR NBL) INTERACT HV_NACT_real) OR EMPTYi
HVNW_POST_DRIVER_ACT_HVN_FULL_C = (HVSHN OR NDD) INTERACT HV_NACT_real

HVNW_POST_DRIVER_ACT_HVP_LS = HVNW_HV_POST_DRIVER_PACT_C INTERACT POST_DRIVER_ACT_HVP_LS
HVNW_POST_DRIVER_ACT_HVP_HS = HVNW_HV_POST_DRIVER_PACT_C INTERACT POST_DRIVER_ACT_HVP_HS
HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL = HVNW_POST_DRIVER_ACT_HVN_LS_C INTERACT POST_DRIVER_ACT_HVN_LS_NONFULL
HVNW_POST_DRIVER_ACT_HVN_LS_FULL = HVNW_POST_DRIVER_ACT_HVN_FULL_C INTERACT POST_DRIVER_ACT_HVN_LS_FULL
HVNW_POST_DRIVER_ACT_HVN_HS = HVNW_POST_DRIVER_ACT_HVN_HS_C INTERACT POST_DRIVER_ACT_HVN_HS

HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_45_GB = HVNW_HV_POST_DRIVER_PACT_C INTERACT POST_DRIVER_ACT_HVP_LS_HVDMY_45_GB 
HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_45_GB = HVNW_HV_POST_DRIVER_PACT_C INTERACT POST_DRIVER_ACT_HVP_HS_HVDMY_45_GB 
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_NONFULL = HVNW_POST_DRIVER_ACT_HVN_LS_C INTERACT POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_NONFULL 
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_FULL = HVNW_POST_DRIVER_ACT_HVN_FULL_C INTERACT POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_FULL 
HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_45_GB = HVNW_POST_DRIVER_ACT_HVN_HS_C INTERACT POST_DRIVER_ACT_HVN_HS_HVDMY_45_GB 
HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_36_GB = HVNW_HV_POST_DRIVER_PACT_C INTERACT POST_DRIVER_ACT_HVP_LS_HVDMY_36_GB 
HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_36_GB = HVNW_HV_POST_DRIVER_PACT_C INTERACT POST_DRIVER_ACT_HVP_HS_HVDMY_36_GB 
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_NONFULL = HVNW_POST_DRIVER_ACT_HVN_LS_C INTERACT POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_NONFULL 
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_FULL = HVNW_POST_DRIVER_ACT_HVN_FULL_C INTERACT POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_FULL 
HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_36_GB = HVNW_POST_DRIVER_ACT_HVN_HS_C INTERACT POST_DRIVER_ACT_HVN_HS_HVDMY_36_GB 
HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_29_GA = HVNW_HV_POST_DRIVER_PACT_C INTERACT POST_DRIVER_ACT_HVP_LS_HVDMY_29_GA 
HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_29_GA = HVNW_HV_POST_DRIVER_PACT_C INTERACT POST_DRIVER_ACT_HVP_HS_HVDMY_29_GA 
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_NONFULL = HVNW_POST_DRIVER_ACT_HVN_LS_C INTERACT POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_NONFULL 
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_FULL = HVNW_POST_DRIVER_ACT_HVN_FULL_C INTERACT POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_FULL 
HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_29_GA = HVNW_POST_DRIVER_ACT_HVN_HS_C INTERACT POST_DRIVER_ACT_HVN_HS_HVDMY_29_GA 
HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_24_20_16_12_9_6_GA = HVNW_HV_POST_DRIVER_PACT_C INTERACT POST_DRIVER_ACT_HVP_LS_HVDMY_24_20_16_12_9_6_GA 
HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_24_20_16_12_9_6_GA = HVNW_HV_POST_DRIVER_PACT_C INTERACT POST_DRIVER_ACT_HVP_HS_HVDMY_24_20_16_12_9_6_GA 
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_NONFULL = HVNW_POST_DRIVER_ACT_HVN_LS_C INTERACT POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_NONFULL 
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_FULL = HVNW_POST_DRIVER_ACT_HVN_FULL_C INTERACT POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_FULL 
HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_24_20_16_12_9_6_GA = HVNW_POST_DRIVER_ACT_HVN_HS_C INTERACT POST_DRIVER_ACT_HVN_HS_HVDMY_24_20_16_12_9_6_GA 
HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_5_GA = HVNW_HV_POST_DRIVER_PACT_C INTERACT POST_DRIVER_ACT_HVP_LS_HVDMY_5_GA 
HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_5_GA = HVNW_HV_POST_DRIVER_PACT_C INTERACT POST_DRIVER_ACT_HVP_HS_HVDMY_5_GA 
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_NONFULL = HVNW_POST_DRIVER_ACT_HVN_LS_C INTERACT POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_NONFULL 
HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_FULL = HVNW_POST_DRIVER_ACT_HVN_FULL_C INTERACT POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_FULL 
HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_5_GA = HVNW_POST_DRIVER_ACT_HVN_HS_C INTERACT POST_DRIVER_ACT_HVN_HS_HVDMY_5_GA 


//HVLUP.C.2.1 is checked by HVLUP.C.2_HVDMY_45_GB
//HVLUP.C.2 is checked by HVLUP.C.2_HVDMY_45_GB
HVLUP.C.2_HVDMY_45_GB { @ Min clearance from HVSHN pickup ring for non fully iso I/O HVNMOS or low side I/O HVESD to N+ HVLUP ISO ring >= ^HVLUP_C_2_HVDMY_45_GB
                       @ DRC only check drain / base of NACT not connected to HVPMOS drain
	EXT HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_45_GB HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_2_HVDMY_45_GB ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_NONFULL < HVLUP_C_2_HVDMY_45_GB ABUT < 90 SINGULAR REGION
}



//HVLUP.C.2.1 is checked by HVLUP.C.2_HVDMY_36_GB
//HVLUP.C.2 is checked by HVLUP.C.2_HVDMY_36_GB
HVLUP.C.2_HVDMY_36_GB { @ Min clearance from HVSHN pickup ring for non fully iso I/O HVNMOS or low side I/O HVESD to N+ HVLUP ISO ring >= ^HVLUP_C_2_HVDMY_36_GB
                       @ DRC only check drain / base of NACT not connected to HVPMOS drain
	EXT HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_36_GB HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_2_HVDMY_36_GB ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_NONFULL < HVLUP_C_2_HVDMY_36_GB ABUT < 90 SINGULAR REGION
}



//HVLUP.C.2.1 is checked by HVLUP.C.2_HVDMY_29_GA
//HVLUP.C.2 is checked by HVLUP.C.2_HVDMY_29_GA
HVLUP.C.2_HVDMY_29_GA { @ Min clearance from HVSHN pickup ring for non fully iso I/O HVNMOS or low side I/O HVESD to N+ HVLUP ISO ring >= ^HVLUP_C_2_HVDMY_29_GA
                       @ DRC only check drain / base of NACT not connected to HVPMOS drain
	EXT HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_29_GA HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_2_HVDMY_29_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_NONFULL < HVLUP_C_2_HVDMY_29_GA ABUT < 90 SINGULAR REGION
}



//HVLUP.C.2.1 is checked by HVLUP.C.2_HVDMY_24_20_16_12_9_6_GA
//HVLUP.C.2 is checked by HVLUP.C.2_HVDMY_24_20_16_12_9_6_GA
HVLUP.C.2_HVDMY_24_20_16_12_9_6_GA { @ Min clearance from HVSHN pickup ring for non fully iso I/O HVNMOS or low side I/O HVESD to N+ HVLUP ISO ring >= ^HVLUP_C_2_HVDMY_24_20_16_12_9_6_GA
                       @ DRC only check drain / base of NACT not connected to HVPMOS drain
	EXT HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_24_20_16_12_9_6_GA HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_2_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_NONFULL < HVLUP_C_2_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
}



//HVLUP.C.2.1 is checked by HVLUP.C.2_HVDMY_5_GA
//HVLUP.C.2 is checked by HVLUP.C.2_HVDMY_5_GA
HVLUP.C.2_HVDMY_5_GA { @ Min clearance from HVSHN pickup ring for non fully iso I/O HVNMOS or low side I/O HVESD to N+ HVLUP ISO ring >= ^HVLUP_C_2_HVDMY_5_GA
                       @ DRC only check drain / base of NACT not connected to HVPMOS drain
	EXT HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_5_GA HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_2_HVDMY_5_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_NONFULL < HVLUP_C_2_HVDMY_5_GA ABUT < 90 SINGULAR REGION
}



//HVLUP.C.3.1 is checked by HVLUP.C.3_HVDMY_45_GB
//HVLUP.C.3 is checked by HVLUP.C.3_HVDMY_45_GB
HVLUP.C.3_HVDMY_45_GB { @ Min clearance from HVSHN interact Drain of low side I/O HVNMOS to N+ HVLUP ISO ring >= ^HVLUP_C_3_HVDMY_45_GB
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_45_GB HVNW_POST_DRIVER_ACT_HVN_LS_FULL < HVLUP_C_3_HVDMY_45_GB ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_FULL < HVLUP_C_3_HVDMY_45_GB ABUT < 90 SINGULAR REGION
}
//HVLUP.C.3.1 is checked by HVLUP.C.3_HVDMY_36_GB
//HVLUP.C.3 is checked by HVLUP.C.3_HVDMY_36_GB
HVLUP.C.3_HVDMY_36_GB { @ Min clearance from HVSHN interact Drain of low side I/O HVNMOS to N+ HVLUP ISO ring >= ^HVLUP_C_3_HVDMY_36_GB
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_36_GB HVNW_POST_DRIVER_ACT_HVN_LS_FULL < HVLUP_C_3_HVDMY_36_GB ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_FULL < HVLUP_C_3_HVDMY_36_GB ABUT < 90 SINGULAR REGION
}
//HVLUP.C.3.1 is checked by HVLUP.C.3_HVDMY_29_GA
//HVLUP.C.3 is checked by HVLUP.C.3_HVDMY_29_GA
HVLUP.C.3_HVDMY_29_GA { @ Min clearance from HVSHN interact Drain of low side I/O HVNMOS to N+ HVLUP ISO ring >= ^HVLUP_C_3_HVDMY_29_GA
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_29_GA HVNW_POST_DRIVER_ACT_HVN_LS_FULL < HVLUP_C_3_HVDMY_29_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_FULL < HVLUP_C_3_HVDMY_29_GA ABUT < 90 SINGULAR REGION
}
//HVLUP.C.3.1 is checked by HVLUP.C.3_HVDMY_24_20_16_12_9_6_GA
//HVLUP.C.3 is checked by HVLUP.C.3_HVDMY_24_20_16_12_9_6_GA
HVLUP.C.3_HVDMY_24_20_16_12_9_6_GA { @ Min clearance from HVSHN interact Drain of low side I/O HVNMOS to N+ HVLUP ISO ring >= ^HVLUP_C_3_HVDMY_24_20_16_12_9_6_GA
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_24_20_16_12_9_6_GA HVNW_POST_DRIVER_ACT_HVN_LS_FULL < HVLUP_C_3_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_FULL < HVLUP_C_3_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
}
//HVLUP.C.3.1 is checked by HVLUP.C.3_HVDMY_5_GA
//HVLUP.C.3 is checked by HVLUP.C.3_HVDMY_5_GA
HVLUP.C.3_HVDMY_5_GA { @ Min clearance from HVSHN interact Drain of low side I/O HVNMOS to N+ HVLUP ISO ring >= ^HVLUP_C_3_HVDMY_5_GA
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_5_GA HVNW_POST_DRIVER_ACT_HVN_LS_FULL < HVLUP_C_3_HVDMY_5_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_FULL < HVLUP_C_3_HVDMY_5_GA ABUT < 90 SINGULAR REGION
}


//HVLUP.C.4.1 is checked by HVLUP.C.4_HVDMY_45_GB
//HVLUP.C.4 is checked by HVLUP.C.4_HVDMY_45_GB
HVLUP.C.4_HVDMY_45_GB { @ Min clearance from HVSHN of HVSHN pickup ring of non fully iso low side I/O HVNMOS or HVESD to HVSHN of HVSHN pickup ring of high side I/O HVNMOS or HVESD >=^HVLUP_C_4_HVDMY_45_GB
	EXT HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_45_GB HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_4_HVDMY_45_GB ABUT < 90 SINGULAR REGION
	EXT HVNW_POST_DRIVER_ACT_HVN_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_NONFULL < HVLUP_C_4_HVDMY_45_GB ABUT < 90 SINGULAR REGION
}


//HVLUP.C.4.1 is checked by HVLUP.C.4_HVDMY_36_GB
//HVLUP.C.4 is checked by HVLUP.C.4_HVDMY_36_GB
HVLUP.C.4_HVDMY_36_GB { @ Min clearance from HVSHN of HVSHN pickup ring of non fully iso low side I/O HVNMOS or HVESD to HVSHN of HVSHN pickup ring of high side I/O HVNMOS or HVESD >=^HVLUP_C_4_HVDMY_36_GB
	EXT HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_36_GB HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_4_HVDMY_36_GB ABUT < 90 SINGULAR REGION
	EXT HVNW_POST_DRIVER_ACT_HVN_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_NONFULL < HVLUP_C_4_HVDMY_36_GB ABUT < 90 SINGULAR REGION
}


//HVLUP.C.4.1 is checked by HVLUP.C.4_HVDMY_29_GA
//HVLUP.C.4 is checked by HVLUP.C.4_HVDMY_29_GA
HVLUP.C.4_HVDMY_29_GA { @ Min clearance from HVSHN of HVSHN pickup ring of non fully iso low side I/O HVNMOS or HVESD to HVSHN of HVSHN pickup ring of high side I/O HVNMOS or HVESD >=^HVLUP_C_4_HVDMY_29_GA
	EXT HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_29_GA HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_4_HVDMY_29_GA ABUT < 90 SINGULAR REGION
	EXT HVNW_POST_DRIVER_ACT_HVN_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_NONFULL < HVLUP_C_4_HVDMY_29_GA ABUT < 90 SINGULAR REGION
}


//HVLUP.C.4.1 is checked by HVLUP.C.4_HVDMY_24_20_16_12_9_6_GA
//HVLUP.C.4 is checked by HVLUP.C.4_HVDMY_24_20_16_12_9_6_GA
HVLUP.C.4_HVDMY_24_20_16_12_9_6_GA { @ Min clearance from HVSHN of HVSHN pickup ring of non fully iso low side I/O HVNMOS or HVESD to HVSHN of HVSHN pickup ring of high side I/O HVNMOS or HVESD >=^HVLUP_C_4_HVDMY_24_20_16_12_9_6_GA
	EXT HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_24_20_16_12_9_6_GA HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_4_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
	EXT HVNW_POST_DRIVER_ACT_HVN_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_NONFULL < HVLUP_C_4_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
}


//HVLUP.C.4.1 is checked by HVLUP.C.4_HVDMY_5_GA
//HVLUP.C.4 is checked by HVLUP.C.4_HVDMY_5_GA
HVLUP.C.4_HVDMY_5_GA { @ Min clearance from HVSHN of HVSHN pickup ring of non fully iso low side I/O HVNMOS or HVESD to HVSHN of HVSHN pickup ring of high side I/O HVNMOS or HVESD >=^HVLUP_C_4_HVDMY_5_GA
	EXT HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_5_GA HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_4_HVDMY_5_GA ABUT < 90 SINGULAR REGION
	EXT HVNW_POST_DRIVER_ACT_HVN_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_NONFULL < HVLUP_C_4_HVDMY_5_GA ABUT < 90 SINGULAR REGION
}



//HVLUP.C.5.1 is checked by HVLUP.C.5_HVDMY_45_GB
//HVLUP.C.5 is checked by HVLUP.C.5_HVDMY_45_GB
HVLUP.C.5_HVDMY_45_GB { @ Min clearance from HVSHN interact Drain of low side I/O HVNMOS to HVSHN of HVSHN pickup ring of high side I/O HVNMOS or HVESD >= ^HVLUP_C_5_HVDMY_45_GB
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_45_GB HVNW_POST_DRIVER_ACT_HVN_LS_FULL < HVLUP_C_5_HVDMY_45_GB ABUT < 90 SINGULAR REGION
	EXT HVNW_POST_DRIVER_ACT_HVN_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_FULL < HVLUP_C_5_HVDMY_45_GB ABUT < 90 SINGULAR REGION
}
//HVLUP.C.5.1 is checked by HVLUP.C.5_HVDMY_36_GB
//HVLUP.C.5 is checked by HVLUP.C.5_HVDMY_36_GB
HVLUP.C.5_HVDMY_36_GB { @ Min clearance from HVSHN interact Drain of low side I/O HVNMOS to HVSHN of HVSHN pickup ring of high side I/O HVNMOS or HVESD >= ^HVLUP_C_5_HVDMY_36_GB
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_36_GB HVNW_POST_DRIVER_ACT_HVN_LS_FULL < HVLUP_C_5_HVDMY_36_GB ABUT < 90 SINGULAR REGION
	EXT HVNW_POST_DRIVER_ACT_HVN_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_FULL < HVLUP_C_5_HVDMY_36_GB ABUT < 90 SINGULAR REGION
}
//HVLUP.C.5.1 is checked by HVLUP.C.5_HVDMY_29_GA
//HVLUP.C.5 is checked by HVLUP.C.5_HVDMY_29_GA
HVLUP.C.5_HVDMY_29_GA { @ Min clearance from HVSHN interact Drain of low side I/O HVNMOS to HVSHN of HVSHN pickup ring of high side I/O HVNMOS or HVESD >= ^HVLUP_C_5_HVDMY_29_GA
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_29_GA HVNW_POST_DRIVER_ACT_HVN_LS_FULL < HVLUP_C_5_HVDMY_29_GA ABUT < 90 SINGULAR REGION
	EXT HVNW_POST_DRIVER_ACT_HVN_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_FULL < HVLUP_C_5_HVDMY_29_GA ABUT < 90 SINGULAR REGION
}
//HVLUP.C.5.1 is checked by HVLUP.C.5_HVDMY_24_20_16_12_9_6_GA
//HVLUP.C.5 is checked by HVLUP.C.5_HVDMY_24_20_16_12_9_6_GA
HVLUP.C.5_HVDMY_24_20_16_12_9_6_GA { @ Min clearance from HVSHN interact Drain of low side I/O HVNMOS to HVSHN of HVSHN pickup ring of high side I/O HVNMOS or HVESD >= ^HVLUP_C_5_HVDMY_24_20_16_12_9_6_GA
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_24_20_16_12_9_6_GA HVNW_POST_DRIVER_ACT_HVN_LS_FULL < HVLUP_C_5_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
	EXT HVNW_POST_DRIVER_ACT_HVN_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_FULL < HVLUP_C_5_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
}
//HVLUP.C.5.1 is checked by HVLUP.C.5_HVDMY_5_GA
//HVLUP.C.5 is checked by HVLUP.C.5_HVDMY_5_GA
HVLUP.C.5_HVDMY_5_GA { @ Min clearance from HVSHN interact Drain of low side I/O HVNMOS to HVSHN of HVSHN pickup ring of high side I/O HVNMOS or HVESD >= ^HVLUP_C_5_HVDMY_5_GA
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_5_GA HVNW_POST_DRIVER_ACT_HVN_LS_FULL < HVLUP_C_5_HVDMY_5_GA ABUT < 90 SINGULAR REGION
	EXT HVNW_POST_DRIVER_ACT_HVN_HS HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_FULL < HVLUP_C_5_HVDMY_5_GA ABUT < 90 SINGULAR REGION
}

//HVLUP.C.6.1 is checked by HVLUP.C.6_HVDMY_45_GB
//HVLUP.C.6 is checked by HVLUP.C.6_HVDMY_45_GB
HVLUP.C.6_HVDMY_45_GB { @ Min clearance from HVSHN of N+ pickup ring of low side I/O HVPMOS to HVSHN of HVSHN pickup ring or (HVSHN INTERACT drain od) for high side I/O HVNMOS or HVESD >= ^HVLUP_C_6_HVDMY_45_GB
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_45_GB HVNW_POST_DRIVER_ACT_HVN_HS < HVLUP_C_6_HVDMY_45_GB ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_LS HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_45_GB < HVLUP_C_6_HVDMY_45_GB ABUT < 90 SINGULAR REGION
}
//HVLUP.C.6.1 is checked by HVLUP.C.6_HVDMY_36_GB
//HVLUP.C.6 is checked by HVLUP.C.6_HVDMY_36_GB
HVLUP.C.6_HVDMY_36_GB { @ Min clearance from HVSHN of N+ pickup ring of low side I/O HVPMOS to HVSHN of HVSHN pickup ring or (HVSHN INTERACT drain od) for high side I/O HVNMOS or HVESD >= ^HVLUP_C_6_HVDMY_36_GB
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_36_GB HVNW_POST_DRIVER_ACT_HVN_HS < HVLUP_C_6_HVDMY_36_GB ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_LS HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_36_GB < HVLUP_C_6_HVDMY_36_GB ABUT < 90 SINGULAR REGION
}
//HVLUP.C.6.1 is checked by HVLUP.C.6_HVDMY_29_GA
//HVLUP.C.6 is checked by HVLUP.C.6_HVDMY_29_GA
HVLUP.C.6_HVDMY_29_GA { @ Min clearance from HVSHN of N+ pickup ring of low side I/O HVPMOS to HVSHN of HVSHN pickup ring or (HVSHN INTERACT drain od) for high side I/O HVNMOS or HVESD >= ^HVLUP_C_6_HVDMY_29_GA
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_29_GA HVNW_POST_DRIVER_ACT_HVN_HS < HVLUP_C_6_HVDMY_29_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_LS HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_29_GA < HVLUP_C_6_HVDMY_29_GA ABUT < 90 SINGULAR REGION
}
//HVLUP.C.6.1 is checked by HVLUP.C.6_HVDMY_24_20_16_12_9_6_GA
//HVLUP.C.6 is checked by HVLUP.C.6_HVDMY_24_20_16_12_9_6_GA
HVLUP.C.6_HVDMY_24_20_16_12_9_6_GA { @ Min clearance from HVSHN of N+ pickup ring of low side I/O HVPMOS to HVSHN of HVSHN pickup ring or (HVSHN INTERACT drain od) for high side I/O HVNMOS or HVESD >= ^HVLUP_C_6_HVDMY_24_20_16_12_9_6_GA
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_24_20_16_12_9_6_GA HVNW_POST_DRIVER_ACT_HVN_HS < HVLUP_C_6_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_LS HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_24_20_16_12_9_6_GA < HVLUP_C_6_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
}
//HVLUP.C.6.1 is checked by HVLUP.C.6_HVDMY_5_GA
//HVLUP.C.6 is checked by HVLUP.C.6_HVDMY_5_GA
HVLUP.C.6_HVDMY_5_GA { @ Min clearance from HVSHN of N+ pickup ring of low side I/O HVPMOS to HVSHN of HVSHN pickup ring or (HVSHN INTERACT drain od) for high side I/O HVNMOS or HVESD >= ^HVLUP_C_6_HVDMY_5_GA
						 @ DRC only check Drain of NMOS not connected HVPMOS Drain
	EXT HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_5_GA HVNW_POST_DRIVER_ACT_HVN_HS < HVLUP_C_6_HVDMY_5_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_LS HVNW_POST_DRIVER_ACT_HVN_HS_HVDMY_5_GA < HVLUP_C_6_HVDMY_5_GA ABUT < 90 SINGULAR REGION
}

//HVLUP.C.7.1 is checked by HVLUP.C.7_HVDMY_45_GB
//HVLUP.C.7 is checked by HVLUP.C.7_HVDMY_45_GB
HVLUP.C.7_HVDMY_45_GB {@ Minimum clearance from SH_N of N+ pickup ring for Low-side I/O HVPMOS to SH_N of N+ HVLUP isolation ring. >= ^HVLUP_C_7_HVDMY_45_GB
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_45_GB HVNW_POST_DRIVER_ACT_HVP_HS < HVLUP_C_7_HVDMY_45_GB ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_LS HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_45_GB < HVLUP_C_7_HVDMY_45_GB ABUT < 90 SINGULAR REGION
}
//HVLUP.C.7.1 is checked by HVLUP.C.7_HVDMY_36_GB
//HVLUP.C.7 is checked by HVLUP.C.7_HVDMY_36_GB
HVLUP.C.7_HVDMY_36_GB {@ Minimum clearance from SH_N of N+ pickup ring for Low-side I/O HVPMOS to SH_N of N+ HVLUP isolation ring. >= ^HVLUP_C_7_HVDMY_36_GB
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_36_GB HVNW_POST_DRIVER_ACT_HVP_HS < HVLUP_C_7_HVDMY_36_GB ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_LS HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_36_GB < HVLUP_C_7_HVDMY_36_GB ABUT < 90 SINGULAR REGION
}
//HVLUP.C.7.1 is checked by HVLUP.C.7_HVDMY_29_GA
//HVLUP.C.7 is checked by HVLUP.C.7_HVDMY_29_GA
HVLUP.C.7_HVDMY_29_GA {@ Minimum clearance from SH_N of N+ pickup ring for Low-side I/O HVPMOS to SH_N of N+ HVLUP isolation ring. >= ^HVLUP_C_7_HVDMY_29_GA
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_29_GA HVNW_POST_DRIVER_ACT_HVP_HS < HVLUP_C_7_HVDMY_29_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_LS HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_29_GA < HVLUP_C_7_HVDMY_29_GA ABUT < 90 SINGULAR REGION
}
//HVLUP.C.7.1 is checked by HVLUP.C.7_HVDMY_24_20_16_12_9_6_GA
//HVLUP.C.7 is checked by HVLUP.C.7_HVDMY_24_20_16_12_9_6_GA
HVLUP.C.7_HVDMY_24_20_16_12_9_6_GA {@ Minimum clearance from SH_N of N+ pickup ring for Low-side I/O HVPMOS to SH_N of N+ HVLUP isolation ring. >= ^HVLUP_C_7_HVDMY_24_20_16_12_9_6_GA
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_24_20_16_12_9_6_GA HVNW_POST_DRIVER_ACT_HVP_HS < HVLUP_C_7_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_LS HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_24_20_16_12_9_6_GA < HVLUP_C_7_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
}
//HVLUP.C.7.1 is checked by HVLUP.C.7_HVDMY_5_GA
//HVLUP.C.7 is checked by HVLUP.C.7_HVDMY_5_GA
HVLUP.C.7_HVDMY_5_GA {@ Minimum clearance from SH_N of N+ pickup ring for Low-side I/O HVPMOS to SH_N of N+ HVLUP isolation ring. >= ^HVLUP_C_7_HVDMY_5_GA
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_5_GA HVNW_POST_DRIVER_ACT_HVP_HS < HVLUP_C_7_HVDMY_5_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVP_LS HVNW_POST_DRIVER_ACT_HVP_HS_HVDMY_5_GA < HVLUP_C_7_HVDMY_5_GA ABUT < 90 SINGULAR REGION
}

//HVLUP.C.8.1 is checked by HVLUP.C.8_HVDMY_45_GB
//HVLUP.C.8 is checked by HVLUP.C.8_HVDMY_45_GB
HVLUP.C.8_HVDMY_45_GB {@Minimum clearance from (SH_N of SH_N pickup ring OR ((NDD OR SH_N) INTERACT Drain OD)) for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT to 
    @SH_N of SH_N pickup ring for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT 
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_NONFULL HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_8_HVDMY_45_GB ABUT < 90 SINGULAR REGION 
}
//HVLUP.C.8.1 is checked by HVLUP.C.8_HVDMY_36_GB
//HVLUP.C.8 is checked by HVLUP.C.8_HVDMY_36_GB
HVLUP.C.8_HVDMY_36_GB {@Minimum clearance from (SH_N of SH_N pickup ring OR ((NDD OR SH_N) INTERACT Drain OD)) for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT to 
    @SH_N of SH_N pickup ring for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT 
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_NONFULL HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_8_HVDMY_36_GB ABUT < 90 SINGULAR REGION 
}
//HVLUP.C.8.1 is checked by HVLUP.C.8_HVDMY_29_GA
//HVLUP.C.8 is checked by HVLUP.C.8_HVDMY_29_GA
HVLUP.C.8_HVDMY_29_GA {@Minimum clearance from (SH_N of SH_N pickup ring OR ((NDD OR SH_N) INTERACT Drain OD)) for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT to 
    @SH_N of SH_N pickup ring for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT 
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_NONFULL HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_8_HVDMY_29_GA ABUT < 90 SINGULAR REGION 
}
//HVLUP.C.8.1 is checked by HVLUP.C.8_HVDMY_24_20_16_12_9_6_GA
//HVLUP.C.8 is checked by HVLUP.C.8_HVDMY_24_20_16_12_9_6_GA
HVLUP.C.8_HVDMY_24_20_16_12_9_6_GA {@Minimum clearance from (SH_N of SH_N pickup ring OR ((NDD OR SH_N) INTERACT Drain OD)) for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT to 
    @SH_N of SH_N pickup ring for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT 
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_NONFULL HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_8_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION 
}
//HVLUP.C.8.1 is checked by HVLUP.C.8_HVDMY_5_GA
//HVLUP.C.8 is checked by HVLUP.C.8_HVDMY_5_GA
HVLUP.C.8_HVDMY_5_GA {@Minimum clearance from (SH_N of SH_N pickup ring OR ((NDD OR SH_N) INTERACT Drain OD)) for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT to 
    @SH_N of SH_N pickup ring for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT 
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_NONFULL HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL < HVLUP_C_8_HVDMY_5_GA ABUT < 90 SINGULAR REGION 
}

//HVLUP.C.9.1 is checked by HVLUP.C.9_HVDMY_45_GB
//HVLUP.C.9 is checked by HVLUP.C.9_HVDMY_45_GB
HVLUP.C.9_HVDMY_45_GB {@Minimum clearance from (SH_N of SH_N pickup ring OR ((NDD OR SH_N) INTERACT Drain OD)) for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT to 
    @SH_N of N+ pickup ring for Low-side I/O HVPMOS
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_45_GB_NONFULL HVNW_POST_DRIVER_ACT_HVP_LS < HVLUP_C_9_HVDMY_45_GB ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_45_GB < HVLUP_C_9_HVDMY_45_GB ABUT < 90 SINGULAR REGION 
}
//HVLUP.C.9.1 is checked by HVLUP.C.9_HVDMY_36_GB
//HVLUP.C.9 is checked by HVLUP.C.9_HVDMY_36_GB
HVLUP.C.9_HVDMY_36_GB {@Minimum clearance from (SH_N of SH_N pickup ring OR ((NDD OR SH_N) INTERACT Drain OD)) for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT to 
    @SH_N of N+ pickup ring for Low-side I/O HVPMOS
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_36_GB_NONFULL HVNW_POST_DRIVER_ACT_HVP_LS < HVLUP_C_9_HVDMY_36_GB ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_36_GB < HVLUP_C_9_HVDMY_36_GB ABUT < 90 SINGULAR REGION 
}
//HVLUP.C.9.1 is checked by HVLUP.C.9_HVDMY_29_GA
//HVLUP.C.9 is checked by HVLUP.C.9_HVDMY_29_GA
HVLUP.C.9_HVDMY_29_GA {@Minimum clearance from (SH_N of SH_N pickup ring OR ((NDD OR SH_N) INTERACT Drain OD)) for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT to 
    @SH_N of N+ pickup ring for Low-side I/O HVPMOS
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_29_GA_NONFULL HVNW_POST_DRIVER_ACT_HVP_LS < HVLUP_C_9_HVDMY_29_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_29_GA < HVLUP_C_9_HVDMY_29_GA ABUT < 90 SINGULAR REGION 
}
//HVLUP.C.9.1 is checked by HVLUP.C.9_HVDMY_24_20_16_12_9_6_GA
//HVLUP.C.9 is checked by HVLUP.C.9_HVDMY_24_20_16_12_9_6_GA
HVLUP.C.9_HVDMY_24_20_16_12_9_6_GA {@Minimum clearance from (SH_N of SH_N pickup ring OR ((NDD OR SH_N) INTERACT Drain OD)) for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT to 
    @SH_N of N+ pickup ring for Low-side I/O HVPMOS
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_24_20_16_12_9_6_GA_NONFULL HVNW_POST_DRIVER_ACT_HVP_LS < HVLUP_C_9_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_24_20_16_12_9_6_GA < HVLUP_C_9_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION 
}
//HVLUP.C.9.1 is checked by HVLUP.C.9_HVDMY_5_GA
//HVLUP.C.9 is checked by HVLUP.C.9_HVDMY_5_GA
HVLUP.C.9_HVDMY_5_GA {@Minimum clearance from (SH_N of SH_N pickup ring OR ((NDD OR SH_N) INTERACT Drain OD)) for Non-fully-isolated Low-side I/O HVNMOS and Low-side I/O HVESD BJT to 
    @SH_N of N+ pickup ring for Low-side I/O HVPMOS
    @Please follow the conditional steps: When both GA HVMOS and GB HVMOS of HV I/O devices are applied adjacent to each other, please adopt the GB rule.
    @Adopt the rule of the highest applied voltage of HV I/O devices.
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_HVDMY_5_GA_NONFULL HVNW_POST_DRIVER_ACT_HVP_LS < HVLUP_C_9_HVDMY_5_GA ABUT < 90 SINGULAR REGION 
	EXT HVNW_POST_DRIVER_ACT_HVN_LS_NONFULL HVNW_POST_DRIVER_ACT_HVP_LS_HVDMY_5_GA < HVLUP_C_9_HVDMY_5_GA ABUT < 90 SINGULAR REGION 
}

HVLUP.E.1_HVDMY_45_GB { @ min and max extension of HVSHN beyond N+ HVLUP guard ring == ^HVLUP_E_1_HVDMY_45_GB
	N_GR_R = NPOD INTERACT NPOD_GR_R_HVDMY_45_GB
	A = SIZE N_GR_R BY HVLUP_E_1_HVDMY_45_GB
	B = HVSHN INTERACT N_GR_R
	A XOR B
}
HVLUP.E.1_HVDMY_36_GB { @ min and max extension of HVSHN beyond N+ HVLUP guard ring == ^HVLUP_E_1_HVDMY_36_GB
	N_GR_R = NPOD INTERACT NPOD_GR_R_HVDMY_36_GB
	A = SIZE N_GR_R BY HVLUP_E_1_HVDMY_36_GB
	B = HVSHN INTERACT N_GR_R
	A XOR B
}
HVLUP.E.1_HVDMY_29_GA { @ min and max extension of HVSHN beyond N+ HVLUP guard ring == ^HVLUP_E_1_HVDMY_29_GA
	N_GR_R = NPOD INTERACT NPOD_GR_R_HVDMY_29_GA
	A = SIZE N_GR_R BY HVLUP_E_1_HVDMY_29_GA
	B = HVSHN INTERACT N_GR_R
	A XOR B
}
HVLUP.E.1_HVDMY_24_20_16_12_9_6_GA { @ min and max extension of HVSHN beyond N+ HVLUP guard ring == ^HVLUP_E_1_HVDMY_24_20_16_12_9_6_GA
	N_GR_R = NPOD INTERACT NPOD_GR_R_HVDMY_24_20_16_12_9_6_GA
	A = SIZE N_GR_R BY HVLUP_E_1_HVDMY_24_20_16_12_9_6_GA
	B = HVSHN INTERACT N_GR_R
	A XOR B
}
HVLUP.E.1_HVDMY_5_GA { @ min and max extension of HVSHN beyond N+ HVLUP guard ring == ^HVLUP_E_1_HVDMY_5_GA
	N_GR_R = NPOD INTERACT NPOD_GR_R_HVDMY_5_GA
	A = SIZE N_GR_R BY HVLUP_E_1_HVDMY_5_GA
	B = HVSHN INTERACT N_GR_R
	A XOR B
}

CHIP_GB_LUP = CHIP INTERACT (HV_POST_DRIVER_ACT AND HVGB)
CHIP_GA_LUP = CHIP NOT INTERACT CHIP_GB_LUP
HVNP_STRAP_GA = HVNP_STRAP AND CHIP_GA_LUP
HVNP_STRAP_GB = HVNP_STRAP AND CHIP_GB_LUP
HVPP_STRAP_GA = HVPP_STRAP AND CHIP_GA_LUP
HVPP_STRAP_GB = HVPP_STRAP AND CHIP_GB_LUP

NPOD_HVNP_STRAP = NPOD INTERACT HVNP_STRAP
PPOD_HVPP_STRAP = PPOD INTERACT HVPP_STRAP
NPOD_HVNP_STRAP_GA = (NPOD INTERACT HVNP_STRAP) AND CHIP_GA_LUP
NPOD_HVNP_STRAP_GB = (NPOD INTERACT HVNP_STRAP) AND CHIP_GB_LUP
PPOD_HVPP_STRAP_GA = (PPOD INTERACT HVPP_STRAP) AND CHIP_GA_LUP
PPOD_HVPP_STRAP_GB = (PPOD INTERACT HVPP_STRAP) AND CHIP_GB_LUP

NPOD_STRAP_EDGE_IN = NPOD_HVNP_STRAP NOT OUTSIDE EDGE STRAPDMY
PPOD_STRAP_EDGE_IN = PPOD_HVPP_STRAP NOT OUTSIDE EDGE STRAPDMY
NPOD_STRAP_EDGE_IN_GA = NPOD_HVNP_STRAP_GA NOT OUTSIDE EDGE STRAPDMY
NPOD_STRAP_EDGE_IN_GB = NPOD_HVNP_STRAP_GB NOT OUTSIDE EDGE STRAPDMY
PPOD_STRAP_EDGE_IN_GA = PPOD_HVPP_STRAP_GA NOT OUTSIDE EDGE STRAPDMY
PPOD_STRAP_EDGE_IN_GB = PPOD_HVPP_STRAP_GB NOT OUTSIDE EDGE STRAPDMY

NPOD_HVNP_STRAP_HVDMY_45_GB = NPOD INTERACT HVNP_STRAP_HVDMY_45_GB
PPOD_HVPP_STRAP_HVDMY_45_GB = PPOD INTERACT HVPP_STRAP_HVDMY_45_GB
NPOD_STRAP_EDGE_IN_HVDMY_45_GB = NPOD_HVNP_STRAP_HVDMY_45_GB NOT OUTSIDE EDGE STRAPDMY
PPOD_STRAP_EDGE_IN_HVDMY_45_GB = PPOD_HVPP_STRAP_HVDMY_45_GB NOT OUTSIDE EDGE STRAPDMY
NPOD_HVNP_STRAP_HVDMY_36_GB = NPOD INTERACT HVNP_STRAP_HVDMY_36_GB
PPOD_HVPP_STRAP_HVDMY_36_GB = PPOD INTERACT HVPP_STRAP_HVDMY_36_GB
NPOD_STRAP_EDGE_IN_HVDMY_36_GB = NPOD_HVNP_STRAP_HVDMY_36_GB NOT OUTSIDE EDGE STRAPDMY
PPOD_STRAP_EDGE_IN_HVDMY_36_GB = PPOD_HVPP_STRAP_HVDMY_36_GB NOT OUTSIDE EDGE STRAPDMY
NPOD_HVNP_STRAP_HVDMY_29_GA = NPOD INTERACT HVNP_STRAP_HVDMY_29_GA
PPOD_HVPP_STRAP_HVDMY_29_GA = PPOD INTERACT HVPP_STRAP_HVDMY_29_GA
NPOD_STRAP_EDGE_IN_HVDMY_29_GA = NPOD_HVNP_STRAP_HVDMY_29_GA NOT OUTSIDE EDGE STRAPDMY
PPOD_STRAP_EDGE_IN_HVDMY_29_GA = PPOD_HVPP_STRAP_HVDMY_29_GA NOT OUTSIDE EDGE STRAPDMY
NPOD_HVNP_STRAP_HVDMY_24_20_16_12_9_6_GA = NPOD INTERACT HVNP_STRAP_HVDMY_24_20_16_12_9_6_GA
PPOD_HVPP_STRAP_HVDMY_24_20_16_12_9_6_GA = PPOD INTERACT HVPP_STRAP_HVDMY_24_20_16_12_9_6_GA
NPOD_STRAP_EDGE_IN_HVDMY_24_20_16_12_9_6_GA = NPOD_HVNP_STRAP_HVDMY_24_20_16_12_9_6_GA NOT OUTSIDE EDGE STRAPDMY
PPOD_STRAP_EDGE_IN_HVDMY_24_20_16_12_9_6_GA = PPOD_HVPP_STRAP_HVDMY_24_20_16_12_9_6_GA NOT OUTSIDE EDGE STRAPDMY
NPOD_HVNP_STRAP_HVDMY_5_GA = NPOD INTERACT HVNP_STRAP_HVDMY_5_GA
PPOD_HVPP_STRAP_HVDMY_5_GA = PPOD INTERACT HVPP_STRAP_HVDMY_5_GA
NPOD_STRAP_EDGE_IN_HVDMY_5_GA = NPOD_HVNP_STRAP_HVDMY_5_GA NOT OUTSIDE EDGE STRAPDMY
PPOD_STRAP_EDGE_IN_HVDMY_5_GA = PPOD_HVPP_STRAP_HVDMY_5_GA NOT OUTSIDE EDGE STRAPDMY

HVLUP.E.2_HVDMY_45_GB { @ min and max extension of HVSHN beyond N+ HV STRAP == ^HVLUP_E_2_HVDMY_45_GB
	A = EXPAND EDGE NPOD_STRAP_EDGE_IN_HVDMY_45_GB OUTSIDE BY HVLUP_E_2_HVDMY_45_GB EXTEND BY -0.001
	A NOT TOUCH HVPW
}
HVLUP.E.2_HVDMY_36_GB { @ min and max extension of HVSHN beyond N+ HV STRAP == ^HVLUP_E_2_HVDMY_36_GB
	A = EXPAND EDGE NPOD_STRAP_EDGE_IN_HVDMY_36_GB OUTSIDE BY HVLUP_E_2_HVDMY_36_GB EXTEND BY -0.001
	A NOT TOUCH HVPW
}
HVLUP.E.2_HVDMY_29_GA { @ min and max extension of HVSHN beyond N+ HV STRAP == ^HVLUP_E_2_HVDMY_29_GA
	A = EXPAND EDGE NPOD_STRAP_EDGE_IN_HVDMY_29_GA OUTSIDE BY HVLUP_E_2_HVDMY_29_GA EXTEND BY -0.001
	A NOT TOUCH HVPW
}
HVLUP.E.2_HVDMY_24_20_16_12_9_6_GA { @ min and max extension of HVSHN beyond N+ HV STRAP == ^HVLUP_E_2_HVDMY_24_20_16_12_9_6_GA
	A = EXPAND EDGE NPOD_STRAP_EDGE_IN_HVDMY_24_20_16_12_9_6_GA OUTSIDE BY HVLUP_E_2_HVDMY_24_20_16_12_9_6_GA EXTEND BY -0.001
	A NOT TOUCH HVPW
}
HVLUP.E.2_HVDMY_5_GA { @ min and max extension of HVSHN beyond N+ HV STRAP == ^HVLUP_E_2_HVDMY_5_GA
	A = EXPAND EDGE NPOD_STRAP_EDGE_IN_HVDMY_5_GA OUTSIDE BY HVLUP_E_2_HVDMY_5_GA EXTEND BY -0.001
	A NOT TOUCH HVPW
}
HVLUP.C.10_HVDMY_45_GB { @ min clearance from HVPSUB of N+ GUARD RING or N+ STRAP to P+ HVLUP ISO/GUARD/HVPW ring >= ^HVLUP_C_10_HVDMY_45_GB
	A = PSUB INTERACT (NPOD_GR_R OR HVNP_STRAP)
	EXT A PPOD_ISO_R_HVDMY_45_GB < HVLUP_C_10_HVDMY_45_GB ABUT < 90 SINGULAR REGION
	EXT A PPOD_GR_R_HVDMY_45_GB < HVLUP_C_10_HVDMY_45_GB ABUT < 90 SINGULAR REGION
	EXT A PPOD_ISO_OUT_R_HVDMY_45_GB < HVLUP_C_10_HVDMY_45_GB ABUT < 90 SINGULAR REGION
}
HVLUP.C.10_HVDMY_36_GB { @ min clearance from HVPSUB of N+ GUARD RING or N+ STRAP to P+ HVLUP ISO/GUARD/HVPW ring >= ^HVLUP_C_10_HVDMY_36_GB
	A = PSUB INTERACT (NPOD_GR_R OR HVNP_STRAP)
	EXT A PPOD_ISO_R_HVDMY_36_GB < HVLUP_C_10_HVDMY_36_GB ABUT < 90 SINGULAR REGION
	EXT A PPOD_GR_R_HVDMY_36_GB < HVLUP_C_10_HVDMY_36_GB ABUT < 90 SINGULAR REGION
	EXT A PPOD_ISO_OUT_R_HVDMY_36_GB < HVLUP_C_10_HVDMY_36_GB ABUT < 90 SINGULAR REGION
}
HVLUP.C.10_HVDMY_29_GA { @ min clearance from HVPSUB of N+ GUARD RING or N+ STRAP to P+ HVLUP ISO/GUARD/HVPW ring >= ^HVLUP_C_10_HVDMY_29_GA
	A = PSUB INTERACT (NPOD_GR_R OR HVNP_STRAP)
	EXT A PPOD_ISO_R_HVDMY_29_GA < HVLUP_C_10_HVDMY_29_GA ABUT < 90 SINGULAR REGION
	EXT A PPOD_GR_R_HVDMY_29_GA < HVLUP_C_10_HVDMY_29_GA ABUT < 90 SINGULAR REGION
	EXT A PPOD_ISO_OUT_R_HVDMY_29_GA < HVLUP_C_10_HVDMY_29_GA ABUT < 90 SINGULAR REGION
}
HVLUP.C.10_HVDMY_24_20_16_12_9_6_GA { @ min clearance from HVPSUB of N+ GUARD RING or N+ STRAP to P+ HVLUP ISO/GUARD/HVPW ring >= ^HVLUP_C_10_HVDMY_24_20_16_12_9_6_GA
	A = PSUB INTERACT (NPOD_GR_R OR HVNP_STRAP)
	EXT A PPOD_ISO_R_HVDMY_24_20_16_12_9_6_GA < HVLUP_C_10_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
	EXT A PPOD_GR_R_HVDMY_24_20_16_12_9_6_GA < HVLUP_C_10_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
	EXT A PPOD_ISO_OUT_R_HVDMY_24_20_16_12_9_6_GA < HVLUP_C_10_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
}
HVLUP.C.10_HVDMY_5_GA { @ min clearance from HVPSUB of N+ GUARD RING or N+ STRAP to P+ HVLUP ISO/GUARD/HVPW ring >= ^HVLUP_C_10_HVDMY_5_GA
	A = PSUB INTERACT (NPOD_GR_R OR HVNP_STRAP)
	EXT A PPOD_ISO_R_HVDMY_5_GA < HVLUP_C_10_HVDMY_5_GA ABUT < 90 SINGULAR REGION
	EXT A PPOD_GR_R_HVDMY_5_GA < HVLUP_C_10_HVDMY_5_GA ABUT < 90 SINGULAR REGION
	EXT A PPOD_ISO_OUT_R_HVDMY_5_GA < HVLUP_C_10_HVDMY_5_GA ABUT < 90 SINGULAR REGION
}
HVLUP.C.11_HVDMY_45_GB { @ min clearance from HVSHN of N+ GUARD RING or N+ STRAP to P+ HV STRAP >= ^HVLUP_C_11_HVDMY_45_GB
	A = PSUB INTERACT (NPOD_GR_R OR HVNP_STRAP)
	EXT A PPOD_STRAP_EDGE_IN_HVDMY_45_GB < HVLUP_C_11_HVDMY_45_GB ABUT < 90 REGION
}
HVLUP.C.11_HVDMY_36_GB { @ min clearance from HVSHN of N+ GUARD RING or N+ STRAP to P+ HV STRAP >= ^HVLUP_C_11_HVDMY_36_GB
	A = PSUB INTERACT (NPOD_GR_R OR HVNP_STRAP)
	EXT A PPOD_STRAP_EDGE_IN_HVDMY_36_GB < HVLUP_C_11_HVDMY_36_GB ABUT < 90 REGION
}
HVLUP.C.11_HVDMY_29_GA { @ min clearance from HVSHN of N+ GUARD RING or N+ STRAP to P+ HV STRAP >= ^HVLUP_C_11_HVDMY_29_GA
	A = PSUB INTERACT (NPOD_GR_R OR HVNP_STRAP)
	EXT A PPOD_STRAP_EDGE_IN_HVDMY_29_GA < HVLUP_C_11_HVDMY_29_GA ABUT < 90 REGION
}
HVLUP.C.11_HVDMY_24_20_16_12_9_6_GA { @ min clearance from HVSHN of N+ GUARD RING or N+ STRAP to P+ HV STRAP >= ^HVLUP_C_11_HVDMY_24_20_16_12_9_6_GA
	A = PSUB INTERACT (NPOD_GR_R OR HVNP_STRAP)
	EXT A PPOD_STRAP_EDGE_IN_HVDMY_24_20_16_12_9_6_GA < HVLUP_C_11_HVDMY_24_20_16_12_9_6_GA ABUT < 90 REGION
}
HVLUP.C.11_HVDMY_5_GA { @ min clearance from HVSHN of N+ GUARD RING or N+ STRAP to P+ HV STRAP >= ^HVLUP_C_11_HVDMY_5_GA
	A = PSUB INTERACT (NPOD_GR_R OR HVNP_STRAP)
	EXT A PPOD_STRAP_EDGE_IN_HVDMY_5_GA < HVLUP_C_11_HVDMY_5_GA ABUT < 90 REGION
}

HVLUP.E.3_HVDMY_45_GB { @ min extension of HVDMY beyond P+ HVWP iso ring and P+ HVLUP iso ring >= ^HVLUP_E_3_HVDMY_45_GB
	ENC PPOD_ISO_OUT_R_HVDMY_45_GB HVDMY < HVLUP_E_3_HVDMY_45_GB ABUT < 90 SINGULAR REGION
	ENC PPOD_ISO_R_LS_HVDMY_45_GB HVDMY < HVLUP_E_3_HVDMY_45_GB ABUT < 90 SINGULAR REGION
}
HVLUP.E.3_HVDMY_36_GB { @ min extension of HVDMY beyond P+ HVWP iso ring and P+ HVLUP iso ring >= ^HVLUP_E_3_HVDMY_36_GB
	ENC PPOD_ISO_OUT_R_HVDMY_36_GB HVDMY < HVLUP_E_3_HVDMY_36_GB ABUT < 90 SINGULAR REGION
	ENC PPOD_ISO_R_LS_HVDMY_36_GB HVDMY < HVLUP_E_3_HVDMY_36_GB ABUT < 90 SINGULAR REGION
}
HVLUP.E.3_HVDMY_29_GA { @ min extension of HVDMY beyond P+ HVWP iso ring and P+ HVLUP iso ring >= ^HVLUP_E_3_HVDMY_29_GA
	ENC PPOD_ISO_OUT_R_HVDMY_29_GA HVDMY < HVLUP_E_3_HVDMY_29_GA ABUT < 90 SINGULAR REGION
	ENC PPOD_ISO_R_LS_HVDMY_29_GA HVDMY < HVLUP_E_3_HVDMY_29_GA ABUT < 90 SINGULAR REGION
}
HVLUP.E.3_HVDMY_24_20_16_12_9_6_GA { @ min extension of HVDMY beyond P+ HVWP iso ring and P+ HVLUP iso ring >= ^HVLUP_E_3_HVDMY_24_20_16_12_9_6_GA
	ENC PPOD_ISO_OUT_R_HVDMY_24_20_16_12_9_6_GA HVDMY < HVLUP_E_3_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
	ENC PPOD_ISO_R_LS_HVDMY_24_20_16_12_9_6_GA HVDMY < HVLUP_E_3_HVDMY_24_20_16_12_9_6_GA ABUT < 90 SINGULAR REGION
}
HVLUP.E.3_HVDMY_5_GA { @ min extension of HVDMY beyond P+ HVWP iso ring and P+ HVLUP iso ring >= ^HVLUP_E_3_HVDMY_5_GA
	ENC PPOD_ISO_OUT_R_HVDMY_5_GA HVDMY < HVLUP_E_3_HVDMY_5_GA ABUT < 90 SINGULAR REGION
	ENC PPOD_ISO_R_LS_HVDMY_5_GA HVDMY < HVLUP_E_3_HVDMY_5_GA ABUT < 90 SINGULAR REGION
}

HVLUP.E.4_HVDMY_45_GB { @ min extension of HVDMY beyond P+ HVLUP STRAP >= ^HVLUP_E_4_HVDMY_45_GB
	ENC PPOD_STRAP_EDGE_IN_HVDMY_45_GB HVDMY < HVLUP_E_4_HVDMY_45_GB ABUT < 90 REGION
}
HVLUP.E.4_HVDMY_36_GB { @ min extension of HVDMY beyond P+ HVLUP STRAP >= ^HVLUP_E_4_HVDMY_36_GB
	ENC PPOD_STRAP_EDGE_IN_HVDMY_36_GB HVDMY < HVLUP_E_4_HVDMY_36_GB ABUT < 90 REGION
}
HVLUP.E.4_HVDMY_29_GA { @ min extension of HVDMY beyond P+ HVLUP STRAP >= ^HVLUP_E_4_HVDMY_29_GA
	ENC PPOD_STRAP_EDGE_IN_HVDMY_29_GA HVDMY < HVLUP_E_4_HVDMY_29_GA ABUT < 90 REGION
}
HVLUP.E.4_HVDMY_24_20_16_12_9_6_GA { @ min extension of HVDMY beyond P+ HVLUP STRAP >= ^HVLUP_E_4_HVDMY_24_20_16_12_9_6_GA
	ENC PPOD_STRAP_EDGE_IN_HVDMY_24_20_16_12_9_6_GA HVDMY < HVLUP_E_4_HVDMY_24_20_16_12_9_6_GA ABUT < 90 REGION
}
HVLUP.E.4_HVDMY_5_GA { @ min extension of HVDMY beyond P+ HVLUP STRAP >= ^HVLUP_E_4_HVDMY_5_GA
	ENC PPOD_STRAP_EDGE_IN_HVDMY_5_GA HVDMY < HVLUP_E_4_HVDMY_5_GA ABUT < 90 REGION
}
HVLUP.E.7_HVDMY_45_GB { @ min and max extension of PSUB beyond HVSHN of N+ HVLUP guard ring for GA/GB device == ^HVLUP_E_7_HVDMY_45_GB
	A = HVSHN INTERACT NPOD_GR_R_HVDMY_45_GB
	B = SIZE A BY HVLUP_E_7_HVDMY_45_GB
	C = PSUB INTERACT A
	B XOR C
}
HVLUP.E.7_HVDMY_36_GB { @ min and max extension of PSUB beyond HVSHN of N+ HVLUP guard ring for GA/GB device == ^HVLUP_E_7_HVDMY_36_GB
	A = HVSHN INTERACT NPOD_GR_R_HVDMY_36_GB
	B = SIZE A BY HVLUP_E_7_HVDMY_36_GB
	C = PSUB INTERACT A
	B XOR C
}
HVLUP.E.7_HVDMY_29_GA { @ min and max extension of PSUB beyond HVSHN of N+ HVLUP guard ring for GA/GB device == ^HVLUP_E_7_HVDMY_29_GA
	A = HVSHN INTERACT NPOD_GR_R_HVDMY_29_GA
	B = SIZE A BY HVLUP_E_7_HVDMY_29_GA
	C = PSUB INTERACT A
	B XOR C
}
HVLUP.E.7_HVDMY_24_20_16_12_9_6_GA { @ min and max extension of PSUB beyond HVSHN of N+ HVLUP guard ring for GA/GB device == ^HVLUP_E_7_HVDMY_24_20_16_12_9_6_GA
	A = HVSHN INTERACT NPOD_GR_R_HVDMY_24_20_16_12_9_6_GA
	B = SIZE A BY HVLUP_E_7_HVDMY_24_20_16_12_9_6_GA
	C = PSUB INTERACT A
	B XOR C
}
HVLUP.E.7_HVDMY_5_GA { @ min and max extension of PSUB beyond HVSHN of N+ HVLUP guard ring for GA/GB device == ^HVLUP_E_7_HVDMY_5_GA
	A = HVSHN INTERACT NPOD_GR_R_HVDMY_5_GA
	B = SIZE A BY HVLUP_E_7_HVDMY_5_GA
	C = PSUB INTERACT A
	B XOR C
}
HVLUP.E.8_HVDMY_45_GB { @ min and max extension of PSUB beyond HVSHN of HVDMY_45_GB N+ STRAP == ^HVLUP_E_8_HVDMY_45_GB
	A = EXPAND EDGE NPOD_STRAP_EDGE_IN_HVDMY_45_GB OUTSIDE BY HVLUP_E_2_HVDMY_45_GB + HVLUP_E_8_HVDMY_45_GB
	B = CHIP NOT PSUB
	A NOT TOUCH B
}
HVLUP.E.8_HVDMY_36_GB { @ min and max extension of PSUB beyond HVSHN of HVDMY_36_GB N+ STRAP == ^HVLUP_E_8_HVDMY_36_GB
	A = EXPAND EDGE NPOD_STRAP_EDGE_IN_HVDMY_36_GB OUTSIDE BY HVLUP_E_2_HVDMY_36_GB + HVLUP_E_8_HVDMY_36_GB
	B = CHIP NOT PSUB
	A NOT TOUCH B
}
HVLUP.E.8_HVDMY_29_GA { @ min and max extension of PSUB beyond HVSHN of HVDMY_29_GA N+ STRAP == ^HVLUP_E_8_HVDMY_29_GA
	A = EXPAND EDGE NPOD_STRAP_EDGE_IN_HVDMY_29_GA OUTSIDE BY HVLUP_E_2_HVDMY_29_GA + HVLUP_E_8_HVDMY_29_GA
	B = CHIP NOT PSUB
	A NOT TOUCH B
}
HVLUP.E.8_HVDMY_24_20_16_12_9_6_GA { @ min and max extension of PSUB beyond HVSHN of HVDMY_24_20_16_12_9_6_GA N+ STRAP == ^HVLUP_E_8_HVDMY_24_20_16_12_9_6_GA
	A = EXPAND EDGE NPOD_STRAP_EDGE_IN_HVDMY_24_20_16_12_9_6_GA OUTSIDE BY HVLUP_E_2_HVDMY_24_20_16_12_9_6_GA + HVLUP_E_8_HVDMY_24_20_16_12_9_6_GA
	B = CHIP NOT PSUB
	A NOT TOUCH B
}
HVLUP.E.8_HVDMY_5_GA { @ min and max extension of PSUB beyond HVSHN of HVDMY_5_GA N+ STRAP == ^HVLUP_E_8_HVDMY_5_GA
	A = EXPAND EDGE NPOD_STRAP_EDGE_IN_HVDMY_5_GA OUTSIDE BY HVLUP_E_2_HVDMY_5_GA + HVLUP_E_8_HVDMY_5_GA
	B = CHIP NOT PSUB
	A NOT TOUCH B
}

// HVLUP.E.11 is checked by SH_N.E.1
HV_B_N_LUP_c = PTAP INSIDE (PPOD_ISO_H_LU INTERACT HVGATE) 
HV_S_N_LUP = STAMP  HV_S_N BY NSDiu
HV_D_N_LUP = STAMP HV_D_N BY NTAPiu
HV_B_N_LUP = STAMP HV_B_N BY PTAPiu
HV_G_N_LUP = STAMP HV_GATE_N BY ILP1iu


HV_B_P_LUP_c = NTAP INSIDE (NPOD_ISO_LUP_H INTERACT HVGATE)
HV_S_P_LUP = STAMP HV_S_P BY PSDiu
HV_D_P_LUP = STAMP HV_D_P BY PTAPiu
HV_D_P_5V = COPY PCH5_AS_SWITCH_MAC_D
HV_D_P_5V_LUP = STAMP HV_D_P_5V BY PSDiu
HV_B_P_LUP = STAMP HV_B_P_LUP_c BY NTAPiu
HV_G_P_LUP = STAMP HV_GATE_P BY ILP1iu


HVESD_C_LUP = HVESD_COD NOT EMPTYi
HVESD_E_LUP = HVESD_EOD NOT EMPTYi
HVESD_B_LUP = HVESD_BOD NOT EMPTYi
CONNECT HVESD_C_LUP M1iu BY COiu
CONNECT HVESD_E_LUP M1iu BY COiu
CONNECT HVESD_B_LUP M1iu BY COiu
HVLUP.R.1_2 {   @ Each non fully iso low side I/O HV NACT must be surrounded by its own N+ HVLUP guard ring and P+ HVPW iso ring
				@ GATE connect to GATE, Source connect Source, Drain connect to Drain, bulk connect to bulk can share the ring
	POST_DRIVER_ACT_HVN_LS_NONFULL NOT INSIDE NPOD_GR_H		
	POST_DRIVER_ACT_HVN_LS_NONFULL NOT INSIDE PPOD_ISO_OUT_H		
	(PPOD_ISO_OUT_H ENCLOSE POST_DRIVER_ACT_HVN_LS_NONFULL) INTERACT HV_S_N_LUP BY NET > 1
	(PPOD_ISO_OUT_H ENCLOSE POST_DRIVER_ACT_HVN_LS_NONFULL) INTERACT HV_D_N_LUP BY NET > 1
	(PPOD_ISO_OUT_H ENCLOSE POST_DRIVER_ACT_HVN_LS_NONFULL) INTERACT HV_B_N_LUP BY NET > 1
    (PPOD_ISO_OUT_H ENCLOSE POST_DRIVER_ACT_HVN_LS_NONFULL) INTERACT HVESD_C_LUP BY NET > 1
    (PPOD_ISO_OUT_H ENCLOSE POST_DRIVER_ACT_HVN_LS_NONFULL) INTERACT HVESD_E_LUP BY NET > 1
    (PPOD_ISO_OUT_H ENCLOSE POST_DRIVER_ACT_HVN_LS_NONFULL) INTERACT HVESD_B_LUP BY NET > 1
}

//HVLUP.R.1 is checked by HVLUP.R.1_2
//HVLUP.R.2 is checked by HVLUP.R.1_2
HVLUP.R.14 { @ Each low-side I/O HVPMOS should be surrounded by its own unique N+ HVLUP guard ring and P+ HVPW isolation
			  @ Source connect Source, Drain connect to Drain, can share the ring
              @ It may be highlighted by the ring witt violation in HVLUP.W.4  
	POST_DRIVER_ACT_HVP_LS NOT INSIDE NPOD_GR_H		
	POST_DRIVER_ACT_HVP_LS NOT INSIDE PPOD_ISO_OUT_H		
	(PPOD_ISO_OUT_H ENCLOSE POST_DRIVER_ACT_HVP_LS) INTERACT HV_S_P_LUP BY NET > 1
	(PPOD_ISO_OUT_H ENCLOSE POST_DRIVER_ACT_HVP_LS) INTERACT HV_D_P_LUP BY NET > 1
}



HVLUP.R.3 { @ Each high-side I/O HVPMOS should be surrounded by its own unique P+ HVLUP guard ring and N+ HVLUP isolation
			  @ Source connect Source, Drain connect to Drain can share the ring
              @ It may be highlighted by the ring witt violation in HVLUP.W.1, HVLUP.W.2
	POST_DRIVER_ACT_HVP_HS NOT INSIDE PPOD_GR_H		
	POST_DRIVER_ACT_HVP_HS NOT INSIDE NPOD_ISO_LUP_H		
	(NPOD_ISO_LUP_H ENCLOSE POST_DRIVER_ACT_HVP_HS) INTERACT HV_S_P_LUP BY NET > 1
	(NPOD_ISO_LUP_H ENCLOSE POST_DRIVER_ACT_HVP_HS) INTERACT HV_D_P_LUP BY NET > 1
	(PPOD_GR_H ENCLOSE POST_DRIVER_ACT_HVP_HS) INTERACT HV_S_P_LUP BY NET > 1
	(PPOD_GR_H ENCLOSE POST_DRIVER_ACT_HVP_HS) INTERACT HV_D_P_LUP BY NET > 1
	(PPOD_GR_H ENCLOSE POST_DRIVER_ACT_HVP_HS) INTERACT HV_D_P_5V_LUP BY NET > 1
}


//HVLUP.R.4 is uncheckable 
//HVLUP.R.5 is uncheckable

HVLUP.R.6 { @ NBL INTERACT {HVSHN of N+ HVLUP guard ring and HVSHN of N+HV STRAP} is not allowed
	A = HVSHN INTERACT ((HVNP_STRAP OR NPOD_GR_R) NOT (NPOD_GR_R_L_HVDMY_45_GB OR NPOD_GR_R_L_HVDMY_36_GB))
	A INTERACT NBL
}
//HVLUP.R.6 is checked by HVLUP.R.6, HVLUP.R.1_2, HVLUP.R.3 and HVLUP.R.14

HVLUP.R.7 { @ all of bond pads, pin name must be assigned OR VDDDMY(255;4),VSSDMY(255;5) must be covered.
	(ALL_BOND_PAD_WO_TEXT NOT INTERACT VDDDMY) NOT INTERACT VSSDMY
}

//HVLUP.R.8 is uncheckable
HVLUP.R.9 { @ N+ HV STRAP is not allowed to overlap P+ HV STRAP
			@ DRC check : {STRAPDMY AND (NP AND OD)} is not allowed to overlap with {STRAPDMY AND (PP AND OD)} 
    A = NPOD AND STRAPDMY
	B = PPOD AND STRAPDMY
	A AND B
}

HVLUP.R.10 { @ HVPMOS connected to I/O pads except high/low side I/O HVPMOS is not defined in DRM
			@ please consult TSMC for usage
	HV_POST_DRIVER_PACT NOT (POST_DRIVER_ACT_HVP_HS	OR POST_DRIVER_ACT_HVP_LS)		
}

HVLUP.R.11_12 { @ HVNMOS/HVESD BJT connected to I/O pads except high/low side I/O HVNMOS/HVESD BJT is not defined in DRM
			 @ please consult TSMC for usage
	HV_POST_DRIVER_NACT NOT POST_DRIVER_ACT_HVN_LS_HS
}

HVLUP.R.13 { @ DIODMY (dummy1)(56:1) overlap SH_N of N+HVLUP guard ring is not allowed
    DIO3TDMY AND (HVSHN INTERACT NPOD_GR_R )    
}
HVLUP.R.15 { @ For 45V GB & 36V GB device,N+ HVLUP guard ring and N+ HV STRAP must be inside NBL
    NPOD_GR_R_L_HVDMY_45_GB NOT NBL
	HVNP_STRAP_HVDMY_45_GB NOT NBL
    NPOD_GR_R_L_HVDMY_36_GB NOT NBL
	HVNP_STRAP_HVDMY_36_GB NOT NBL
}













// HV ESD design guide line
//==========================
// For HVESD BJT





HV_ESD    = HVDMY AND SDI
PP_N_EMR = PP NOT EMRDMY
HV_ESD_GA = HV_ESD AND HVGA
HV_ESD_GB = HV_ESD AND HVGB
HV_ESD_GA_PDD = HV_ESD_GA INTERACT PDD
HV_ESD_GA_HVESD1DMY = HV_ESD_GA AND HVESD1DMY
HV_ESD_GA_PDD_N_HVESD1DMY = HV_ESD_GA_PDD NOT HVESD1DMY
PP_A_HVPB = PP AND HVPB
PP_N_HVPB = PP NOT HVPB
PP_A_HVSHN = PP AND HVSHN
PP_N_HVSHN = PP NOT HVSHN
HVNW_OR_HVSHN = HVNW OR HVSHN
CLM_DMY_PNP_6 = HV_ESD_GA AND HV6DMY
EMIOD_ESD_PNP_6 = ((EMRDMY AND OD) AND CLM_DMY_PNP_6 ) AND HVSHN
COLOD_ESD_PNP_6 = ((PP_N_EMR AND OD) AND CLM_DMY_PNP_6 ) AND HVSHN
BASOD_ESD_PNP_6_pre = ((NP AND OD) AND CLM_DMY_PNP_6 ) AND HVSHN
BASOD_ESD_PNP_6_H = (HOLES BASOD_ESD_PNP_6_pre INNER) ENCLOSE EMIOD_ESD_PNP_6
BASOD_ESD_PNP_6 = BASOD_ESD_PNP_6_pre TOUCH BASOD_ESD_PNP_6_H
COL_EMI_ESD_PNP_6 = EMIOD_ESD_PNP_6 OR COLOD_ESD_PNP_6
COL_EMI_ESD_merge_PNP_6 = SIZE COL_EMI_ESD_PNP_6 BY HVESD_S_1_PNP_6/2 OVERUNDER

PPOD_H_BJT_PNP_6 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_6
PPOD_R_BJT_PNP_6 = PPOD TOUCH PPOD_H_BJT_PNP_6
COL_BAS_EMI_OD_PNP_6 = COL_EMI_ESD_PNP_6 OR BASOD_ESD_PNP_6
HVESD_merge_PNP_6 = BASOD_ESD_PNP_6 OR BASOD_ESD_PNP_6_H
CLM_DMY_PNP_9 = HV_ESD_GA AND HV9DMY
EMIOD_ESD_PNP_9 = ((PP_N_HVPB AND OD) AND CLM_DMY_PNP_9 ) AND HVSHN
COLOD_ESD_PNP_9 = ((PP_A_HVPB AND OD) AND CLM_DMY_PNP_9 ) AND HVSHN
BASOD_ESD_PNP_9_pre = ((NP AND OD) AND CLM_DMY_PNP_9 ) AND HVSHN
BASOD_ESD_PNP_9_H = (HOLES BASOD_ESD_PNP_9_pre INNER) ENCLOSE EMIOD_ESD_PNP_9
BASOD_ESD_PNP_9 = BASOD_ESD_PNP_9_pre TOUCH BASOD_ESD_PNP_9_H
COL_EMI_ESD_PNP_9 = EMIOD_ESD_PNP_9 OR COLOD_ESD_PNP_9
COL_EMI_ESD_merge_PNP_9 = SIZE COL_EMI_ESD_PNP_9 BY HVESD_S_1_PNP_9/2 OVERUNDER

PPOD_H_BJT_PNP_9 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_9
PPOD_R_BJT_PNP_9 = PPOD TOUCH PPOD_H_BJT_PNP_9
COL_BAS_EMI_OD_PNP_9 = COL_EMI_ESD_PNP_9 OR BASOD_ESD_PNP_9
HVESD_merge_PNP_9 = BASOD_ESD_PNP_9 OR BASOD_ESD_PNP_9_H
CLM_DMY_PNP_12 = HV_ESD_GA_HVESD1DMY AND HV12DMY
EMIOD_ESD_PNP_12 = ((EMRDMY AND OD) AND CLM_DMY_PNP_12 ) AND HVSHN
COLOD_ESD_PNP_12 = ((PP_N_EMR AND OD) AND CLM_DMY_PNP_12 ) AND HVSHN
BASOD_ESD_PNP_12_pre = ((NP AND OD) AND CLM_DMY_PNP_12 ) AND HVSHN
BASOD_ESD_PNP_12_H = (HOLES BASOD_ESD_PNP_12_pre INNER) ENCLOSE EMIOD_ESD_PNP_12
BASOD_ESD_PNP_12 = BASOD_ESD_PNP_12_pre TOUCH BASOD_ESD_PNP_12_H
COL_EMI_ESD_PNP_12 = EMIOD_ESD_PNP_12 OR COLOD_ESD_PNP_12
COL_EMI_ESD_merge_PNP_12 = SIZE COL_EMI_ESD_PNP_12 BY HVESD_S_1_PNP_12/2 OVERUNDER

PPOD_H_BJT_PNP_12 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_12
PPOD_R_BJT_PNP_12 = PPOD TOUCH PPOD_H_BJT_PNP_12
COL_BAS_EMI_OD_PNP_12 = COL_EMI_ESD_PNP_12 OR BASOD_ESD_PNP_12
HVESD_merge_PNP_12 = BASOD_ESD_PNP_12 OR BASOD_ESD_PNP_12_H
CLM_DMY_PNP_20 = HV_ESD_GA_HVESD1DMY AND HV20DMY
EMIOD_ESD_PNP_20 = ((PP_A_HVSHN AND OD) AND CLM_DMY_PNP_20 ) AND NBL
COLOD_ESD_PNP_20 = ((PP_N_HVSHN AND OD) AND CLM_DMY_PNP_20 ) AND NBL
BASOD_ESD_PNP_20_pre = ((NP AND OD) AND CLM_DMY_PNP_20 ) AND NBL
BASOD_ESD_PNP_20_H = (HOLES BASOD_ESD_PNP_20_pre INNER) ENCLOSE EMIOD_ESD_PNP_20
BASOD_ESD_PNP_20 = BASOD_ESD_PNP_20_pre TOUCH BASOD_ESD_PNP_20_H
COL_EMI_ESD_PNP_20 = EMIOD_ESD_PNP_20 OR COLOD_ESD_PNP_20
COL_EMI_ESD_merge_PNP_20 = OD INTERACT COL_EMI_ESD_PNP_20

PPOD_H_BJT_PNP_20 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_20
PPOD_R_BJT_PNP_20 = PPOD TOUCH PPOD_H_BJT_PNP_20
COL_BAS_EMI_OD_PNP_20 = COL_EMI_ESD_PNP_20 OR BASOD_ESD_PNP_20
HVESD_merge_PNP_20 = BASOD_ESD_PNP_20 OR BASOD_ESD_PNP_20_H

CLM_DMY_PNP_12_PDD = HV_ESD_GA_PDD AND HV12DMY
EMIOD_ESD_PNP_12_PDD = ((PP_A_HVSHN AND OD) AND CLM_DMY_PNP_12_PDD ) AND NBL
COLOD_ESD_PNP_12_PDD = ((PP_N_HVSHN AND OD) AND CLM_DMY_PNP_12_PDD ) AND NBL
BASOD_ESD_PNP_12_PDD_pre = ((NP AND OD) AND CLM_DMY_PNP_12_PDD ) AND NBL
BASOD_ESD_PNP_12_PDD_H = (HOLES BASOD_ESD_PNP_12_PDD_pre INNER) ENCLOSE EMIOD_ESD_PNP_12_PDD
BASOD_ESD_PNP_12_PDD = BASOD_ESD_PNP_12_PDD_pre TOUCH BASOD_ESD_PNP_12_PDD_H
COL_EMI_ESD_PNP_12_PDD = EMIOD_ESD_PNP_12_PDD OR COLOD_ESD_PNP_12_PDD
COL_EMI_ESD_merge_PNP_12_PDD = OD INTERACT COL_EMI_ESD_PNP_12_PDD

PPOD_H_BJT_PNP_12_PDD = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_12_PDD
PPOD_R_BJT_PNP_12_PDD = PPOD TOUCH PPOD_H_BJT_PNP_12_PDD
COL_BAS_EMI_OD_PNP_12_PDD = COL_EMI_ESD_PNP_12_PDD OR BASOD_ESD_PNP_12_PDD
HVESD_merge_PNP_12_PDD = BASOD_ESD_PNP_12_PDD OR BASOD_ESD_PNP_12_PDD_H

CLM_DMY_PNP_16 = HV_ESD_GA_PDD AND HV16DMY
EMIOD_ESD_PNP_16 = ((PP_A_HVSHN AND OD) AND CLM_DMY_PNP_16 ) AND NBL
COLOD_ESD_PNP_16 = ((PP_N_HVSHN AND OD) AND CLM_DMY_PNP_16 ) AND NBL
BASOD_ESD_PNP_16_pre = ((NP AND OD) AND CLM_DMY_PNP_16 ) AND NBL
BASOD_ESD_PNP_16_H = (HOLES BASOD_ESD_PNP_16_pre INNER) ENCLOSE EMIOD_ESD_PNP_16
BASOD_ESD_PNP_16 = BASOD_ESD_PNP_16_pre TOUCH BASOD_ESD_PNP_16_H
COL_EMI_ESD_PNP_16 = EMIOD_ESD_PNP_16 OR COLOD_ESD_PNP_16
COL_EMI_ESD_merge_PNP_16 = OD INTERACT COL_EMI_ESD_PNP_16

PPOD_H_BJT_PNP_16 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_16
PPOD_R_BJT_PNP_16 = PPOD TOUCH PPOD_H_BJT_PNP_16
COL_BAS_EMI_OD_PNP_16 = COL_EMI_ESD_PNP_16 OR BASOD_ESD_PNP_16
HVESD_merge_PNP_16 = BASOD_ESD_PNP_16 OR BASOD_ESD_PNP_16_H

CLM_DMY_PNP_20_PDD = HV_ESD_GA_PDD_N_HVESD1DMY AND HV20DMY
EMIOD_ESD_PNP_20_PDD = ((PP_A_HVSHN AND OD) AND CLM_DMY_PNP_20_PDD ) AND NBL
COLOD_ESD_PNP_20_PDD = ((PP_N_HVSHN AND OD) AND CLM_DMY_PNP_20_PDD ) AND NBL
BASOD_ESD_PNP_20_PDD_pre = ((NP AND OD) AND CLM_DMY_PNP_20_PDD ) AND NBL
BASOD_ESD_PNP_20_PDD_H = (HOLES BASOD_ESD_PNP_20_PDD_pre INNER) ENCLOSE EMIOD_ESD_PNP_20_PDD
BASOD_ESD_PNP_20_PDD = BASOD_ESD_PNP_20_PDD_pre TOUCH BASOD_ESD_PNP_20_PDD_H
COL_EMI_ESD_PNP_20_PDD = EMIOD_ESD_PNP_20_PDD OR COLOD_ESD_PNP_20_PDD
COL_EMI_ESD_merge_PNP_20_PDD = OD INTERACT COL_EMI_ESD_PNP_20_PDD

PPOD_H_BJT_PNP_20_PDD = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_20_PDD
PPOD_R_BJT_PNP_20_PDD = PPOD TOUCH PPOD_H_BJT_PNP_20_PDD
COL_BAS_EMI_OD_PNP_20_PDD = COL_EMI_ESD_PNP_20_PDD OR BASOD_ESD_PNP_20_PDD
HVESD_merge_PNP_20_PDD = BASOD_ESD_PNP_20_PDD OR BASOD_ESD_PNP_20_PDD_H

CLM_DMY_PNP_24 = HV_ESD_GA AND HV24DMY
EMIOD_ESD_PNP_24 = ((PP_A_HVSHN AND OD) AND CLM_DMY_PNP_24 ) AND NBL
COLOD_ESD_PNP_24 = ((PP_N_HVSHN AND OD) AND CLM_DMY_PNP_24 ) AND NBL
BASOD_ESD_PNP_24_pre = ((NP AND OD) AND CLM_DMY_PNP_24 ) AND NBL
BASOD_ESD_PNP_24_H = (HOLES BASOD_ESD_PNP_24_pre INNER) ENCLOSE EMIOD_ESD_PNP_24
BASOD_ESD_PNP_24 = BASOD_ESD_PNP_24_pre TOUCH BASOD_ESD_PNP_24_H
COL_EMI_ESD_PNP_24 = EMIOD_ESD_PNP_24 OR COLOD_ESD_PNP_24
COL_EMI_ESD_merge_PNP_24 = OD INTERACT COL_EMI_ESD_PNP_24

PPOD_H_BJT_PNP_24 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_24
PPOD_R_BJT_PNP_24 = PPOD TOUCH PPOD_H_BJT_PNP_24
COL_BAS_EMI_OD_PNP_24 = COL_EMI_ESD_PNP_24 OR BASOD_ESD_PNP_24
HVESD_merge_PNP_24 = BASOD_ESD_PNP_24 OR BASOD_ESD_PNP_24_H

CLM_DMY_PNP_29 = HV_ESD_GA AND HV29DMY
EMIOD_ESD_PNP_29 = ((PP_A_HVSHN AND OD) AND CLM_DMY_PNP_29 ) AND NBL
COLOD_ESD_PNP_29 = ((PP_N_HVSHN AND OD) AND CLM_DMY_PNP_29 ) AND NBL
BASOD_ESD_PNP_29_pre = ((NP AND OD) AND CLM_DMY_PNP_29 ) AND NBL
BASOD_ESD_PNP_29_H = (HOLES BASOD_ESD_PNP_29_pre INNER) ENCLOSE EMIOD_ESD_PNP_29
BASOD_ESD_PNP_29 = BASOD_ESD_PNP_29_pre TOUCH BASOD_ESD_PNP_29_H
COL_EMI_ESD_PNP_29 = EMIOD_ESD_PNP_29 OR COLOD_ESD_PNP_29
COL_EMI_ESD_merge_PNP_29 = SIZE COL_EMI_ESD_PNP_29 BY HVESD_S_1_PNP_29/2 OVERUNDER

PPOD_H_BJT_PNP_29 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_29
PPOD_R_BJT_PNP_29 = PPOD TOUCH PPOD_H_BJT_PNP_29
COL_BAS_EMI_OD_PNP_29 = COL_EMI_ESD_PNP_29 OR BASOD_ESD_PNP_29
HVESD_merge_PNP_29 = BASOD_ESD_PNP_29 OR BASOD_ESD_PNP_29_H

CLM_DMY_PNP_36 = HV_ESD_GB AND HV36DMY
EMIOD_ESD_PNP_36 = ((PP_A_HVSHN AND OD) AND CLM_DMY_PNP_36 ) AND NBL
COLOD_ESD_PNP_36 = ((PP_N_HVSHN AND OD) AND CLM_DMY_PNP_36 ) AND NBL
BASOD_ESD_PNP_36_pre = ((NP AND OD) AND CLM_DMY_PNP_36 ) AND NBL
BASOD_ESD_PNP_36_H = (HOLES BASOD_ESD_PNP_36_pre INNER) ENCLOSE EMIOD_ESD_PNP_36
BASOD_ESD_PNP_36 = BASOD_ESD_PNP_36_pre TOUCH BASOD_ESD_PNP_36_H
COL_EMI_ESD_PNP_36 = EMIOD_ESD_PNP_36 OR COLOD_ESD_PNP_36
COL_EMI_ESD_merge_PNP_36 = SIZE COL_EMI_ESD_PNP_36 BY HVESD_S_1_PNP_36/2 OVERUNDER

PPOD_H_BJT_PNP_36 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_36
PPOD_R_BJT_PNP_36 = PPOD TOUCH PPOD_H_BJT_PNP_36
COL_BAS_EMI_OD_PNP_36 = COL_EMI_ESD_PNP_36 OR BASOD_ESD_PNP_36
HVESD_merge_PNP_36 = BASOD_ESD_PNP_36 OR BASOD_ESD_PNP_36_H

CLM_DMY_PNP_45 = HV_ESD_GB AND HV45DMY
EMIOD_ESD_PNP_45 = ((PP_A_HVSHN AND OD) AND CLM_DMY_PNP_45 ) AND NBL
COLOD_ESD_PNP_45 = ((PP_N_HVSHN AND OD) AND CLM_DMY_PNP_45 ) AND NBL
BASOD_ESD_PNP_45_pre = ((NP AND OD) AND CLM_DMY_PNP_45 ) AND NBL
BASOD_ESD_PNP_45_H = (HOLES BASOD_ESD_PNP_45_pre INNER) ENCLOSE EMIOD_ESD_PNP_45
BASOD_ESD_PNP_45 = BASOD_ESD_PNP_45_pre TOUCH BASOD_ESD_PNP_45_H
COL_EMI_ESD_PNP_45 = EMIOD_ESD_PNP_45 OR COLOD_ESD_PNP_45
COL_EMI_ESD_merge_PNP_45 = SIZE COL_EMI_ESD_PNP_45 BY HVESD_S_1_PNP_45/2 OVERUNDER

PPOD_H_BJT_PNP_45 = (HOLES PPOD INNER) ENCLOSE BASOD_ESD_PNP_45
PPOD_R_BJT_PNP_45 = PPOD TOUCH PPOD_H_BJT_PNP_45
COL_BAS_EMI_OD_PNP_45 = COL_EMI_ESD_PNP_45 OR BASOD_ESD_PNP_45
HVESD_merge_PNP_45 = BASOD_ESD_PNP_45 OR BASOD_ESD_PNP_45_H


 HVESD_EOD_pre =  (((((((((EMIOD_ESD_PNP_6 OR EMIOD_ESD_PNP_9) OR EMIOD_ESD_PNP_12) OR EMIOD_ESD_PNP_20) OR EMIOD_ESD_PNP_12_PDD) OR EMIOD_ESD_PNP_16) OR EMIOD_ESD_PNP_20_PDD) OR EMIOD_ESD_PNP_24) OR EMIOD_ESD_PNP_29) OR EMIOD_ESD_PNP_36) OR EMIOD_ESD_PNP_45
HVESD_EOD =  (((((((((EMIOD_ESD_PNP_6 OR EMIOD_ESD_PNP_9) OR (EMIOD_ESD_PNP_12 AND HVESD2DMY)) OR EMIOD_ESD_PNP_12_PDD) OR EMIOD_ESD_PNP_16) OR (EMIOD_ESD_PNP_20 AND HVESD2DMY)) OR EMIOD_ESD_PNP_20_PDD) OR EMIOD_ESD_PNP_24) OR EMIOD_ESD_PNP_29) OR EMIOD_ESD_PNP_36) OR EMIOD_ESD_PNP_45

 //HVESD_EOD_L =  (((((((((EMIOD_ESD_PNP_6 OR EMIOD_ESD_PNP_9) OR EMIOD_ESD_PNP_12) OR EMIOD_ESD_PNP_20) OR EMIOD_ESD_PNP_12_PDD) OR EMIOD_ESD_PNP_16) OR EMIOD_ESD_PNP_20_PDD) OR EMIOD_ESD_PNP_24) OR EMIOD_ESD_PNP_29) OR EMIOD_ESD_PNP_36) OR EMIOD_ESD_PNP_45

 HVESD_BOD =  (((((((((BASOD_ESD_PNP_6 OR BASOD_ESD_PNP_9) OR BASOD_ESD_PNP_12) OR BASOD_ESD_PNP_20) OR BASOD_ESD_PNP_12_PDD) OR BASOD_ESD_PNP_16) OR BASOD_ESD_PNP_20_PDD) OR BASOD_ESD_PNP_24) OR BASOD_ESD_PNP_29) OR BASOD_ESD_PNP_36) OR BASOD_ESD_PNP_45

 //HVESD_BOD_L =  (((((((((BASOD_ESD_PNP_6 OR BASOD_ESD_PNP_9) OR BASOD_ESD_PNP_12) OR BASOD_ESD_PNP_20) OR BASOD_ESD_PNP_12_PDD) OR BASOD_ESD_PNP_16) OR BASOD_ESD_PNP_20_PDD) OR BASOD_ESD_PNP_24) OR BASOD_ESD_PNP_29) OR BASOD_ESD_PNP_36) OR BASOD_ESD_PNP_45

//HVESD_BOD_H = HVESD_BOD NOT HVESD_BOD_L

 HVESD_COD_pre =  (((((((((COLOD_ESD_PNP_6 OR COLOD_ESD_PNP_9) OR COLOD_ESD_PNP_12) OR COLOD_ESD_PNP_20) OR COLOD_ESD_PNP_12_PDD) OR COLOD_ESD_PNP_16) OR COLOD_ESD_PNP_20_PDD) OR COLOD_ESD_PNP_24) OR COLOD_ESD_PNP_29) OR COLOD_ESD_PNP_36) OR COLOD_ESD_PNP_45

HVESD_COD =  (((((((((COLOD_ESD_PNP_6 OR COLOD_ESD_PNP_9) OR (COLOD_ESD_PNP_12 NOT HVESD2DMY)) OR COLOD_ESD_PNP_12_PDD) OR COLOD_ESD_PNP_16)  OR (COLOD_ESD_PNP_20 NOT HVESD2DMY)) OR COLOD_ESD_PNP_20_PDD) OR COLOD_ESD_PNP_24) OR COLOD_ESD_PNP_29) OR COLOD_ESD_PNP_36) OR COLOD_ESD_PNP_45

 //HVESD_COD_L =  (((((((((COLOD_ESD_PNP_6 OR COLOD_ESD_PNP_9) OR COLOD_ESD_PNP_12) OR COLOD_ESD_PNP_20) OR COLOD_ESD_PNP_12_PDD) OR COLOD_ESD_PNP_16) OR COLOD_ESD_PNP_20_PDD) OR COLOD_ESD_PNP_24) OR COLOD_ESD_PNP_29) OR COLOD_ESD_PNP_36) OR COLOD_ESD_PNP_45

 HVESD_EC =  (((((((((COL_EMI_ESD_PNP_6 OR COL_EMI_ESD_PNP_9) OR COL_EMI_ESD_PNP_12) OR COL_EMI_ESD_PNP_20) OR COL_EMI_ESD_PNP_12_PDD) OR COL_EMI_ESD_PNP_16) OR COL_EMI_ESD_PNP_20_PDD) OR COL_EMI_ESD_PNP_24) OR COL_EMI_ESD_PNP_29) OR COL_EMI_ESD_PNP_36) OR COL_EMI_ESD_PNP_45

 //HVESD_EC_L =  (((((((((COL_EMI_ESD_PNP_6 OR COL_EMI_ESD_PNP_9) OR COL_EMI_ESD_PNP_12) OR COL_EMI_ESD_PNP_20) OR COL_EMI_ESD_PNP_12_PDD) OR COL_EMI_ESD_PNP_16) OR COL_EMI_ESD_PNP_20_PDD) OR COL_EMI_ESD_PNP_24) OR COL_EMI_ESD_PNP_29) OR COL_EMI_ESD_PNP_36) OR COL_EMI_ESD_PNP_45

 HVESD_merge =  (((((((((HVESD_merge_PNP_6 OR HVESD_merge_PNP_9) OR HVESD_merge_PNP_12) OR HVESD_merge_PNP_20) OR HVESD_merge_PNP_12_PDD) OR HVESD_merge_PNP_16) OR HVESD_merge_PNP_20_PDD) OR HVESD_merge_PNP_24) OR HVESD_merge_PNP_29) OR HVESD_merge_PNP_36) OR HVESD_merge_PNP_45

 HVESD_EC_merge =  (((((((((COL_EMI_ESD_merge_PNP_6 OR COL_EMI_ESD_merge_PNP_9) OR COL_EMI_ESD_merge_PNP_12) OR COL_EMI_ESD_merge_PNP_20) OR COL_EMI_ESD_merge_PNP_12_PDD) OR COL_EMI_ESD_merge_PNP_16) OR COL_EMI_ESD_merge_PNP_20_PDD) OR COL_EMI_ESD_merge_PNP_24) OR COL_EMI_ESD_merge_PNP_29) OR COL_EMI_ESD_merge_PNP_36) OR COL_EMI_ESD_merge_PNP_45

 HVESD_BH =  (((((((((BASOD_ESD_PNP_6_H OR BASOD_ESD_PNP_9_H) OR BASOD_ESD_PNP_12_H) OR BASOD_ESD_PNP_20_H) OR BASOD_ESD_PNP_12_PDD_H) OR BASOD_ESD_PNP_16_H) OR BASOD_ESD_PNP_20_PDD_H) OR BASOD_ESD_PNP_24_H) OR BASOD_ESD_PNP_29_H) OR BASOD_ESD_PNP_36_H) OR BASOD_ESD_PNP_45_H

 //HVESD_BH_L =  (((((((((BASOD_ESD_PNP_6_H OR BASOD_ESD_PNP_9_H) OR BASOD_ESD_PNP_12_H) OR BASOD_ESD_PNP_20_H) OR BASOD_ESD_PNP_12_PDD_H) OR BASOD_ESD_PNP_16_H) OR BASOD_ESD_PNP_20_PDD_H) OR BASOD_ESD_PNP_24_H) OR BASOD_ESD_PNP_29_H) OR BASOD_ESD_PNP_36_H) OR BASOD_ESD_PNP_45_H

 HVESD_PISO_R =  (((((((((PPOD_R_BJT_PNP_6 OR PPOD_R_BJT_PNP_9) OR PPOD_R_BJT_PNP_12) OR PPOD_R_BJT_PNP_20) OR PPOD_R_BJT_PNP_12_PDD) OR PPOD_R_BJT_PNP_16) OR PPOD_R_BJT_PNP_20_PDD) OR PPOD_R_BJT_PNP_24) OR PPOD_R_BJT_PNP_29) OR PPOD_R_BJT_PNP_36) OR PPOD_R_BJT_PNP_45

HVESD_ISO_H = (HOLES PPOD INNER) ENCLOSE HVESD_BOD
//HVESD_ISO_H_L = (HOLES PPOD INNER) ENCLOSE HVESD_BOD_L

// for Power clamp N+ isolation ring
NPOD_ISO_H_1_POWER_CLAMP = (( HOLES NPOD_GR_R_1 INNER ) NOT NPOD_GR_R_1 ) ENCLOSE HVESD_COD_pre
NPOD_ISO_R_2_POWER_CLAMP = NPOD_GR_R_1 TOUCH NPOD_ISO_H_1_POWER_CLAMP

NPOD_ISO_R_3_POWER_CLAMP = SIZE NPOD_ISO_R_2_POWER_CLAMP BY (HVOD_W_2/2)-GRID UNDEROVER
NPOD_ISO_H_POWER_CLAMP = (HOLES NPOD_ISO_R_3_POWER_CLAMP) ENCLOSE HVESD_POWER_CLAMP
NPOD_ISO_R_POWER_CLAMP = NPOD_ISO_R_3_POWER_CLAMP TOUCH NPOD_ISO_H_POWER_CLAMP
// for Power clamp P+ isolation ring
PPOD_ISO_R_1_POWER_CLAMP =  ((PPOD AND HVPW) NOT NBL) NOT NPOD_ISO_H_POWER_CLAMP
PPOD_ISO_H_1_POWER_CLAMP = ((HOLES PPOD_ISO_R_1_POWER_CLAMP INNER) NOT PPOD_ISO_R_1_POWER_CLAMP) ENCLOSE NPOD_ISO_R_POWER_CLAMP
PPOD_ISO_R_2_POWER_CLAMP = PPOD_ISO_R_1_POWER_CLAMP TOUCH PPOD_ISO_H_1_POWER_CLAMP

PPOD_ISO_R_3_POWER_CLAMP = SIZE PPOD_ISO_R_2_POWER_CLAMP BY (HVOD_W_2/2)-GRID UNDEROVER
PPOD_ISO_H_POWER_CLAMP = (HOLES PPOD_ISO_R_3_POWER_CLAMP) ENCLOSE NPOD_ISO_R_POWER_CLAMP
PPOD_ISO_R_POWER_CLAMP = PPOD_ISO_R_3_POWER_CLAMP TOUCH PPOD_ISO_H_POWER_CLAMP


HVESD_EC_gap = (HVESD_EC_merge NOT HVESD_EOD_pre) NOT HVESD_COD_pre
HVESD_EC_OUT = HVESD_EC INTERACT HVESD_EC_gap == 1
CONNECT HVESD_EC_OUT M1xd BY COi

COL_EMI_ESD_merge_PNP_12_PDD_edge_pre = (EXPAND EDGE COL_EMI_ESD_merge_PNP_12_PDD OUTSIDE BY GRID) INSIDE HVSHP
COL_EMI_ESD_merge_PNP_12_PDD_width_edge = COL_EMI_ESD_merge_PNP_12_PDD TOUCH EDGE COL_EMI_ESD_merge_PNP_12_PDD_edge_pre
COL_EMI_ESD_merge_PNP_12_PDD_length_edge = COL_EMI_ESD_merge_PNP_12_PDD NOT TOUCH EDGE COL_EMI_ESD_merge_PNP_12_PDD_width_edge

COL_EMI_ESD_merge_PNP_16_edge_pre = (EXPAND EDGE COL_EMI_ESD_merge_PNP_16 OUTSIDE BY GRID) INSIDE HVSHP
COL_EMI_ESD_merge_PNP_16_width_edge = COL_EMI_ESD_merge_PNP_16 TOUCH EDGE COL_EMI_ESD_merge_PNP_16_edge_pre
COL_EMI_ESD_merge_PNP_16_length_edge = COL_EMI_ESD_merge_PNP_16 NOT TOUCH EDGE COL_EMI_ESD_merge_PNP_16_width_edge

COL_EMI_ESD_merge_PNP_20_edge_pre = (EXPAND EDGE COL_EMI_ESD_merge_PNP_20 OUTSIDE BY GRID) INSIDE HVSHP
COL_EMI_ESD_merge_PNP_20_width_edge = COL_EMI_ESD_merge_PNP_20 TOUCH EDGE COL_EMI_ESD_merge_PNP_20_edge_pre
COL_EMI_ESD_merge_PNP_20_length_edge = COL_EMI_ESD_merge_PNP_20 NOT TOUCH EDGE COL_EMI_ESD_merge_PNP_20_width_edge

COL_EMI_ESD_merge_PNP_20_PDD_edge_pre = (EXPAND EDGE COL_EMI_ESD_merge_PNP_20_PDD OUTSIDE BY GRID) INSIDE HVSHP
COL_EMI_ESD_merge_PNP_20_PDD_width_edge = COL_EMI_ESD_merge_PNP_20_PDD TOUCH EDGE COL_EMI_ESD_merge_PNP_20_PDD_edge_pre
COL_EMI_ESD_merge_PNP_20_PDD_length_edge = COL_EMI_ESD_merge_PNP_20_PDD NOT TOUCH EDGE COL_EMI_ESD_merge_PNP_20_PDD_width_edge

COL_EMI_ESD_PNP_29_inner_width_edge = COL_EMI_ESD_PNP_29 INSIDE EDGE COL_EMI_ESD_merge_PNP_29 
COL_EMI_ESD_PNP_29_length_edge_pre = EXPAND EDGE COL_EMI_ESD_PNP_29_inner_width_edge INSIDE BY GRID
COL_EMI_ESD_PNP_29_length_edge_pre1 = EXPAND EDGE COL_EMI_ESD_PNP_29_inner_width_edge INSIDE BY GRID * 2
COL_EMI_ESD_PNP_29_length_edge_pre2 = COL_EMI_ESD_PNP_29_length_edge_pre1 NOT COL_EMI_ESD_PNP_29_length_edge_pre
COL_EMI_ESD_PNP_29_length_edge = COL_EMI_ESD_PNP_29 TOUCH EDGE COL_EMI_ESD_PNP_29_length_edge_pre2
COL_ESD_PNP_29_length_edge = COLOD_ESD_PNP_29 TOUCH EDGE COL_EMI_ESD_PNP_29_length_edge
COL_EMI_ESD_PNP_29_width_edge = COL_EMI_ESD_PNP_29 NOT TOUCH EDGE COL_EMI_ESD_PNP_29_length_edge
COL_ESD_PNP_29_width_edge = COLOD_ESD_PNP_29 TOUCH EDGE COL_EMI_ESD_PNP_29_width_edge
COL_ESD_PNP_29_inner_width_edge = COLOD_ESD_PNP_29 TOUCH EDGE COL_EMI_ESD_PNP_29_inner_width_edge
COL_EMI_ESD_PNP_29_outmost_width_edge = COL_EMI_ESD_PNP_29 NOT TOUCH EDGE (EXPAND EDGE COL_EMI_ESD_PNP_29_inner_width_edge INSIDE BY GRID)
COL_ESD_PNP_29_outmost_width_edge = COLOD_ESD_PNP_29 TOUCH EDGE COL_EMI_ESD_PNP_29_outmost_width_edge

COL_EMI_ESD_merge_PNP_24_edge_pre = (EXPAND EDGE COL_EMI_ESD_merge_PNP_24 OUTSIDE BY GRID) INSIDE HVSHP
COL_EMI_ESD_merge_PNP_24_width_edge = COL_EMI_ESD_merge_PNP_24 TOUCH EDGE COL_EMI_ESD_merge_PNP_24_edge_pre
COL_EMI_ESD_merge_PNP_24_length_edge = COL_EMI_ESD_merge_PNP_24 NOT TOUCH EDGE COL_EMI_ESD_merge_PNP_24_width_edge

COL_EMI_ESD_merge_PNP_36_V1 = (((SIZE BASOD_ESD_PNP_36_H BY -HVESD_S_4_PNP_36) OR COLOD_ESD_PNP_36) OR EMIOD_ESD_PNP_36) OR COL_EMI_ESD_merge_PNP_36
COL_EMI_ESD_PNP_36_inner_width_edge = COL_EMI_ESD_PNP_36 INSIDE EDGE COL_EMI_ESD_merge_PNP_36_V1
COL_EMI_ESD_PNP_36_length_edge_pre = EXPAND EDGE COL_EMI_ESD_PNP_36_inner_width_edge INSIDE BY GRID
COL_EMI_ESD_PNP_36_length_edge_pre1 = EXPAND EDGE COL_EMI_ESD_PNP_36_inner_width_edge INSIDE BY GRID * 2
COL_EMI_ESD_PNP_36_length_edge_pre2 = COL_EMI_ESD_PNP_36_length_edge_pre1 NOT COL_EMI_ESD_PNP_36_length_edge_pre
COL_EMI_ESD_PNP_36_length_edge = COL_EMI_ESD_PNP_36 TOUCH EDGE COL_EMI_ESD_PNP_36_length_edge_pre2
COL_ESD_PNP_36_length_edge = COLOD_ESD_PNP_36 TOUCH EDGE COL_EMI_ESD_PNP_36_length_edge
COL_EMI_ESD_PNP_36_width_edge = COL_EMI_ESD_PNP_36 NOT TOUCH EDGE COL_EMI_ESD_PNP_36_length_edge
COL_ESD_PNP_36_width_edge = COLOD_ESD_PNP_36 TOUCH EDGE COL_EMI_ESD_PNP_36_width_edge
COL_ESD_PNP_36_inner_width_edge = COLOD_ESD_PNP_36 TOUCH EDGE COL_EMI_ESD_PNP_36_inner_width_edge
COL_EMI_ESD_PNP_36_outmost_width_edge = COL_EMI_ESD_PNP_36 NOT TOUCH EDGE (EXPAND EDGE COL_EMI_ESD_PNP_36_inner_width_edge INSIDE BY GRID)
COL_ESD_PNP_36_outmost_width_edge = COLOD_ESD_PNP_36 TOUCH EDGE COL_EMI_ESD_PNP_36_outmost_width_edge

COL_EMI_ESD_merge_PNP_45_V1 = (((SIZE BASOD_ESD_PNP_45_H BY -HVESD_S_4_PNP_45) OR COLOD_ESD_PNP_45) OR EMIOD_ESD_PNP_45) OR COL_EMI_ESD_merge_PNP_45
COL_EMI_ESD_PNP_45_inner_width_edge = COL_EMI_ESD_PNP_45 INSIDE EDGE COL_EMI_ESD_merge_PNP_45_V1
COL_EMI_ESD_PNP_45_length_edge_pre = EXPAND EDGE COL_EMI_ESD_PNP_45_inner_width_edge INSIDE BY GRID
COL_EMI_ESD_PNP_45_length_edge_pre1 = EXPAND EDGE COL_EMI_ESD_PNP_45_inner_width_edge INSIDE BY GRID * 2
COL_EMI_ESD_PNP_45_length_edge_pre2 = COL_EMI_ESD_PNP_45_length_edge_pre1 NOT COL_EMI_ESD_PNP_45_length_edge_pre
COL_EMI_ESD_PNP_45_length_edge = COL_EMI_ESD_PNP_45 TOUCH EDGE COL_EMI_ESD_PNP_45_length_edge_pre2
COL_ESD_PNP_45_length_edge = COLOD_ESD_PNP_45 TOUCH EDGE COL_EMI_ESD_PNP_45_length_edge
COL_EMI_ESD_PNP_45_width_edge = COL_EMI_ESD_PNP_45 NOT TOUCH EDGE COL_EMI_ESD_PNP_45_length_edge
COL_ESD_PNP_45_width_edge = COLOD_ESD_PNP_45 TOUCH EDGE COL_EMI_ESD_PNP_45_width_edge
COL_ESD_PNP_45_inner_width_edge = COLOD_ESD_PNP_45 TOUCH EDGE COL_EMI_ESD_PNP_45_inner_width_edge
COL_EMI_ESD_PNP_45_outmost_width_edge = COL_EMI_ESD_PNP_45 NOT TOUCH EDGE (EXPAND EDGE COL_EMI_ESD_PNP_45_inner_width_edge INSIDE BY GRID)
COL_ESD_PNP_45_outmost_width_edge = COLOD_ESD_PNP_45 TOUCH EDGE COL_EMI_ESD_PNP_45_outmost_width_edge

COL_W_PNP_6 = LENGTH COLOD_ESD_PNP_6 <= HVESD_W_5_PNP_6 + GRID
COL_L_PNP_6 = LENGTH COLOD_ESD_PNP_6 > HVESD_W_5_PNP_6 + GRID
EMI_W_PNP_6 = LENGTH EMIOD_ESD_PNP_6 <= HVESD_W_4_PNP_6 + GRID
EMI_L_PNP_6 = LENGTH EMIOD_ESD_PNP_6 > HVESD_W_4_PNP_6 + GRID 
EMI_L_PNP_6_EXP = EXPAND EDGE EMI_L_PNP_6 OUTSIDE BY GRID
EMI_L_PNP_6_EXPc = COPY EMI_L_PNP_6_EXP
NBL_PNP_6 = (NBL OR HVESD1DMY)  INTERACT COL_EMI_ESD_PNP_6
NBL_PNP_6c = COPY NBL_PNP_6
CONNECT NBL_PNP_6c EMI_L_PNP_6_EXPc
//HVESD.W.2 is checked by HVESD.W.2_PNP_6 
HVESD.W.2_PNP_6 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_6 um
  NET AREA RATIO EMI_L_PNP_6_EXPc < HVESD_W_2_PNP_6
    [AREA(EMI_L_PNP_6_EXPc)/GRID]
    RDB HVESD.W.2_PNP_6.rep EMI_L_PNP_6_EXPc
}

//HVESD.W.3 is checked by HVESD.W.3_PNP_6 
//HVESD.W.4 is checked by HVESD.W.4_PNP_6 
//HVESD.W.5 is checked by HVESD.W.5_PNP_6 
HVESD.W.3_4_5_PNP_6 { @ min and max length/width of OD of Collector and Emitter of 6V - 45V HVESD >= ^HVESD_W_3_1 * ^HVESD_W_4_PNP_6 or ^HVESD_W_3_1 * ^HVESD_W_5_PNP_6
                            @ =< ^HVESD_W_3_2 * ^HVESD_W_4_PNP_6 or ^HVESD_W_3_2 * ^HVESD_W_5_PNP_6
	NOT RECTANGLE EMIOD_ESD_PNP_6 >= HVESD_W_3_1 <= HVESD_W_3_2 BY == HVESD_W_4_PNP_6 ORTHOGONAL ONLY
	NOT RECTANGLE COLOD_ESD_PNP_6 >= HVESD_W_3_1 <= HVESD_W_3_2 BY == HVESD_W_5_PNP_6 ORTHOGONAL ONLY
}
COL_W_PNP_9 = LENGTH COLOD_ESD_PNP_9 <= HVESD_W_5_PNP_9 + GRID
COL_L_PNP_9 = LENGTH COLOD_ESD_PNP_9 > HVESD_W_5_PNP_9 + GRID
EMI_W_PNP_9 = LENGTH EMIOD_ESD_PNP_9 <= HVESD_W_4_PNP_9 + GRID
EMI_L_PNP_9 = LENGTH EMIOD_ESD_PNP_9 > HVESD_W_4_PNP_9 + GRID 
EMI_L_PNP_9_EXP = EXPAND EDGE EMI_L_PNP_9 OUTSIDE BY GRID
EMI_L_PNP_9_EXPc = COPY EMI_L_PNP_9_EXP
NBL_PNP_9 = (NBL OR HVESD1DMY)  INTERACT COL_EMI_ESD_PNP_9
NBL_PNP_9c = COPY NBL_PNP_9
CONNECT NBL_PNP_9c EMI_L_PNP_9_EXPc
//HVESD.W.2 is checked by HVESD.W.2_PNP_9 
HVESD.W.2_PNP_9 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_9 um
  NET AREA RATIO EMI_L_PNP_9_EXPc < HVESD_W_2_PNP_9
    [AREA(EMI_L_PNP_9_EXPc)/GRID]
    RDB HVESD.W.2_PNP_9.rep EMI_L_PNP_9_EXPc
}

//HVESD.W.3 is checked by HVESD.W.3_PNP_9 
//HVESD.W.4 is checked by HVESD.W.4_PNP_9 
//HVESD.W.5 is checked by HVESD.W.5_PNP_9 
HVESD.W.3_4_5_PNP_9 { @ min and max length/width of OD of Collector and Emitter of 6V - 45V HVESD >= ^HVESD_W_3_1 * ^HVESD_W_4_PNP_9 or ^HVESD_W_3_1 * ^HVESD_W_5_PNP_9
                            @ =< ^HVESD_W_3_2 * ^HVESD_W_4_PNP_9 or ^HVESD_W_3_2 * ^HVESD_W_5_PNP_9
	NOT RECTANGLE EMIOD_ESD_PNP_9 >= HVESD_W_3_1 <= HVESD_W_3_2 BY == HVESD_W_4_PNP_9 ORTHOGONAL ONLY
	NOT RECTANGLE COLOD_ESD_PNP_9 >= HVESD_W_3_1 <= HVESD_W_3_2 BY == HVESD_W_5_PNP_9 ORTHOGONAL ONLY
}
COL_W_PNP_12 = LENGTH COLOD_ESD_PNP_12 <= HVESD_W_5_PNP_12 + GRID
COL_L_PNP_12 = LENGTH COLOD_ESD_PNP_12 > HVESD_W_5_PNP_12 + GRID
EMI_W_PNP_12 = LENGTH EMIOD_ESD_PNP_12 <= HVESD_W_4_PNP_12 + GRID
EMI_L_PNP_12 = LENGTH EMIOD_ESD_PNP_12 > HVESD_W_4_PNP_12 + GRID 
EMI_L_PNP_12_EXP = EXPAND EDGE EMI_L_PNP_12 OUTSIDE BY GRID
EMI_L_PNP_12_EXPc = COPY EMI_L_PNP_12_EXP
NBL_PNP_12 = (NBL OR HVESD1DMY)  INTERACT COL_EMI_ESD_PNP_12
NBL_PNP_12c = COPY NBL_PNP_12
CONNECT NBL_PNP_12c EMI_L_PNP_12_EXPc
//HVESD.W.2 is checked by HVESD.W.2_PNP_12 
HVESD.W.2_PNP_12 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_12 um
  NET AREA RATIO EMI_L_PNP_12_EXPc < HVESD_W_2_PNP_12
    [AREA(EMI_L_PNP_12_EXPc)/GRID]
    RDB HVESD.W.2_PNP_12.rep EMI_L_PNP_12_EXPc
}

//HVESD.W.3 is checked by HVESD.W.3_PNP_12 
//HVESD.W.4 is checked by HVESD.W.4_PNP_12 
//HVESD.W.5 is checked by HVESD.W.5_PNP_12 
HVESD.W.3_4_5_PNP_12 { @ min and max length/width of OD of Collector and Emitter of 6V - 45V HVESD >= ^HVESD_W_3_1 * ^HVESD_W_4_PNP_12 or ^HVESD_W_3_1 * ^HVESD_W_5_PNP_12
                            @ =< ^HVESD_W_3_2 * ^HVESD_W_4_PNP_12 or ^HVESD_W_3_2 * ^HVESD_W_5_PNP_12
	NOT RECTANGLE EMIOD_ESD_PNP_12 >= HVESD_W_3_1 <= HVESD_W_3_2 BY == HVESD_W_4_PNP_12 ORTHOGONAL ONLY
	NOT RECTANGLE COLOD_ESD_PNP_12 >= HVESD_W_3_1 <= HVESD_W_3_2 BY == HVESD_W_5_PNP_12 ORTHOGONAL ONLY
}
COL_W_PNP_29 = LENGTH COLOD_ESD_PNP_29 <= HVESD_W_5_PNP_29 + GRID
COL_L_PNP_29 = LENGTH COLOD_ESD_PNP_29 > HVESD_W_5_PNP_29 + GRID
EMI_W_PNP_29 = LENGTH EMIOD_ESD_PNP_29 <= HVESD_W_4_PNP_29 + GRID
EMI_L_PNP_29 = LENGTH EMIOD_ESD_PNP_29 > HVESD_W_4_PNP_29 + GRID 
EMI_L_PNP_29_EXP = EXPAND EDGE EMI_L_PNP_29 OUTSIDE BY GRID
EMI_L_PNP_29_EXPc = COPY EMI_L_PNP_29_EXP
NBL_PNP_29 = (NBL OR HVESD1DMY)  INTERACT COL_EMI_ESD_PNP_29
NBL_PNP_29c = COPY NBL_PNP_29
CONNECT NBL_PNP_29c EMI_L_PNP_29_EXPc
//HVESD.W.2 is checked by HVESD.W.2_PNP_29 
HVESD.W.2_PNP_29 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_29 um
  NET AREA RATIO EMI_L_PNP_29_EXPc < HVESD_W_2_PNP_29
    [AREA(EMI_L_PNP_29_EXPc)/GRID]
    RDB HVESD.W.2_PNP_29.rep EMI_L_PNP_29_EXPc
}

//HVESD.W.3 is checked by HVESD.W.3_PNP_29 
//HVESD.W.4 is checked by HVESD.W.4_PNP_29 
//HVESD.W.5 is checked by HVESD.W.5_PNP_29 
HVESD.W.3_4_5_PNP_29 { @ min and max length/width of OD of Collector and Emitter of 6V - 45V HVESD >= ^HVESD_W_3_1 * ^HVESD_W_4_PNP_29 or ^HVESD_W_3_1 * ^HVESD_W_5_PNP_29
                            @ =< ^HVESD_W_3_2 * ^HVESD_W_4_PNP_29 or ^HVESD_W_3_2 * ^HVESD_W_5_PNP_29
	NOT RECTANGLE EMIOD_ESD_PNP_29 >= HVESD_W_3_1 <= HVESD_W_3_2 BY == HVESD_W_4_PNP_29 ORTHOGONAL ONLY
	NOT RECTANGLE COLOD_ESD_PNP_29 >= HVESD_W_3_1 <= HVESD_W_3_2 BY == HVESD_W_5_PNP_29 ORTHOGONAL ONLY
}
COL_W_PNP_36 = LENGTH COLOD_ESD_PNP_36 <= HVESD_W_5_PNP_36 + GRID
COL_L_PNP_36 = LENGTH COLOD_ESD_PNP_36 > HVESD_W_5_PNP_36 + GRID
EMI_W_PNP_36 = LENGTH EMIOD_ESD_PNP_36 <= HVESD_W_4_PNP_36 + GRID
EMI_L_PNP_36 = LENGTH EMIOD_ESD_PNP_36 > HVESD_W_4_PNP_36 + GRID 
EMI_L_PNP_36_EXP = EXPAND EDGE EMI_L_PNP_36 OUTSIDE BY GRID
EMI_L_PNP_36_EXPc = COPY EMI_L_PNP_36_EXP
NBL_PNP_36 = (NBL OR HVESD1DMY)  INTERACT COL_EMI_ESD_PNP_36
NBL_PNP_36c = COPY NBL_PNP_36
CONNECT NBL_PNP_36c EMI_L_PNP_36_EXPc
//HVESD.W.2 is checked by HVESD.W.2_PNP_36 
HVESD.W.2_PNP_36 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_36 um
  NET AREA RATIO EMI_L_PNP_36_EXPc < HVESD_W_2_PNP_36
    [AREA(EMI_L_PNP_36_EXPc)/GRID]
    RDB HVESD.W.2_PNP_36.rep EMI_L_PNP_36_EXPc
}

//HVESD.W.3 is checked by HVESD.W.3_PNP_36 
//HVESD.W.4 is checked by HVESD.W.4_PNP_36 
//HVESD.W.5 is checked by HVESD.W.5_PNP_36 
HVESD.W.3_4_5_PNP_36 { @ min and max length/width of OD of Collector and Emitter of 6V - 45V HVESD >= ^HVESD_W_3_1 * ^HVESD_W_4_PNP_36 or ^HVESD_W_3_1 * ^HVESD_W_5_PNP_36
                            @ =< ^HVESD_W_3_2 * ^HVESD_W_4_PNP_36 or ^HVESD_W_3_2 * ^HVESD_W_5_PNP_36
	NOT RECTANGLE EMIOD_ESD_PNP_36 >= HVESD_W_3_1 <= HVESD_W_3_2 BY == HVESD_W_4_PNP_36 ORTHOGONAL ONLY
	NOT RECTANGLE COLOD_ESD_PNP_36 >= HVESD_W_3_1 <= HVESD_W_3_2 BY == HVESD_W_5_PNP_36 ORTHOGONAL ONLY
}
COL_W_PNP_45 = LENGTH COLOD_ESD_PNP_45 <= HVESD_W_5_PNP_45 + GRID
COL_L_PNP_45 = LENGTH COLOD_ESD_PNP_45 > HVESD_W_5_PNP_45 + GRID
EMI_W_PNP_45 = LENGTH EMIOD_ESD_PNP_45 <= HVESD_W_4_PNP_45 + GRID
EMI_L_PNP_45 = LENGTH EMIOD_ESD_PNP_45 > HVESD_W_4_PNP_45 + GRID 
EMI_L_PNP_45_EXP = EXPAND EDGE EMI_L_PNP_45 OUTSIDE BY GRID
EMI_L_PNP_45_EXPc = COPY EMI_L_PNP_45_EXP
NBL_PNP_45 = (NBL OR HVESD1DMY)  INTERACT COL_EMI_ESD_PNP_45
NBL_PNP_45c = COPY NBL_PNP_45
CONNECT NBL_PNP_45c EMI_L_PNP_45_EXPc
//HVESD.W.2 is checked by HVESD.W.2_PNP_45 
HVESD.W.2_PNP_45 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_45 um
  NET AREA RATIO EMI_L_PNP_45_EXPc < HVESD_W_2_PNP_45
    [AREA(EMI_L_PNP_45_EXPc)/GRID]
    RDB HVESD.W.2_PNP_45.rep EMI_L_PNP_45_EXPc
}

//HVESD.W.3 is checked by HVESD.W.3_PNP_45 
//HVESD.W.4 is checked by HVESD.W.4_PNP_45 
//HVESD.W.5 is checked by HVESD.W.5_PNP_45 
HVESD.W.3_4_5_PNP_45 { @ min and max length/width of OD of Collector and Emitter of 6V - 45V HVESD >= ^HVESD_W_3_1 * ^HVESD_W_4_PNP_45 or ^HVESD_W_3_1 * ^HVESD_W_5_PNP_45
                            @ =< ^HVESD_W_3_2 * ^HVESD_W_4_PNP_45 or ^HVESD_W_3_2 * ^HVESD_W_5_PNP_45
	NOT RECTANGLE EMIOD_ESD_PNP_45 >= HVESD_W_3_1 <= HVESD_W_3_2 BY == HVESD_W_4_PNP_45 ORTHOGONAL ONLY
	NOT RECTANGLE COLOD_ESD_PNP_45 >= HVESD_W_3_1 <= HVESD_W_3_2 BY == HVESD_W_5_PNP_45 ORTHOGONAL ONLY
}

COL_W_PNP_20 = LENGTH COLOD_ESD_PNP_20 <= HVESD_W_7_PNP_20 + GRID
COL_L_PNP_20 = LENGTH COLOD_ESD_PNP_20 > HVESD_W_7_PNP_20 + GRID
EMI_W_PNP_20 = LENGTH EMIOD_ESD_PNP_20 <= HVESD_W_6_PNP_20 + GRID
EMI_L_PNP_20 = LENGTH EMIOD_ESD_PNP_20 > HVESD_W_6_PNP_20 + GRID 
EMI_L_PNP_20_EXP = EXPAND EDGE EMI_L_PNP_20 OUTSIDE BY GRID
EMI_L_PNP_20_EXPc = COPY EMI_L_PNP_20_EXP
NBL_PNP_20 = (NBL OR HVESD1DMY) INTERACT COL_EMI_ESD_PNP_20
NBL_PNP_20c = COPY NBL_PNP_20
CONNECT NBL_PNP_20c EMI_L_PNP_20_EXPc
//HVESD.W.2 is checked by HVESD.W.2_PNP_20
HVESD.W.2_PNP_20 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_20 um
  NET AREA RATIO EMI_L_PNP_20_EXPc < HVESD_W_2_PNP_20
    [AREA(EMI_L_PNP_20_EXPc)/GRID]
    RDB HVESD.W.2_PNP_20.rep EMI_L_PNP_20_EXPc
}
HVESD.W.6_PNP_20 { @ Min and max width of Emitter PP == ^HVESD_W_6_PNP_20
    A = PP INTERACT EMIOD_ESD_PNP_20
    WITH WIDTH A != HVESD_W_6_PNP_20
}

HVESD.W.7_PNP_20 { @ Min and max width of Collector PP == ^HVESD_W_7_PNP_20
    A = PP INTERACT COLOD_ESD_PNP_20
    WITH WIDTH A != HVESD_W_7_PNP_20
}


HVESD.W.3.1_PNP_20 { @ Min finger length for collector OD and Emitter OD >= ^HVESD_W_3_1_PNP_20 um
  NOT ENCLOSE RECTANGLE COL_EMI_ESD_PNP_20 HVESD_W_3_1_PNP_20 GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_20 < HVESD_W_3_1_PNP_20
  PATH LENGTH EMI_L_PNP_20 < HVESD_W_3_1_PNP_20
}

HVESD.W.3.2_PNP_20 { @ Max finger length for collector OD and Emitter OD <= ^HVESD_W_3_2_PNP_20 um
  ENCLOSE RECTANGLE COL_EMI_ESD_PNP_20 (HVESD_W_3_2_PNP_20 + GRID) GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_20 > HVESD_W_3_2_PNP_20
  PATH LENGTH EMI_L_PNP_20 > HVESD_W_3_2_PNP_20
}

COL_W_PNP_12_PDD = LENGTH COLOD_ESD_PNP_12_PDD <= HVESD_W_7_PNP_12_PDD + GRID
COL_L_PNP_12_PDD = LENGTH COLOD_ESD_PNP_12_PDD > HVESD_W_7_PNP_12_PDD + GRID
EMI_W_PNP_12_PDD = LENGTH EMIOD_ESD_PNP_12_PDD <= HVESD_W_6_PNP_12_PDD + GRID
EMI_L_PNP_12_PDD = LENGTH EMIOD_ESD_PNP_12_PDD > HVESD_W_6_PNP_12_PDD + GRID 
EMI_L_PNP_12_PDD_EXP = EXPAND EDGE EMI_L_PNP_12_PDD OUTSIDE BY GRID
EMI_L_PNP_12_PDD_EXPc = COPY EMI_L_PNP_12_PDD_EXP
NBL_PNP_12_PDD = (NBL OR HVESD1DMY) INTERACT COL_EMI_ESD_PNP_12_PDD
NBL_PNP_12_PDDc = COPY NBL_PNP_12_PDD
CONNECT NBL_PNP_12_PDDc EMI_L_PNP_12_PDD_EXPc
//HVESD.W.2 is checked by HVESD.W.2_PNP_12_PDD
HVESD.W.2_PNP_12_PDD { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_12_PDD um
  NET AREA RATIO EMI_L_PNP_12_PDD_EXPc < HVESD_W_2_PNP_12_PDD
    [AREA(EMI_L_PNP_12_PDD_EXPc)/GRID]
    RDB HVESD.W.2_PNP_12_PDD.rep EMI_L_PNP_12_PDD_EXPc
}
HVESD.W.6_PNP_12_PDD { @ Min and max width of Emitter PP == ^HVESD_W_6_PNP_12_PDD
    A = PP INTERACT EMIOD_ESD_PNP_12_PDD
    WITH WIDTH A != HVESD_W_6_PNP_12_PDD
}

HVESD.W.7_PNP_12_PDD { @ Min and max width of Collector PP == ^HVESD_W_7_PNP_12_PDD
    A = PP INTERACT COLOD_ESD_PNP_12_PDD
    WITH WIDTH A != HVESD_W_7_PNP_12_PDD
}


HVESD.W.3.1_PNP_12_PDD { @ Min finger length for collector OD and Emitter OD >= ^HVESD_W_3_1_PNP_12_PDD um
  NOT ENCLOSE RECTANGLE COL_EMI_ESD_PNP_12_PDD HVESD_W_3_1_PNP_12_PDD GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_12_PDD < HVESD_W_3_1_PNP_12_PDD
  PATH LENGTH EMI_L_PNP_12_PDD < HVESD_W_3_1_PNP_12_PDD
}

HVESD.W.3.2_PNP_12_PDD { @ Max finger length for collector OD and Emitter OD <= ^HVESD_W_3_2_PNP_12_PDD um
  ENCLOSE RECTANGLE COL_EMI_ESD_PNP_12_PDD (HVESD_W_3_2_PNP_12_PDD + GRID) GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_12_PDD > HVESD_W_3_2_PNP_12_PDD
  PATH LENGTH EMI_L_PNP_12_PDD > HVESD_W_3_2_PNP_12_PDD
}

COL_W_PNP_16 = LENGTH COLOD_ESD_PNP_16 <= HVESD_W_7_PNP_16 + GRID
COL_L_PNP_16 = LENGTH COLOD_ESD_PNP_16 > HVESD_W_7_PNP_16 + GRID
EMI_W_PNP_16 = LENGTH EMIOD_ESD_PNP_16 <= HVESD_W_6_PNP_16 + GRID
EMI_L_PNP_16 = LENGTH EMIOD_ESD_PNP_16 > HVESD_W_6_PNP_16 + GRID 
EMI_L_PNP_16_EXP = EXPAND EDGE EMI_L_PNP_16 OUTSIDE BY GRID
EMI_L_PNP_16_EXPc = COPY EMI_L_PNP_16_EXP
NBL_PNP_16 = (NBL OR HVESD1DMY) INTERACT COL_EMI_ESD_PNP_16
NBL_PNP_16c = COPY NBL_PNP_16
CONNECT NBL_PNP_16c EMI_L_PNP_16_EXPc
//HVESD.W.2 is checked by HVESD.W.2_PNP_16
HVESD.W.2_PNP_16 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_16 um
  NET AREA RATIO EMI_L_PNP_16_EXPc < HVESD_W_2_PNP_16
    [AREA(EMI_L_PNP_16_EXPc)/GRID]
    RDB HVESD.W.2_PNP_16.rep EMI_L_PNP_16_EXPc
}
HVESD.W.6_PNP_16 { @ Min and max width of Emitter PP == ^HVESD_W_6_PNP_16
    A = PP INTERACT EMIOD_ESD_PNP_16
    WITH WIDTH A != HVESD_W_6_PNP_16
}

HVESD.W.7_PNP_16 { @ Min and max width of Collector PP == ^HVESD_W_7_PNP_16
    A = PP INTERACT COLOD_ESD_PNP_16
    WITH WIDTH A != HVESD_W_7_PNP_16
}


HVESD.W.3.1_PNP_16 { @ Min finger length for collector OD and Emitter OD >= ^HVESD_W_3_1_PNP_16 um
  NOT ENCLOSE RECTANGLE COL_EMI_ESD_PNP_16 HVESD_W_3_1_PNP_16 GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_16 < HVESD_W_3_1_PNP_16
  PATH LENGTH EMI_L_PNP_16 < HVESD_W_3_1_PNP_16
}

HVESD.W.3.2_PNP_16 { @ Max finger length for collector OD and Emitter OD <= ^HVESD_W_3_2_PNP_16 um
  ENCLOSE RECTANGLE COL_EMI_ESD_PNP_16 (HVESD_W_3_2_PNP_16 + GRID) GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_16 > HVESD_W_3_2_PNP_16
  PATH LENGTH EMI_L_PNP_16 > HVESD_W_3_2_PNP_16
}

COL_W_PNP_20_PDD = LENGTH COLOD_ESD_PNP_20_PDD <= HVESD_W_7_PNP_20_PDD + GRID
COL_L_PNP_20_PDD = LENGTH COLOD_ESD_PNP_20_PDD > HVESD_W_7_PNP_20_PDD + GRID
EMI_W_PNP_20_PDD = LENGTH EMIOD_ESD_PNP_20_PDD <= HVESD_W_6_PNP_20_PDD + GRID
EMI_L_PNP_20_PDD = LENGTH EMIOD_ESD_PNP_20_PDD > HVESD_W_6_PNP_20_PDD + GRID 
EMI_L_PNP_20_PDD_EXP = EXPAND EDGE EMI_L_PNP_20_PDD OUTSIDE BY GRID
EMI_L_PNP_20_PDD_EXPc = COPY EMI_L_PNP_20_PDD_EXP
NBL_PNP_20_PDD = (NBL OR HVESD1DMY) INTERACT COL_EMI_ESD_PNP_20_PDD
NBL_PNP_20_PDDc = COPY NBL_PNP_20_PDD
CONNECT NBL_PNP_20_PDDc EMI_L_PNP_20_PDD_EXPc
//HVESD.W.2 is checked by HVESD.W.2_PNP_20_PDD
HVESD.W.2_PNP_20_PDD { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_20_PDD um
  NET AREA RATIO EMI_L_PNP_20_PDD_EXPc < HVESD_W_2_PNP_20_PDD
    [AREA(EMI_L_PNP_20_PDD_EXPc)/GRID]
    RDB HVESD.W.2_PNP_20_PDD.rep EMI_L_PNP_20_PDD_EXPc
}
HVESD.W.6_PNP_20_PDD { @ Min and max width of Emitter PP == ^HVESD_W_6_PNP_20_PDD
    A = PP INTERACT EMIOD_ESD_PNP_20_PDD
    WITH WIDTH A != HVESD_W_6_PNP_20_PDD
}

HVESD.W.7_PNP_20_PDD { @ Min and max width of Collector PP == ^HVESD_W_7_PNP_20_PDD
    A = PP INTERACT COLOD_ESD_PNP_20_PDD
    WITH WIDTH A != HVESD_W_7_PNP_20_PDD
}


HVESD.W.3.1_PNP_20_PDD { @ Min finger length for collector OD and Emitter OD >= ^HVESD_W_3_1_PNP_20_PDD um
  NOT ENCLOSE RECTANGLE COL_EMI_ESD_PNP_20_PDD HVESD_W_3_1_PNP_20_PDD GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_20_PDD < HVESD_W_3_1_PNP_20_PDD
  PATH LENGTH EMI_L_PNP_20_PDD < HVESD_W_3_1_PNP_20_PDD
}

HVESD.W.3.2_PNP_20_PDD { @ Max finger length for collector OD and Emitter OD <= ^HVESD_W_3_2_PNP_20_PDD um
  ENCLOSE RECTANGLE COL_EMI_ESD_PNP_20_PDD (HVESD_W_3_2_PNP_20_PDD + GRID) GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_20_PDD > HVESD_W_3_2_PNP_20_PDD
  PATH LENGTH EMI_L_PNP_20_PDD > HVESD_W_3_2_PNP_20_PDD
}

COL_W_PNP_24 = LENGTH COLOD_ESD_PNP_24 <= HVESD_W_7_PNP_24 + GRID
COL_L_PNP_24 = LENGTH COLOD_ESD_PNP_24 > HVESD_W_7_PNP_24 + GRID
EMI_W_PNP_24 = LENGTH EMIOD_ESD_PNP_24 <= HVESD_W_6_PNP_24 + GRID
EMI_L_PNP_24 = LENGTH EMIOD_ESD_PNP_24 > HVESD_W_6_PNP_24 + GRID 
EMI_L_PNP_24_EXP = EXPAND EDGE EMI_L_PNP_24 OUTSIDE BY GRID
EMI_L_PNP_24_EXPc = COPY EMI_L_PNP_24_EXP
NBL_PNP_24 = (NBL OR HVESD1DMY) INTERACT COL_EMI_ESD_PNP_24
NBL_PNP_24c = COPY NBL_PNP_24
CONNECT NBL_PNP_24c EMI_L_PNP_24_EXPc
//HVESD.W.2 is checked by HVESD.W.2_PNP_24
HVESD.W.2_PNP_24 { @ Min total finger length of ESD clamp >= ^HVESD_W_2_PNP_24 um
  NET AREA RATIO EMI_L_PNP_24_EXPc < HVESD_W_2_PNP_24
    [AREA(EMI_L_PNP_24_EXPc)/GRID]
    RDB HVESD.W.2_PNP_24.rep EMI_L_PNP_24_EXPc
}
HVESD.W.6_PNP_24 { @ Min and max width of Emitter PP == ^HVESD_W_6_PNP_24
    A = PP INTERACT EMIOD_ESD_PNP_24
    WITH WIDTH A != HVESD_W_6_PNP_24
}

HVESD.W.7_PNP_24 { @ Min and max width of Collector PP == ^HVESD_W_7_PNP_24
    A = PP INTERACT COLOD_ESD_PNP_24
    WITH WIDTH A != HVESD_W_7_PNP_24
}


HVESD.W.3.1_PNP_24 { @ Min finger length for collector OD and Emitter OD >= ^HVESD_W_3_1_PNP_24 um
  NOT ENCLOSE RECTANGLE COL_EMI_ESD_PNP_24 HVESD_W_3_1_PNP_24 GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_24 < HVESD_W_3_1_PNP_24
  PATH LENGTH EMI_L_PNP_24 < HVESD_W_3_1_PNP_24
}

HVESD.W.3.2_PNP_24 { @ Max finger length for collector OD and Emitter OD <= ^HVESD_W_3_2_PNP_24 um
  ENCLOSE RECTANGLE COL_EMI_ESD_PNP_24 (HVESD_W_3_2_PNP_24 + GRID) GRID ORTHOGONAL ONLY
  PATH LENGTH COL_L_PNP_24 > HVESD_W_3_2_PNP_24
  PATH LENGTH EMI_L_PNP_24 > HVESD_W_3_2_PNP_24
}






HVESD.W.8 { @ min width of Base N+ OD ring >= ^HVESD_W_8
	INT HVESD_BOD < HVESD_W_8 ABUT < 90 SINGULAR REGION
}

HVESD.W.9.1 { @ min width of P+ iso ring in ESD device cell >=^HVESD_W_9_1
	A = SIZE HVESD_ISO_H BY HVESD_W_9_1
	B = ((DONUT PPOD) TOUCH HVESD_ISO_H) OR HVESD_ISO_H
	A NOT B
}


HVESD.W.11_PNP_20 { @ Min and max width of U-shape PDD in finger width direction for PNP_20 == ^HVESD_W_11_PNP_20
    A1 = EXPAND EDGE COL_EMI_ESD_merge_PNP_20_width_edge OUTSIDE BY HVESD_E_10_PNP_20
    A2 = PDD TOUCH EDGE A1
    A3 = EXPAND EDGE A2 INSIDE BY HVESD_W_11_PNP_20
    A4 = EXPAND EDGE A2 INSIDE BY HVESD_W_11_PNP_20 + GRID
	A = A4 NOT A3
	A NOT TOUCH PDD
}

HVESD.W.12_PNP_20 { @ Min and max width of U-shape PDD in finger length direction for PNP_20 == ^HVESD_W_12_PNP_20
    A1 = COL_EMI_ESD_merge_PNP_20_length_edge INSIDE EDGE HVSHP
	A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_11_PNP_20
	A3 = PDD TOUCH EDGE A2
	A4 = EXPAND EDGE A3 INSIDE BY HVESD_W_12_PNP_20
	A5 = EXPAND EDGE A3 INSIDE BY HVESD_W_12_PNP_20 + GRID
	A = A5 NOT A4
	A NOT TOUCH PDD

	B = HOLES (HVSHN INTERACT BASOD_ESD_PNP_20)
	NOT RECTANGLE B
}
//HVESD.W.14 is checked by HVESD.W.12_PNP_20


HVESD.W.13_PNP_20 { @ Min and max length of PDD in finger width direction for PNP_20 == ^HVESD_W_13_PNP_20
    A1 = PDD INTERACT BASOD_ESD_PNP_20_H
    A = RECTANGLE A1
	WITH WIDTH A != HVESD_W_13_PNP_20
}

HVESD.W.22.1_PNP_36 { @ Min and max width of NBLSLOT == ^HVESD_W_22_1_PNP_36
  A = NBLSLOT INSIDE PPOD_H_BJT_PNP_36
  WITH WIDTH A != HVESD_W_22_1_PNP_36
}

HVESD.W.22.1_PNP_45 { @ Min and max width of NBLSLOT == ^HVESD_W_22_1_PNP_45 
  A = NBLSLOT INSIDE PPOD_H_BJT_PNP_45
  WITH WIDTH A != HVESD_W_22_1_PNP_45
}

HVESD.S.1_PNP_6 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_6
 EXT COL_EMI_ESD_PNP_6 < HVESD_S_1_PNP_6 ABUT < 90 SINGULAR REGION
 ERR = BASOD_ESD_PNP_6_H INTERACT COL_EMI_ESD_merge_PNP_6 > 1
 COL_EMI_ESD_merge_PNP_6 INTERACT ERR
}
HVESD.S.1_PNP_9 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_9
 EXT COL_EMI_ESD_PNP_9 < HVESD_S_1_PNP_9 ABUT < 90 SINGULAR REGION
 ERR = BASOD_ESD_PNP_9_H INTERACT COL_EMI_ESD_merge_PNP_9 > 1
 COL_EMI_ESD_merge_PNP_9 INTERACT ERR
}
HVESD.S.1_PNP_12 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_12
 EXT COL_EMI_ESD_PNP_12 < HVESD_S_1_PNP_12 ABUT < 90 SINGULAR REGION
 ERR = BASOD_ESD_PNP_12_H INTERACT COL_EMI_ESD_merge_PNP_12 > 1
 COL_EMI_ESD_merge_PNP_12 INTERACT ERR
}
HVESD.S.1_PNP_29 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_29
 EXT COL_EMI_ESD_PNP_29 < HVESD_S_1_PNP_29 ABUT < 90 SINGULAR REGION
 ERR = BASOD_ESD_PNP_29_H INTERACT COL_EMI_ESD_merge_PNP_29 > 1
 COL_EMI_ESD_merge_PNP_29 INTERACT ERR
}
HVESD.S.1_PNP_36 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_36
 EXT COL_EMI_ESD_PNP_36 < HVESD_S_1_PNP_36 ABUT < 90 SINGULAR REGION
 ERR = BASOD_ESD_PNP_36_H INTERACT COL_EMI_ESD_merge_PNP_36 > 1
 COL_EMI_ESD_merge_PNP_36 INTERACT ERR
}
HVESD.S.1_PNP_45 { @ min and max space between Emitter OD and Collector OD == ^HVESD_S_1_PNP_45
 EXT COL_EMI_ESD_PNP_45 < HVESD_S_1_PNP_45 ABUT < 90 SINGULAR REGION
 ERR = BASOD_ESD_PNP_45_H INTERACT COL_EMI_ESD_merge_PNP_45 > 1
 COL_EMI_ESD_merge_PNP_45 INTERACT ERR
}

HVESD.S.2_PNP_12_PDD { @ Min and max space between Emitter PP and Collector PP == ^HVESD_S_2_PNP_12_PDD
    A = PP INTERACT COLOD_ESD_PNP_12_PDD
	B = PP INTERACT EMIOD_ESD_PNP_12_PDD
	C = A OR B
	D = SIZE C BY HVESD_S_2_PNP_12_PDD/2 OVERUNDER
	ERROR = NBL INTERACT D > 1 
	C INTERACT ERROR
	EXT A B < HVESD_S_2_PNP_12_PDD ABUT <90 SINGULAR REGION
}
HVESD.S.2_PNP_16 { @ Min and max space between Emitter PP and Collector PP == ^HVESD_S_2_PNP_16
    A = PP INTERACT COLOD_ESD_PNP_16
	B = PP INTERACT EMIOD_ESD_PNP_16
	C = A OR B
	D = SIZE C BY HVESD_S_2_PNP_16/2 OVERUNDER
	ERROR = NBL INTERACT D > 1 
	C INTERACT ERROR
	EXT A B < HVESD_S_2_PNP_16 ABUT <90 SINGULAR REGION
}
HVESD.S.2_PNP_20 { @ Min and max space between Emitter PP and Collector PP == ^HVESD_S_2_PNP_20
    A = PP INTERACT COLOD_ESD_PNP_20
	B = PP INTERACT EMIOD_ESD_PNP_20
	C = A OR B
	D = SIZE C BY HVESD_S_2_PNP_20/2 OVERUNDER
	ERROR = NBL INTERACT D > 1 
	C INTERACT ERROR
	EXT A B < HVESD_S_2_PNP_20 ABUT <90 SINGULAR REGION
}
HVESD.S.2_PNP_20_PDD { @ Min and max space between Emitter PP and Collector PP == ^HVESD_S_2_PNP_20_PDD
    A = PP INTERACT COLOD_ESD_PNP_20_PDD
	B = PP INTERACT EMIOD_ESD_PNP_20_PDD
	C = A OR B
	D = SIZE C BY HVESD_S_2_PNP_20_PDD/2 OVERUNDER
	ERROR = NBL INTERACT D > 1 
	C INTERACT ERROR
	EXT A B < HVESD_S_2_PNP_20_PDD ABUT <90 SINGULAR REGION
}
HVESD.S.2_PNP_24 { @ Min and max space between Emitter PP and Collector PP == ^HVESD_S_2_PNP_24
    A = PP INTERACT COLOD_ESD_PNP_24
	B = PP INTERACT EMIOD_ESD_PNP_24
	C = A OR B
	D = SIZE C BY HVESD_S_2_PNP_24/2 OVERUNDER
	ERROR = NBL INTERACT D > 1 
	C INTERACT ERROR
	EXT A B < HVESD_S_2_PNP_24 ABUT <90 SINGULAR REGION
}

HVESD.S.3_PNP_6 { @ min and max space between Collector OD and Base OD in finger width direction == ^HVESD_S_3_PNP_6
   A1 = COLOD_ESD_PNP_6 INSIDE EDGE COL_EMI_ESD_merge_PNP_6
   A2 = EXPAND EDGE A1 INSIDE BY GRID 
   A3 = COLOD_ESD_PNP_6 NOT TOUCH EDGE A2
   A = EXPAND EDGE A3 OUTSIDE BY HVESD_S_3_PNP_6
   A NOT TOUCH BASOD_ESD_PNP_6
}

HVESD.S.4_PNP_6 { @ min and max space between {Collector P+OD Emitter P+OD} and Base OD ring in finger length direction == ^HVESD_S_4_PNP_6
   A1 = EXPAND EDGE COL_EMI_ESD_merge_PNP_6 OUTSIDE BY GRID
   A2 = A1 TOUCH COLOD_ESD_PNP_6 != 1
   A3 = (COLOD_ESD_PNP_6 OR EMIOD_ESD_PNP_6) TOUCH EDGE A2
   A = EXPAND EDGE A3 OUTSIDE BY HVESD_S_4_PNP_6
   A NOT TOUCH BASOD_ESD_PNP_6
}
HVESD.S.3_PNP_9 { @ min and max space between Collector OD and Base OD in finger width direction == ^HVESD_S_3_PNP_9
   A1 = COLOD_ESD_PNP_9 INSIDE EDGE COL_EMI_ESD_merge_PNP_9
   A2 = EXPAND EDGE A1 INSIDE BY GRID 
   A3 = COLOD_ESD_PNP_9 NOT TOUCH EDGE A2
   A = EXPAND EDGE A3 OUTSIDE BY HVESD_S_3_PNP_9
   A NOT TOUCH BASOD_ESD_PNP_9
}

HVESD.S.4_PNP_9 { @ min and max space between {Collector P+OD Emitter P+OD} and Base OD ring in finger length direction == ^HVESD_S_4_PNP_9
   A1 = EXPAND EDGE COL_EMI_ESD_merge_PNP_9 OUTSIDE BY GRID
   A2 = A1 TOUCH COLOD_ESD_PNP_9 != 1
   A3 = (COLOD_ESD_PNP_9 OR EMIOD_ESD_PNP_9) TOUCH EDGE A2
   A = EXPAND EDGE A3 OUTSIDE BY HVESD_S_4_PNP_9
   A NOT TOUCH BASOD_ESD_PNP_9
}
HVESD.S.3_PNP_12 { @ min and max space between Collector OD and Base OD in finger width direction == ^HVESD_S_3_PNP_12
   A1 = COLOD_ESD_PNP_12 INSIDE EDGE COL_EMI_ESD_merge_PNP_12
   A2 = EXPAND EDGE A1 INSIDE BY GRID 
   A3 = COLOD_ESD_PNP_12 NOT TOUCH EDGE A2
   A = EXPAND EDGE A3 OUTSIDE BY HVESD_S_3_PNP_12
   A NOT TOUCH BASOD_ESD_PNP_12
}

HVESD.S.4_PNP_12 { @ min and max space between {Collector P+OD Emitter P+OD} and Base OD ring in finger length direction == ^HVESD_S_4_PNP_12
   A1 = EXPAND EDGE COL_EMI_ESD_merge_PNP_12 OUTSIDE BY GRID
   A2 = A1 TOUCH COLOD_ESD_PNP_12 != 1
   A3 = (COLOD_ESD_PNP_12 OR EMIOD_ESD_PNP_12) TOUCH EDGE A2
   A = EXPAND EDGE A3 OUTSIDE BY HVESD_S_4_PNP_12
   A NOT TOUCH BASOD_ESD_PNP_12
}
HVESD.S.3_PNP_29 { @ min and max space between Collector OD and Base OD in finger width direction == ^HVESD_S_3_PNP_29
   A1 = COLOD_ESD_PNP_29 INSIDE EDGE COL_EMI_ESD_merge_PNP_29
   A2 = EXPAND EDGE A1 INSIDE BY GRID 
   A3 = COLOD_ESD_PNP_29 NOT TOUCH EDGE A2
   A = EXPAND EDGE A3 OUTSIDE BY HVESD_S_3_PNP_29
   A NOT TOUCH BASOD_ESD_PNP_29
}

HVESD.S.4_PNP_29 { @ min and max space between {Collector P+OD Emitter P+OD} and Base OD ring in finger length direction == ^HVESD_S_4_PNP_29
   A1 = EXPAND EDGE COL_EMI_ESD_merge_PNP_29 OUTSIDE BY GRID
   A2 = A1 TOUCH COLOD_ESD_PNP_29 != 1
   A3 = (COLOD_ESD_PNP_29 OR EMIOD_ESD_PNP_29) TOUCH EDGE A2
   A = EXPAND EDGE A3 OUTSIDE BY HVESD_S_4_PNP_29
   A NOT TOUCH BASOD_ESD_PNP_29
}
HVESD.S.3_PNP_36 { @ min and max space between Collector OD and Base OD in finger width direction == ^HVESD_S_3_PNP_36
   A1 = COLOD_ESD_PNP_36 INSIDE EDGE COL_EMI_ESD_merge_PNP_36
   A2 = EXPAND EDGE A1 INSIDE BY GRID 
   A3 = COLOD_ESD_PNP_36 NOT TOUCH EDGE A2
   A = EXPAND EDGE A3 OUTSIDE BY HVESD_S_3_PNP_36
   A NOT TOUCH BASOD_ESD_PNP_36
}

HVESD.S.4_PNP_36 { @ min and max space between {Collector P+OD Emitter P+OD} and Base OD ring in finger length direction == ^HVESD_S_4_PNP_36
   A1 = EXPAND EDGE COL_EMI_ESD_merge_PNP_36 OUTSIDE BY GRID
   A2 = A1 TOUCH COLOD_ESD_PNP_36 != 1
   A3 = (COLOD_ESD_PNP_36 OR EMIOD_ESD_PNP_36) TOUCH EDGE A2
   A = EXPAND EDGE A3 OUTSIDE BY HVESD_S_4_PNP_36
   A NOT TOUCH BASOD_ESD_PNP_36
}
HVESD.S.3_PNP_45 { @ min and max space between Collector OD and Base OD in finger width direction == ^HVESD_S_3_PNP_45
   A1 = COLOD_ESD_PNP_45 INSIDE EDGE COL_EMI_ESD_merge_PNP_45
   A2 = EXPAND EDGE A1 INSIDE BY GRID 
   A3 = COLOD_ESD_PNP_45 NOT TOUCH EDGE A2
   A = EXPAND EDGE A3 OUTSIDE BY HVESD_S_3_PNP_45
   A NOT TOUCH BASOD_ESD_PNP_45
}

HVESD.S.4_PNP_45 { @ min and max space between {Collector P+OD Emitter P+OD} and Base OD ring in finger length direction == ^HVESD_S_4_PNP_45
   A1 = EXPAND EDGE COL_EMI_ESD_merge_PNP_45 OUTSIDE BY GRID
   A2 = A1 TOUCH COLOD_ESD_PNP_45 != 1
   A3 = (COLOD_ESD_PNP_45 OR EMIOD_ESD_PNP_45) TOUCH EDGE A2
   A = EXPAND EDGE A3 OUTSIDE BY HVESD_S_4_PNP_45
   A NOT TOUCH BASOD_ESD_PNP_45
}

HVESD.S.5_PNP_12_PDD { @ Min and max space between Emitter/Collector OD and Base N+OD ring in finger width direction == ^HVESD_S_5_PNP_12_PDD
    A = EXPAND EDGE COL_EMI_ESD_merge_PNP_12_PDD_width_edge OUTSIDE BY HVESD_S_5_PNP_12_PDD
	A NOT TOUCH BASOD_ESD_PNP_12_PDD
}
HVESD.S.5_PNP_16 { @ Min and max space between Emitter/Collector OD and Base N+OD ring in finger width direction == ^HVESD_S_5_PNP_16
    A = EXPAND EDGE COL_EMI_ESD_merge_PNP_16_width_edge OUTSIDE BY HVESD_S_5_PNP_16
	A NOT TOUCH BASOD_ESD_PNP_16
}
HVESD.S.5_PNP_20 { @ Min and max space between Emitter/Collector OD and Base N+OD ring in finger width direction == ^HVESD_S_5_PNP_20
    A = EXPAND EDGE COL_EMI_ESD_merge_PNP_20_width_edge OUTSIDE BY HVESD_S_5_PNP_20
	A NOT TOUCH BASOD_ESD_PNP_20
}
HVESD.S.5_PNP_20_PDD { @ Min and max space between Emitter/Collector OD and Base N+OD ring in finger width direction == ^HVESD_S_5_PNP_20_PDD
    A = EXPAND EDGE COL_EMI_ESD_merge_PNP_20_PDD_width_edge OUTSIDE BY HVESD_S_5_PNP_20_PDD
	A NOT TOUCH BASOD_ESD_PNP_20_PDD
}
HVESD.S.5_PNP_24 { @ Min and max space between Emitter/Collector OD and Base N+OD ring in finger width direction == ^HVESD_S_5_PNP_24
    A = EXPAND EDGE COL_EMI_ESD_merge_PNP_24_width_edge OUTSIDE BY HVESD_S_5_PNP_24
	A NOT TOUCH BASOD_ESD_PNP_24
}

HVESD.S.6_PNP_12_PDD { @ Min and max space between Emitter/Collector OD and Base N+OD ring in finger length direction == ^HVESD_S_6_PNP_12_PDD
    A = EXPAND EDGE COL_EMI_ESD_merge_PNP_12_PDD_length_edge OUTSIDE BY HVESD_S_6_PNP_12_PDD
	A NOT TOUCH BASOD_ESD_PNP_12_PDD
}
HVESD.S.6_PNP_16 { @ Min and max space between Emitter/Collector OD and Base N+OD ring in finger length direction == ^HVESD_S_6_PNP_16
    A = EXPAND EDGE COL_EMI_ESD_merge_PNP_16_length_edge OUTSIDE BY HVESD_S_6_PNP_16
	A NOT TOUCH BASOD_ESD_PNP_16
}
HVESD.S.6_PNP_20 { @ Min and max space between Emitter/Collector OD and Base N+OD ring in finger length direction == ^HVESD_S_6_PNP_20
    A = EXPAND EDGE COL_EMI_ESD_merge_PNP_20_length_edge OUTSIDE BY HVESD_S_6_PNP_20
	A NOT TOUCH BASOD_ESD_PNP_20
}
HVESD.S.6_PNP_20_PDD { @ Min and max space between Emitter/Collector OD and Base N+OD ring in finger length direction == ^HVESD_S_6_PNP_20_PDD
    A = EXPAND EDGE COL_EMI_ESD_merge_PNP_20_PDD_length_edge OUTSIDE BY HVESD_S_6_PNP_20_PDD
	A NOT TOUCH BASOD_ESD_PNP_20_PDD
}
HVESD.S.6_PNP_24 { @ Min and max space between Emitter/Collector OD and Base N+OD ring in finger length direction == ^HVESD_S_6_PNP_24
    A = EXPAND EDGE COL_EMI_ESD_merge_PNP_24_length_edge OUTSIDE BY HVESD_S_6_PNP_24
	A NOT TOUCH BASOD_ESD_PNP_24
}

HVESD.S.7.1_PNP_36 { @ Min and max space between two NBLSLOT == ^HVESD_S_7_1_PNP_36
    A = HVSHN INTERACT BASOD_ESD_PNP_36
	B = HOLES A INNER
	C = A OR B
	D = NBLSLOT INTERACT C
    E = SIZE D BY HVESD_S_7_1_PNP_36/2 OVERUNDER
	B INTERACT E > 1
	EXT D < HVESD_S_7_1_PNP_36 ABUT < 90 SINGULAR REGION
}
HVESD.S.7.1_PNP_45 { @ Min and max space between two NBLSLOT == ^HVESD_S_7_1_PNP_45
    A = HVSHN INTERACT BASOD_ESD_PNP_45
	B = HOLES A INNER
	C = A OR B
	D = NBLSLOT INTERACT C
    E = SIZE D BY HVESD_S_7_1_PNP_45/2 OVERUNDER
	B INTERACT E > 1
	EXT D < HVESD_S_7_1_PNP_45 ABUT < 90 SINGULAR REGION
}

HVESD.C.1.1_PNP_6 { @ Min and max clearance from SH_N to P+ isolation ring == ^HVESD_C_1_1_PNP_6
   A1 = HVSHN INTERACT BASOD_ESD_PNP_6
   A = (HOLES A1) OR A1
   B = SIZE PPOD_H_BJT_PNP_6 BY -HVESD_C_1_1_PNP_6
   B XOR A
}
HVESD.C.1.1_PNP_9 { @ Min and max clearance from SH_N to P+ isolation ring == ^HVESD_C_1_1_PNP_9
   A1 = HVSHN INTERACT BASOD_ESD_PNP_9
   A = (HOLES A1) OR A1
   B = SIZE PPOD_H_BJT_PNP_9 BY -HVESD_C_1_1_PNP_9
   B XOR A
}
HVESD.C.1.1_PNP_12 { @ Min and max clearance from SH_N to P+ isolation ring == ^HVESD_C_1_1_PNP_12
   A1 = HVSHN INTERACT BASOD_ESD_PNP_12
   A = (HOLES A1) OR A1
   B = SIZE PPOD_H_BJT_PNP_12 BY -HVESD_C_1_1_PNP_12
   B XOR A
}
HVESD.C.1.1_PNP_20 { @ Min and max clearance from SH_N to P+ isolation ring == ^HVESD_C_1_1_PNP_20
   A1 = HVSHN INTERACT BASOD_ESD_PNP_20
   A = (HOLES A1) OR A1
   B = SIZE PPOD_H_BJT_PNP_20 BY -HVESD_C_1_1_PNP_20
   B XOR A
}
HVESD.C.1.1_PNP_12_PDD { @ Min and max clearance from SH_N to P+ isolation ring == ^HVESD_C_1_1_PNP_12_PDD
   A1 = HVSHN INTERACT BASOD_ESD_PNP_12_PDD
   A = (HOLES A1) OR A1
   B = SIZE PPOD_H_BJT_PNP_12_PDD BY -HVESD_C_1_1_PNP_12_PDD
   B XOR A
}
HVESD.C.1.1_PNP_16 { @ Min and max clearance from SH_N to P+ isolation ring == ^HVESD_C_1_1_PNP_16
   A1 = HVSHN INTERACT BASOD_ESD_PNP_16
   A = (HOLES A1) OR A1
   B = SIZE PPOD_H_BJT_PNP_16 BY -HVESD_C_1_1_PNP_16
   B XOR A
}
HVESD.C.1.1_PNP_20_PDD { @ Min and max clearance from SH_N to P+ isolation ring == ^HVESD_C_1_1_PNP_20_PDD
   A1 = HVSHN INTERACT BASOD_ESD_PNP_20_PDD
   A = (HOLES A1) OR A1
   B = SIZE PPOD_H_BJT_PNP_20_PDD BY -HVESD_C_1_1_PNP_20_PDD
   B XOR A
}
HVESD.C.1.1_PNP_24 { @ Min and max clearance from SH_N to P+ isolation ring == ^HVESD_C_1_1_PNP_24
   A1 = HVSHN INTERACT BASOD_ESD_PNP_24
   A = (HOLES A1) OR A1
   B = SIZE PPOD_H_BJT_PNP_24 BY -HVESD_C_1_1_PNP_24
   B XOR A
}
HVESD.C.1.1_PNP_29 { @ Min and max clearance from SH_N to P+ isolation ring == ^HVESD_C_1_1_PNP_29
   A1 = HVSHN INTERACT BASOD_ESD_PNP_29
   A = (HOLES A1) OR A1
   B = SIZE PPOD_H_BJT_PNP_29 BY -HVESD_C_1_1_PNP_29
   B XOR A
}
HVESD.C.1.1_PNP_36 { @ Min and max clearance from SH_N to P+ isolation ring == ^HVESD_C_1_1_PNP_36
   A1 = HVSHN INTERACT BASOD_ESD_PNP_36
   A = (HOLES A1) OR A1
   B = SIZE PPOD_H_BJT_PNP_36 BY -HVESD_C_1_1_PNP_36
   B XOR A
}
HVESD.C.1.1_PNP_45 { @ Min and max clearance from SH_N to P+ isolation ring == ^HVESD_C_1_1_PNP_45
   A1 = HVSHN INTERACT BASOD_ESD_PNP_45
   A = (HOLES A1) OR A1
   B = SIZE PPOD_H_BJT_PNP_45 BY -HVESD_C_1_1_PNP_45
   B XOR A
}


HVESD.C.2_PNP_12_PDD { @ min and max clearance from CFP to SH_N in finger width direction == ^HVESD_C_2_PNP_12_PDD
   A = OD INTERACT EMIOD_ESD_PNP_12_PDD
   B = HVSHN INTERACT A 
   INT B CFP < HVESD_C_2_PNP_12_PDD ABUT < 90 SINGULAR REGION
   C = B AND CFP
   SIZE C BY HVESD_C_2_PNP_12_PDD/2 UNDEROVER
}

HVESD.C.2_PNP_16 { @ min and max clearance from CFP to SH_N in finger width direction == ^HVESD_C_2_PNP_16
   A = OD INTERACT EMIOD_ESD_PNP_16
   B = HVSHN INTERACT A 
   INT B CFP < HVESD_C_2_PNP_16 ABUT < 90 SINGULAR REGION
   C = B AND CFP
   SIZE C BY HVESD_C_2_PNP_16/2 UNDEROVER
}

HVESD.C.2_PNP_20_PDD { @ min and max clearance from CFP to SH_N in finger width direction == ^HVESD_C_2_PNP_20_PDD
   A = OD INTERACT EMIOD_ESD_PNP_20_PDD
   B = HVSHN INTERACT A 
   INT B CFP < HVESD_C_2_PNP_20_PDD ABUT < 90 SINGULAR REGION
   C = B AND CFP
   SIZE C BY HVESD_C_2_PNP_20_PDD/2 UNDEROVER
}

HVESD.C.2_PNP_24 { @ min and max clearance from CFP to SH_N in finger width direction == ^HVESD_C_2_PNP_24
   A = OD INTERACT EMIOD_ESD_PNP_24
   B = HVSHN INTERACT A 
   INT B CFP < HVESD_C_2_PNP_24 ABUT < 90 SINGULAR REGION
   C = B AND CFP
   SIZE C BY HVESD_C_2_PNP_24/2 UNDEROVER
}

HVESD.E.39.1_PNP_36 { @ Min and max extension of (HVNW OR HVPB) beyond NBLSLOT in finger length direction == ^HVESD_E_39_1_PNP_36

    A = EXPAND EDGE HVPB_PNP_36_length_edge OUTSIDE BY HVESD_E_14_PNP_36
    B1 = HVNW TOUCH EDGE A
    B = EXPAND EDGE B1 OUTSIDE BY GRID
    (NBLSLOT INSIDE BASOD_ESD_PNP_36_H) TOUCH B != 2
	(NBLSLOT INSIDE BASOD_ESD_PNP_36_H) NOT INSIDE (HVNW OR HVPB)

}
HVESD.E.39.1_PNP_45 { @ Min and max extension of (HVNW OR HVPB) beyond NBLSLOT in finger length direction == ^HVESD_E_39_1_PNP_45

    A = EXPAND EDGE HVPB_PNP_45_length_edge OUTSIDE BY HVESD_E_14_PNP_45
    B1 = HVNW TOUCH EDGE A
    B = EXPAND EDGE B1 OUTSIDE BY GRID
    (NBLSLOT INSIDE BASOD_ESD_PNP_45_H) TOUCH B != 2
	(NBLSLOT INSIDE BASOD_ESD_PNP_45_H) NOT INSIDE (HVNW OR HVPB)

}
HVESD.E.40.1_PNP_36 { @ Min extension of (HVNW OR HVPB) beyond outermost NBLSLOT in finger width direction within {HVNW AND NBL} >= ^HVESD_E_40_1_PNP_36
    (NBLSLOT INTERACT PPOD_H_BJT_PNP_36) NOT INSIDE (HVNW OR HVPB)

}
HVESD.E.40.1_PNP_45 { @ Min extension of (HVNW OR HVPB) beyond outermost NBLSLOT in finger width direction within {HVNW AND NBL} >= ^HVESD_E_40_1_PNP_45
    (NBLSLOT INTERACT PPOD_H_BJT_PNP_45) NOT INSIDE (HVNW OR HVPB)

}
HVESD.E.41.1_PNP_36 { @ Max extension of (HVNW OR HVPB) beyond NBLSLOT in finger width direction within {HVNW AND NBL} <= ^HVESD_E_41_1_PNP_36

    A = EXPAND EDGE HVPB_PNP_36_outmost_width_edge OUTSIDE BY HVESD_E_13_PNP_36
	B1 = HVNW TOUCH EDGE A
	B = EXPAND EDGE B1 INSIDE BY HVESD_E_41_1_PNP_36 
	B NOT INTERACT NBLSLOT

    C = EXPAND EDGE HVPB_PNP_36_inner_width_edge OUTSIDE BY HVESD_E_13_1_PNP_36
	D1 = HVNW TOUCH EDGE C
	D = EXPAND EDGE D1 INSIDE BY HVESD_E_41_1_PNP_36 
	D NOT INTERACT NBLSLOT
}
HVESD.E.41.1_PNP_45 { @ Max extension of (HVNW OR HVPB) beyond NBLSLOT in finger width direction within {HVNW AND NBL} <= ^HVESD_E_41_1_PNP_45

    A = EXPAND EDGE HVPB_PNP_45_outmost_width_edge OUTSIDE BY HVESD_E_13_PNP_45
	B1 = HVNW TOUCH EDGE A
	B = EXPAND EDGE B1 INSIDE BY HVESD_E_41_1_PNP_45 
	B NOT INTERACT NBLSLOT

    C = EXPAND EDGE HVPB_PNP_45_inner_width_edge OUTSIDE BY HVESD_E_13_1_PNP_45
	D1 = HVNW TOUCH EDGE C
	D = EXPAND EDGE D1 INSIDE BY HVESD_E_41_1_PNP_45 
	D NOT INTERACT NBLSLOT
}

HVESD.E.1_PNP_6 { @ Min and max extension of EMRDMY beyond Emitter P+OD for PNP_6 == ^HVESD_E_1_PNP_6
    A = EMRDMY INTERACT EMIOD_ESD_PNP_6
	B = SIZE EMIOD_ESD_PNP_6 BY HVESD_E_1_PNP_6
	A XOR B
}
HVESD.E.1_PNP_12 { @ Min and max extension of EMRDMY beyond Emitter P+OD for PNP_12 == ^HVESD_E_1_PNP_12
    A = EMRDMY INTERACT EMIOD_ESD_PNP_12
	B = SIZE EMIOD_ESD_PNP_12 BY HVESD_E_1_PNP_12
	A XOR B
}

   EMIOD_ESD_PNP_6_length_edge = EMIOD_ESD_PNP_6 TOUCH EDGE COL_EMI_ESD_merge_PNP_6
   COLOD_ESD_PNP_6_length_edge_pre = EXPAND EDGE (COLOD_ESD_PNP_6 INSIDE EDGE COL_EMI_ESD_merge_PNP_6) INSIDE BY GRID
   COLOD_ESD_PNP_6_length_edge_pre1 = EXPAND EDGE (COLOD_ESD_PNP_6 INSIDE EDGE COL_EMI_ESD_merge_PNP_6) INSIDE BY GRID * 2 
   COLOD_ESD_PNP_6_length_edge = COLOD_ESD_PNP_6 TOUCH EDGE (COLOD_ESD_PNP_6_length_edge_pre1 NOT COLOD_ESD_PNP_6_length_edge_pre)

HVESD.E.2_PNP_6 { @ Min extension of {Emitter P+OD OR Collector P+OD} beyond CO in finger length direction > ^HVESD_E_2_PNP_6
   A = CO INTERACT COL_EMI_ESD_merge_PNP_6
   ENC A EMIOD_ESD_PNP_6_length_edge < HVESD_E_2_PNP_6 ABUT < 90 REGION
   ENC A COLOD_ESD_PNP_6_length_edge < HVESD_E_2_PNP_6 ABUT < 90 REGION
}
   EMIOD_ESD_PNP_9_length_edge = EMIOD_ESD_PNP_9 TOUCH EDGE COL_EMI_ESD_merge_PNP_9
   COLOD_ESD_PNP_9_length_edge_pre = EXPAND EDGE (COLOD_ESD_PNP_9 INSIDE EDGE COL_EMI_ESD_merge_PNP_9) INSIDE BY GRID
   COLOD_ESD_PNP_9_length_edge_pre1 = EXPAND EDGE (COLOD_ESD_PNP_9 INSIDE EDGE COL_EMI_ESD_merge_PNP_9) INSIDE BY GRID * 2 
   COLOD_ESD_PNP_9_length_edge = COLOD_ESD_PNP_9 TOUCH EDGE (COLOD_ESD_PNP_9_length_edge_pre1 NOT COLOD_ESD_PNP_9_length_edge_pre)

HVESD.E.2_PNP_9 { @ Min extension of {Emitter P+OD OR Collector P+OD} beyond CO in finger length direction > ^HVESD_E_2_PNP_9
   A = CO INTERACT COL_EMI_ESD_merge_PNP_9
   ENC A EMIOD_ESD_PNP_9_length_edge < HVESD_E_2_PNP_9 ABUT < 90 REGION
   ENC A COLOD_ESD_PNP_9_length_edge < HVESD_E_2_PNP_9 ABUT < 90 REGION
}
   EMIOD_ESD_PNP_12_length_edge = EMIOD_ESD_PNP_12 TOUCH EDGE COL_EMI_ESD_merge_PNP_12
   COLOD_ESD_PNP_12_length_edge_pre = EXPAND EDGE (COLOD_ESD_PNP_12 INSIDE EDGE COL_EMI_ESD_merge_PNP_12) INSIDE BY GRID
   COLOD_ESD_PNP_12_length_edge_pre1 = EXPAND EDGE (COLOD_ESD_PNP_12 INSIDE EDGE COL_EMI_ESD_merge_PNP_12) INSIDE BY GRID * 2 
   COLOD_ESD_PNP_12_length_edge = COLOD_ESD_PNP_12 TOUCH EDGE (COLOD_ESD_PNP_12_length_edge_pre1 NOT COLOD_ESD_PNP_12_length_edge_pre)

HVESD.E.2_PNP_12 { @ Min extension of {Emitter P+OD OR Collector P+OD} beyond CO in finger length direction > ^HVESD_E_2_PNP_12
   A = CO INTERACT COL_EMI_ESD_merge_PNP_12
   ENC A EMIOD_ESD_PNP_12_length_edge < HVESD_E_2_PNP_12 ABUT < 90 REGION
   ENC A COLOD_ESD_PNP_12_length_edge < HVESD_E_2_PNP_12 ABUT < 90 REGION
}
   EMIOD_ESD_PNP_29_length_edge = EMIOD_ESD_PNP_29 TOUCH EDGE COL_EMI_ESD_merge_PNP_29
   COLOD_ESD_PNP_29_length_edge_pre = EXPAND EDGE (COLOD_ESD_PNP_29 INSIDE EDGE COL_EMI_ESD_merge_PNP_29) INSIDE BY GRID
   COLOD_ESD_PNP_29_length_edge_pre1 = EXPAND EDGE (COLOD_ESD_PNP_29 INSIDE EDGE COL_EMI_ESD_merge_PNP_29) INSIDE BY GRID * 2 
   COLOD_ESD_PNP_29_length_edge = COLOD_ESD_PNP_29 TOUCH EDGE (COLOD_ESD_PNP_29_length_edge_pre1 NOT COLOD_ESD_PNP_29_length_edge_pre)

HVESD.E.2_PNP_29 { @ Min extension of {Emitter P+OD OR Collector P+OD} beyond CO in finger length direction > ^HVESD_E_2_PNP_29
   A = CO INTERACT COL_EMI_ESD_merge_PNP_29
   ENC A EMIOD_ESD_PNP_29_length_edge < HVESD_E_2_PNP_29 ABUT < 90 REGION
   ENC A COLOD_ESD_PNP_29_length_edge < HVESD_E_2_PNP_29 ABUT < 90 REGION
}
   EMIOD_ESD_PNP_36_length_edge = EMIOD_ESD_PNP_36 TOUCH EDGE COL_EMI_ESD_merge_PNP_36
   COLOD_ESD_PNP_36_length_edge_pre = EXPAND EDGE (COLOD_ESD_PNP_36 INSIDE EDGE COL_EMI_ESD_merge_PNP_36) INSIDE BY GRID
   COLOD_ESD_PNP_36_length_edge_pre1 = EXPAND EDGE (COLOD_ESD_PNP_36 INSIDE EDGE COL_EMI_ESD_merge_PNP_36) INSIDE BY GRID * 2 
   COLOD_ESD_PNP_36_length_edge = COLOD_ESD_PNP_36 TOUCH EDGE (COLOD_ESD_PNP_36_length_edge_pre1 NOT COLOD_ESD_PNP_36_length_edge_pre)

HVESD.E.2_PNP_36 { @ Min extension of {Emitter P+OD OR Collector P+OD} beyond CO in finger length direction > ^HVESD_E_2_PNP_36
   A = CO INTERACT COL_EMI_ESD_merge_PNP_36
   ENC A EMIOD_ESD_PNP_36_length_edge < HVESD_E_2_PNP_36 ABUT < 90 REGION
   ENC A COLOD_ESD_PNP_36_length_edge < HVESD_E_2_PNP_36 ABUT < 90 REGION
}
   EMIOD_ESD_PNP_45_length_edge = EMIOD_ESD_PNP_45 TOUCH EDGE COL_EMI_ESD_merge_PNP_45
   COLOD_ESD_PNP_45_length_edge_pre = EXPAND EDGE (COLOD_ESD_PNP_45 INSIDE EDGE COL_EMI_ESD_merge_PNP_45) INSIDE BY GRID
   COLOD_ESD_PNP_45_length_edge_pre1 = EXPAND EDGE (COLOD_ESD_PNP_45 INSIDE EDGE COL_EMI_ESD_merge_PNP_45) INSIDE BY GRID * 2 
   COLOD_ESD_PNP_45_length_edge = COLOD_ESD_PNP_45 TOUCH EDGE (COLOD_ESD_PNP_45_length_edge_pre1 NOT COLOD_ESD_PNP_45_length_edge_pre)

HVESD.E.2_PNP_45 { @ Min extension of {Emitter P+OD OR Collector P+OD} beyond CO in finger length direction > ^HVESD_E_2_PNP_45
   A = CO INTERACT COL_EMI_ESD_merge_PNP_45
   ENC A EMIOD_ESD_PNP_45_length_edge < HVESD_E_2_PNP_45 ABUT < 90 REGION
   ENC A COLOD_ESD_PNP_45_length_edge < HVESD_E_2_PNP_45 ABUT < 90 REGION
}

HVESD.E.4_PNP_12_PDD { @ Min extension of Emitter/Collector OD beyond CO in finger length direction >= ^HVESD_E_4_PNP_12_PDD
    ENC CO COL_EMI_ESD_merge_PNP_12_PDD_length_edge < HVESD_E_4_PNP_12_PDD ABUT < 90 REGION
}
HVESD.E.4_PNP_16 { @ Min extension of Emitter/Collector OD beyond CO in finger length direction >= ^HVESD_E_4_PNP_16
    ENC CO COL_EMI_ESD_merge_PNP_16_length_edge < HVESD_E_4_PNP_16 ABUT < 90 REGION
}
HVESD.E.4_PNP_20 { @ Min extension of Emitter/Collector OD beyond CO in finger length direction >= ^HVESD_E_4_PNP_20
    ENC CO COL_EMI_ESD_merge_PNP_20_length_edge < HVESD_E_4_PNP_20 ABUT < 90 REGION
}
HVESD.E.4_PNP_20_PDD { @ Min extension of Emitter/Collector OD beyond CO in finger length direction >= ^HVESD_E_4_PNP_20_PDD
    ENC CO COL_EMI_ESD_merge_PNP_20_PDD_length_edge < HVESD_E_4_PNP_20_PDD ABUT < 90 REGION
}
HVESD.E.4_PNP_24 { @ Min extension of Emitter/Collector OD beyond CO in finger length direction >= ^HVESD_E_4_PNP_24
    ENC CO COL_EMI_ESD_merge_PNP_24_length_edge < HVESD_E_4_PNP_24 ABUT < 90 REGION
}

HVESD.E.5_PNP_6 { @ Min and max extension of SH_N beyond Base N+OD ring == ^HVESD_E_5_PNP_6
   A1 = HVSHN INTERACT BASOD_ESD_PNP_6
   A = (HOLES A1) OR A1
   B = SIZE (BASOD_ESD_PNP_6 OR BASOD_ESD_PNP_6_H) BY HVESD_E_5_PNP_6
   A XOR B
}

HVESD.E.6.1_PNP_6 { @ Min and max extension of PSUB beyond SH_N == ^HVESD_E_6_1_PNP_6
   A1 = HVSHN INTERACT BASOD_ESD_PNP_6
   A2 = (HOLES A1) OR A1
   A = SIZE A2 BY HVESD_E_6_1_PNP_6
   B = PSUB INTERACT BASOD_ESD_PNP_6
   A XOR B
}
HVESD.E.5_PNP_9 { @ Min and max extension of SH_N beyond Base N+OD ring == ^HVESD_E_5_PNP_9
   A1 = HVSHN INTERACT BASOD_ESD_PNP_9
   A = (HOLES A1) OR A1
   B = SIZE (BASOD_ESD_PNP_9 OR BASOD_ESD_PNP_9_H) BY HVESD_E_5_PNP_9
   A XOR B
}

HVESD.E.6.1_PNP_9 { @ Min and max extension of PSUB beyond SH_N == ^HVESD_E_6_1_PNP_9
   A1 = HVSHN INTERACT BASOD_ESD_PNP_9
   A2 = (HOLES A1) OR A1
   A = SIZE A2 BY HVESD_E_6_1_PNP_9
   B = PSUB INTERACT BASOD_ESD_PNP_9
   A XOR B
}
HVESD.E.5_PNP_12 { @ Min and max extension of SH_N beyond Base N+OD ring == ^HVESD_E_5_PNP_12
   A1 = HVSHN INTERACT BASOD_ESD_PNP_12
   A = (HOLES A1) OR A1
   B = SIZE (BASOD_ESD_PNP_12 OR BASOD_ESD_PNP_12_H) BY HVESD_E_5_PNP_12
   A XOR B
}

HVESD.E.6.1_PNP_12 { @ Min and max extension of PSUB beyond SH_N == ^HVESD_E_6_1_PNP_12
   A1 = HVSHN INTERACT BASOD_ESD_PNP_12
   A2 = (HOLES A1) OR A1
   A = SIZE A2 BY HVESD_E_6_1_PNP_12
   B = PSUB INTERACT BASOD_ESD_PNP_12
   A XOR B
}
HVESD.E.5_PNP_20 { @ Min and max extension of SH_N beyond Base N+OD ring == ^HVESD_E_5_PNP_20
   A1 = HVSHN INTERACT BASOD_ESD_PNP_20
   A = (HOLES A1) OR A1
   B = SIZE (BASOD_ESD_PNP_20 OR BASOD_ESD_PNP_20_H) BY HVESD_E_5_PNP_20
   A XOR B
}

HVESD.E.6.1_PNP_20 { @ Min and max extension of PSUB beyond SH_N == ^HVESD_E_6_1_PNP_20
   A1 = HVSHN INTERACT BASOD_ESD_PNP_20
   A2 = (HOLES A1) OR A1
   A = SIZE A2 BY HVESD_E_6_1_PNP_20
   B = PSUB INTERACT BASOD_ESD_PNP_20
   A XOR B
}
HVESD.E.5_PNP_12_PDD { @ Min and max extension of SH_N beyond Base N+OD ring == ^HVESD_E_5_PNP_12_PDD
   A1 = HVSHN INTERACT BASOD_ESD_PNP_12_PDD
   A = (HOLES A1) OR A1
   B = SIZE (BASOD_ESD_PNP_12_PDD OR BASOD_ESD_PNP_12_PDD_H) BY HVESD_E_5_PNP_12_PDD
   A XOR B
}

HVESD.E.6.1_PNP_12_PDD { @ Min and max extension of PSUB beyond SH_N == ^HVESD_E_6_1_PNP_12_PDD
   A1 = HVSHN INTERACT BASOD_ESD_PNP_12_PDD
   A2 = (HOLES A1) OR A1
   A = SIZE A2 BY HVESD_E_6_1_PNP_12_PDD
   B = PSUB INTERACT BASOD_ESD_PNP_12_PDD
   A XOR B
}
HVESD.E.5_PNP_16 { @ Min and max extension of SH_N beyond Base N+OD ring == ^HVESD_E_5_PNP_16
   A1 = HVSHN INTERACT BASOD_ESD_PNP_16
   A = (HOLES A1) OR A1
   B = SIZE (BASOD_ESD_PNP_16 OR BASOD_ESD_PNP_16_H) BY HVESD_E_5_PNP_16
   A XOR B
}

HVESD.E.6.1_PNP_16 { @ Min and max extension of PSUB beyond SH_N == ^HVESD_E_6_1_PNP_16
   A1 = HVSHN INTERACT BASOD_ESD_PNP_16
   A2 = (HOLES A1) OR A1
   A = SIZE A2 BY HVESD_E_6_1_PNP_16
   B = PSUB INTERACT BASOD_ESD_PNP_16
   A XOR B
}
HVESD.E.5_PNP_20_PDD { @ Min and max extension of SH_N beyond Base N+OD ring == ^HVESD_E_5_PNP_20_PDD
   A1 = HVSHN INTERACT BASOD_ESD_PNP_20_PDD
   A = (HOLES A1) OR A1
   B = SIZE (BASOD_ESD_PNP_20_PDD OR BASOD_ESD_PNP_20_PDD_H) BY HVESD_E_5_PNP_20_PDD
   A XOR B
}

HVESD.E.6.1_PNP_20_PDD { @ Min and max extension of PSUB beyond SH_N == ^HVESD_E_6_1_PNP_20_PDD
   A1 = HVSHN INTERACT BASOD_ESD_PNP_20_PDD
   A2 = (HOLES A1) OR A1
   A = SIZE A2 BY HVESD_E_6_1_PNP_20_PDD
   B = PSUB INTERACT BASOD_ESD_PNP_20_PDD
   A XOR B
}
HVESD.E.5_PNP_24 { @ Min and max extension of SH_N beyond Base N+OD ring == ^HVESD_E_5_PNP_24
   A1 = HVSHN INTERACT BASOD_ESD_PNP_24
   A = (HOLES A1) OR A1
   B = SIZE (BASOD_ESD_PNP_24 OR BASOD_ESD_PNP_24_H) BY HVESD_E_5_PNP_24
   A XOR B
}

HVESD.E.6.1_PNP_24 { @ Min and max extension of PSUB beyond SH_N == ^HVESD_E_6_1_PNP_24
   A1 = HVSHN INTERACT BASOD_ESD_PNP_24
   A2 = (HOLES A1) OR A1
   A = SIZE A2 BY HVESD_E_6_1_PNP_24
   B = PSUB INTERACT BASOD_ESD_PNP_24
   A XOR B
}
HVESD.E.5_PNP_29 { @ Min and max extension of SH_N beyond Base N+OD ring == ^HVESD_E_5_PNP_29
   A1 = HVSHN INTERACT BASOD_ESD_PNP_29
   A = (HOLES A1) OR A1
   B = SIZE (BASOD_ESD_PNP_29 OR BASOD_ESD_PNP_29_H) BY HVESD_E_5_PNP_29
   A XOR B
}

HVESD.E.6.1_PNP_29 { @ Min and max extension of PSUB beyond SH_N == ^HVESD_E_6_1_PNP_29
   A1 = HVSHN INTERACT BASOD_ESD_PNP_29
   A2 = (HOLES A1) OR A1
   A = SIZE A2 BY HVESD_E_6_1_PNP_29
   B = PSUB INTERACT BASOD_ESD_PNP_29
   A XOR B
}
HVESD.E.5_PNP_36 { @ Min and max extension of SH_N beyond Base N+OD ring == ^HVESD_E_5_PNP_36
   A1 = HVSHN INTERACT BASOD_ESD_PNP_36
   A = (HOLES A1) OR A1
   B = SIZE (BASOD_ESD_PNP_36 OR BASOD_ESD_PNP_36_H) BY HVESD_E_5_PNP_36
   A XOR B
}

HVESD.E.6.1_PNP_36 { @ Min and max extension of PSUB beyond SH_N == ^HVESD_E_6_1_PNP_36
   A1 = HVSHN INTERACT BASOD_ESD_PNP_36
   A2 = (HOLES A1) OR A1
   A = SIZE A2 BY HVESD_E_6_1_PNP_36
   B = PSUB INTERACT BASOD_ESD_PNP_36
   A XOR B
}
HVESD.E.5_PNP_45 { @ Min and max extension of SH_N beyond Base N+OD ring == ^HVESD_E_5_PNP_45
   A1 = HVSHN INTERACT BASOD_ESD_PNP_45
   A = (HOLES A1) OR A1
   B = SIZE (BASOD_ESD_PNP_45 OR BASOD_ESD_PNP_45_H) BY HVESD_E_5_PNP_45
   A XOR B
}

HVESD.E.6.1_PNP_45 { @ Min and max extension of PSUB beyond SH_N == ^HVESD_E_6_1_PNP_45
   A1 = HVSHN INTERACT BASOD_ESD_PNP_45
   A2 = (HOLES A1) OR A1
   A = SIZE A2 BY HVESD_E_6_1_PNP_45
   B = PSUB INTERACT BASOD_ESD_PNP_45
   A XOR B
}

HVESD.E.7_PNP_9 { @ Min and max extension of HVPB beyond Collector P+OD == ^HVESD_E_7_PNP_9
    A = HVPB INTERACT COLOD_ESD_PNP_9
    B = SIZE COLOD_ESD_PNP_9 BY HVESD_E_7_PNP_9
	A XOR B
}
HVESD.E.7_PNP_36 { @ Min and max extension of HVPB beyond Collector P+OD == ^HVESD_E_7_PNP_36
    A = HVPB INTERACT COLOD_ESD_PNP_36
    B = SIZE COLOD_ESD_PNP_36 BY HVESD_E_7_PNP_36
	A XOR B
}
HVESD.E.7_PNP_45 { @ Min and max extension of HVPB beyond Collector P+OD == ^HVESD_E_7_PNP_45
    A = HVPB INTERACT COLOD_ESD_PNP_45
    B = SIZE COLOD_ESD_PNP_45 BY HVESD_E_7_PNP_45
	A XOR B
}

HVESD.E.8.1_PNP_6 { @ Min extension of HVDMY beyond P+ isolation ring >= ^HVESD_E_8_1_PNP_6
   ENC PPOD_R_BJT_PNP_6 HVDMY < HVESD_E_8_1_PNP_6 ABUT < 90 SINGULAR REGION
}

HVESD.E.9.1_PNP_6 { @ Min and Max extension of NBL beyond SH_N to which is inside NBL == ^HVESD_E_9_1_PNP_6
   A1 = HVSHN INTERACT BASOD_ESD_PNP_6
   A = (HOLES A1) OR A1 
   B1 = NBL INTERACT BASOD_ESD_PNP_6
   B = (HOLES B1) OR B1
   A XOR B
}
HVESD.E.8.1_PNP_9 { @ Min extension of HVDMY beyond P+ isolation ring >= ^HVESD_E_8_1_PNP_9
   ENC PPOD_R_BJT_PNP_9 HVDMY < HVESD_E_8_1_PNP_9 ABUT < 90 SINGULAR REGION
}

HVESD.E.9.1_PNP_9 { @ Min and Max extension of NBL beyond SH_N to which is inside NBL == ^HVESD_E_9_1_PNP_9
   A1 = HVSHN INTERACT BASOD_ESD_PNP_9
   A = (HOLES A1) OR A1 
   B1 = NBL INTERACT BASOD_ESD_PNP_9
   B = (HOLES B1) OR B1
   A XOR B
}
HVESD.E.8.1_PNP_12 { @ Min extension of HVDMY beyond P+ isolation ring >= ^HVESD_E_8_1_PNP_12
   ENC PPOD_R_BJT_PNP_12 HVDMY < HVESD_E_8_1_PNP_12 ABUT < 90 SINGULAR REGION
}

HVESD.E.9.1_PNP_12 { @ Min and Max extension of NBL beyond SH_N to which is inside NBL == ^HVESD_E_9_1_PNP_12
   A1 = HVSHN INTERACT BASOD_ESD_PNP_12
   A = (HOLES A1) OR A1 
   B1 = NBL INTERACT BASOD_ESD_PNP_12
   B = (HOLES B1) OR B1
   A XOR B
}
HVESD.E.8.1_PNP_20 { @ Min extension of HVDMY beyond P+ isolation ring >= ^HVESD_E_8_1_PNP_20
   ENC PPOD_R_BJT_PNP_20 HVDMY < HVESD_E_8_1_PNP_20 ABUT < 90 SINGULAR REGION
}

HVESD.E.9.1_PNP_20 { @ Min and Max extension of NBL beyond SH_N to which is inside NBL == ^HVESD_E_9_1_PNP_20
   A1 = HVSHN INTERACT BASOD_ESD_PNP_20
   A = (HOLES A1) OR A1 
   B1 = NBL INTERACT BASOD_ESD_PNP_20
   B = (HOLES B1) OR B1
   A XOR B
}
HVESD.E.8.1_PNP_12_PDD { @ Min extension of HVDMY beyond P+ isolation ring >= ^HVESD_E_8_1_PNP_12_PDD
   ENC PPOD_R_BJT_PNP_12_PDD HVDMY < HVESD_E_8_1_PNP_12_PDD ABUT < 90 SINGULAR REGION
}

HVESD.E.9.1_PNP_12_PDD { @ Min and Max extension of NBL beyond SH_N to which is inside NBL == ^HVESD_E_9_1_PNP_12_PDD
   A1 = HVSHN INTERACT BASOD_ESD_PNP_12_PDD
   A = (HOLES A1) OR A1 
   B1 = NBL INTERACT BASOD_ESD_PNP_12_PDD
   B = (HOLES B1) OR B1
   A XOR B
}
HVESD.E.8.1_PNP_16 { @ Min extension of HVDMY beyond P+ isolation ring >= ^HVESD_E_8_1_PNP_16
   ENC PPOD_R_BJT_PNP_16 HVDMY < HVESD_E_8_1_PNP_16 ABUT < 90 SINGULAR REGION
}

HVESD.E.9.1_PNP_16 { @ Min and Max extension of NBL beyond SH_N to which is inside NBL == ^HVESD_E_9_1_PNP_16
   A1 = HVSHN INTERACT BASOD_ESD_PNP_16
   A = (HOLES A1) OR A1 
   B1 = NBL INTERACT BASOD_ESD_PNP_16
   B = (HOLES B1) OR B1
   A XOR B
}
HVESD.E.8.1_PNP_20_PDD { @ Min extension of HVDMY beyond P+ isolation ring >= ^HVESD_E_8_1_PNP_20_PDD
   ENC PPOD_R_BJT_PNP_20_PDD HVDMY < HVESD_E_8_1_PNP_20_PDD ABUT < 90 SINGULAR REGION
}

HVESD.E.9.1_PNP_20_PDD { @ Min and Max extension of NBL beyond SH_N to which is inside NBL == ^HVESD_E_9_1_PNP_20_PDD
   A1 = HVSHN INTERACT BASOD_ESD_PNP_20_PDD
   A = (HOLES A1) OR A1 
   B1 = NBL INTERACT BASOD_ESD_PNP_20_PDD
   B = (HOLES B1) OR B1
   A XOR B
}
HVESD.E.8.1_PNP_24 { @ Min extension of HVDMY beyond P+ isolation ring >= ^HVESD_E_8_1_PNP_24
   ENC PPOD_R_BJT_PNP_24 HVDMY < HVESD_E_8_1_PNP_24 ABUT < 90 SINGULAR REGION
}

HVESD.E.9.1_PNP_24 { @ Min and Max extension of NBL beyond SH_N to which is inside NBL == ^HVESD_E_9_1_PNP_24
   A1 = HVSHN INTERACT BASOD_ESD_PNP_24
   A = (HOLES A1) OR A1 
   B1 = NBL INTERACT BASOD_ESD_PNP_24
   B = (HOLES B1) OR B1
   A XOR B
}
HVESD.E.8.1_PNP_29 { @ Min extension of HVDMY beyond P+ isolation ring >= ^HVESD_E_8_1_PNP_29
   ENC PPOD_R_BJT_PNP_29 HVDMY < HVESD_E_8_1_PNP_29 ABUT < 90 SINGULAR REGION
}

HVESD.E.9.1_PNP_29 { @ Min and Max extension of NBL beyond SH_N to which is inside NBL == ^HVESD_E_9_1_PNP_29
   A1 = HVSHN INTERACT BASOD_ESD_PNP_29
   A = (HOLES A1) OR A1 
   B1 = NBL INTERACT BASOD_ESD_PNP_29
   B = (HOLES B1) OR B1
   A XOR B
}
HVESD.E.8.1_PNP_36 { @ Min extension of HVDMY beyond P+ isolation ring >= ^HVESD_E_8_1_PNP_36
   ENC PPOD_R_BJT_PNP_36 HVDMY < HVESD_E_8_1_PNP_36 ABUT < 90 SINGULAR REGION
}

HVESD.E.9.1_PNP_36 { @ Min and Max extension of NBL beyond SH_N to which is inside NBL == ^HVESD_E_9_1_PNP_36
   A1 = HVSHN INTERACT BASOD_ESD_PNP_36
   A = (HOLES A1) OR A1 
   B1 = NBL INTERACT BASOD_ESD_PNP_36
   B = (HOLES B1) OR B1
   A XOR B
}
HVESD.E.8.1_PNP_45 { @ Min extension of HVDMY beyond P+ isolation ring >= ^HVESD_E_8_1_PNP_45
   ENC PPOD_R_BJT_PNP_45 HVDMY < HVESD_E_8_1_PNP_45 ABUT < 90 SINGULAR REGION
}

HVESD.E.9.1_PNP_45 { @ Min and Max extension of NBL beyond SH_N to which is inside NBL == ^HVESD_E_9_1_PNP_45
   A1 = HVSHN INTERACT BASOD_ESD_PNP_45
   A = (HOLES A1) OR A1 
   B1 = NBL INTERACT BASOD_ESD_PNP_45
   B = (HOLES B1) OR B1
   A XOR B
}

HVESD.E.10_PNP_20 { @ Min and Max extension of SH_P beyond Emitter/Collector OD in finger width direction == ^HVESD_E_10_PNP_20
   A1 = EXPAND EDGE COL_EMI_ESD_merge_PNP_20_width_edge OUTSIDE BY HVESD_E_10_PNP_20
   A2 = EXPAND EDGE COL_EMI_ESD_merge_PNP_20_width_edge OUTSIDE BY HVESD_E_10_PNP_20 + GRID
   A = A2 NOT A1
   A NOT TOUCH HVSHP
}
HVESD.E.11_PNP_20 { @ Min and Max extension of SH_P beyond Emitter/Collector OD in finger length direction == ^HVESD_E_11_PNP_20
   A1 = COL_EMI_ESD_merge_PNP_20_length_edge INSIDE EDGE HVSHP
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_11_PNP_20
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_11_PNP_20 + GRID
   A = A3 NOT A2
   A NOT TOUCH HVSHP
}

HVESD.E.12_PNP_12_PDD { @ min and max extension of SH_P beyond beyond Emitter/Collector OD in finger width direction == ^HVESD_E_12_PNP_12_PDD
   A = OD INTERACT COLOD_ESD_PNP_12_PDD
   B = SH_P INTERACT COLOD_ESD_PNP_12_PDD
   C = B INSIDE EDGE A
   D = B TOUCH EDGE C 
   E = EXPAND EDGE D INSIDE BY GRID
   F = B NOT TOUCH EDGE E
   G = EXPAND EDGE F INSIDE BY HVESD_E_12_PNP_12_PDD
   G NOT TOUCH COLOD_ESD_PNP_12_PDD
}

HVESD.E.12_PNP_16 { @ min and max extension of SH_P beyond beyond Emitter/Collector OD in finger width direction == ^HVESD_E_12_PNP_16
   A = OD INTERACT COLOD_ESD_PNP_16
   B = SH_P INTERACT COLOD_ESD_PNP_16
   C = B INSIDE EDGE A
   D = B TOUCH EDGE C 
   E = EXPAND EDGE D INSIDE BY GRID
   F = B NOT TOUCH EDGE E
   G = EXPAND EDGE F INSIDE BY HVESD_E_12_PNP_16
   G NOT TOUCH COLOD_ESD_PNP_16
}

HVESD.E.12_PNP_20_PDD { @ min and max extension of SH_P beyond beyond Emitter/Collector OD in finger width direction == ^HVESD_E_12_PNP_20_PDD
   A = OD INTERACT COLOD_ESD_PNP_20_PDD
   B = SH_P INTERACT COLOD_ESD_PNP_20_PDD
   C = B INSIDE EDGE A
   D = B TOUCH EDGE C 
   E = EXPAND EDGE D INSIDE BY GRID
   F = B NOT TOUCH EDGE E
   G = EXPAND EDGE F INSIDE BY HVESD_E_12_PNP_20_PDD
   G NOT TOUCH COLOD_ESD_PNP_20_PDD
}

HVESD.E.12_PNP_24 { @ min and max extension of SH_P beyond beyond Emitter/Collector OD in finger width direction == ^HVESD_E_12_PNP_24
   A = OD INTERACT COLOD_ESD_PNP_24
   B = SH_P INTERACT COLOD_ESD_PNP_24
   C = B INSIDE EDGE A
   D = B TOUCH EDGE C 
   E = EXPAND EDGE D INSIDE BY GRID
   F = B NOT TOUCH EDGE E
   G = EXPAND EDGE F INSIDE BY HVESD_E_12_PNP_24
   G NOT TOUCH COLOD_ESD_PNP_24
}

HVPB_PNP_36_outmost_width_edge = HVPB TOUCH EDGE (EXPAND EDGE COL_ESD_PNP_36_outmost_width_edge OUTSIDE BY HVESD_E_7_PNP_36)
HVPB_PNP_36_inner_width_edge = HVPB TOUCH EDGE (EXPAND EDGE COL_ESD_PNP_36_inner_width_edge OUTSIDE BY HVESD_E_7_PNP_36)

HVESD.E.13_PNP_36 { @ Min and Max extension of outmost SH_N beyond HVPB in finger width direction == ^HVESD_E_13_PNP_36
   A = EXPAND EDGE HVPB_PNP_36_outmost_width_edge OUTSIDE BY HVESD_E_13_PNP_36
   A NOT TOUCH HVSHN
}

HVESD.E.13.1_PNP_36 { @ Min and Max extension of SH_N beyond HVPB in finger width direction == ^HVESD_E_13_1_PNP_36
   A = EXPAND EDGE HVPB_PNP_36_inner_width_edge OUTSIDE BY HVESD_E_13_1_PNP_36
   A NOT TOUCH HVSHN 
}

HVPB_PNP_36_length_edge = HVPB TOUCH EDGE (EXPAND EDGE COL_ESD_PNP_36_length_edge OUTSIDE BY HVESD_E_7_PNP_36)
HVESD.E.14_PNP_36 { @ Min and Max extension of SH_N beyond HVPB in finger length direction == ^HVESD_E_14_PNP_36
   A = EXPAND EDGE HVPB_PNP_36_length_edge OUTSIDE BY HVESD_E_14_PNP_36
   A NOT TOUCH HVSHN 
}

HVPB_PNP_45_outmost_width_edge = HVPB TOUCH EDGE (EXPAND EDGE COL_ESD_PNP_45_outmost_width_edge OUTSIDE BY HVESD_E_7_PNP_45)
HVPB_PNP_45_inner_width_edge = HVPB TOUCH EDGE (EXPAND EDGE COL_ESD_PNP_45_inner_width_edge OUTSIDE BY HVESD_E_7_PNP_45)

HVESD.E.13_PNP_45 { @ Min and Max extension of outmost SH_N beyond HVPB in finger width direction == ^HVESD_E_13_PNP_45
   A = EXPAND EDGE HVPB_PNP_45_outmost_width_edge OUTSIDE BY HVESD_E_13_PNP_45
   A NOT TOUCH HVSHN
}

HVESD.E.13.1_PNP_45 { @ Min and Max extension of SH_N beyond HVPB in finger width direction == ^HVESD_E_13_1_PNP_45
   A = EXPAND EDGE HVPB_PNP_45_inner_width_edge OUTSIDE BY HVESD_E_13_1_PNP_45
   A NOT TOUCH HVSHN 
}

HVPB_PNP_45_length_edge = HVPB TOUCH EDGE (EXPAND EDGE COL_ESD_PNP_45_length_edge OUTSIDE BY HVESD_E_7_PNP_45)
HVESD.E.14_PNP_45 { @ Min and Max extension of SH_N beyond HVPB in finger length direction == ^HVESD_E_14_PNP_45
   A = EXPAND EDGE HVPB_PNP_45_length_edge OUTSIDE BY HVESD_E_14_PNP_45
   A NOT TOUCH HVSHN 
}

HVESD.E.15_PNP_20 { @ Min and max extension of SH_P beyond {Collector PP edge INSIDE Emitter/Collector OD} == ^HVESD_E_15_PNP_20
   A1 = (PP INTERACT COLOD_ESD_PNP_20) INSIDE EDGE COL_EMI_ESD_merge_PNP_20
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_15_PNP_20
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_15_PNP_20 + GRID
   A = A3 NOT A2
   A NOT TOUCH HVSHP
}

HVESD.E.16_PNP_12_PDD { @ Min and max extension of SH_N beyond Emitter PP in finger width direction == ^HVESD_E_16_PNP_12_PDD
   A1 = (PP INTERACT EMIOD_ESD_PNP_12_PDD) INSIDE EDGE COL_EMI_ESD_merge_PNP_12_PDD
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_16_PNP_12_PDD
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_16_PNP_12_PDD + GRID
   A = A3 NOT A2
   A NOT TOUCH HVSHN
}
HVESD.E.16_PNP_16 { @ Min and max extension of SH_N beyond Emitter PP in finger width direction == ^HVESD_E_16_PNP_16
   A1 = (PP INTERACT EMIOD_ESD_PNP_16) INSIDE EDGE COL_EMI_ESD_merge_PNP_16
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_16_PNP_16
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_16_PNP_16 + GRID
   A = A3 NOT A2
   A NOT TOUCH HVSHN
}
HVESD.E.16_PNP_20 { @ Min and max extension of SH_N beyond Emitter PP in finger width direction == ^HVESD_E_16_PNP_20
   A1 = (PP INTERACT EMIOD_ESD_PNP_20) INSIDE EDGE COL_EMI_ESD_merge_PNP_20
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_16_PNP_20
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_16_PNP_20 + GRID
   A = A3 NOT A2
   A NOT TOUCH HVSHN
}
HVESD.E.16_PNP_20_PDD { @ Min and max extension of SH_N beyond Emitter PP in finger width direction == ^HVESD_E_16_PNP_20_PDD
   A1 = (PP INTERACT EMIOD_ESD_PNP_20_PDD) INSIDE EDGE COL_EMI_ESD_merge_PNP_20_PDD
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_16_PNP_20_PDD
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_16_PNP_20_PDD + GRID
   A = A3 NOT A2
   A NOT TOUCH HVSHN
}
HVESD.E.16_PNP_24 { @ Min and max extension of SH_N beyond Emitter PP in finger width direction == ^HVESD_E_16_PNP_24
   A1 = (PP INTERACT EMIOD_ESD_PNP_24) INSIDE EDGE COL_EMI_ESD_merge_PNP_24
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_16_PNP_24
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_16_PNP_24 + GRID
   A = A3 NOT A2
   A NOT TOUCH HVSHN
}

HVESD.E.17_PNP_12_PDD { @ Min extension of SH_N beyond Emitter/Collector OD in finger length direction >= ^HVESD_E_17_PNP_12_PDD
							@ SH_N of Emitter/Collector OD and SH_N of Base OD must be butted 
   A1 = HVSHN INTERACT COL_EMI_ESD_merge_PNP_12_PDD
   NOT RECTANGLE ((HOLES A1) NOT A1)
   EXT COL_EMI_ESD_merge_PNP_12_PDD_length_edge BASOD_ESD_PNP_12_PDD < HVESD_E_17_PNP_12_PDD ABUT <90 REGION
}
HVESD.E.17_PNP_16 { @ Min extension of SH_N beyond Emitter/Collector OD in finger length direction >= ^HVESD_E_17_PNP_16
							@ SH_N of Emitter/Collector OD and SH_N of Base OD must be butted 
   A1 = HVSHN INTERACT COL_EMI_ESD_merge_PNP_16
   NOT RECTANGLE ((HOLES A1) NOT A1)
   EXT COL_EMI_ESD_merge_PNP_16_length_edge BASOD_ESD_PNP_16 < HVESD_E_17_PNP_16 ABUT <90 REGION
}
HVESD.E.17_PNP_20 { @ Min extension of SH_N beyond Emitter/Collector OD in finger length direction >= ^HVESD_E_17_PNP_20
							@ SH_N of Emitter/Collector OD and SH_N of Base OD must be butted 
   A1 = HVSHN INTERACT COL_EMI_ESD_merge_PNP_20
   NOT RECTANGLE ((HOLES A1) NOT A1)
   EXT COL_EMI_ESD_merge_PNP_20_length_edge BASOD_ESD_PNP_20 < HVESD_E_17_PNP_20 ABUT <90 REGION
}
HVESD.E.17_PNP_20_PDD { @ Min extension of SH_N beyond Emitter/Collector OD in finger length direction >= ^HVESD_E_17_PNP_20_PDD
							@ SH_N of Emitter/Collector OD and SH_N of Base OD must be butted 
   A1 = HVSHN INTERACT COL_EMI_ESD_merge_PNP_20_PDD
   NOT RECTANGLE ((HOLES A1) NOT A1)
   EXT COL_EMI_ESD_merge_PNP_20_PDD_length_edge BASOD_ESD_PNP_20_PDD < HVESD_E_17_PNP_20_PDD ABUT <90 REGION
}
HVESD.E.17_PNP_24 { @ Min extension of SH_N beyond Emitter/Collector OD in finger length direction >= ^HVESD_E_17_PNP_24
							@ SH_N of Emitter/Collector OD and SH_N of Base OD must be butted 
   A1 = HVSHN INTERACT COL_EMI_ESD_merge_PNP_24
   NOT RECTANGLE ((HOLES A1) NOT A1)
   EXT COL_EMI_ESD_merge_PNP_24_length_edge BASOD_ESD_PNP_24 < HVESD_E_17_PNP_24 ABUT <90 REGION
}

HVESD.E.18_PNP_12_PDD { @ Min and max extension of PP beyond Emitter/Collector OD == ^HVESD_E_18_PNP_12_PDD
   A1 = COL_EMI_ESD_merge_PNP_12_PDD INSIDE EDGE PP
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_18_PNP_12_PDD
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_18_PNP_12_PDD + GRID
   A = A3 NOT A2
   A NOT TOUCH PP
}
HVESD.E.18_PNP_16 { @ Min and max extension of PP beyond Emitter/Collector OD == ^HVESD_E_18_PNP_16
   A1 = COL_EMI_ESD_merge_PNP_16 INSIDE EDGE PP
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_18_PNP_16
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_18_PNP_16 + GRID
   A = A3 NOT A2
   A NOT TOUCH PP
}
HVESD.E.18_PNP_20 { @ Min and max extension of PP beyond Emitter/Collector OD == ^HVESD_E_18_PNP_20
   A1 = COL_EMI_ESD_merge_PNP_20 INSIDE EDGE PP
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_18_PNP_20
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_18_PNP_20 + GRID
   A = A3 NOT A2
   A NOT TOUCH PP
}
HVESD.E.18_PNP_20_PDD { @ Min and max extension of PP beyond Emitter/Collector OD == ^HVESD_E_18_PNP_20_PDD
   A1 = COL_EMI_ESD_merge_PNP_20_PDD INSIDE EDGE PP
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_18_PNP_20_PDD
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_18_PNP_20_PDD + GRID
   A = A3 NOT A2
   A NOT TOUCH PP
}
HVESD.E.18_PNP_24 { @ Min and max extension of PP beyond Emitter/Collector OD == ^HVESD_E_18_PNP_24
   A1 = COL_EMI_ESD_merge_PNP_24 INSIDE EDGE PP
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_18_PNP_24
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_18_PNP_24 + GRID
   A = A3 NOT A2
   A NOT TOUCH PP
}

HVESD.E.19_PNP_12_PDD { @ Min and max extension of RPO beyond Emitter/Collector OD in finger length direction == ^HVESD_E_19_PNP_12_PDD
   A1 = COL_EMI_ESD_merge_PNP_12_PDD INSIDE EDGE RPO
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_19_PNP_12_PDD
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_19_PNP_12_PDD + GRID
   A = A3 NOT A2
   A NOT TOUCH RPO
}
HVESD.E.19_PNP_16 { @ Min and max extension of RPO beyond Emitter/Collector OD in finger length direction == ^HVESD_E_19_PNP_16
   A1 = COL_EMI_ESD_merge_PNP_16 INSIDE EDGE RPO
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_19_PNP_16
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_19_PNP_16 + GRID
   A = A3 NOT A2
   A NOT TOUCH RPO
}
HVESD.E.19_PNP_20 { @ Min and max extension of RPO beyond Emitter/Collector OD in finger length direction == ^HVESD_E_19_PNP_20
   A1 = COL_EMI_ESD_merge_PNP_20 INSIDE EDGE RPO
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_19_PNP_20
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_19_PNP_20 + GRID
   A = A3 NOT A2
   A NOT TOUCH RPO
}
HVESD.E.19_PNP_20_PDD { @ Min and max extension of RPO beyond Emitter/Collector OD in finger length direction == ^HVESD_E_19_PNP_20_PDD
   A1 = COL_EMI_ESD_merge_PNP_20_PDD INSIDE EDGE RPO
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_19_PNP_20_PDD
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_19_PNP_20_PDD + GRID
   A = A3 NOT A2
   A NOT TOUCH RPO
}
HVESD.E.19_PNP_24 { @ Min and max extension of RPO beyond Emitter/Collector OD in finger length direction == ^HVESD_E_19_PNP_24
   A1 = COL_EMI_ESD_merge_PNP_24 INSIDE EDGE RPO
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_19_PNP_24
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_19_PNP_24 + GRID
   A = A3 NOT A2
   A NOT TOUCH RPO
}

HVESD.E.20_PNP_12_PDD { @ min and max PDD width from SH_N to SH_P in finger width direction == ^HVESD_E_20_PNP_12_PDD
   A = OD INTERACT COLOD_ESD_PNP_12_PDD
   B = (A NOT HVSHN) NOT SH_P
   INT B < HVESD_E_20_PNP_12_PDD ABUT < 90 SINGULAR REGION
   SIZE B BY HVESD_E_20_PNP_12_PDD/2 UNDEROVER
}

HVESD.E.20_PNP_16 { @ min and max PDD width from SH_N to SH_P in finger width direction == ^HVESD_E_20_PNP_16
   A = OD INTERACT COLOD_ESD_PNP_16
   B = (A NOT HVSHN) NOT SH_P
   INT B < HVESD_E_20_PNP_16 ABUT < 90 SINGULAR REGION
   SIZE B BY HVESD_E_20_PNP_16/2 UNDEROVER
}

HVESD.E.20_PNP_24 { @ min and max PDD width from SH_N to SH_P in finger width direction == ^HVESD_E_20_PNP_24
   A = OD INTERACT COLOD_ESD_PNP_24
   B = (A NOT HVSHN) NOT SH_P
   INT B < HVESD_E_20_PNP_24 ABUT < 90 SINGULAR REGION
   SIZE B BY HVESD_E_20_PNP_24/2 UNDEROVER
}

HVESD.E.21_PNP_12_PDD { @ min and max extension of SH_P beyond beyond Emitter/Collector OD in finger length direction == ^HVESD_E_21_PNP_12_PDD
   A = OD INTERACT COLOD_ESD_PNP_12_PDD
   B = SH_P INTERACT COLOD_ESD_PNP_12_PDD
   C = B INSIDE EDGE A
   D = B TOUCH EDGE C 
   E = EXPAND EDGE D INSIDE BY GRID
   F = B NOT TOUCH EDGE E
   G = B NOT TOUCH EDGE C
   H = G NOT TOUCH EDGE F
   M = EXPAND EDGE H INSIDE BY HVESD_E_21_PNP_12_PDD
   M NOT TOUCH COLOD_ESD_PNP_12_PDD
}

HVESD.E.21_PNP_16 { @ min and max extension of SH_P beyond beyond Emitter/Collector OD in finger length direction == ^HVESD_E_21_PNP_16
   A = OD INTERACT COLOD_ESD_PNP_16
   B = SH_P INTERACT COLOD_ESD_PNP_16
   C = B INSIDE EDGE A
   D = B TOUCH EDGE C 
   E = EXPAND EDGE D INSIDE BY GRID
   F = B NOT TOUCH EDGE E
   G = B NOT TOUCH EDGE C
   H = G NOT TOUCH EDGE F
   M = EXPAND EDGE H INSIDE BY HVESD_E_21_PNP_16
   M NOT TOUCH COLOD_ESD_PNP_16
}

HVESD.E.21_PNP_20_PDD { @ min and max extension of SH_P beyond beyond Emitter/Collector OD in finger length direction == ^HVESD_E_21_PNP_20_PDD
   A = OD INTERACT COLOD_ESD_PNP_20_PDD
   B = SH_P INTERACT COLOD_ESD_PNP_20_PDD
   C = B INSIDE EDGE A
   D = B TOUCH EDGE C 
   E = EXPAND EDGE D INSIDE BY GRID
   F = B NOT TOUCH EDGE E
   G = B NOT TOUCH EDGE C
   H = G NOT TOUCH EDGE F
   M = EXPAND EDGE H INSIDE BY HVESD_E_21_PNP_20_PDD
   M NOT TOUCH COLOD_ESD_PNP_20_PDD
}

HVESD.E.21_PNP_24 { @ min and max extension of SH_P beyond beyond Emitter/Collector OD in finger length direction == ^HVESD_E_21_PNP_24
   A = OD INTERACT COLOD_ESD_PNP_24
   B = SH_P INTERACT COLOD_ESD_PNP_24
   C = B INSIDE EDGE A
   D = B TOUCH EDGE C 
   E = EXPAND EDGE D INSIDE BY GRID
   F = B NOT TOUCH EDGE E
   G = B NOT TOUCH EDGE C
   H = G NOT TOUCH EDGE F
   M = EXPAND EDGE H INSIDE BY HVESD_E_21_PNP_24
   M NOT TOUCH COLOD_ESD_PNP_24
}

HVESD.E.22_PNP_12_PDD { @ min and max extension of CFP beyond SH_N in finger width direction == ^HVESD_E_22_PNP_12_PDD
   A = OD INTERACT COLOD_ESD_PNP_12_PDD
   B = CFP INTERACT A
   C = HVSHN INTERACT A
   ENC C B < HVESD_E_22_PNP_12_PDD ABUT < 90 SINGULAR REGION
   D = B NOT C
   SIZE D BY HVESD_E_22_PNP_12_PDD/2 UNDEROVER
}

HVESD.E.23_PNP_12_PDD { @ min and max extension of CFP beyond OD in finger length direction == ^HVESD_E_23_PNP_12_PDD
   A = OD INTERACT COLOD_ESD_PNP_12_PDD
   B = CFP INTERACT A
   ENC A B < HVESD_E_23_PNP_12_PDD ABUT < 90 SINGULAR REGION
   C = B NOT A 
   SIZE C BY HVESD_E_23_PNP_12_PDD/2 UNDEROVER
}

HVESD.E.22_PNP_16 { @ min and max extension of CFP beyond SH_N in finger width direction == ^HVESD_E_22_PNP_16
   A = OD INTERACT COLOD_ESD_PNP_16
   B = CFP INTERACT A
   C = HVSHN INTERACT A
   ENC C B < HVESD_E_22_PNP_16 ABUT < 90 SINGULAR REGION
   D = B NOT C
   SIZE D BY HVESD_E_22_PNP_16/2 UNDEROVER
}

HVESD.E.23_PNP_16 { @ min and max extension of CFP beyond OD in finger length direction == ^HVESD_E_23_PNP_16
   A = OD INTERACT COLOD_ESD_PNP_16
   B = CFP INTERACT A
   ENC A B < HVESD_E_23_PNP_16 ABUT < 90 SINGULAR REGION
   C = B NOT A 
   SIZE C BY HVESD_E_23_PNP_16/2 UNDEROVER
}

HVESD.E.22_PNP_20_PDD { @ min and max extension of CFP beyond SH_N in finger width direction == ^HVESD_E_22_PNP_20_PDD
   A = OD INTERACT COLOD_ESD_PNP_20_PDD
   B = CFP INTERACT A
   C = HVSHN INTERACT A
   ENC C B < HVESD_E_22_PNP_20_PDD ABUT < 90 SINGULAR REGION
   D = B NOT C
   SIZE D BY HVESD_E_22_PNP_20_PDD/2 UNDEROVER
}

HVESD.E.23_PNP_20_PDD { @ min and max extension of CFP beyond OD in finger length direction == ^HVESD_E_23_PNP_20_PDD
   A = OD INTERACT COLOD_ESD_PNP_20_PDD
   B = CFP INTERACT A
   ENC A B < HVESD_E_23_PNP_20_PDD ABUT < 90 SINGULAR REGION
   C = B NOT A 
   SIZE C BY HVESD_E_23_PNP_20_PDD/2 UNDEROVER
}

HVESD.E.22_PNP_24 { @ min and max extension of CFP beyond SH_N in finger width direction == ^HVESD_E_22_PNP_24
   A = OD INTERACT COLOD_ESD_PNP_24
   B = CFP INTERACT A
   C = HVSHN INTERACT A
   ENC C B < HVESD_E_22_PNP_24 ABUT < 90 SINGULAR REGION
   D = B NOT C
   SIZE D BY HVESD_E_22_PNP_24/2 UNDEROVER
}

HVESD.E.23_PNP_24 { @ min and max extension of CFP beyond OD in finger length direction == ^HVESD_E_23_PNP_24
   A = OD INTERACT COLOD_ESD_PNP_24
   B = CFP INTERACT A
   ENC A B < HVESD_E_23_PNP_24 ABUT < 90 SINGULAR REGION
   C = B NOT A 
   SIZE C BY HVESD_E_23_PNP_24/2 UNDEROVER
}

HVESD.E.29.1_PNP_6 { @ Min extension of HVGA beyond P+ isolation ring >= ^HVESD_E_29_1_PNP_6
    ENC PPOD_R_BJT_PNP_6 HVGA < HVESD_E_29_1_PNP_6 ABUT < 90 SINGULAR REGION
}
HVESD.E.29.1_PNP_9 { @ Min extension of HVGA beyond P+ isolation ring >= ^HVESD_E_29_1_PNP_9
    ENC PPOD_R_BJT_PNP_9 HVGA < HVESD_E_29_1_PNP_9 ABUT < 90 SINGULAR REGION
}
HVESD.E.29.1_PNP_12 { @ Min extension of HVGA beyond P+ isolation ring >= ^HVESD_E_29_1_PNP_12
    ENC PPOD_R_BJT_PNP_12 HVGA < HVESD_E_29_1_PNP_12 ABUT < 90 SINGULAR REGION
}
HVESD.E.29.1_PNP_20 { @ Min extension of HVGA beyond P+ isolation ring >= ^HVESD_E_29_1_PNP_20
    ENC PPOD_R_BJT_PNP_20 HVGA < HVESD_E_29_1_PNP_20 ABUT < 90 SINGULAR REGION
}
HVESD.E.29.1_PNP_12_PDD { @ Min extension of HVGA beyond P+ isolation ring >= ^HVESD_E_29_1_PNP_12_PDD
    ENC PPOD_R_BJT_PNP_12_PDD HVGA < HVESD_E_29_1_PNP_12_PDD ABUT < 90 SINGULAR REGION
}
HVESD.E.29.1_PNP_16 { @ Min extension of HVGA beyond P+ isolation ring >= ^HVESD_E_29_1_PNP_16
    ENC PPOD_R_BJT_PNP_16 HVGA < HVESD_E_29_1_PNP_16 ABUT < 90 SINGULAR REGION
}
HVESD.E.29.1_PNP_20_PDD { @ Min extension of HVGA beyond P+ isolation ring >= ^HVESD_E_29_1_PNP_20_PDD
    ENC PPOD_R_BJT_PNP_20_PDD HVGA < HVESD_E_29_1_PNP_20_PDD ABUT < 90 SINGULAR REGION
}
HVESD.E.29.1_PNP_24 { @ Min extension of HVGA beyond P+ isolation ring >= ^HVESD_E_29_1_PNP_24
    ENC PPOD_R_BJT_PNP_24 HVGA < HVESD_E_29_1_PNP_24 ABUT < 90 SINGULAR REGION
}
HVESD.E.29.1_PNP_29 { @ Min extension of HVGA beyond P+ isolation ring >= ^HVESD_E_29_1_PNP_29
    ENC PPOD_R_BJT_PNP_29 HVGA < HVESD_E_29_1_PNP_29 ABUT < 90 SINGULAR REGION
}

HVESD.E.31.1_PNP_36 { @ Min extension of HVGB beyond P+ isolation ring >= ^HVESD_E_31_1_PNP_36
    ENC PPOD_R_BJT_PNP_36 HVGB < HVESD_E_31_1_PNP_36 ABUT < 90 SINGULAR REGION
}
HVESD.E.31.1_PNP_45 { @ Min extension of HVGB beyond P+ isolation ring >= ^HVESD_E_31_1_PNP_45
    ENC PPOD_R_BJT_PNP_45 HVGB < HVESD_E_31_1_PNP_45 ABUT < 90 SINGULAR REGION
}

HVESD.E.33_PNP_29 { @ Min and max extension of SH_N beyond Emitter P+OD in finger width direction == ^HVESD_E_33_PNP_29
   A1 = EMIOD_ESD_PNP_29 INSIDE EDGE COL_EMI_ESD_merge_PNP_29
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_33_PNP_29
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_33_PNP_29 + GRID
   A = A3 NOT A2
   A NOT TOUCH HVSHN
}

HVESD.E.33_PNP_36 { @ Min and max extension of SH_N beyond Emitter P+OD in finger width direction == ^HVESD_E_33_PNP_36
   A1 = EMIOD_ESD_PNP_36 INSIDE EDGE COL_EMI_ESD_merge_PNP_36_V1
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_33_PNP_36
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_33_PNP_36 + GRID
   A = A3 NOT A2
   A NOT TOUCH HVSHN
}

HVESD.E.33_PNP_45 { @ Min and max extension of SH_N beyond Emitter P+OD in finger width direction == ^HVESD_E_33_PNP_45
   A1 = EMIOD_ESD_PNP_45 INSIDE EDGE COL_EMI_ESD_merge_PNP_45_V1
   A2 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_33_PNP_45
   A3 = EXPAND EDGE A1 OUTSIDE BY HVESD_E_33_PNP_45 + GRID
   A = A3 NOT A2
   A NOT TOUCH HVSHN
}

HVESD.E.34_PNP_29 { @ Min extension of SH_N NPOD RING beyond Emitter P+ OD in finger length direction >= ^HVESD_E_34_PNP_29
   A1 = HVSHN INTERACT COL_EMI_ESD_merge_PNP_29
   NOT RECTANGLE ((HOLES A1) NOT A1)
   EXT COL_EMI_ESD_PNP_29_length_edge BASOD_ESD_PNP_29 < HVESD_E_34_PNP_29 ABUT <90 REGION
}
HVESD.E.34_PNP_36 { @ Min extension of SH_N NPOD RING beyond Emitter P+ OD in finger length direction >= ^HVESD_E_34_PNP_36
   A1 = HVSHN INTERACT COL_EMI_ESD_merge_PNP_36
   NOT RECTANGLE ((HOLES A1) NOT A1)
   EXT COL_EMI_ESD_PNP_36_length_edge BASOD_ESD_PNP_36 < HVESD_E_34_PNP_36 ABUT <90 REGION
}
HVESD.E.34_PNP_45 { @ Min extension of SH_N NPOD RING beyond Emitter P+ OD in finger length direction >= ^HVESD_E_34_PNP_45
   A1 = HVSHN INTERACT COL_EMI_ESD_merge_PNP_45
   NOT RECTANGLE ((HOLES A1) NOT A1)
   EXT COL_EMI_ESD_PNP_45_length_edge BASOD_ESD_PNP_45 < HVESD_E_34_PNP_45 ABUT <90 REGION
}

HVESD_E_35_36_PNP_29 { @ min and max extension of SH_P beyond {Emitter P+ OD OR Collector P+ OD} == ^HVESD_E_35_36_PNP_29
     A = SH_P INTERACT COLOD_ESD_PNP_29
	 B = EXPAND EDGE A INSIDE BY HVESD_E_35_36_PNP_29
	 C = A NOT B
	 C NOT TOUCH EDGE COLOD_ESD_PNP_29
}

HVESD.E.37_PNP_12 { @ Min and max extension of HVESD2DMY beyond SH_N == ^HVESD_E_37_PNP_12
   A1= (HVSHN INTERACT BASOD_ESD_PNP_12) INTERACT HVESD2DMY 
   A = (HOLES A1) OR A1
   B = HVESD2DMY INTERACT BASOD_ESD_PNP_12
   A XOR B
}
HVESD.E.37_PNP_20 { @ Min and max extension of HVESD2DMY beyond SH_N == ^HVESD_E_37_PNP_20
   A1= (HVSHN INTERACT BASOD_ESD_PNP_20) INTERACT HVESD2DMY 
   A = (HOLES A1) OR A1
   B = HVESD2DMY INTERACT BASOD_ESD_PNP_20
   A XOR B
}

HVESD.E.38_PNP_12 { @ Min extension of HVESD1DMY beyond P+ isolation ring >= ^HVESD_E_38_PNP_12
   ENC PPOD_R_BJT_PNP_12 HVESD1DMY < HVESD_E_38_PNP_12 ABUT < 90 SINGULAR REGION
}
HVESD.E.38_PNP_20 { @ Min extension of HVESD1DMY beyond P+ isolation ring >= ^HVESD_E_38_PNP_20
   ENC PPOD_R_BJT_PNP_20 HVESD1DMY < HVESD_E_38_PNP_20 ABUT < 90 SINGULAR REGION
}

HVESD.O.1_PNP_12_PDD { @ Min and max overlap of RPO and {Collector PP OR Emitter PP} == ^HVESD_O_1_PNP_12_PDD
   A = PP INTERACT COL_EMI_ESD_merge_PNP_12_PDD
   B = RPO INTERACT COL_EMI_ESD_merge_PNP_12_PDD
   INT A B < HVESD_O_1_PNP_12_PDD ABUT < 90 SINGULAR REGION
   C = A AND B
   SIZE C BY HVESD_O_1_PNP_12_PDD/2 UNDEROVER
}
HVESD.O.1_PNP_16 { @ Min and max overlap of RPO and {Collector PP OR Emitter PP} == ^HVESD_O_1_PNP_16
   A = PP INTERACT COL_EMI_ESD_merge_PNP_16
   B = RPO INTERACT COL_EMI_ESD_merge_PNP_16
   INT A B < HVESD_O_1_PNP_16 ABUT < 90 SINGULAR REGION
   C = A AND B
   SIZE C BY HVESD_O_1_PNP_16/2 UNDEROVER
}
HVESD.O.1_PNP_20 { @ Min and max overlap of RPO and {Collector PP OR Emitter PP} == ^HVESD_O_1_PNP_20
   A = PP INTERACT COL_EMI_ESD_merge_PNP_20
   B = RPO INTERACT COL_EMI_ESD_merge_PNP_20
   INT A B < HVESD_O_1_PNP_20 ABUT < 90 SINGULAR REGION
   C = A AND B
   SIZE C BY HVESD_O_1_PNP_20/2 UNDEROVER
}
HVESD.O.1_PNP_20_PDD { @ Min and max overlap of RPO and {Collector PP OR Emitter PP} == ^HVESD_O_1_PNP_20_PDD
   A = PP INTERACT COL_EMI_ESD_merge_PNP_20_PDD
   B = RPO INTERACT COL_EMI_ESD_merge_PNP_20_PDD
   INT A B < HVESD_O_1_PNP_20_PDD ABUT < 90 SINGULAR REGION
   C = A AND B
   SIZE C BY HVESD_O_1_PNP_20_PDD/2 UNDEROVER
}
HVESD.O.1_PNP_24 { @ Min and max overlap of RPO and {Collector PP OR Emitter PP} == ^HVESD_O_1_PNP_24
   A = PP INTERACT COL_EMI_ESD_merge_PNP_24
   B = RPO INTERACT COL_EMI_ESD_merge_PNP_24
   INT A B < HVESD_O_1_PNP_24 ABUT < 90 SINGULAR REGION
   C = A AND B
   SIZE C BY HVESD_O_1_PNP_24/2 UNDEROVER
}

//HVESD.R.1 and HVESD.R.1.1 is checked by HVESD.R.1_PNP_6 
HVESD.R.1_PNP_6 { @ Min finger number of Collector P+OD >= ^HVESD_R_1_PNP_6 <= ^HVESD_R_1_1_PNP_6
   PPOD_H_BJT_PNP_6 NOT INTERACT COLOD_ESD_PNP_6 >= HVESD_R_1_PNP_6 <= HVESD_R_1_1_PNP_6
   PPOD_H_BJT_PNP_6 NOT INTERACT EMIOD_ESD_PNP_6 >= HVESD_R_1_PNP_6 - 1  <= HVESD_R_1_1_PNP_6 - 1
}
//HVESD.R.1 and HVESD.R.1.1 is checked by HVESD.R.1_PNP_9 
HVESD.R.1_PNP_9 { @ Min finger number of Collector P+OD >= ^HVESD_R_1_PNP_9 <= ^HVESD_R_1_1_PNP_9
   PPOD_H_BJT_PNP_9 NOT INTERACT COLOD_ESD_PNP_9 >= HVESD_R_1_PNP_9 <= HVESD_R_1_1_PNP_9
   PPOD_H_BJT_PNP_9 NOT INTERACT EMIOD_ESD_PNP_9 >= HVESD_R_1_PNP_9 - 1  <= HVESD_R_1_1_PNP_9 - 1
}
//HVESD.R.1 and HVESD.R.1.1 is checked by HVESD.R.1_PNP_12 
HVESD.R.1_PNP_12 { @ Min finger number of Collector P+OD >= ^HVESD_R_1_PNP_12 <= ^HVESD_R_1_1_PNP_12
   PPOD_H_BJT_PNP_12 NOT INTERACT COLOD_ESD_PNP_12 >= HVESD_R_1_PNP_12 <= HVESD_R_1_1_PNP_12
   PPOD_H_BJT_PNP_12 NOT INTERACT EMIOD_ESD_PNP_12 >= HVESD_R_1_PNP_12 - 1  <= HVESD_R_1_1_PNP_12 - 1
}
//HVESD.R.1 and HVESD.R.1.1 is checked by HVESD.R.1_PNP_29 
HVESD.R.1_PNP_29 { @ Min finger number of Collector P+OD >= ^HVESD_R_1_PNP_29 <= ^HVESD_R_1_1_PNP_29
   PPOD_H_BJT_PNP_29 NOT INTERACT COLOD_ESD_PNP_29 >= HVESD_R_1_PNP_29 <= HVESD_R_1_1_PNP_29
   PPOD_H_BJT_PNP_29 NOT INTERACT EMIOD_ESD_PNP_29 >= HVESD_R_1_PNP_29 - 1  <= HVESD_R_1_1_PNP_29 - 1
}
//HVESD.R.1 and HVESD.R.1.1 is checked by HVESD.R.1_PNP_36 
HVESD.R.1_PNP_36 { @ Min finger number of Collector P+OD >= ^HVESD_R_1_PNP_36 <= ^HVESD_R_1_1_PNP_36
   PPOD_H_BJT_PNP_36 NOT INTERACT COLOD_ESD_PNP_36 >= HVESD_R_1_PNP_36 <= HVESD_R_1_1_PNP_36
   PPOD_H_BJT_PNP_36 NOT INTERACT EMIOD_ESD_PNP_36 >= HVESD_R_1_PNP_36 - 1  <= HVESD_R_1_1_PNP_36 - 1
}
//HVESD.R.1 and HVESD.R.1.1 is checked by HVESD.R.1_PNP_45 
HVESD.R.1_PNP_45 { @ Min finger number of Collector P+OD >= ^HVESD_R_1_PNP_45 <= ^HVESD_R_1_1_PNP_45
   PPOD_H_BJT_PNP_45 NOT INTERACT COLOD_ESD_PNP_45 >= HVESD_R_1_PNP_45 <= HVESD_R_1_1_PNP_45
   PPOD_H_BJT_PNP_45 NOT INTERACT EMIOD_ESD_PNP_45 >= HVESD_R_1_PNP_45 - 1  <= HVESD_R_1_1_PNP_45 - 1
}

//HVESD.R.2 and HVESD.R.2.1 is checked by HVESD.R.2_PNP_12_PDD
HVESD.R.2_PNP_12_PDD { @ Min finger number of collector PP (Collector = Emitter +1) >= ^HVESD_R_2_PNP_12_PDD <=  ^HVESD_R_2_1_PNP_12_PDD
   A = PP AND COLOD_ESD_PNP_12_PDD
   PPOD_H_BJT_PNP_12_PDD NOT INTERACT A >= HVESD_R_2_PNP_12_PDD <= HVESD_R_2_1_PNP_12_PDD
   B = PP AND EMIOD_ESD_PNP_12_PDD
   PPOD_H_BJT_PNP_12_PDD NOT INTERACT B >= HVESD_R_2_PNP_12_PDD -1 <= HVESD_R_2_1_PNP_12_PDD - 1
}
//HVESD.R.2 and HVESD.R.2.1 is checked by HVESD.R.2_PNP_16
HVESD.R.2_PNP_16 { @ Min finger number of collector PP (Collector = Emitter +1) >= ^HVESD_R_2_PNP_16 <=  ^HVESD_R_2_1_PNP_16
   A = PP AND COLOD_ESD_PNP_16
   PPOD_H_BJT_PNP_16 NOT INTERACT A >= HVESD_R_2_PNP_16 <= HVESD_R_2_1_PNP_16
   B = PP AND EMIOD_ESD_PNP_16
   PPOD_H_BJT_PNP_16 NOT INTERACT B >= HVESD_R_2_PNP_16 -1 <= HVESD_R_2_1_PNP_16 - 1
}
//HVESD.R.2 and HVESD.R.2.1 is checked by HVESD.R.2_PNP_20
HVESD.R.2_PNP_20 { @ Min finger number of collector PP (Collector = Emitter +1) >= ^HVESD_R_2_PNP_20 <=  ^HVESD_R_2_1_PNP_20
   A = PP AND COLOD_ESD_PNP_20
   PPOD_H_BJT_PNP_20 NOT INTERACT A >= HVESD_R_2_PNP_20 <= HVESD_R_2_1_PNP_20
   B = PP AND EMIOD_ESD_PNP_20
   PPOD_H_BJT_PNP_20 NOT INTERACT B >= HVESD_R_2_PNP_20 -1 <= HVESD_R_2_1_PNP_20 - 1
}
//HVESD.R.2 and HVESD.R.2.1 is checked by HVESD.R.2_PNP_20_PDD
HVESD.R.2_PNP_20_PDD { @ Min finger number of collector PP (Collector = Emitter +1) >= ^HVESD_R_2_PNP_20_PDD <=  ^HVESD_R_2_1_PNP_20_PDD
   A = PP AND COLOD_ESD_PNP_20_PDD
   PPOD_H_BJT_PNP_20_PDD NOT INTERACT A >= HVESD_R_2_PNP_20_PDD <= HVESD_R_2_1_PNP_20_PDD
   B = PP AND EMIOD_ESD_PNP_20_PDD
   PPOD_H_BJT_PNP_20_PDD NOT INTERACT B >= HVESD_R_2_PNP_20_PDD -1 <= HVESD_R_2_1_PNP_20_PDD - 1
}
//HVESD.R.2 and HVESD.R.2.1 is checked by HVESD.R.2_PNP_24
HVESD.R.2_PNP_24 { @ Min finger number of collector PP (Collector = Emitter +1) >= ^HVESD_R_2_PNP_24 <=  ^HVESD_R_2_1_PNP_24
   A = PP AND COLOD_ESD_PNP_24
   PPOD_H_BJT_PNP_24 NOT INTERACT A >= HVESD_R_2_PNP_24 <= HVESD_R_2_1_PNP_24
   B = PP AND EMIOD_ESD_PNP_24
   PPOD_H_BJT_PNP_24 NOT INTERACT B >= HVESD_R_2_PNP_24 -1 <= HVESD_R_2_1_PNP_24 - 1
}

HVESD.R.3_PNP_6 { @ Min and max cell number of HVESD BJT == ^HVESD_R_3_PNP_6
   						   @ ESD cell must be surround
   SDI INTERACT PPOD_H_BJT_PNP_6 != HVESD_R_3_PNP_6
}
HVESD.R.3_PNP_9 { @ Min and max cell number of HVESD BJT == ^HVESD_R_3_PNP_9
   						   @ ESD cell must be surround
   SDI INTERACT PPOD_H_BJT_PNP_9 != HVESD_R_3_PNP_9
}
HVESD.R.3_PNP_12 { @ Min and max cell number of HVESD BJT == ^HVESD_R_3_PNP_12
   						   @ ESD cell must be surround
   SDI INTERACT PPOD_H_BJT_PNP_12 != HVESD_R_3_PNP_12
}
HVESD.R.3_PNP_12_PDD { @ Min and max cell number of HVESD BJT == ^HVESD_R_3_PNP_12_PDD
   						   @ ESD cell must be surround
   SDI INTERACT PPOD_H_BJT_PNP_12_PDD != HVESD_R_3_PNP_12_PDD
}
HVESD.R.3_PNP_16 { @ Min and max cell number of HVESD BJT == ^HVESD_R_3_PNP_16
   						   @ ESD cell must be surround
   SDI INTERACT PPOD_H_BJT_PNP_16 != HVESD_R_3_PNP_16
}
HVESD.R.3_PNP_20_PDD { @ Min and max cell number of HVESD BJT == ^HVESD_R_3_PNP_20_PDD
   						   @ ESD cell must be surround
   SDI INTERACT PPOD_H_BJT_PNP_20_PDD != HVESD_R_3_PNP_20_PDD
}
HVESD.R.3_PNP_24 { @ Min and max cell number of HVESD BJT == ^HVESD_R_3_PNP_24
   						   @ ESD cell must be surround
   SDI INTERACT PPOD_H_BJT_PNP_24 != HVESD_R_3_PNP_24
}
HVESD.R.3_PNP_29 { @ Min and max cell number of HVESD BJT == ^HVESD_R_3_PNP_29
   						   @ ESD cell must be surround
   SDI INTERACT PPOD_H_BJT_PNP_29 != HVESD_R_3_PNP_29
}
HVESD.R.3_PNP_20 { @ Min and max cell number of HVESD BJT == ^HVESD_R_3_PNP_20
   						   @ ESD cell must be surround
   SDI INTERACT PPOD_H_BJT_PNP_20 != HVESD_R_3_PNP_20
}
HVESD.R.3_PNP_36 { @ Min and max cell number of HVESD BJT == ^HVESD_R_3_PNP_36
   						   @ ESD cell must be surround
   SDI INTERACT PPOD_H_BJT_PNP_36 != HVESD_R_3_PNP_36
}
HVESD.R.3_PNP_45 { @ Min and max cell number of HVESD BJT == ^HVESD_R_3_PNP_45
   						   @ ESD cell must be surround
   SDI INTERACT PPOD_H_BJT_PNP_45 != HVESD_R_3_PNP_45
}

HVESD.R.4_PNP_29 { @ PDD must be interact with Emitter OD and Collector OD for 29V_ESD_GA
   A = PDD INTERACT BASOD_ESD_PNP_29_H
   A NOT INTERACT EMIOD_ESD_PNP_29
}

HVESD.R.5_PNP_20 { @ PDD must be outside butted with {SH_N OR SH_P} for PNP_20
   A1 = HVSHN INTERACT COL_EMI_ESD_merge_PNP_20
   A = HOLES A1
   B = HVSHP INTERACT COL_EMI_ESD_merge_PNP_20
   C = PDD INTERACT BASOD_ESD_PNP_20_H
   (A NOT B) XOR C
}



HVESD.R.6_PNP_20 { @ PDD interact Emitter/Collector OD is not allowed for PNP_20
   PDD INTERACT COL_EMI_ESD_merge_PNP_20 
}


HVESD_EOD_BOD_PNP_6 = EMIOD_ESD_PNP_6 OR BASOD_ESD_PNP_6
CONNECT M1_mf HVESD_EOD_BOD_PNP_6 BY CO_mf
HVESD.R.8_PNP_6 { @ The Emitter P+OD and Base N+OD must be connected together
   PPOD_H_BJT_PNP_6 INTERACT HVESD_EOD_BOD_PNP_6 BY NET > 1
}
HVESD_EOD_BOD_PNP_9 = EMIOD_ESD_PNP_9 OR BASOD_ESD_PNP_9
CONNECT M1_mf HVESD_EOD_BOD_PNP_9 BY CO_mf
HVESD.R.8_PNP_9 { @ The Emitter P+OD and Base N+OD must be connected together
   PPOD_H_BJT_PNP_9 INTERACT HVESD_EOD_BOD_PNP_9 BY NET > 1
}
HVESD_EOD_BOD_PNP_12 = EMIOD_ESD_PNP_12 OR BASOD_ESD_PNP_12
CONNECT M1_mf HVESD_EOD_BOD_PNP_12 BY CO_mf
HVESD.R.8_PNP_12 { @ The Emitter P+OD and Base N+OD must be connected together
   PPOD_H_BJT_PNP_12 INTERACT HVESD_EOD_BOD_PNP_12 BY NET > 1
}

COLOD_ESD_PNP_12_CLAMP1 = COLOD_ESD_PNP_12 AND HVESD2DMY
EMIOD_ESD_PNP_12_CLAMP2 = EMIOD_ESD_PNP_12 NOT HVESD2DMY
COL_EMI_ESD_PNP_12_STACK = COLOD_ESD_PNP_12_CLAMP1 OR EMIOD_ESD_PNP_12_CLAMP2
CONNECT M1_mf COL_EMI_ESD_PNP_12_STACK BY CO_mf
CONNECT M1_mf PPOD_R_BJT_PNP_12 BY CO_mf
HVESD.R.9_PNP_12 { @ For PNP_12 Collector P+OD for ESD clamp-1 should be connected to the Emittor P+OD of ESD clamp-2
   HVESD1DMY INTERACT COL_EMI_ESD_PNP_12_STACK BY NET > 1
   HVESD1DMY INTERACT PPOD_R_BJT_PNP_12 BY NET > 1
}
COLOD_ESD_PNP_20_CLAMP1 = COLOD_ESD_PNP_20 AND HVESD2DMY
EMIOD_ESD_PNP_20_CLAMP2 = EMIOD_ESD_PNP_20 NOT HVESD2DMY
COL_EMI_ESD_PNP_20_STACK = COLOD_ESD_PNP_20_CLAMP1 OR EMIOD_ESD_PNP_20_CLAMP2
CONNECT M1_mf COL_EMI_ESD_PNP_20_STACK BY CO_mf
CONNECT M1_mf PPOD_R_BJT_PNP_20 BY CO_mf
HVESD.R.9_PNP_20 { @ For PNP_20 Collector P+OD for ESD clamp-1 should be connected to the Emittor P+OD of ESD clamp-2
   HVESD1DMY INTERACT COL_EMI_ESD_PNP_20_STACK BY NET > 1
   HVESD1DMY INTERACT PPOD_R_BJT_PNP_20 BY NET > 1
}

HVESD.R.10_PNP_12_PDD { @ Collector PP and Emitter PP share the same OD for PNP_12_PDD
   BASOD_ESD_PNP_12_PDD_H INTERACT COL_EMI_ESD_merge_PNP_12_PDD > 1
}
HVESD.R.10_PNP_16 { @ Collector PP and Emitter PP share the same OD for PNP_16
   BASOD_ESD_PNP_16_H INTERACT COL_EMI_ESD_merge_PNP_16 > 1
}
HVESD.R.10_PNP_20 { @ Collector PP and Emitter PP share the same OD for PNP_20
   BASOD_ESD_PNP_20_H INTERACT COL_EMI_ESD_merge_PNP_20 > 1
}
HVESD.R.10_PNP_20_PDD { @ Collector PP and Emitter PP share the same OD for PNP_20_PDD
   BASOD_ESD_PNP_20_PDD_H INTERACT COL_EMI_ESD_merge_PNP_20_PDD > 1
}
HVESD.R.10_PNP_24 { @ Collector PP and Emitter PP share the same OD for PNP_24
   BASOD_ESD_PNP_24_H INTERACT COL_EMI_ESD_merge_PNP_24 > 1
}

HVESD.R.11_PNP_12_PDD { @ Collector/Emitter OD must be overlap with RPO for PNP_12_PDD
   COLOD_ESD_PNP_12_PDD NOT CUT RPO
   EMIOD_ESD_PNP_12_PDD NOT CUT RPO
}
HVESD.R.11_PNP_16 { @ Collector/Emitter OD must be overlap with RPO for PNP_16
   COLOD_ESD_PNP_16 NOT CUT RPO
   EMIOD_ESD_PNP_16 NOT CUT RPO
}
HVESD.R.11_PNP_20 { @ Collector/Emitter OD must be overlap with RPO for PNP_20
   COLOD_ESD_PNP_20 NOT CUT RPO
   EMIOD_ESD_PNP_20 NOT CUT RPO
}
HVESD.R.11_PNP_20_PDD { @ Collector/Emitter OD must be overlap with RPO for PNP_20_PDD
   COLOD_ESD_PNP_20_PDD NOT CUT RPO
   EMIOD_ESD_PNP_20_PDD NOT CUT RPO
}
HVESD.R.11_PNP_24 { @ Collector/Emitter OD must be overlap with RPO for PNP_24
   COLOD_ESD_PNP_24 NOT CUT RPO
   EMIOD_ESD_PNP_24 NOT CUT RPO
}

HVESD_EOD_BOD_PNP_12_PDD = EMIOD_ESD_PNP_12_PDD OR BASOD_ESD_PNP_12_PDD
CONNECT M1_mf HVESD_EOD_BOD_PNP_12_PDD BY CO_mf
HVESD.R.12_PNP_12_PDD { @ Emitter PP amd Base N+OD ring must be connected together
   PPOD_H_BJT_PNP_12_PDD INTERACT HVESD_EOD_BOD_PNP_12_PDD BY NET > 1
}
HVESD_EOD_BOD_PNP_16 = EMIOD_ESD_PNP_16 OR BASOD_ESD_PNP_16
CONNECT M1_mf HVESD_EOD_BOD_PNP_16 BY CO_mf
HVESD.R.12_PNP_16 { @ Emitter PP amd Base N+OD ring must be connected together
   PPOD_H_BJT_PNP_16 INTERACT HVESD_EOD_BOD_PNP_16 BY NET > 1
}
HVESD_EOD_BOD_PNP_20 = EMIOD_ESD_PNP_20 OR BASOD_ESD_PNP_20
CONNECT M1_mf HVESD_EOD_BOD_PNP_20 BY CO_mf
HVESD.R.12_PNP_20 { @ Emitter PP amd Base N+OD ring must be connected together
   PPOD_H_BJT_PNP_20 INTERACT HVESD_EOD_BOD_PNP_20 BY NET > 1
}
HVESD_EOD_BOD_PNP_20_PDD = EMIOD_ESD_PNP_20_PDD OR BASOD_ESD_PNP_20_PDD
CONNECT M1_mf HVESD_EOD_BOD_PNP_20_PDD BY CO_mf
HVESD.R.12_PNP_20_PDD { @ Emitter PP amd Base N+OD ring must be connected together
   PPOD_H_BJT_PNP_20_PDD INTERACT HVESD_EOD_BOD_PNP_20_PDD BY NET > 1
}
HVESD_EOD_BOD_PNP_24 = EMIOD_ESD_PNP_24 OR BASOD_ESD_PNP_24
CONNECT M1_mf HVESD_EOD_BOD_PNP_24 BY CO_mf
HVESD.R.12_PNP_24 { @ Emitter PP amd Base N+OD ring must be connected together
   PPOD_H_BJT_PNP_24 INTERACT HVESD_EOD_BOD_PNP_24 BY NET > 1
}

HVESD_EOD_BOD_PNP_29 = EMIOD_ESD_PNP_29 OR BASOD_ESD_PNP_29
CONNECT M1_mf HVESD_EOD_BOD_PNP_29 BY CO_mf
HVESD.R.13_PNP_29 { @ Emitter OD and Base N+OD ring must be connected together
   PPOD_H_BJT_PNP_29 INTERACT HVESD_EOD_BOD_PNP_29 BY NET > 1
}
HVESD_EOD_BOD_PNP_36 = EMIOD_ESD_PNP_36 OR BASOD_ESD_PNP_36
CONNECT M1_mf HVESD_EOD_BOD_PNP_36 BY CO_mf
HVESD.R.13_PNP_36 { @ Emitter OD and Base N+OD ring must be connected together
   PPOD_H_BJT_PNP_36 INTERACT HVESD_EOD_BOD_PNP_36 BY NET > 1
}
HVESD_EOD_BOD_PNP_45 = EMIOD_ESD_PNP_45 OR BASOD_ESD_PNP_45
CONNECT M1_mf HVESD_EOD_BOD_PNP_45 BY CO_mf
HVESD.R.13_PNP_45 { @ Emitter OD and Base N+OD ring must be connected together
   PPOD_H_BJT_PNP_45 INTERACT HVESD_EOD_BOD_PNP_45 BY NET > 1
}

HVESD.R.14 { @ PDD must cover Emitter P+OD for 29V_ESD_GA
    EMIOD_ESD_PNP_29 NOT PDD
}

HVESD.R.18.1_PNP_6 { @ HVESD BJT must be surrounded by P+ isolation ring
  COL_EMI_ESD_merge_PNP_6 NOT INSIDE PPOD_H_BJT_PNP_6
}
HVESD.R.18.1_PNP_9 { @ HVESD BJT must be surrounded by P+ isolation ring
  COL_EMI_ESD_merge_PNP_9 NOT INSIDE PPOD_H_BJT_PNP_9
}
HVESD.R.18.1_PNP_12 { @ HVESD BJT must be surrounded by P+ isolation ring
  COL_EMI_ESD_merge_PNP_12 NOT INSIDE PPOD_H_BJT_PNP_12
}
HVESD.R.18.1_PNP_12_PDD { @ HVESD BJT must be surrounded by P+ isolation ring
  COL_EMI_ESD_merge_PNP_12_PDD NOT INSIDE PPOD_H_BJT_PNP_12_PDD
}
HVESD.R.18.1_PNP_16 { @ HVESD BJT must be surrounded by P+ isolation ring
  COL_EMI_ESD_merge_PNP_16 NOT INSIDE PPOD_H_BJT_PNP_16
}
HVESD.R.18.1_PNP_20 { @ HVESD BJT must be surrounded by P+ isolation ring
  COL_EMI_ESD_merge_PNP_20 NOT INSIDE PPOD_H_BJT_PNP_20
}
HVESD.R.18.1_PNP_20_PDD { @ HVESD BJT must be surrounded by P+ isolation ring
  COL_EMI_ESD_merge_PNP_20_PDD NOT INSIDE PPOD_H_BJT_PNP_20_PDD
}
HVESD.R.18.1_PNP_24 { @ HVESD BJT must be surrounded by P+ isolation ring
  COL_EMI_ESD_merge_PNP_24 NOT INSIDE PPOD_H_BJT_PNP_24
}
HVESD.R.18.1_PNP_29 { @ HVESD BJT must be surrounded by P+ isolation ring
  COL_EMI_ESD_merge_PNP_29 NOT INSIDE PPOD_H_BJT_PNP_29
}
HVESD.R.18.1_PNP_36 { @ HVESD BJT must be surrounded by P+ isolation ring
  COL_EMI_ESD_merge_PNP_36 NOT INSIDE PPOD_H_BJT_PNP_36
}
HVESD.R.18.1_PNP_45 { @ HVESD BJT must be surrounded by P+ isolation ring
  COL_EMI_ESD_merge_PNP_45 NOT INSIDE PPOD_H_BJT_PNP_45
}

HVESD.R.34_PNP_20_PDD { @ PDD must be interact with Emitter PP for 20V_ESD_GA_PDD
   A = PP AND EMIOD_ESD_PNP_20_PDD
   B = PDD INTERACT BASOD_ESD_PNP_20_PDD_H
   B NOT INTERACT A
}

#IFDEF PARASITIC_ESD
VARIABLE HVESD_S_10_5V 5
VARIABLE HVESD_S_11_5V 5
VARIABLE HVESD_S_12_5V 5
VARIABLE HVESD_S_13_5V 5
VARIABLE HVESD_S_14_5V 5
VARIABLE HVESD_S_15_5V 5
VARIABLE HVESD_S_22_5V 10
VARIABLE HVESD_S_23_5V 10
VARIABLE HVESD_S_24_5V 5
VARIABLE HVESD_S_26_5V 10
VARIABLE HVESD_S_28_5V 10
VARIABLE HVESD_S_29_5V 5
VARIABLE HVESD_S_31_5V 5
VARIABLE HVESD_S_33_5V 5
VARIABLE HVESD_S_35_5V 10

VARIABLE HVESD_S_16_36V 50
VARIABLE HVESD_S_17_36V 35
VARIABLE HVESD_S_18_36V 50
VARIABLE HVESD_S_19_36V 50
VARIABLE HVESD_S_20_36V 35
VARIABLE HVESD_S_21_36V 50
VARIABLE HVESD_S_25_36V 50
VARIABLE HVESD_S_27_36V 50
VARIABLE HVESD_S_30_36V 50
VARIABLE HVESD_S_32_36V 35
VARIABLE HVESD_S_34_36V 35
VARIABLE HVESD_S_36_36V 35
VARIABLE HVESD_S_38_36V 60

VARIABLE HVESD_S_10_6_9_12_16_20_24V	28
VARIABLE HVESD_S_10_29V				48
VARIABLE HVESD_S_11_6_9_12_16_20_24V	18
VARIABLE HVESD_S_11_29V				30
VARIABLE HVESD_S_12_6_9_12_16_20_24V	28
VARIABLE HVESD_S_12_29V				48
VARIABLE HVESD_S_13_6_9_12_16_20_24V	28
VARIABLE HVESD_S_13_29V				48
VARIABLE HVESD_S_14_6_9_12_16_20_24V	18
VARIABLE HVESD_S_14_29V				30
VARIABLE HVESD_S_15_6_9_12_16_20_24V	28
VARIABLE HVESD_S_15_29V				48
VARIABLE HVESD_S_16_45V				58
VARIABLE HVESD_S_17_45V				48
VARIABLE HVESD_S_18_45V				58
VARIABLE HVESD_S_19_45V				58
VARIABLE HVESD_S_20_45V				48
VARIABLE HVESD_S_21_45V				58
VARIABLE HVESD_S_22_6_9_12_16_20_24V	25
VARIABLE HVESD_S_22_29V				60
VARIABLE HVESD_S_23_6_9_12_16_20_24V	25
VARIABLE HVESD_S_23_29V				60
VARIABLE HVESD_S_24_6_9_12_16_20_24V	28
VARIABLE HVESD_S_24_29V				48
VARIABLE HVESD_S_25_45V				58
VARIABLE HVESD_S_26_6_9_12_16_20_24V	25
VARIABLE HVESD_S_26_29V				60
VARIABLE HVESD_S_27_45V				58
VARIABLE HVESD_S_28_6_9_12_16_20_24V	25
VARIABLE HVESD_S_28_29V				60
VARIABLE HVESD_S_29_6_9_12_16_20_24V	28
VARIABLE HVESD_S_29_29V				48
VARIABLE HVESD_S_30_45V				58
VARIABLE HVESD_S_31_6_9_12_16_20_24V	18
VARIABLE HVESD_S_31_29V				30
VARIABLE HVESD_S_32_45V				48
VARIABLE HVESD_S_33_6_9_12_16_20_24V	18
VARIABLE HVESD_S_33_29V				30
VARIABLE HVESD_S_34_45V				48
VARIABLE HVESD_S_35_6_9_12_16_20_24V	18
VARIABLE HVESD_S_35_29V				30
VARIABLE HVESD_S_36_45V				48
VARIABLE HVESD_S_37_6_9_12_16_20_24V	40
VARIABLE HVESD_S_37_29V				40
VARIABLE HVESD_S_38_45V				90
VARIABLE HVESD_W_9_2				1.0






NPOD_NWEL = NPOD AND NWEL
NPOD_INSIDE_HVSHP_PDD_HVPW = (NP AND OD) AND ((SH_P OR PDD) OR HVPW_drawing) 
NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL = ((NP AND OD) NOT (POLY OR RPDUMMY)) INSIDE PWEL
NBL_ISO_SBD_H = (HOLES NBL_ISO_R_3) INTERACT (SBDDMY OR SBD3TDMY)
NBL_ISO_HV_H = (NBL_ISO_H OR NBL_ISO_SBD_H) OR PPOD_ISO_H_NA45G3_DEP_GB
HVSHNiu = STAMP (HVSHN NOT NBL_ISO_HV_H) BY NTAPiu
NDDiu = STAMP (NDD NOT (NBL_ISO_HOLE OR NBL_ISO_HV_H)) BY (NTAPiu NOT GATE)
NWELiu = STAMP (NWEL NOT NBL_ISO_HOLE) BY NTAPiu
NPOD_NWELiu =STAMP (NPOD_NWEL NOT NBL_ISO_HOLE) BY NTAPiu
NPOD_INSIDE_HVSHP_PDD_HVPWiu = STAMP (NPOD_INSIDE_HVSHP_PDD_HVPW NOT NBL_ISO_HV_H) BY NSDiu
NPOD_NOT_PO_RPDUMMY_INSIDE_PWELiu = STAMP (NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL NOT NBL_ISO_HOLE) BY NSDiu
#IFNDEF CHECK_LATCHUP_BY_TEXT 
HVSHN_PAD = NET AREA RATIO HVSHNiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu)  + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
NDD_PAD = NET AREA RATIO NDDiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu)  + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
NWEL_PAD = NET AREA RATIO NWELiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu)  + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
NPOD_NWEL_PAD = NET AREA RATIO NPOD_NWELiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu)  + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
NPOD_INSIDE_HVSHP_PDD_HVPW_PAD = NET AREA RATIO NPOD_INSIDE_HVSHP_PDD_HVPWiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu)  + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD = NET AREA RATIO NPOD_NOT_PO_RPDUMMY_INSIDE_PWELiu CBiu UBMniu UBMdiu > 0 [!!AREA(CBiu)  + !!AREA(UBMniu)+ !!AREA(UBMdiu)]
#ENDIF

#IFDEF CHECK_LATCHUP_BY_TEXT 
 HVSHN_PAD = NET AREA RATIO HVSHNiu OVER  PAD_M1iu_BY_TEXT  PAD_M2iu_BY_TEXT  PAD_M3iu_BY_TEXT  PAD_M4iu_BY_TEXT  PAD_M5iu_BY_TEXT  CBiu UBMniu UBMdiu > 0 

 NDD_PAD = NET AREA RATIO NDDiu OVER  PAD_M1iu_BY_TEXT  PAD_M2iu_BY_TEXT  PAD_M3iu_BY_TEXT  PAD_M4iu_BY_TEXT  PAD_M5iu_BY_TEXT  CBiu UBMniu UBMdiu > 0 

 NWEL_PAD = NET AREA RATIO NWELiu OVER  PAD_M1iu_BY_TEXT  PAD_M2iu_BY_TEXT  PAD_M3iu_BY_TEXT  PAD_M4iu_BY_TEXT  PAD_M5iu_BY_TEXT  CBiu UBMniu UBMdiu > 0 

 NPOD_NWEL_PAD = NET AREA RATIO NPOD_NWELiu OVER  PAD_M1iu_BY_TEXT  PAD_M2iu_BY_TEXT  PAD_M3iu_BY_TEXT  PAD_M4iu_BY_TEXT  PAD_M5iu_BY_TEXT  CBiu UBMniu UBMdiu > 0 

 NPOD_INSIDE_HVSHP_PDD_HVPW_PAD = NET AREA RATIO NPOD_INSIDE_HVSHP_PDD_HVPWiu OVER  PAD_M1iu_BY_TEXT  PAD_M2iu_BY_TEXT  PAD_M3iu_BY_TEXT  PAD_M4iu_BY_TEXT  PAD_M5iu_BY_TEXT  CBiu UBMniu UBMdiu > 0 

 NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD = NET AREA RATIO NPOD_NOT_PO_RPDUMMY_INSIDE_PWELiu OVER  PAD_M1iu_BY_TEXT  PAD_M2iu_BY_TEXT  PAD_M3iu_BY_TEXT  PAD_M4iu_BY_TEXT  PAD_M5iu_BY_TEXT  CBiu UBMniu UBMdiu > 0 

#ENDIF

HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD = (HVSHN_PAD INTERACT HVDMY) NOT INSIDE NBL
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA = ((HVSHN_PAD INTERACT HVDMY) NOT INSIDE NBL) INTERACT HVGA
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB = ((HVSHN_PAD INTERACT HVDMY) NOT INSIDE NBL) INTERACT HVGB
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD = (HVSHN_PAD INTERACT HVDMY) INSIDE NBL
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA = ((HVSHN_PAD INTERACT HVDMY) INSIDE NBL) INTERACT HVGA
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB = ((HVSHN_PAD INTERACT HVDMY) INSIDE NBL) INTERACT HVGB
HVSHN_INTERACT_HVDMY_PAD = HVSHN_PAD INTERACT HVDMY
HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA = ((HVSHN_PAD INTERACT HVDMY) NOT INSIDE NBL) INTERACT HVGA
HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB = ((HVSHN_PAD INTERACT HVDMY) NOT INSIDE NBL) INTERACT HVGB
NDD_INSIDE_HVDMY_PAD = NDD_PAD INSIDE HVDMY
HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA = (HVSHN_PAD INSIDE SDI) INTERACT HVGA
HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB = (HVSHN_PAD INSIDE SDI) INTERACT HVGB

HV6_9_12_16_20_24DMY = ((((HV6DMY OR HV9DMY) OR HV12DMY) OR HV16DMY) OR HV20DMY) OR HV24DMY
HV6_9_12_16_20_24ISO = COPY HV9ISO

ESD_HV5DMY = HV5DMY INTERACT SDI
ESD_OD2 = OD2 INTERACT SDI
OD2ESD_PLUS_N_PRE = ENSD_DRAIN AND ESD_OD2
OD2ESD_PLUS_P_PRE = EPSD_SOURCE AND ESD_OD2
OD2ESD_PLUS_N = STAMP OD2ESD_PLUS_N_PRE BY NSDiu
OD2ESD_PLUS_P = STAMP OD2ESD_PLUS_P_PRE BY PSDiu
HV5ESD_PLUS = NTAPiu AND ESD_HV5DMY

ESD_HV6_9_12_16_20_24DMY = HV6_9_12_16_20_24DMY INTERACT SDI
HV6_9_12_16_20_24ESD_PLUS = NTAPiu AND ESD_HV6_9_12_16_20_24DMY

ESD_HV29DMY = HV29DMY INTERACT SDI
HV29ESD_PLUS = NTAPiu AND ESD_HV29DMY

ESD_HV36DMY = HV36DMY INTERACT SDI
HV36ESD_PLUS = NTAPiu AND ESD_HV36DMY

ESD_HV45DMY = HV45DMY INTERACT SDI
HV45ESD_PLUS = NTAPiu AND ESD_HV45DMY


HV5MOS_NTAP = NTAPiu AND (HV5DMY NOT ESD_HV5DMY)
HV5MOS_NSD = NSDiu AND (HV5DMY NOT ESD_HV5DMY)

HV6_9_12_16_20_24MOS_NTAP = NTAPiu AND (HV6_9_12_16_20_24DMY NOT ESD_HV6_9_12_16_20_24DMY)
HV6_9_12_16_20_24MOS_NSD = NSDiu AND (HV6_9_12_16_20_24DMY NOT ESD_HV6_9_12_16_20_24DMY)
HV6_9_12_16_20_24LVISO_PRE = NBL_ISO_RING INTERACT HV6_9_12_16_20_24ISO
HV6_9_12_16_20_24LVISO = STAMP HV6_9_12_16_20_24LVISO_PRE BY NTAPiu

HV29MOS_NTAP = NTAPiu AND (HV29DMY NOT ESD_HV29DMY)
HV29MOS_NSD = NSDiu AND (HV29DMY NOT ESD_HV29DMY)
HV29LVISO_PRE = NBL_ISO_RING INTERACT HV29ISO
HV29LVISO = STAMP HV29LVISO_PRE BY NTAPiu

HV36MOS_NTAP = NTAPiu AND (HV36DMY NOT ESD_HV36DMY)
HV36MOS_NSD = NSDiu AND (HV36DMY NOT ESD_HV36DMY)

HV45MOS_NTAP = NTAPiu AND (HV45DMY NOT ESD_HV45DMY)
HV45MOS_NSD = NSDiu AND (HV45DMY NOT ESD_HV45DMY)
HV45LVISO_PRE = NBL_ISO_RING INTERACT HV45ISO
HV45LVISO = STAMP HV45LVISO_PRE BY NTAPiu


HVSHN_PAD_HV5ESD = NET AREA RATIO HVSHN_PAD HV5ESD_PLUS OD2ESD_PLUS_N OD2ESD_PLUS_P > 0 [!!AREA(HV5ESD_PLUS)+!!AREA(OD2ESD_PLUS_N)+!!AREA(OD2ESD_PLUS_P)]
HVSHN_PAD_HV5DMY = NET AREA RATIO HVSHN_PAD HV5MOS_NTAP HV5MOS_NSD > 0 [!!AREA(HV5MOS_NTAP)+!!AREA(HV5MOS_NSD)]

HVSHN_PAD_HV6_9_12_16_20_24ESD = NET AREA RATIO HVSHN_PAD HV6_9_12_16_20_24ESD_PLUS > 0
HVSHN_PAD_HV6_9_12_16_20_24DMY = NET AREA RATIO HVSHN_PAD HV6_9_12_16_20_24MOS_NTAP HV6_9_12_16_20_24MOS_NSD HV6_9_12_16_20_24LVISO > 0 [!!AREA(HV6_9_12_16_20_24MOS_NTAP)+!!AREA(HV6_9_12_16_20_24MOS_NSD)+!!AREA(HV6_9_12_16_20_24LVISO)]

HVSHN_PAD_HV29ESD = NET AREA RATIO HVSHN_PAD HV29ESD_PLUS > 0
HVSHN_PAD_HV29DMY = NET AREA RATIO HVSHN_PAD HV29MOS_NTAP HV29MOS_NSD HV29LVISO > 0 [!!AREA(HV29MOS_NTAP)+!!AREA(HV29MOS_NSD)+!!AREA(HV29LVISO)]

HVSHN_PAD_HV36ESD = NET AREA RATIO HVSHN_PAD HV36ESD_PLUS > 0
HVSHN_PAD_HV36DMY = NET AREA RATIO HVSHN_PAD HV36MOS_NTAP HV36MOS_NSD > 0 [!!AREA(HV36MOS_NTAP)+!!AREA(HV36MOS_NSD)]

HVSHN_PAD_HV45ESD = NET AREA RATIO HVSHN_PAD HV45ESD_PLUS > 0
HVSHN_PAD_HV45DMY = NET AREA RATIO HVSHN_PAD HV45MOS_NTAP HV45MOS_NSD HV45LVISO > 0 [!!AREA(HV45MOS_NTAP)+!!AREA(HV45MOS_NSD)+!!AREA(HV45LVISO)]


NDD_PAD_HV5ESD = NET AREA RATIO NDD_PAD HV5ESD_PLUS OD2ESD_PLUS_N OD2ESD_PLUS_P > 0 [!!AREA(HV5ESD_PLUS)+!!AREA(OD2ESD_PLUS_N)+!!AREA(OD2ESD_PLUS_P)]
NDD_PAD_HV5DMY = NET AREA RATIO NDD_PAD HV5MOS_NTAP HV5MOS_NSD > 0 [!!AREA(HV5MOS_NTAP)+!!AREA(HV5MOS_NSD)]

NDD_PAD_HV6_9_12_16_20_24ESD = NET AREA RATIO NDD_PAD HV6_9_12_16_20_24ESD_PLUS > 0
NDD_PAD_HV6_9_12_16_20_24DMY = NET AREA RATIO NDD_PAD HV6_9_12_16_20_24MOS_NTAP HV6_9_12_16_20_24MOS_NSD HV6_9_12_16_20_24LVISO > 0 [!!AREA(HV6_9_12_16_20_24MOS_NTAP)+!!AREA(HV6_9_12_16_20_24MOS_NSD)+!!AREA(HV6_9_12_16_20_24LVISO)]

NDD_PAD_HV29ESD = NET AREA RATIO NDD_PAD HV29ESD_PLUS > 0
NDD_PAD_HV29DMY = NET AREA RATIO NDD_PAD HV29MOS_NTAP HV29MOS_NSD HV29LVISO > 0 [!!AREA(HV29MOS_NTAP)+!!AREA(HV29MOS_NSD)+!!AREA(HV29LVISO)]

NDD_PAD_HV36ESD = NET AREA RATIO NDD_PAD HV36ESD_PLUS > 0
NDD_PAD_HV36DMY = NET AREA RATIO NDD_PAD HV36MOS_NTAP HV36MOS_NSD > 0 [!!AREA(HV36MOS_NTAP)+!!AREA(HV36MOS_NSD)]

NDD_PAD_HV45ESD = NET AREA RATIO NDD_PAD HV45ESD_PLUS > 0
NDD_PAD_HV45DMY = NET AREA RATIO NDD_PAD HV45MOS_NTAP HV45MOS_NSD HV45LVISO > 0 [!!AREA(HV45MOS_NTAP)+!!AREA(HV45MOS_NSD)+!!AREA(HV45LVISO)]


NWEL_PAD_HV5ESD = NET AREA RATIO NWEL_PAD HV5ESD_PLUS OD2ESD_PLUS_N OD2ESD_PLUS_P > 0 [!!AREA(HV5ESD_PLUS)+!!AREA(OD2ESD_PLUS_N)+!!AREA(OD2ESD_PLUS_P)]
NWEL_PAD_HV5DMY = NET AREA RATIO NWEL_PAD HV5MOS_NTAP HV5MOS_NSD > 0 [!!AREA(HV5MOS_NTAP)+!!AREA(HV5MOS_NSD)]

NWEL_PAD_HV6_9_12_16_20_24ESD = NET AREA RATIO NWEL_PAD HV6_9_12_16_20_24ESD_PLUS > 0
NWEL_PAD_HV6_9_12_16_20_24DMY = NET AREA RATIO NWEL_PAD HV6_9_12_16_20_24MOS_NTAP HV6_9_12_16_20_24MOS_NSD HV6_9_12_16_20_24LVISO > 0 [!!AREA(HV6_9_12_16_20_24MOS_NTAP)+!!AREA(HV6_9_12_16_20_24MOS_NSD)+!!AREA(HV6_9_12_16_20_24LVISO)]

NWEL_PAD_HV29ESD = NET AREA RATIO NWEL_PAD HV29ESD_PLUS > 0
NWEL_PAD_HV29DMY = NET AREA RATIO NWEL_PAD HV29MOS_NTAP HV29MOS_NSD HV29LVISO > 0 [!!AREA(HV29MOS_NTAP)+!!AREA(HV29MOS_NSD)+!!AREA(HV29LVISO)]

NWEL_PAD_HV36ESD = NET AREA RATIO NWEL_PAD HV36ESD_PLUS > 0
NWEL_PAD_HV36DMY = NET AREA RATIO NWEL_PAD HV36MOS_NTAP HV36MOS_NSD > 0 [!!AREA(HV36MOS_NTAP)+!!AREA(HV36MOS_NSD)]

NWEL_PAD_HV45ESD = NET AREA RATIO NWEL_PAD HV45ESD_PLUS > 0
NWEL_PAD_HV45DMY = NET AREA RATIO NWEL_PAD HV45MOS_NTAP HV45MOS_NSD HV45LVISO > 0 [!!AREA(HV45MOS_NTAP)+!!AREA(HV45MOS_NSD)+!!AREA(HV45LVISO)]


NPOD_NWEL_PAD_HV5ESD = NET AREA RATIO NPOD_NWEL_PAD HV5ESD_PLUS OD2ESD_PLUS_N OD2ESD_PLUS_P > 0 [!!AREA(HV5ESD_PLUS)+!!AREA(OD2ESD_PLUS_N)+!!AREA(OD2ESD_PLUS_P)]
NPOD_NWEL_PAD_HV5DMY = NET AREA RATIO NPOD_NWEL_PAD HV5MOS_NTAP HV5MOS_NSD > 0 [!!AREA(HV5MOS_NTAP)+!!AREA(HV5MOS_NSD)]

NPOD_NWEL_PAD_HV6_9_12_16_20_24ESD = NET AREA RATIO NPOD_NWEL_PAD HV6_9_12_16_20_24ESD_PLUS > 0
NPOD_NWEL_PAD_HV6_9_12_16_20_24DMY = NET AREA RATIO NPOD_NWEL_PAD HV6_9_12_16_20_24MOS_NTAP HV6_9_12_16_20_24MOS_NSD HV6_9_12_16_20_24LVISO > 0 [!!AREA(HV6_9_12_16_20_24MOS_NTAP)+!!AREA(HV6_9_12_16_20_24MOS_NSD)+!!AREA(HV6_9_12_16_20_24LVISO)]

NPOD_NWEL_PAD_HV29ESD = NET AREA RATIO NPOD_NWEL_PAD HV29ESD_PLUS > 0
NPOD_NWEL_PAD_HV29DMY = NET AREA RATIO NPOD_NWEL_PAD HV29MOS_NTAP HV29MOS_NSD HV29LVISO > 0 [!!AREA(HV29MOS_NTAP)+!!AREA(HV29MOS_NSD)+!!AREA(HV29LVISO)]

NPOD_NWEL_PAD_HV36ESD = NET AREA RATIO NPOD_NWEL_PAD HV36ESD_PLUS > 0
NPOD_NWEL_PAD_HV36DMY = NET AREA RATIO NPOD_NWEL_PAD HV36MOS_NTAP HV36MOS_NSD > 0 [!!AREA(HV36MOS_NTAP)+!!AREA(HV36MOS_NSD)]

NPOD_NWEL_PAD_HV45ESD = NET AREA RATIO NPOD_NWEL_PAD HV45ESD_PLUS > 0
NPOD_NWEL_PAD_HV45DMY = NET AREA RATIO NPOD_NWEL_PAD HV45MOS_NTAP HV45MOS_NSD HV45LVISO > 0 [!!AREA(HV45MOS_NTAP)+!!AREA(HV45MOS_NSD)+!!AREA(HV45LVISO)]


NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV5ESD = NET AREA RATIO NPOD_INSIDE_HVSHP_PDD_HVPW_PAD HV5ESD_PLUS OD2ESD_PLUS_N OD2ESD_PLUS_P > 0 [!!AREA(HV5ESD_PLUS)+!!AREA(OD2ESD_PLUS_N)+!!AREA(OD2ESD_PLUS_P)]
NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV5DMY = NET AREA RATIO NPOD_INSIDE_HVSHP_PDD_HVPW_PAD HV5MOS_NTAP HV5MOS_NSD > 0 [!!AREA(HV5MOS_NTAP)+!!AREA(HV5MOS_NSD)]

NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV6_9_12_16_20_24ESD = NET AREA RATIO NPOD_INSIDE_HVSHP_PDD_HVPW_PAD HV6_9_12_16_20_24ESD_PLUS > 0
NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV6_9_12_16_20_24DMY = NET AREA RATIO NPOD_INSIDE_HVSHP_PDD_HVPW_PAD HV6_9_12_16_20_24MOS_NTAP HV6_9_12_16_20_24MOS_NSD HV6_9_12_16_20_24LVISO > 0 [!!AREA(HV6_9_12_16_20_24MOS_NTAP)+!!AREA(HV6_9_12_16_20_24MOS_NSD)+!!AREA(HV6_9_12_16_20_24LVISO)]

NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV29ESD = NET AREA RATIO NPOD_INSIDE_HVSHP_PDD_HVPW_PAD HV29ESD_PLUS > 0
NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV29DMY = NET AREA RATIO NPOD_INSIDE_HVSHP_PDD_HVPW_PAD HV29MOS_NTAP HV29MOS_NSD HV29LVISO > 0 [!!AREA(HV29MOS_NTAP)+!!AREA(HV29MOS_NSD)+!!AREA(HV29LVISO)]

NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36ESD = NET AREA RATIO NPOD_INSIDE_HVSHP_PDD_HVPW_PAD HV36ESD_PLUS > 0
NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36DMY = NET AREA RATIO NPOD_INSIDE_HVSHP_PDD_HVPW_PAD HV36MOS_NTAP HV36MOS_NSD > 0 [!!AREA(HV36MOS_NTAP)+!!AREA(HV36MOS_NSD)]

NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45ESD = NET AREA RATIO NPOD_INSIDE_HVSHP_PDD_HVPW_PAD HV45ESD_PLUS > 0
NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45DMY = NET AREA RATIO NPOD_INSIDE_HVSHP_PDD_HVPW_PAD HV45MOS_NTAP HV45MOS_NSD HV45LVISO > 0 [!!AREA(HV45MOS_NTAP)+!!AREA(HV45MOS_NSD)+!!AREA(HV45LVISO)]


NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV5ESD = NET AREA RATIO NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD HV5ESD_PLUS OD2ESD_PLUS_N OD2ESD_PLUS_P > 0 [!!AREA(HV5ESD_PLUS)+!!AREA(OD2ESD_PLUS_N)+!!AREA(OD2ESD_PLUS_P)]
NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV5DMY = NET AREA RATIO NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD HV5MOS_NTAP HV5MOS_NSD > 0 [!!AREA(HV5MOS_NTAP)+!!AREA(HV5MOS_NSD)]

NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV6_9_12_16_20_24ESD = NET AREA RATIO NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD HV6_9_12_16_20_24ESD_PLUS > 0
NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV6_9_12_16_20_24DMY = NET AREA RATIO NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD HV6_9_12_16_20_24MOS_NTAP HV6_9_12_16_20_24MOS_NSD HV6_9_12_16_20_24LVISO > 0 [!!AREA(HV6_9_12_16_20_24MOS_NTAP)+!!AREA(HV6_9_12_16_20_24MOS_NSD)+!!AREA(HV6_9_12_16_20_24LVISO)]

NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV29ESD = NET AREA RATIO NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD HV29ESD_PLUS > 0
NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV29DMY = NET AREA RATIO NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD HV29MOS_NTAP HV29MOS_NSD HV29LVISO > 0 [!!AREA(HV29MOS_NTAP)+!!AREA(HV29MOS_NSD)+!!AREA(HV29LVISO)]

NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36ESD = NET AREA RATIO NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD HV36ESD_PLUS > 0
NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36DMY = NET AREA RATIO NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD HV36MOS_NTAP HV36MOS_NSD > 0 [!!AREA(HV36MOS_NTAP)+!!AREA(HV36MOS_NSD)]

NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45ESD = NET AREA RATIO NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD HV45ESD_PLUS > 0
NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45DMY = NET AREA RATIO NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD HV45MOS_NTAP HV45MOS_NSD HV45LVISO > 0 [!!AREA(HV45MOS_NTAP)+!!AREA(HV45MOS_NSD)+!!AREA(HV45LVISO)]




 HVSHN_PAD_HVALLESD =  (((HVSHN_PAD_HV5ESD OR HVSHN_PAD_HV6_9_12_16_20_24ESD) OR HVSHN_PAD_HV29ESD) OR HVSHN_PAD_HV36ESD) OR HVSHN_PAD_HV45ESD
 HVSHN_PAD_HVALLDMY =  (((HVSHN_PAD_HV5DMY OR HVSHN_PAD_HV6_9_12_16_20_24DMY) OR HVSHN_PAD_HV29DMY) OR HVSHN_PAD_HV36DMY) OR HVSHN_PAD_HV45DMY

 NDD_PAD_HVALLESD =  (((NDD_PAD_HV5ESD OR NDD_PAD_HV6_9_12_16_20_24ESD) OR NDD_PAD_HV29ESD) OR NDD_PAD_HV36ESD) OR NDD_PAD_HV45ESD
 NDD_PAD_HVALLDMY =  (((NDD_PAD_HV5DMY OR NDD_PAD_HV6_9_12_16_20_24DMY) OR NDD_PAD_HV29DMY) OR NDD_PAD_HV36DMY) OR NDD_PAD_HV45DMY

 NWEL_PAD_HVALLESD =  ((((((((NWEL_PAD_HV5ESD OR NWEL_PAD_HV6_9_12_16_20_24ESD) OR NWEL_PAD_HV29ESD) OR NWEL_PAD_HV36ESD) OR NWEL_PAD_HV45ESD) OR NWEL_PAD_HV5ESD) OR NWEL_PAD_HV6_9_12_16_20_24ESD) OR NWEL_PAD_HV29ESD) OR NWEL_PAD_HV36ESD) OR NWEL_PAD_HV45ESD
 NWEL_PAD_HVALLDMY =  ((((((((NWEL_PAD_HV5DMY OR NWEL_PAD_HV6_9_12_16_20_24DMY) OR NWEL_PAD_HV29DMY) OR NWEL_PAD_HV36DMY) OR NWEL_PAD_HV45DMY) OR NWEL_PAD_HV5DMY) OR NWEL_PAD_HV6_9_12_16_20_24DMY) OR NWEL_PAD_HV29DMY) OR NWEL_PAD_HV36DMY) OR NWEL_PAD_HV45DMY

 NPOD_NWEL_PAD_HVALLESD =  (((NPOD_NWEL_PAD_HV5ESD OR NPOD_NWEL_PAD_HV6_9_12_16_20_24ESD) OR NPOD_NWEL_PAD_HV29ESD) OR NPOD_NWEL_PAD_HV36ESD) OR NPOD_NWEL_PAD_HV45ESD
 NPOD_NWEL_PAD_HVALLDMY =  (((NPOD_NWEL_PAD_HV5DMY OR NPOD_NWEL_PAD_HV6_9_12_16_20_24DMY) OR NPOD_NWEL_PAD_HV29DMY) OR NPOD_NWEL_PAD_HV36DMY) OR NPOD_NWEL_PAD_HV45DMY

 NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLESD =  (((NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV5ESD OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV6_9_12_16_20_24ESD) OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV29ESD) OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36ESD) OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45ESD
 NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLDMY =  (((NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV5DMY OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV6_9_12_16_20_24DMY) OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV29DMY) OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36DMY) OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45DMY

 NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLESD =  (((NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV5ESD OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV6_9_12_16_20_24ESD) OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV29ESD) OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36ESD) OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45ESD
 NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLDMY =  (((NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV5DMY OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV6_9_12_16_20_24DMY) OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV29DMY) OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36DMY) OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45DMY



// SWITCH Voltage check
 HIGHEST_HVSHN_PAD_SWITCH5 = HVSHN_PAD INTERACT  ( ( ( ( ( CHIP INTERACT HV5DMY)  NOT INTERACT HV6_9_12_16_20_24DMY) NOT INTERACT HV29DMY) NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_HVSHN_PAD_SWITCH6_9_12_16_20_24 = HVSHN_PAD INTERACT  ( ( ( ( CHIP INTERACT HV6_9_12_16_20_24DMY)  NOT INTERACT HV29DMY) NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_HVSHN_PAD_SWITCH29 = HVSHN_PAD INTERACT  ( ( ( CHIP INTERACT HV29DMY)  NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_HVSHN_PAD_SWITCH36 = HVSHN_PAD INTERACT  ( ( CHIP INTERACT HV36DMY)  NOT INTERACT HV45DMY)  

 HIGHEST_HVSHN_PAD_SWITCH45 = HVSHN_PAD INTERACT  ( CHIP INTERACT HV45DMY)  


 HIGHEST_NDD_PAD_SWITCH5 = NDD_PAD INTERACT  ( ( ( ( ( CHIP INTERACT HV5DMY)  NOT INTERACT HV6_9_12_16_20_24DMY) NOT INTERACT HV29DMY) NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NDD_PAD_SWITCH6_9_12_16_20_24 = NDD_PAD INTERACT  ( ( ( ( CHIP INTERACT HV6_9_12_16_20_24DMY)  NOT INTERACT HV29DMY) NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NDD_PAD_SWITCH29 = NDD_PAD INTERACT  ( ( ( CHIP INTERACT HV29DMY)  NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NDD_PAD_SWITCH36 = NDD_PAD INTERACT  ( ( CHIP INTERACT HV36DMY)  NOT INTERACT HV45DMY)  

 HIGHEST_NDD_PAD_SWITCH45 = NDD_PAD INTERACT  ( CHIP INTERACT HV45DMY)  


 HIGHEST_NWEL_PAD_SWITCH5 = NWEL_PAD INTERACT  ( ( ( ( ( CHIP INTERACT HV5DMY)  NOT INTERACT HV6_9_12_16_20_24DMY) NOT INTERACT HV29DMY) NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NWEL_PAD_SWITCH6_9_12_16_20_24 = NWEL_PAD INTERACT  ( ( ( ( CHIP INTERACT HV6_9_12_16_20_24DMY)  NOT INTERACT HV29DMY) NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NWEL_PAD_SWITCH29 = NWEL_PAD INTERACT  ( ( ( CHIP INTERACT HV29DMY)  NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NWEL_PAD_SWITCH36 = NWEL_PAD INTERACT  ( ( CHIP INTERACT HV36DMY)  NOT INTERACT HV45DMY)  

 HIGHEST_NWEL_PAD_SWITCH45 = NWEL_PAD INTERACT  ( CHIP INTERACT HV45DMY)  


 HIGHEST_NPOD_NWEL_PAD_SWITCH5 = NPOD_NWEL_PAD INTERACT  ( ( ( ( ( CHIP INTERACT HV5DMY)  NOT INTERACT HV6_9_12_16_20_24DMY) NOT INTERACT HV29DMY) NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NPOD_NWEL_PAD_SWITCH6_9_12_16_20_24 = NPOD_NWEL_PAD INTERACT  ( ( ( ( CHIP INTERACT HV6_9_12_16_20_24DMY)  NOT INTERACT HV29DMY) NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NPOD_NWEL_PAD_SWITCH29 = NPOD_NWEL_PAD INTERACT  ( ( ( CHIP INTERACT HV29DMY)  NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NPOD_NWEL_PAD_SWITCH36 = NPOD_NWEL_PAD INTERACT  ( ( CHIP INTERACT HV36DMY)  NOT INTERACT HV45DMY)  

 HIGHEST_NPOD_NWEL_PAD_SWITCH45 = NPOD_NWEL_PAD INTERACT  ( CHIP INTERACT HV45DMY)  


 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_SWITCH5 = NPOD_INSIDE_HVSHP_PDD_HVPW_PAD INTERACT  ( ( ( ( ( CHIP INTERACT HV5DMY)  NOT INTERACT HV6_9_12_16_20_24DMY) NOT INTERACT HV29DMY) NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_SWITCH6_9_12_16_20_24 = NPOD_INSIDE_HVSHP_PDD_HVPW_PAD INTERACT  ( ( ( ( CHIP INTERACT HV6_9_12_16_20_24DMY)  NOT INTERACT HV29DMY) NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_SWITCH29 = NPOD_INSIDE_HVSHP_PDD_HVPW_PAD INTERACT  ( ( ( CHIP INTERACT HV29DMY)  NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_SWITCH36 = NPOD_INSIDE_HVSHP_PDD_HVPW_PAD INTERACT  ( ( CHIP INTERACT HV36DMY)  NOT INTERACT HV45DMY)  

 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_SWITCH45 = NPOD_INSIDE_HVSHP_PDD_HVPW_PAD INTERACT  ( CHIP INTERACT HV45DMY)  


 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_SWITCH5 = NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD INTERACT  ( ( ( ( ( CHIP INTERACT HV5DMY)  NOT INTERACT HV6_9_12_16_20_24DMY) NOT INTERACT HV29DMY) NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_SWITCH6_9_12_16_20_24 = NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD INTERACT  ( ( ( ( CHIP INTERACT HV6_9_12_16_20_24DMY)  NOT INTERACT HV29DMY) NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_SWITCH29 = NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD INTERACT  ( ( ( CHIP INTERACT HV29DMY)  NOT INTERACT HV36DMY) NOT INTERACT HV45DMY)  

 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_SWITCH36 = NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD INTERACT  ( ( CHIP INTERACT HV36DMY)  NOT INTERACT HV45DMY)  

 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_SWITCH45 = NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD INTERACT  ( CHIP INTERACT HV45DMY)  



// highest Voltage for factor Voltage DUMMY
 HIGHEST_HVSHN_PAD_HV5DMY =  HVSHN_PAD_HV5DMY NOT INTERACT  ( ( (  HVSHN_PAD_HV6_9_12_16_20_24DMY  OR HVSHN_PAD_HV29DMY)  OR HVSHN_PAD_HV36DMY)  OR HVSHN_PAD_HV45DMY)    

 HIGHEST_HVSHN_PAD_HV6_9_12_16_20_24DMY =  HVSHN_PAD_HV6_9_12_16_20_24DMY NOT INTERACT  ( (  HVSHN_PAD_HV29DMY  OR HVSHN_PAD_HV36DMY)  OR HVSHN_PAD_HV45DMY)    

 HIGHEST_HVSHN_PAD_HV29DMY =  HVSHN_PAD_HV29DMY NOT INTERACT  (  HVSHN_PAD_HV36DMY  OR HVSHN_PAD_HV45DMY)    

 HIGHEST_HVSHN_PAD_HV36DMY =  HVSHN_PAD_HV36DMY NOT INTERACT  HVSHN_PAD_HV45DMY   

 HIGHEST_HVSHN_PAD_HV45DMY =  HVSHN_PAD_HV45DMY NOT INTERACT  EMPTYi 


 HIGHEST_NDD_PAD_HV5DMY =  NDD_PAD_HV5DMY NOT INTERACT  ( ( (  NDD_PAD_HV6_9_12_16_20_24DMY  OR NDD_PAD_HV29DMY)  OR NDD_PAD_HV36DMY)  OR NDD_PAD_HV45DMY)    

 HIGHEST_NDD_PAD_HV6_9_12_16_20_24DMY =  NDD_PAD_HV6_9_12_16_20_24DMY NOT INTERACT  ( (  NDD_PAD_HV29DMY  OR NDD_PAD_HV36DMY)  OR NDD_PAD_HV45DMY)    

 HIGHEST_NDD_PAD_HV29DMY =  NDD_PAD_HV29DMY NOT INTERACT  (  NDD_PAD_HV36DMY  OR NDD_PAD_HV45DMY)    

 HIGHEST_NDD_PAD_HV36DMY =  NDD_PAD_HV36DMY NOT INTERACT  NDD_PAD_HV45DMY   

 HIGHEST_NDD_PAD_HV45DMY =  NDD_PAD_HV45DMY NOT INTERACT  EMPTYi 


 HIGHEST_NWEL_PAD_HV5DMY =  NWEL_PAD_HV5DMY NOT INTERACT  ( ( (  NWEL_PAD_HV6_9_12_16_20_24DMY  OR NWEL_PAD_HV29DMY)  OR NWEL_PAD_HV36DMY)  OR NWEL_PAD_HV45DMY)    

 HIGHEST_NWEL_PAD_HV6_9_12_16_20_24DMY =  NWEL_PAD_HV6_9_12_16_20_24DMY NOT INTERACT  ( (  NWEL_PAD_HV29DMY  OR NWEL_PAD_HV36DMY)  OR NWEL_PAD_HV45DMY)    

 HIGHEST_NWEL_PAD_HV29DMY =  NWEL_PAD_HV29DMY NOT INTERACT  (  NWEL_PAD_HV36DMY  OR NWEL_PAD_HV45DMY)    

 HIGHEST_NWEL_PAD_HV36DMY =  NWEL_PAD_HV36DMY NOT INTERACT  NWEL_PAD_HV45DMY   

 HIGHEST_NWEL_PAD_HV45DMY =  NWEL_PAD_HV45DMY NOT INTERACT  EMPTYi 


 HIGHEST_NPOD_NWEL_PAD_HV5DMY =  NPOD_NWEL_PAD_HV5DMY NOT INTERACT  ( ( (  NPOD_NWEL_PAD_HV6_9_12_16_20_24DMY  OR NPOD_NWEL_PAD_HV29DMY)  OR NPOD_NWEL_PAD_HV36DMY)  OR NPOD_NWEL_PAD_HV45DMY)    

 HIGHEST_NPOD_NWEL_PAD_HV6_9_12_16_20_24DMY =  NPOD_NWEL_PAD_HV6_9_12_16_20_24DMY NOT INTERACT  ( (  NPOD_NWEL_PAD_HV29DMY  OR NPOD_NWEL_PAD_HV36DMY)  OR NPOD_NWEL_PAD_HV45DMY)    

 HIGHEST_NPOD_NWEL_PAD_HV29DMY =  NPOD_NWEL_PAD_HV29DMY NOT INTERACT  (  NPOD_NWEL_PAD_HV36DMY  OR NPOD_NWEL_PAD_HV45DMY)    

 HIGHEST_NPOD_NWEL_PAD_HV36DMY =  NPOD_NWEL_PAD_HV36DMY NOT INTERACT  NPOD_NWEL_PAD_HV45DMY   

 HIGHEST_NPOD_NWEL_PAD_HV45DMY =  NPOD_NWEL_PAD_HV45DMY NOT INTERACT  EMPTYi 


 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV5DMY =  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV5DMY NOT INTERACT  ( ( (  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV6_9_12_16_20_24DMY  OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV29DMY)  OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36DMY)  OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45DMY)    

 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV6_9_12_16_20_24DMY =  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV6_9_12_16_20_24DMY NOT INTERACT  ( (  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV29DMY  OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36DMY)  OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45DMY)    

 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV29DMY =  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV29DMY NOT INTERACT  (  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36DMY  OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45DMY)    

 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36DMY =  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36DMY NOT INTERACT  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45DMY   

 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45DMY =  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45DMY NOT INTERACT  EMPTYi 


 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV5DMY =  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV5DMY NOT INTERACT  ( ( (  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV6_9_12_16_20_24DMY  OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV29DMY)  OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36DMY)  OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45DMY)    

 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV6_9_12_16_20_24DMY =  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV6_9_12_16_20_24DMY NOT INTERACT  ( (  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV29DMY  OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36DMY)  OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45DMY)    

 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV29DMY =  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV29DMY NOT INTERACT  (  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36DMY  OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45DMY)    

 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36DMY =  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36DMY NOT INTERACT  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45DMY   

 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45DMY =  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45DMY NOT INTERACT  EMPTYi 




// highest Voltage for factor ESD Cell 
 HIGHEST_HVSHN_PAD_HV5ESD =  HVSHN_PAD_HV5ESD NOT INTERACT  ( ( (  HVSHN_PAD_HV6_9_12_16_20_24ESD OR HVSHN_PAD_HV29ESD)  OR HVSHN_PAD_HV36ESD)  OR HVSHN_PAD_HV45ESD)    

 HIGHEST_HVSHN_PAD_HV6_9_12_16_20_24ESD =  HVSHN_PAD_HV6_9_12_16_20_24ESD NOT INTERACT  ( (  HVSHN_PAD_HV29ESD OR HVSHN_PAD_HV36ESD)  OR HVSHN_PAD_HV45ESD)    

 HIGHEST_HVSHN_PAD_HV29ESD =  HVSHN_PAD_HV29ESD NOT INTERACT  (  HVSHN_PAD_HV36ESD OR HVSHN_PAD_HV45ESD)    

 HIGHEST_HVSHN_PAD_HV36ESD =  HVSHN_PAD_HV36ESD NOT INTERACT  HVSHN_PAD_HV45ESD  

 HIGHEST_HVSHN_PAD_HV45ESD =  HVSHN_PAD_HV45ESD NOT INTERACT  EMPTYi 


 HIGHEST_NDD_PAD_HV5ESD =  NDD_PAD_HV5ESD NOT INTERACT  ( ( (  NDD_PAD_HV6_9_12_16_20_24ESD OR NDD_PAD_HV29ESD)  OR NDD_PAD_HV36ESD)  OR NDD_PAD_HV45ESD)    

 HIGHEST_NDD_PAD_HV6_9_12_16_20_24ESD =  NDD_PAD_HV6_9_12_16_20_24ESD NOT INTERACT  ( (  NDD_PAD_HV29ESD OR NDD_PAD_HV36ESD)  OR NDD_PAD_HV45ESD)    

 HIGHEST_NDD_PAD_HV29ESD =  NDD_PAD_HV29ESD NOT INTERACT  (  NDD_PAD_HV36ESD OR NDD_PAD_HV45ESD)    

 HIGHEST_NDD_PAD_HV36ESD =  NDD_PAD_HV36ESD NOT INTERACT  NDD_PAD_HV45ESD  

 HIGHEST_NDD_PAD_HV45ESD =  NDD_PAD_HV45ESD NOT INTERACT  EMPTYi 


 HIGHEST_NWEL_PAD_HV5ESD =  NWEL_PAD_HV5ESD NOT INTERACT  ( ( (  NWEL_PAD_HV6_9_12_16_20_24ESD OR NWEL_PAD_HV29ESD)  OR NWEL_PAD_HV36ESD)  OR NWEL_PAD_HV45ESD)    

 HIGHEST_NWEL_PAD_HV6_9_12_16_20_24ESD =  NWEL_PAD_HV6_9_12_16_20_24ESD NOT INTERACT  ( (  NWEL_PAD_HV29ESD OR NWEL_PAD_HV36ESD)  OR NWEL_PAD_HV45ESD)    

 HIGHEST_NWEL_PAD_HV29ESD =  NWEL_PAD_HV29ESD NOT INTERACT  (  NWEL_PAD_HV36ESD OR NWEL_PAD_HV45ESD)    

 HIGHEST_NWEL_PAD_HV36ESD =  NWEL_PAD_HV36ESD NOT INTERACT  NWEL_PAD_HV45ESD  

 HIGHEST_NWEL_PAD_HV45ESD =  NWEL_PAD_HV45ESD NOT INTERACT  EMPTYi 


 HIGHEST_NPOD_NWEL_PAD_HV5ESD =  NPOD_NWEL_PAD_HV5ESD NOT INTERACT  ( ( (  NPOD_NWEL_PAD_HV6_9_12_16_20_24ESD OR NPOD_NWEL_PAD_HV29ESD)  OR NPOD_NWEL_PAD_HV36ESD)  OR NPOD_NWEL_PAD_HV45ESD)    

 HIGHEST_NPOD_NWEL_PAD_HV6_9_12_16_20_24ESD =  NPOD_NWEL_PAD_HV6_9_12_16_20_24ESD NOT INTERACT  ( (  NPOD_NWEL_PAD_HV29ESD OR NPOD_NWEL_PAD_HV36ESD)  OR NPOD_NWEL_PAD_HV45ESD)    

 HIGHEST_NPOD_NWEL_PAD_HV29ESD =  NPOD_NWEL_PAD_HV29ESD NOT INTERACT  (  NPOD_NWEL_PAD_HV36ESD OR NPOD_NWEL_PAD_HV45ESD)    

 HIGHEST_NPOD_NWEL_PAD_HV36ESD =  NPOD_NWEL_PAD_HV36ESD NOT INTERACT  NPOD_NWEL_PAD_HV45ESD  

 HIGHEST_NPOD_NWEL_PAD_HV45ESD =  NPOD_NWEL_PAD_HV45ESD NOT INTERACT  EMPTYi 


 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV5ESD =  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV5ESD NOT INTERACT  ( ( (  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV6_9_12_16_20_24ESD OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV29ESD)  OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36ESD)  OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45ESD)    

 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV6_9_12_16_20_24ESD =  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV6_9_12_16_20_24ESD NOT INTERACT  ( (  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV29ESD OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36ESD)  OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45ESD)    

 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV29ESD =  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV29ESD NOT INTERACT  (  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36ESD OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45ESD)    

 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36ESD =  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36ESD NOT INTERACT  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45ESD  

 HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45ESD =  NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45ESD NOT INTERACT  EMPTYi 


 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV5ESD =  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV5ESD NOT INTERACT  ( ( (  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV6_9_12_16_20_24ESD OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV29ESD)  OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36ESD)  OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45ESD)    

 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV6_9_12_16_20_24ESD =  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV6_9_12_16_20_24ESD NOT INTERACT  ( (  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV29ESD OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36ESD)  OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45ESD)    

 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV29ESD =  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV29ESD NOT INTERACT  (  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36ESD OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45ESD)    

 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36ESD =  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36ESD NOT INTERACT  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45ESD  

 HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45ESD =  NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45ESD NOT INTERACT  EMPTYi 



5V_HVSHN_PAD = (HIGHEST_HVSHN_PAD_HV5ESD OR (HIGHEST_HVSHN_PAD_HV5DMY NOT HVSHN_PAD_HVALLESD)) OR (HIGHEST_HVSHN_PAD_SWITCH5 NOT (HVSHN_PAD_HVALLESD OR HVSHN_PAD_HVALLDMY))
6_9_12_16_20_24V_HVSHN_PAD = (HIGHEST_HVSHN_PAD_HV6_9_12_16_20_24ESD OR (HIGHEST_HVSHN_PAD_HV6_9_12_16_20_24DMY NOT HVSHN_PAD_HVALLESD)) OR (HIGHEST_HVSHN_PAD_SWITCH6_9_12_16_20_24 NOT (HVSHN_PAD_HVALLESD OR HVSHN_PAD_HVALLDMY))
29V_HVSHN_PAD = (HIGHEST_HVSHN_PAD_HV29ESD OR (HIGHEST_HVSHN_PAD_HV29DMY NOT HVSHN_PAD_HVALLESD)) OR (HIGHEST_HVSHN_PAD_SWITCH29 NOT (HVSHN_PAD_HVALLESD OR HVSHN_PAD_HVALLDMY))
36V_HVSHN_PAD = (HIGHEST_HVSHN_PAD_HV36ESD OR (HIGHEST_HVSHN_PAD_HV36DMY NOT HVSHN_PAD_HVALLESD)) OR (HIGHEST_HVSHN_PAD_SWITCH36 NOT (HVSHN_PAD_HVALLESD OR HVSHN_PAD_HVALLDMY))
45V_HVSHN_PAD = (HIGHEST_HVSHN_PAD_HV45ESD OR (HIGHEST_HVSHN_PAD_HV45DMY NOT HVSHN_PAD_HVALLESD)) OR (HIGHEST_HVSHN_PAD_SWITCH45 NOT (HVSHN_PAD_HVALLESD OR HVSHN_PAD_HVALLDMY))

5V_NDD_PAD = (HIGHEST_NDD_PAD_HV5ESD OR (HIGHEST_NDD_PAD_HV5DMY NOT NDD_PAD_HVALLESD)) OR (HIGHEST_NDD_PAD_SWITCH5 NOT (NDD_PAD_HVALLESD OR NDD_PAD_HVALLDMY))
6_9_12_16_20_24V_NDD_PAD = (HIGHEST_NDD_PAD_HV6_9_12_16_20_24ESD OR (HIGHEST_NDD_PAD_HV6_9_12_16_20_24DMY NOT NDD_PAD_HVALLESD)) OR (HIGHEST_NDD_PAD_SWITCH6_9_12_16_20_24 NOT (NDD_PAD_HVALLESD OR NDD_PAD_HVALLDMY))
29V_NDD_PAD = (HIGHEST_NDD_PAD_HV29ESD OR (HIGHEST_NDD_PAD_HV29DMY NOT NDD_PAD_HVALLESD)) OR (HIGHEST_NDD_PAD_SWITCH29 NOT (NDD_PAD_HVALLESD OR NDD_PAD_HVALLDMY))
36V_NDD_PAD = (HIGHEST_NDD_PAD_HV36ESD OR (HIGHEST_NDD_PAD_HV36DMY NOT NDD_PAD_HVALLESD)) OR (HIGHEST_NDD_PAD_SWITCH36 NOT (NDD_PAD_HVALLESD OR NDD_PAD_HVALLDMY))
45V_NDD_PAD = (HIGHEST_NDD_PAD_HV45ESD OR (HIGHEST_NDD_PAD_HV45DMY NOT NDD_PAD_HVALLESD)) OR (HIGHEST_NDD_PAD_SWITCH45 NOT (NDD_PAD_HVALLESD OR NDD_PAD_HVALLDMY))

5V_NWEL_PAD = (HIGHEST_NWEL_PAD_HV5ESD OR (HIGHEST_NWEL_PAD_HV5DMY NOT NWEL_PAD_HVALLESD)) OR (HIGHEST_NWEL_PAD_SWITCH5 NOT (NWEL_PAD_HVALLESD OR NWEL_PAD_HVALLDMY))
6_9_12_16_20_24V_NWEL_PAD = (HIGHEST_NWEL_PAD_HV6_9_12_16_20_24ESD OR (HIGHEST_NWEL_PAD_HV6_9_12_16_20_24DMY NOT NWEL_PAD_HVALLESD)) OR (HIGHEST_NWEL_PAD_SWITCH6_9_12_16_20_24 NOT (NWEL_PAD_HVALLESD OR NWEL_PAD_HVALLDMY))
29V_NWEL_PAD = (HIGHEST_NWEL_PAD_HV29ESD OR (HIGHEST_NWEL_PAD_HV29DMY NOT NWEL_PAD_HVALLESD)) OR (HIGHEST_NWEL_PAD_SWITCH29 NOT (NWEL_PAD_HVALLESD OR NWEL_PAD_HVALLDMY))
36V_NWEL_PAD = (HIGHEST_NWEL_PAD_HV36ESD OR (HIGHEST_NWEL_PAD_HV36DMY NOT NWEL_PAD_HVALLESD)) OR (HIGHEST_NWEL_PAD_SWITCH36 NOT (NWEL_PAD_HVALLESD OR NWEL_PAD_HVALLDMY))
45V_NWEL_PAD = (HIGHEST_NWEL_PAD_HV45ESD OR (HIGHEST_NWEL_PAD_HV45DMY NOT NWEL_PAD_HVALLESD)) OR (HIGHEST_NWEL_PAD_SWITCH45 NOT (NWEL_PAD_HVALLESD OR NWEL_PAD_HVALLDMY))

5V_NPOD_NWEL_PAD = (HIGHEST_NPOD_NWEL_PAD_HV5ESD OR (HIGHEST_NPOD_NWEL_PAD_HV5DMY NOT NPOD_NWEL_PAD_HVALLESD)) OR (HIGHEST_NPOD_NWEL_PAD_SWITCH5 NOT (NPOD_NWEL_PAD_HVALLESD OR NPOD_NWEL_PAD_HVALLDMY))
6_9_12_16_20_24V_NPOD_NWEL_PAD = (HIGHEST_NPOD_NWEL_PAD_HV6_9_12_16_20_24ESD OR (HIGHEST_NPOD_NWEL_PAD_HV6_9_12_16_20_24DMY NOT NPOD_NWEL_PAD_HVALLESD)) OR (HIGHEST_NPOD_NWEL_PAD_SWITCH6_9_12_16_20_24 NOT (NPOD_NWEL_PAD_HVALLESD OR NPOD_NWEL_PAD_HVALLDMY))
29V_NPOD_NWEL_PAD = (HIGHEST_NPOD_NWEL_PAD_HV29ESD OR (HIGHEST_NPOD_NWEL_PAD_HV29DMY NOT NPOD_NWEL_PAD_HVALLESD)) OR (HIGHEST_NPOD_NWEL_PAD_SWITCH29 NOT (NPOD_NWEL_PAD_HVALLESD OR NPOD_NWEL_PAD_HVALLDMY))
36V_NPOD_NWEL_PAD = (HIGHEST_NPOD_NWEL_PAD_HV36ESD OR (HIGHEST_NPOD_NWEL_PAD_HV36DMY NOT NPOD_NWEL_PAD_HVALLESD)) OR (HIGHEST_NPOD_NWEL_PAD_SWITCH36 NOT (NPOD_NWEL_PAD_HVALLESD OR NPOD_NWEL_PAD_HVALLDMY))
45V_NPOD_NWEL_PAD = (HIGHEST_NPOD_NWEL_PAD_HV45ESD OR (HIGHEST_NPOD_NWEL_PAD_HV45DMY NOT NPOD_NWEL_PAD_HVALLESD)) OR (HIGHEST_NPOD_NWEL_PAD_SWITCH45 NOT (NPOD_NWEL_PAD_HVALLESD OR NPOD_NWEL_PAD_HVALLDMY))

5V_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD = (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV5ESD OR (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV5DMY NOT NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLESD)) OR (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_SWITCH5 NOT (NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLESD OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLDMY))
6_9_12_16_20_24V_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD = (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV6_9_12_16_20_24ESD OR (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV6_9_12_16_20_24DMY NOT NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLESD)) OR (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_SWITCH6_9_12_16_20_24 NOT (NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLESD OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLDMY))
29V_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD = (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV29ESD OR (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV29DMY NOT NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLESD)) OR (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_SWITCH29 NOT (NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLESD OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLDMY))
36V_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD = (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36ESD OR (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV36DMY NOT NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLESD)) OR (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_SWITCH36 NOT (NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLESD OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLDMY))
45V_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD = (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45ESD OR (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HV45DMY NOT NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLESD)) OR (HIGHEST_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_SWITCH45 NOT (NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLESD OR NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_HVALLDMY))

5V_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD = (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV5ESD OR (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV5DMY NOT NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLESD)) OR (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_SWITCH5 NOT (NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLESD OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLDMY))
6_9_12_16_20_24V_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD = (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV6_9_12_16_20_24ESD OR (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV6_9_12_16_20_24DMY NOT NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLESD)) OR (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_SWITCH6_9_12_16_20_24 NOT (NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLESD OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLDMY))
29V_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD = (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV29ESD OR (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV29DMY NOT NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLESD)) OR (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_SWITCH29 NOT (NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLESD OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLDMY))
36V_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD = (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36ESD OR (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV36DMY NOT NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLESD)) OR (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_SWITCH36 NOT (NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLESD OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLDMY))
45V_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD = (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45ESD OR (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HV45DMY NOT NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLESD)) OR (HIGHEST_NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_SWITCH45 NOT (NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLESD OR NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD_HVALLDMY))


HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_5V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD AND 5V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_5V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA AND 5V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB_5V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB AND 5V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_5V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD AND 5V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_5V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA AND 5V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_5V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB AND 5V_HVSHN_PAD
NDD_INSIDE_HVDMY_PAD_5V =NDD_INSIDE_HVDMY_PAD AND 5V_NDD_PAD
NDD_PAD_5V = NDD_PAD AND 5V_NDD_PAD
HVSHN_INTERACT_HVDMY_PAD_5V = HVSHN_INTERACT_HVDMY_PAD AND 5V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_5V = HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA AND 5V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB_5V = HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB AND 5V_HVSHN_PAD
NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_5V = NPOD_INSIDE_HVSHP_PDD_HVPW_PAD AND 5V_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD
HVSHN_PAD_5V = HVSHN_PAD AND 5V_HVSHN_PAD
HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA_5V = HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA AND 5V_HVSHN_PAD
HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB_5V = HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB AND 5V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_6_9_12_16_20_24V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD AND 6_9_12_16_20_24V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA AND 6_9_12_16_20_24V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB_6_9_12_16_20_24V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB AND 6_9_12_16_20_24V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_6_9_12_16_20_24V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD AND 6_9_12_16_20_24V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA AND 6_9_12_16_20_24V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_6_9_12_16_20_24V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB AND 6_9_12_16_20_24V_HVSHN_PAD
NDD_INSIDE_HVDMY_PAD_6_9_12_16_20_24V =NDD_INSIDE_HVDMY_PAD AND 6_9_12_16_20_24V_NDD_PAD
NDD_PAD_6_9_12_16_20_24V = NDD_PAD AND 6_9_12_16_20_24V_NDD_PAD
HVSHN_INTERACT_HVDMY_PAD_6_9_12_16_20_24V = HVSHN_INTERACT_HVDMY_PAD AND 6_9_12_16_20_24V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V = HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA AND 6_9_12_16_20_24V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB_6_9_12_16_20_24V = HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB AND 6_9_12_16_20_24V_HVSHN_PAD
NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_6_9_12_16_20_24V = NPOD_INSIDE_HVSHP_PDD_HVPW_PAD AND 6_9_12_16_20_24V_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD
HVSHN_PAD_6_9_12_16_20_24V = HVSHN_PAD AND 6_9_12_16_20_24V_HVSHN_PAD
HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA_6_9_12_16_20_24V = HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA AND 6_9_12_16_20_24V_HVSHN_PAD
HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB_6_9_12_16_20_24V = HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB AND 6_9_12_16_20_24V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_29V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD AND 29V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_29V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA AND 29V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB_29V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB AND 29V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_29V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD AND 29V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_29V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA AND 29V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_29V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB AND 29V_HVSHN_PAD
NDD_INSIDE_HVDMY_PAD_29V =NDD_INSIDE_HVDMY_PAD AND 29V_NDD_PAD
NDD_PAD_29V = NDD_PAD AND 29V_NDD_PAD
HVSHN_INTERACT_HVDMY_PAD_29V = HVSHN_INTERACT_HVDMY_PAD AND 29V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_29V = HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA AND 29V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB_29V = HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB AND 29V_HVSHN_PAD
NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_29V = NPOD_INSIDE_HVSHP_PDD_HVPW_PAD AND 29V_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD
HVSHN_PAD_29V = HVSHN_PAD AND 29V_HVSHN_PAD
HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA_29V = HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA AND 29V_HVSHN_PAD
HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB_29V = HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB AND 29V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_36V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD AND 36V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_36V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA AND 36V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB_36V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB AND 36V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_36V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD AND 36V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_36V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA AND 36V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_36V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB AND 36V_HVSHN_PAD
NDD_INSIDE_HVDMY_PAD_36V =NDD_INSIDE_HVDMY_PAD AND 36V_NDD_PAD
NDD_PAD_36V = NDD_PAD AND 36V_NDD_PAD
HVSHN_INTERACT_HVDMY_PAD_36V = HVSHN_INTERACT_HVDMY_PAD AND 36V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_36V = HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA AND 36V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB_36V = HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB AND 36V_HVSHN_PAD
NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_36V = NPOD_INSIDE_HVSHP_PDD_HVPW_PAD AND 36V_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD
HVSHN_PAD_36V = HVSHN_PAD AND 36V_HVSHN_PAD
HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA_36V = HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA AND 36V_HVSHN_PAD
HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB_36V = HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB AND 36V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_45V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD AND 45V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_45V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA AND 45V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB_45V = HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB AND 45V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_45V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD AND 45V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_45V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA AND 45V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_45V = HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB AND 45V_HVSHN_PAD
NDD_INSIDE_HVDMY_PAD_45V =NDD_INSIDE_HVDMY_PAD AND 45V_NDD_PAD
NDD_PAD_45V = NDD_PAD AND 45V_NDD_PAD
HVSHN_INTERACT_HVDMY_PAD_45V = HVSHN_INTERACT_HVDMY_PAD AND 45V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_45V = HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA AND 45V_HVSHN_PAD
HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB_45V = HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB AND 45V_HVSHN_PAD
NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_45V = NPOD_INSIDE_HVSHP_PDD_HVPW_PAD AND 45V_NPOD_INSIDE_HVSHP_PDD_HVPW_PAD
HVSHN_PAD_45V = HVSHN_PAD AND 45V_HVSHN_PAD
HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA_45V = HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA AND 45V_HVSHN_PAD
HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB_45V = HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB AND 45V_HVSHN_PAD

HVESD.S.10_5V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except:Two SH_N with one HVMOS device) >= ^HVESD_S_10_5V um
			 @ 1. One of the SH_Ns is interacted with HVGA
			 @ 2. Both of two SH_Ns are interacted with same HVDMY
			 @ 3. Both of two SH_Ns are NOT inside NBL
  A = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_5V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_10_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_5V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_10_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY == 1  
  B INTERACT HVDMY == 1
}
HVESD.S.11_5V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_11_5V um
			 @ 1. One of the SH_Ns is interacted with HVGA
			 @ 2. Both of two SH_Ns are interact with same HVDMY
			 @ 3. Both of two SH_Ns are inside NBL 
  A = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_5V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_11_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  ERR = A INTERACT HVDMY == 1
  ERR NOT HVESD1DMY
  B = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_5V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_11_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  ERR1 = B INTERACT HVDMY == 1
  ERR1 NOT HVESD1DMY
}

HVESD.S.12_5V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except: Two SH_N within one HVMOS device) >= ^HVESD_S_12_5V um
             @ 1. One of the SH_Ns interacted with HVGA
			 @ 2. Both of two SH_Ns are interact with same HVDMY
			 @ 3. One of the SH_Ns is inside NBL ,the other of SH_N is not inside NBL 
  A1 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_5V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_12_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A1 INTERACT HVDMY == 1
  A2 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_5V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_12_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A2 INTERACT HVDMY == 1

  B1 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_5V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_12_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B1 INTERACT HVDMY == 1
  B2 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_5V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_12_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B2 INTERACT HVDMY == 1
}

HVESD.S.13_5V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_13_5V um
			 @ 1. one of these two SH_Ns is interacted by HVGA
			 @ 2. Both of two SH_Ns are interacted with different HVDMY
			 @ 3. Both of two SH_Ns are NOT inside NBL
  A = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_5V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_13_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_5V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_13_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY > 1
  B INTERACT HVDMY > 1
}

HVESD.S.14_5V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_14_5V um
			 @ 1. One of the SH_Ns is interacted with HVGA
			 @ 2. Both of two SH_Ns are interact with different HVDMY
			 @ 3. Both of two SH_Ns are inside NBL 
  A = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_5V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_14_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY > 1
  B = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_5V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_14_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B INTERACT HVDMY > 1
}

HVESD.S.15_5V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions. (Except: Two SH_N within one HVMOS device) >= ^HVESD_S_15_5V um
             @ 1. One of the SH_Ns interacted with HVGA
			 @ 2. Both of two SH_Ns are interact with different HVDMY
			 @ 3. One of the SH_Ns is inside NBL ,the other of SH_N is not inside NBL 
  A1 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_5V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_15_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A1 INTERACT HVDMY > 1
  A2 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_5V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_15_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A2 INTERACT HVDMY > 1

  B1 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_5V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_15_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B1 INTERACT HVDMY > 1
  B2 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_5V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_15_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B2 INTERACT HVDMY > 1
}
HVESD.S.10_6_9_12_16_20_24V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except:Two SH_N with one HVMOS device) >= ^HVESD_S_10_6_9_12_16_20_24V um
			 @ 1. One of the SH_Ns is interacted with HVGA
			 @ 2. Both of two SH_Ns are interacted with same HVDMY
			 @ 3. Both of two SH_Ns are NOT inside NBL
  A = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_10_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_10_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY == 1  
  B INTERACT HVDMY == 1
}
HVESD.S.11_6_9_12_16_20_24V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_11_6_9_12_16_20_24V um
			 @ 1. One of the SH_Ns is interacted with HVGA
			 @ 2. Both of two SH_Ns are interact with same HVDMY
			 @ 3. Both of two SH_Ns are inside NBL 
  A = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_11_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  ERR = A INTERACT HVDMY == 1
  ERR NOT HVESD1DMY
  B = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_11_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  ERR1 = B INTERACT HVDMY == 1
  ERR1 NOT HVESD1DMY
}

HVESD.S.12_6_9_12_16_20_24V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except: Two SH_N within one HVMOS device) >= ^HVESD_S_12_6_9_12_16_20_24V um
             @ 1. One of the SH_Ns interacted with HVGA
			 @ 2. Both of two SH_Ns are interact with same HVDMY
			 @ 3. One of the SH_Ns is inside NBL ,the other of SH_N is not inside NBL 
  A1 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_12_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A1 INTERACT HVDMY == 1
  A2 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_12_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A2 INTERACT HVDMY == 1

  B1 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_12_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B1 INTERACT HVDMY == 1
  B2 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_12_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B2 INTERACT HVDMY == 1
}

HVESD.S.13_6_9_12_16_20_24V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_13_6_9_12_16_20_24V um
			 @ 1. one of these two SH_Ns is interacted by HVGA
			 @ 2. Both of two SH_Ns are interacted with different HVDMY
			 @ 3. Both of two SH_Ns are NOT inside NBL
  A = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_13_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_13_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY > 1
  B INTERACT HVDMY > 1
}

HVESD.S.14_6_9_12_16_20_24V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_14_6_9_12_16_20_24V um
			 @ 1. One of the SH_Ns is interacted with HVGA
			 @ 2. Both of two SH_Ns are interact with different HVDMY
			 @ 3. Both of two SH_Ns are inside NBL 
  A = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_14_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY > 1
  B = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_14_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B INTERACT HVDMY > 1
}

HVESD.S.15_6_9_12_16_20_24V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions. (Except: Two SH_N within one HVMOS device) >= ^HVESD_S_15_6_9_12_16_20_24V um
             @ 1. One of the SH_Ns interacted with HVGA
			 @ 2. Both of two SH_Ns are interact with different HVDMY
			 @ 3. One of the SH_Ns is inside NBL ,the other of SH_N is not inside NBL 
  A1 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_15_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A1 INTERACT HVDMY > 1
  A2 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_15_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A2 INTERACT HVDMY > 1

  B1 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_15_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B1 INTERACT HVDMY > 1
  B2 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_6_9_12_16_20_24V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_15_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B2 INTERACT HVDMY > 1
}
HVESD.S.10_29V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except:Two SH_N with one HVMOS device) >= ^HVESD_S_10_29V um
			 @ 1. One of the SH_Ns is interacted with HVGA
			 @ 2. Both of two SH_Ns are interacted with same HVDMY
			 @ 3. Both of two SH_Ns are NOT inside NBL
  A = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_29V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_10_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_29V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_10_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY == 1  
  B INTERACT HVDMY == 1
}
HVESD.S.11_29V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_11_29V um
			 @ 1. One of the SH_Ns is interacted with HVGA
			 @ 2. Both of two SH_Ns are interact with same HVDMY
			 @ 3. Both of two SH_Ns are inside NBL 
  A = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_29V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_11_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  ERR = A INTERACT HVDMY == 1
  ERR NOT HVESD1DMY
  B = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_29V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_11_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  ERR1 = B INTERACT HVDMY == 1
  ERR1 NOT HVESD1DMY
}

HVESD.S.12_29V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except: Two SH_N within one HVMOS device) >= ^HVESD_S_12_29V um
             @ 1. One of the SH_Ns interacted with HVGA
			 @ 2. Both of two SH_Ns are interact with same HVDMY
			 @ 3. One of the SH_Ns is inside NBL ,the other of SH_N is not inside NBL 
  A1 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_29V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_12_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A1 INTERACT HVDMY == 1
  A2 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_29V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_12_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A2 INTERACT HVDMY == 1

  B1 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_29V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_12_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B1 INTERACT HVDMY == 1
  B2 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_29V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_12_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B2 INTERACT HVDMY == 1
}

HVESD.S.13_29V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_13_29V um
			 @ 1. one of these two SH_Ns is interacted by HVGA
			 @ 2. Both of two SH_Ns are interacted with different HVDMY
			 @ 3. Both of two SH_Ns are NOT inside NBL
  A = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_29V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_13_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_29V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_13_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY > 1
  B INTERACT HVDMY > 1
}

HVESD.S.14_29V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_14_29V um
			 @ 1. One of the SH_Ns is interacted with HVGA
			 @ 2. Both of two SH_Ns are interact with different HVDMY
			 @ 3. Both of two SH_Ns are inside NBL 
  A = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_29V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_14_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY > 1
  B = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_29V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_14_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B INTERACT HVDMY > 1
}

HVESD.S.15_29V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions. (Except: Two SH_N within one HVMOS device) >= ^HVESD_S_15_29V um
             @ 1. One of the SH_Ns interacted with HVGA
			 @ 2. Both of two SH_Ns are interact with different HVDMY
			 @ 3. One of the SH_Ns is inside NBL ,the other of SH_N is not inside NBL 
  A1 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_29V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_15_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A1 INTERACT HVDMY > 1
  A2 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_29V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_15_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A2 INTERACT HVDMY > 1

  B1 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGA_29V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_15_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B1 INTERACT HVDMY > 1
  B2 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_29V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA < HVESD_S_15_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B2 INTERACT HVDMY > 1
}

HVESD.S.16_36V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except:Two SH_N with one HVMOS device) >= ^HVESD_S_16_36V um
			 @ 1. one of these two SH_Ns is interact by HVGB .
			 @ 2. Both of two SH_Ns are interacted with same HVDMY
			 @ 3. Both of two SH_Ns are NOT inside NBL
  A = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB_36V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_16_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY == 1
  B = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_36V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB < HVESD_S_16_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B INTERACT HVDMY == 1
}

HVESD.S.17_36V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_17_36V um
			 @ 1. One of the SH_Ns is interacted with HVGB
			 @ 2. Both of two SH_Ns are interact with same HVDMY
			 @ 3. Both of two SH_Ns are inside NBL 
  A = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_36V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_17_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY == 1
  B = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_36V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB < HVESD_S_17_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B INTERACT HVDMY == 1
} 

HVESD.S.18_36V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_18_36V um
			 @ 1. One of the SH_Ns is interacted with HVGB
			 @ 2. Both of two SH_Ns are interact with same HVDMY
			 @ 3. One of the SH_Ns is inside NBL and the other one of SH_N is not inside NBL
  A1 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_36V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_18_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A1 INTERACT HVDMY == 1
  A2 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_36V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB < HVESD_S_18_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A2 INTERACT HVDMY == 1
  B1 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_36V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_18_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B1 INTERACT HVDMY == 1
  B2 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_36V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB < HVESD_S_18_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B2 INTERACT HVDMY == 1
} 

HVESD.S.19_36V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except:Two SH_N with one HVMOS device) >= ^HVESD_S_19_36V um
			 @ 1. one of these two SH_Ns is interacted by HVGB .
			 @ 2. Both of two SH_Ns are interacted with different HVDMY
			 @ 3. Both of two SH_Ns are NOT inside NBL
  A = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB_36V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_19_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY > 1
  B = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_36V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB < HVESD_S_19_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B INTERACT HVDMY > 1
}

HVESD.S.20_36V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_20_36V um
			 @ 1. One of the SH_Ns is interacted with HVGB
			 @ 2. Both of two SH_Ns are interact with different HVDMY
			 @ 3. Both of two SH_Ns are inside NBL 
  A = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_36V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_20_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY > 1
  B = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_36V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB < HVESD_S_20_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B INTERACT HVDMY > 1
} 

HVESD.S.21_36V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_21_36V um
			 @ 1. One of the SH_Ns is interacted with HVGB
			 @ 2. Both of two SH_Ns are interact with different HVDMY
			 @ 3. One of the SH_Ns is inside NBL and the other one of SH_N is not inside NBL
  A1 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_36V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_21_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A1 INTERACT HVDMY > 1
  A2 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_36V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB < HVESD_S_21_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A2 INTERACT HVDMY > 1
  B1 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB_36V < HVESD_S_21_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B1 INTERACT HVDMY > 1
  B2 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_36V < HVESD_S_21_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B2 INTERACT HVDMY > 1
} 
HVESD.S.16_45V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except:Two SH_N with one HVMOS device) >= ^HVESD_S_16_45V um
			 @ 1. one of these two SH_Ns is interact by HVGB .
			 @ 2. Both of two SH_Ns are interacted with same HVDMY
			 @ 3. Both of two SH_Ns are NOT inside NBL
  A = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB_45V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_16_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY == 1
  B = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_45V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB < HVESD_S_16_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B INTERACT HVDMY == 1
}

HVESD.S.17_45V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_17_45V um
			 @ 1. One of the SH_Ns is interacted with HVGB
			 @ 2. Both of two SH_Ns are interact with same HVDMY
			 @ 3. Both of two SH_Ns are inside NBL 
  A = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_45V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_17_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY == 1
  B = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_45V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB < HVESD_S_17_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B INTERACT HVDMY == 1
} 

HVESD.S.18_45V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_18_45V um
			 @ 1. One of the SH_Ns is interacted with HVGB
			 @ 2. Both of two SH_Ns are interact with same HVDMY
			 @ 3. One of the SH_Ns is inside NBL and the other one of SH_N is not inside NBL
  A1 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_45V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_18_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A1 INTERACT HVDMY == 1
  A2 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_45V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB < HVESD_S_18_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A2 INTERACT HVDMY == 1
  B1 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_45V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_18_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B1 INTERACT HVDMY == 1
  B2 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_45V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB < HVESD_S_18_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B2 INTERACT HVDMY == 1
} 

HVESD.S.19_45V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except:Two SH_N with one HVMOS device) >= ^HVESD_S_19_45V um
			 @ 1. one of these two SH_Ns is interacted by HVGB .
			 @ 2. Both of two SH_Ns are interacted with different HVDMY
			 @ 3. Both of two SH_Ns are NOT inside NBL
  A = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB_45V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_19_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY > 1
  B = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_45V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB < HVESD_S_19_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B INTERACT HVDMY > 1
}

HVESD.S.20_45V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_20_45V um
			 @ 1. One of the SH_Ns is interacted with HVGB
			 @ 2. Both of two SH_Ns are interact with different HVDMY
			 @ 3. Both of two SH_Ns are inside NBL 
  A = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_45V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD < HVESD_S_20_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY > 1
  B = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_45V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB < HVESD_S_20_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B INTERACT HVDMY > 1
} 

HVESD.S.21_45V { @ Min space between two SH_N connected to different-potential PADs and meet following conditions.(Except Two SH_N within one HVMOS device) >= ^HVESD_S_21_45V um
			 @ 1. One of the SH_Ns is interacted with HVGB
			 @ 2. Both of two SH_Ns are interact with different HVDMY
			 @ 3. One of the SH_Ns is inside NBL and the other one of SH_N is not inside NBL
  A1 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_45V HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD < HVESD_S_21_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A1 INTERACT HVDMY > 1
  A2 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_45V HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB < HVESD_S_21_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A2 INTERACT HVDMY > 1
  B1 = EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB_45V < HVESD_S_21_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B1 INTERACT HVDMY > 1
  B2 = EXT HVSHN_INTERACT_HVDMY_NOTINSIDE_NBL_PAD_INTERACT_HVGB HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_45V < HVESD_S_21_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
  B2 INTERACT HVDMY > 1
} 
HVESD.S.22_5V { @ Min space between two NDD connected to different-potential PADs in the same HVDMY region >= ^HVESD_S_22_5V um
							  @ Both of two NDD are in the same HVDMY
  A = EXT NDD_INSIDE_HVDMY_PAD_5V NDD_INSIDE_HVDMY_PAD < HVESD_S_22_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY == 1
}

HVESD.S.23_5V { @ Min space between two NDD connected to different-potential PADs  >= ^HVESD_S_23_5V um
							  @ one of the NDDs is inside HVDMY
  EXT NDD_INSIDE_HVDMY_PAD_5V NDD_PAD < HVESD_S_23_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
  EXT NDD_PAD_5V NDD_INSIDE_HVDMY_PAD < HVESD_S_23_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
}

HVESD.S.24_5V { @ Min space between SH_N and NW connected to different-potential PADs  >= ^HVESD_S_24_5V um
			 @ When SH_N is interacted with (HVGA and HVDMY) NOT INSIDE NBL.(Except:LV Device isolation with NBL)
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_5V NWEL_PAD < HVESD_S_24_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
}
HVESD.S.22_6_9_12_16_20_24V { @ Min space between two NDD connected to different-potential PADs in the same HVDMY region >= ^HVESD_S_22_6_9_12_16_20_24V um
							  @ Both of two NDD are in the same HVDMY
  A = EXT NDD_INSIDE_HVDMY_PAD_6_9_12_16_20_24V NDD_INSIDE_HVDMY_PAD < HVESD_S_22_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY == 1
}

HVESD.S.23_6_9_12_16_20_24V { @ Min space between two NDD connected to different-potential PADs  >= ^HVESD_S_23_6_9_12_16_20_24V um
							  @ one of the NDDs is inside HVDMY
  EXT NDD_INSIDE_HVDMY_PAD_6_9_12_16_20_24V NDD_PAD < HVESD_S_23_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
  EXT NDD_PAD_6_9_12_16_20_24V NDD_INSIDE_HVDMY_PAD < HVESD_S_23_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
}

HVESD.S.24_6_9_12_16_20_24V { @ Min space between SH_N and NW connected to different-potential PADs  >= ^HVESD_S_24_6_9_12_16_20_24V um
			 @ When SH_N is interacted with (HVGA and HVDMY) NOT INSIDE NBL.(Except:LV Device isolation with NBL)
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V NWEL_PAD < HVESD_S_24_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
}
HVESD.S.22_29V { @ Min space between two NDD connected to different-potential PADs in the same HVDMY region >= ^HVESD_S_22_29V um
							  @ Both of two NDD are in the same HVDMY
  A = EXT NDD_INSIDE_HVDMY_PAD_29V NDD_INSIDE_HVDMY_PAD < HVESD_S_22_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  A INTERACT HVDMY == 1
}

HVESD.S.23_29V { @ Min space between two NDD connected to different-potential PADs  >= ^HVESD_S_23_29V um
							  @ one of the NDDs is inside HVDMY
  EXT NDD_INSIDE_HVDMY_PAD_29V NDD_PAD < HVESD_S_23_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
  EXT NDD_PAD_29V NDD_INSIDE_HVDMY_PAD < HVESD_S_23_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
}

HVESD.S.24_29V { @ Min space between SH_N and NW connected to different-potential PADs  >= ^HVESD_S_24_29V um
			 @ When SH_N is interacted with (HVGA and HVDMY) NOT INSIDE NBL.(Except:LV Device isolation with NBL)
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_29V NWEL_PAD < HVESD_S_24_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
}
HVESD.S.25_36V { @ Min space between SH_N and NW connected to different-potential PADs  >= ^HVESD_S_25_36V um
			 @ When SH_N is interacted with (HVGB and HVDMY) NOT INSIDE NBL.(Except:LV Device isolation with NBL)
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB_36V NWEL_PAD < HVESD_S_25_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
}
HVESD.S.25_45V { @ Min space between SH_N and NW connected to different-potential PADs  >= ^HVESD_S_25_45V um
			 @ When SH_N is interacted with (HVGB and HVDMY) NOT INSIDE NBL.(Except:LV Device isolation with NBL)
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB_45V NWEL_PAD < HVESD_S_25_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
}
HVESD.S.26_5V { @ Min space between SH_N and NDD connected to different-potential PADs >= ^HVESD_S_26_5V um
			 @ When SH_N is interact with (HVGA and HVDMY) NOT INSIDE NBL (Except:SH_N to N+OD within one HVMOS device or LV device isolation)
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_5V NDD_PAD < HVESD_S_26_5V ABUT < 90  NOT CONNECTED SINGULAR REGION 
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA NDD_PAD_5V < HVESD_S_26_5V ABUT < 90  NOT CONNECTED SINGULAR REGION

}
HVESD.S.26_6_9_12_16_20_24V { @ Min space between SH_N and NDD connected to different-potential PADs >= ^HVESD_S_26_6_9_12_16_20_24V um
			 @ When SH_N is interact with (HVGA and HVDMY) NOT INSIDE NBL (Except:SH_N to N+OD within one HVMOS device or LV device isolation)
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V NDD_PAD < HVESD_S_26_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION 
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA NDD_PAD_6_9_12_16_20_24V < HVESD_S_26_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION

}
HVESD.S.26_29V { @ Min space between SH_N and NDD connected to different-potential PADs >= ^HVESD_S_26_29V um
			 @ When SH_N is interact with (HVGA and HVDMY) NOT INSIDE NBL (Except:SH_N to N+OD within one HVMOS device or LV device isolation)
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_29V NDD_PAD < HVESD_S_26_29V ABUT < 90  NOT CONNECTED SINGULAR REGION 
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA NDD_PAD_29V < HVESD_S_26_29V ABUT < 90  NOT CONNECTED SINGULAR REGION

}
HVESD.S.27_36V { @ Min space between SH_N and NDD connected to different-potential PADs  >= ^HVESD_S_27_36V um
			 @ When SH_N is interacted by (HVGB and HVDMY) NOT INSIDE NBL (Except:SH_N to N+OD within one HVMOS device or LV device isolation)

  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB_36V NDD_PAD < HVESD_S_27_36V ABUT < 90  NOT CONNECTED SINGULAR REGION 
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB NDD_PAD_36V < HVESD_S_27_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
}
HVESD.S.27_45V { @ Min space between SH_N and NDD connected to different-potential PADs  >= ^HVESD_S_27_45V um
			 @ When SH_N is interacted by (HVGB and HVDMY) NOT INSIDE NBL (Except:SH_N to N+OD within one HVMOS device or LV device isolation)

  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB_45V NDD_PAD < HVESD_S_27_45V ABUT < 90  NOT CONNECTED SINGULAR REGION 
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB NDD_PAD_45V < HVESD_S_27_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
}
HVESD.S.28_5V { @ Min space between {NDD inside HVDMY} and {NP AND (OD AND NW)} connected to different-potential PADs  >= ^HVESD_S_28_5V um
  EXT NDD_INSIDE_HVDMY_PAD_5V NPOD_NWEL_PAD < HVESD_S_28_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
}

HVESD.S.29_5V { @ Min space between SH_N and {((NP AND OD) INSIDE ((SH_P OR PDD) OR HVPW)) OR (((NP AND OD) NOT (PO OR RPDUMMY)) INSIDE PW)} connected to different-potential PADs  >= ^HVESD_S_29_5V um
             @ When SH_N is interacted by (HVGA and HVDMY) NOT INSIDE NBL 
			 @ Except:SH_N to N+OD within one HVMOS device or LV device isolation

  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_5V NPOD_INSIDE_HVSHP_PDD_HVPW_PAD < HVESD_S_29_5V NOT CONNECTED SINGULAR REGION
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_5V < HVESD_S_29_5V NOT CONNECTED SINGULAR REGION

  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_5V NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD < HVESD_S_29_5V NOT CONNECTED SINGULAR REGION
}

HVESD.S.31_5V { @ Min space between {((SH_N INTERACT HVGA) INTERACT HVDMY) INSIDE NBL} and NW connected to different-potential PADs(Except:LV Device Isolation with NBL) >= ^HVESD_S_31_5V um
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_5V NWEL_PAD < HVESD_S_31_5V ABUT < 90  NOT CONNECTED SINGULAR REGION 
}

HVESD.S.33_5V { @ Min space between {((SH_N INTERACT HVGA) INTERACT HVDMY) INSIDE NBL} and NDD connected to different-potential PADs(Except:SH_N to NDD within one HVMOS device or LV Device isolation) >= ^HVESD_S_33_5V um
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_5V NDD_PAD < HVESD_S_33_5V ABUT < 90  NOT CONNECTED SINGULAR REGION 
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA NDD_PAD_5V < HVESD_S_33_5V ABUT < 90  NOT CONNECTED SINGULAR REGION
} 

HVESD.S.35_5V { @ Min space between SH_N and {((NP AND OD) INSIDE ((SH_P OR PDD) OR HVPW)) OR (((NP AND OD) NOT (PO OR RPDUMMY)) INSIDE PW)} connected to different-potential PADs  >= ^HVESD_S_35_5V um
             @ When SH_N is interacted by (HVGA and HVDMY) INSIDE NBL 
			 @ Except:SH_N to N+OD within one HVMOS device or LV device isolation
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_5V NPOD_INSIDE_HVSHP_PDD_HVPW_PAD < HVESD_S_35_5V NOT CONNECTED SINGULAR REGION
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_5V < HVESD_S_35_5V NOT CONNECTED SINGULAR REGION

  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_5V NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD < HVESD_S_35_5V NOT CONNECTED SINGULAR REGION
}

HVESD.S.28_6_9_12_16_20_24V { @ Min space between {NDD inside HVDMY} and {NP AND (OD AND NW)} connected to different-potential PADs  >= ^HVESD_S_28_6_9_12_16_20_24V um
  EXT NDD_INSIDE_HVDMY_PAD_6_9_12_16_20_24V NPOD_NWEL_PAD < HVESD_S_28_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
}

HVESD.S.29_6_9_12_16_20_24V { @ Min space between SH_N and {((NP AND OD) INSIDE ((SH_P OR PDD) OR HVPW)) OR (((NP AND OD) NOT (PO OR RPDUMMY)) INSIDE PW)} connected to different-potential PADs  >= ^HVESD_S_29_6_9_12_16_20_24V um
             @ When SH_N is interacted by (HVGA and HVDMY) NOT INSIDE NBL 
			 @ Except:SH_N to N+OD within one HVMOS device or LV device isolation

  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V NPOD_INSIDE_HVSHP_PDD_HVPW_PAD < HVESD_S_29_6_9_12_16_20_24V NOT CONNECTED SINGULAR REGION
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_6_9_12_16_20_24V < HVESD_S_29_6_9_12_16_20_24V NOT CONNECTED SINGULAR REGION

  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD < HVESD_S_29_6_9_12_16_20_24V NOT CONNECTED SINGULAR REGION
}

HVESD.S.31_6_9_12_16_20_24V { @ Min space between {((SH_N INTERACT HVGA) INTERACT HVDMY) INSIDE NBL} and NW connected to different-potential PADs(Except:LV Device Isolation with NBL) >= ^HVESD_S_31_6_9_12_16_20_24V um
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V NWEL_PAD < HVESD_S_31_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION 
}

HVESD.S.33_6_9_12_16_20_24V { @ Min space between {((SH_N INTERACT HVGA) INTERACT HVDMY) INSIDE NBL} and NDD connected to different-potential PADs(Except:SH_N to NDD within one HVMOS device or LV Device isolation) >= ^HVESD_S_33_6_9_12_16_20_24V um
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V NDD_PAD < HVESD_S_33_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION 
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA NDD_PAD_6_9_12_16_20_24V < HVESD_S_33_6_9_12_16_20_24V ABUT < 90  NOT CONNECTED SINGULAR REGION
} 

HVESD.S.35_6_9_12_16_20_24V { @ Min space between SH_N and {((NP AND OD) INSIDE ((SH_P OR PDD) OR HVPW)) OR (((NP AND OD) NOT (PO OR RPDUMMY)) INSIDE PW)} connected to different-potential PADs  >= ^HVESD_S_35_6_9_12_16_20_24V um
             @ When SH_N is interacted by (HVGA and HVDMY) INSIDE NBL 
			 @ Except:SH_N to N+OD within one HVMOS device or LV device isolation
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V NPOD_INSIDE_HVSHP_PDD_HVPW_PAD < HVESD_S_35_6_9_12_16_20_24V NOT CONNECTED SINGULAR REGION
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_6_9_12_16_20_24V < HVESD_S_35_6_9_12_16_20_24V NOT CONNECTED SINGULAR REGION

  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_6_9_12_16_20_24V NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD < HVESD_S_35_6_9_12_16_20_24V NOT CONNECTED SINGULAR REGION
}
HVESD.S.37_6_9_12_16_20_24V { @ Min space between two SH_N connected to different-potential PADs >= ^HVESD_S_37_6_9_12_16_20_24V um
			 @ when one of these is covered by SDI and HVGA.
  EXT HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA_6_9_12_16_20_24V HVSHN_PAD < HVESD_S_37_6_9_12_16_20_24V NOT CONNECTED SINGULAR REGION
  EXT HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA HVSHN_PAD_6_9_12_16_20_24V < HVESD_S_37_6_9_12_16_20_24V NOT CONNECTED SINGULAR REGION
}

HVESD.S.28_29V { @ Min space between {NDD inside HVDMY} and {NP AND (OD AND NW)} connected to different-potential PADs  >= ^HVESD_S_28_29V um
  EXT NDD_INSIDE_HVDMY_PAD_29V NPOD_NWEL_PAD < HVESD_S_28_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
}

HVESD.S.29_29V { @ Min space between SH_N and {((NP AND OD) INSIDE ((SH_P OR PDD) OR HVPW)) OR (((NP AND OD) NOT (PO OR RPDUMMY)) INSIDE PW)} connected to different-potential PADs  >= ^HVESD_S_29_29V um
             @ When SH_N is interacted by (HVGA and HVDMY) NOT INSIDE NBL 
			 @ Except:SH_N to N+OD within one HVMOS device or LV device isolation

  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_29V NPOD_INSIDE_HVSHP_PDD_HVPW_PAD < HVESD_S_29_29V NOT CONNECTED SINGULAR REGION
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_29V < HVESD_S_29_29V NOT CONNECTED SINGULAR REGION

  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGA_29V NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD < HVESD_S_29_29V NOT CONNECTED SINGULAR REGION
}

HVESD.S.31_29V { @ Min space between {((SH_N INTERACT HVGA) INTERACT HVDMY) INSIDE NBL} and NW connected to different-potential PADs(Except:LV Device Isolation with NBL) >= ^HVESD_S_31_29V um
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_29V NWEL_PAD < HVESD_S_31_29V ABUT < 90  NOT CONNECTED SINGULAR REGION 
}

HVESD.S.33_29V { @ Min space between {((SH_N INTERACT HVGA) INTERACT HVDMY) INSIDE NBL} and NDD connected to different-potential PADs(Except:SH_N to NDD within one HVMOS device or LV Device isolation) >= ^HVESD_S_33_29V um
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_29V NDD_PAD < HVESD_S_33_29V ABUT < 90  NOT CONNECTED SINGULAR REGION 
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA NDD_PAD_29V < HVESD_S_33_29V ABUT < 90  NOT CONNECTED SINGULAR REGION
} 

HVESD.S.35_29V { @ Min space between SH_N and {((NP AND OD) INSIDE ((SH_P OR PDD) OR HVPW)) OR (((NP AND OD) NOT (PO OR RPDUMMY)) INSIDE PW)} connected to different-potential PADs  >= ^HVESD_S_35_29V um
             @ When SH_N is interacted by (HVGA and HVDMY) INSIDE NBL 
			 @ Except:SH_N to N+OD within one HVMOS device or LV device isolation
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_29V NPOD_INSIDE_HVSHP_PDD_HVPW_PAD < HVESD_S_35_29V NOT CONNECTED SINGULAR REGION
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_29V < HVESD_S_35_29V NOT CONNECTED SINGULAR REGION

  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGA_29V NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD < HVESD_S_35_29V NOT CONNECTED SINGULAR REGION
}
HVESD.S.37_29V { @ Min space between two SH_N connected to different-potential PADs >= ^HVESD_S_37_29V um
			 @ when one of these is covered by SDI and HVGA.
  EXT HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA_29V HVSHN_PAD < HVESD_S_37_29V NOT CONNECTED SINGULAR REGION
  EXT HVSHN_INSIDE_SDI_PAD_INTERACT_HVGA HVSHN_PAD_29V < HVESD_S_37_29V NOT CONNECTED SINGULAR REGION
}

HVESD.S.30_36V { @ Min space between SH_N and {((NP AND OD) INSIDE ((SH_P OR PDD) OR HVPW)) OR (((NP AND OD) NOT (PO OR RPDUMMY)) INSIDE PW)} connected to different-potential PADs >= ^HVESD_S_30_36V um
             @ When SH_N is covered by (HVGB and HVDMY) NOT INSIDE NBL.
			 @ Except:SH_N to N+OD within one HVMOS device or LV device isolation


  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB_36V NPOD_INSIDE_HVSHP_PDD_HVPW_PAD < HVESD_S_30_36V NOT CONNECTED SINGULAR REGION
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_36V < HVESD_S_30_36V NOT CONNECTED SINGULAR REGION

  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB_36V NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD < HVESD_S_30_36V NOT CONNECTED SINGULAR REGION
}

HVESD.S.32_36V { @ Min space between {((SH_N INTERACT HVGB) INTERACT HVDMY) INSIDE NBL} and NW connected to different-potential PADs(Except:LV Device Isolation with NBL) >= ^HVESD_S_32_36V um
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_36V NWEL_PAD < HVESD_S_32_36V ABUT < 90  NOT CONNECTED SINGULAR REGION 
}

HVESD.S.34_36V { @ Min space between {((SH_N INTERACT HVGB) INTERACT HVDMY) INSIDE NBL} and NDD connected to different-potential PADs(Except:SH_N to NDD within one HVMOS device or LV Device isolation) >= ^HVESD_S_34_36V um
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_36V NDD_PAD < HVESD_S_34_36V ABUT < 90  NOT CONNECTED SINGULAR REGION 
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB NDD_PAD_36V < HVESD_S_34_36V ABUT < 90  NOT CONNECTED SINGULAR REGION
}

HVESD.S.36_36V { @ Min space between SH_N and {((NP AND OD) INSIDE ((SH_P OR PDD) OR HVPW)) OR (((NP AND OD) NOT (PO OR RPDUMMY)) INSIDE PW)} connected to different-potential PADs  >= ^HVESD_S_36_36V um
             @ When SH_N is interacted by (HVGB and HVDMY) INSIDE NBL 
			 @ Except:SH_N to N+OD within one HVMOS device or LV device isolation
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_36V NPOD_INSIDE_HVSHP_PDD_HVPW_PAD < HVESD_S_36_36V NOT CONNECTED SINGULAR REGION
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_36V < HVESD_S_36_36V NOT CONNECTED SINGULAR REGION

  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_36V NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD < HVESD_S_36_36V NOT CONNECTED SINGULAR REGION
}

HVESD.S.38_36V { @ Min space between two SH_N connected to different-potential PADs >= ^HVESD_S_38_36V um
			 @ when one of these is covered by SDI and HVGB.
  EXT HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB_36V HVSHN_PAD < HVESD_S_38_36V NOT CONNECTED SINGULAR REGION
  EXT HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB HVSHN_PAD_36V < HVESD_S_38_36V NOT CONNECTED SINGULAR REGION
}
HVESD.S.30_45V { @ Min space between SH_N and {((NP AND OD) INSIDE ((SH_P OR PDD) OR HVPW)) OR (((NP AND OD) NOT (PO OR RPDUMMY)) INSIDE PW)} connected to different-potential PADs >= ^HVESD_S_30_45V um
             @ When SH_N is covered by (HVGB and HVDMY) NOT INSIDE NBL.
			 @ Except:SH_N to N+OD within one HVMOS device or LV device isolation


  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB_45V NPOD_INSIDE_HVSHP_PDD_HVPW_PAD < HVESD_S_30_45V NOT CONNECTED SINGULAR REGION
  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_45V < HVESD_S_30_45V NOT CONNECTED SINGULAR REGION

  EXT HVSHN_INTERACT_HVDMY_NOT_INSIDE_NBL_PAD_INTERACT_HVGB_45V NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD < HVESD_S_30_45V NOT CONNECTED SINGULAR REGION
}

HVESD.S.32_45V { @ Min space between {((SH_N INTERACT HVGB) INTERACT HVDMY) INSIDE NBL} and NW connected to different-potential PADs(Except:LV Device Isolation with NBL) >= ^HVESD_S_32_45V um
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_45V NWEL_PAD < HVESD_S_32_45V ABUT < 90  NOT CONNECTED SINGULAR REGION 
}

HVESD.S.34_45V { @ Min space between {((SH_N INTERACT HVGB) INTERACT HVDMY) INSIDE NBL} and NDD connected to different-potential PADs(Except:SH_N to NDD within one HVMOS device or LV Device isolation) >= ^HVESD_S_34_45V um
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_45V NDD_PAD < HVESD_S_34_45V ABUT < 90  NOT CONNECTED SINGULAR REGION 
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB NDD_PAD_45V < HVESD_S_34_45V ABUT < 90  NOT CONNECTED SINGULAR REGION
}

HVESD.S.36_45V { @ Min space between SH_N and {((NP AND OD) INSIDE ((SH_P OR PDD) OR HVPW)) OR (((NP AND OD) NOT (PO OR RPDUMMY)) INSIDE PW)} connected to different-potential PADs  >= ^HVESD_S_36_45V um
             @ When SH_N is interacted by (HVGB and HVDMY) INSIDE NBL 
			 @ Except:SH_N to N+OD within one HVMOS device or LV device isolation
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_45V NPOD_INSIDE_HVSHP_PDD_HVPW_PAD < HVESD_S_36_45V NOT CONNECTED SINGULAR REGION
  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB NPOD_INSIDE_HVSHP_PDD_HVPW_PAD_45V < HVESD_S_36_45V NOT CONNECTED SINGULAR REGION

  EXT HVSHN_INTERACT_HVDMY_INSIDE_NBL_PAD_INTERACT_HVGB_45V NPOD_NOT_PO_RPDUMMY_INSIDE_PWEL_PAD < HVESD_S_36_45V NOT CONNECTED SINGULAR REGION
}

HVESD.S.38_45V { @ Min space between two SH_N connected to different-potential PADs >= ^HVESD_S_38_45V um
			 @ when one of these is covered by SDI and HVGB.
  EXT HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB_45V HVSHN_PAD < HVESD_S_38_45V NOT CONNECTED SINGULAR REGION
  EXT HVSHN_INSIDE_SDI_PAD_INTERACT_HVGB HVSHN_PAD_45V < HVESD_S_38_45V NOT CONNECTED SINGULAR REGION
}
#ENDIF
//HVESD DIODE check

HVESD.W.9.2_ESDDIO_GA { @ Min width of P+ isolation ring >= ^HVESD_W_9_2_GA 
  INT PPOD_R_ESD_DIO_GA < HVESD_W_9_2_GA ABUT < 90 SINGULAR REGION
}

HVESD.W.9.2_ESDDIO_GB { @ Min width of P+ isolation ring >= ^HVESD_W_9_2_GB
  INT PPOD_R_ESD_DIO_GB < HVESD_W_9_2_GB ABUT < 90 SINGULAR REGION
}

CONNECT ANOOD_ESD_DIO_GA NBL

HVESD.W.15_ESDDIO_GA { @ Total perimeter of HV ESD diodes . >= ^HVESD_W_15_ESDDIO_GA
  NET AREA RATIO ANOOD_ESD_DIO_GA < HVESD_W_15_ESDDIO_GA
      [
       PERIMETER(ANOOD_ESD_DIO_GA)
      ] RDB HVESD.W.15.rep ANOOD_ESD_DIO_GA
}

CONNECT ANOOD_ESD_DIO_GB NBL

HVESD.W.15_ESDDIO_GB { @ Total perimeter of HV ESD diodes . >= ^HVESD_W_15_ESDDIO_GB
  NET AREA RATIO ANOOD_ESD_DIO_GB < HVESD_W_15_ESDDIO_GB
      [
       PERIMETER(ANOOD_ESD_DIO_GB)
      ] RDB HVESD.W.15.rep ANOOD_ESD_DIO_GB
}

HVESD.W.16_ESDDIO_GA { @ Min and Max width of Anode P+OD == ^HVESD_W_16_ESDDIO_GA
  INT ANOOD_ESD_DIO_GA < HVESD_W_16_ESDDIO_GA ABUT < 90 SINGULAR REGION
  SIZE ANOOD_ESD_DIO_GA BY HVESD_W_16_ESDDIO_GA/2 UNDEROVER
}

HVESD.W.16_ESDDIO_GB { @ Min and Max width of Anode P+OD == ^HVESD_W_16_ESDDIO_GB
  INT ANOOD_ESD_DIO_GB < HVESD_W_16_ESDDIO_GB ABUT < 90 SINGULAR REGION
  SIZE ANOOD_ESD_DIO_GB BY HVESD_W_16_ESDDIO_GB/2 UNDEROVER
}

HVESD.W.17_ESDDIO_GA { @ Min and Max width of Cathod N+OD == ^HVESD_W_17_ESDDIO_GA
  INT CATHOD_ESD_DIO_GA < HVESD_W_17_ESDDIO_GA ABUT < 90 SINGULAR REGION
  SIZE CATHOD_ESD_DIO_GA BY HVESD_W_17_ESDDIO_GA/2 UNDEROVER
}

HVESD.W.17_ESDDIO_GB { @ Min and Max width of Cathod N+OD == ^HVESD_W_17_ESDDIO_GB
  INT CATHOD_ESD_DIO_GB < HVESD_W_17_ESDDIO_GB ABUT < 90 SINGULAR REGION
  SIZE CATHOD_ESD_DIO_GB BY HVESD_W_17_ESDDIO_GB/2 UNDEROVER
}

HVESD.W.18_ESDDIO_GA { @ Min and Max width of Cathod N+ OD ring == ^HVESD_W_18_ESDDIO_GA
  INT NPOD_R_ESD_DIO_GA < HVESD_W_18_ESDDIO_GA ABUT < 90 SINGULAR REGION
  SIZE NPOD_R_ESD_DIO_GA BY HVESD_W_18_ESDDIO_GA/2 UNDEROVER
}

HVESD.W.18_ESDDIO_GB { @ Min and Max width of Cathod N+ OD ring == ^HVESD_W_18_ESDDIO_GB
  INT NPOD_R_ESD_DIO_GB < HVESD_W_18_ESDDIO_GB ABUT < 90 SINGULAR REGION
  SIZE NPOD_R_ESD_DIO_GB BY HVESD_W_18_ESDDIO_GB/2 UNDEROVER
}

HVESD.W.19_ESDDIO_GA { @ Min width of Anode P+OD and Cathode N+OD >= ^HVESD_W_19_ESDDIO_GA
  A = ANOOD_ESD_DIO_GA LENGTH != HVESD_W_16_ESDDIO_GA
  A LENGTH < HVESD_W_19_ESDDIO_GA


  B = CATHOD_ESD_DIO_GA LENGTH != HVESD_W_16_ESDDIO_GA
  B LENGTH < HVESD_W_19_ESDDIO_GA
}

HVESD.W.19_ESDDIO_GB { @ Min width of Anode P+OD and Cathode N+OD >= ^HVESD_W_19_ESDDIO_GB
  A = ANOOD_ESD_DIO_GB LENGTH != HVESD_W_16_ESDDIO_GB
  A LENGTH < HVESD_W_19_ESDDIO_GB

  B = CATHOD_ESD_DIO_GB LENGTH != HVESD_W_16_ESDDIO_GB
  B LENGTH < HVESD_W_19_ESDDIO_GB
}

  ANO_CATH_ESD_merge_DIO_GA_pre = EXPAND EDGE ANO_CATH_ESD_merge_DIO_GA OUTSIDE BY GRID
  ANO_CATH_ESD_merge_DIO_GA_pre1 = ANO_CATH_ESD_merge_DIO_GA_pre INSIDE HVSHP
  ANOOD_ESD_DIO_GA_outmostedge_width = ANOOD_ESD_DIO_GA TOUCH EDGE ANO_CATH_ESD_merge_DIO_GA_pre1
  ANOOD_ESD_DIO_GA_innermostedge_width = ANOOD_ESD_DIO_GA NOT TOUCH EDGE ANO_CATH_ESD_merge_DIO_GA
  ANOOD_ESD_DIO_GA_edge_length_pre = ANOOD_ESD_DIO_GA TOUCH EDGE ANO_CATH_ESD_merge_DIO_GA
  ANOOD_ESD_DIO_GA_edge_length = ANOOD_ESD_DIO_GA_edge_length_pre NOT TOUCH EDGE ANO_CATH_ESD_merge_DIO_GA_pre1

  ANO_CATH_ESD_merge_DIO_GB_pre = EXPAND EDGE ANO_CATH_ESD_merge_DIO_GB OUTSIDE BY GRID
  ANO_CATH_ESD_merge_DIO_GB_pre1 = ANO_CATH_ESD_merge_DIO_GB_pre INSIDE HVPB
  ANOOD_ESD_DIO_GB_outmostedge_width = ANOOD_ESD_DIO_GB TOUCH EDGE ANO_CATH_ESD_merge_DIO_GB_pre1
  ANOOD_ESD_DIO_GB_innermostedge_width = ANOOD_ESD_DIO_GB NOT TOUCH EDGE ANO_CATH_ESD_merge_DIO_GB
  ANOOD_ESD_DIO_GB_edge_length_pre = ANOOD_ESD_DIO_GB TOUCH EDGE ANO_CATH_ESD_merge_DIO_GB
  ANOOD_ESD_DIO_GB_edge_length = ANOOD_ESD_DIO_GB_edge_length_pre NOT TOUCH EDGE ANO_CATH_ESD_merge_DIO_GB_pre1

HVESD.W.20_ESDDIO_GA { @ Min and Max width of outermost PDD ring toward Cathod N+OD ring in finger width direction == ^HVESD_W_20_ESDDIO_GA
  A = EXPAND EDGE ANOOD_ESD_DIO_GA_outmostedge_width OUTSIDE BY HVESD_W_20_ESDDIO_GA + HVESD_E_27_ESDDIO_GA
  A NOT TOUCH HVSHN
   
  B = HOLES (HVSHN INTERACT CATHOD_ESD_DIO_GA)
  NOT RECTANGLE B
}

HVESD.W.20.1_ESDDIO_GA { @ Min and max width of PDD ring in finger width direction (Except HVESD.W.20) == ^HVESD_W_20_1_ESDDIO_GA
  NPOD_H_ESD_DIO_GA INTERACT ANO_CATH_ESD_merge_DIO_GA > 1
  
  A = EXPAND EDGE ANOOD_ESD_DIO_GA_innermostedge_width OUTSIDE BY HVESD_W_20_1_ESDDIO_GA + HVESD_E_27_ESDDIO_GA
  A NOT TOUCH HVSHN
}

HVESD.W.21_ESDDIO_GA { @ Min and max width of PDD ring in finger length direction == ^HVESD_W_21_ESDDIO_GA
  A = EXPAND EDGE ANOOD_ESD_DIO_GA_edge_length OUTSIDE BY HVESD_W_21_ESDDIO_GA + HVESD_E_27_ESDDIO_GA
  A NOT TOUCH HVSHN
}

HVESD.W.22.2_ESDDIO_GB { @ Min and Max width of NBLSLOT == ^HVESD_W_22_2_ESDDIO_GB
  A = NBLSLOT INTERACT (DIO3TDMY INTERACT ANOOD_ESD_DIO_GB)
  INT A < HVESD_W_22_2_ESDDIO_GB ABUT < 90 SINGULAR REGION
  SIZE A BY HVESD_W_22_2_ESDDIO_GB/2 UNDEROVER
}

HVESD.S.7.2_ESDDIO_GB { @ Min and max space between two NBLSLOT == ^HVESD_S_7_2_ESDDIO_GB
  A1 = NBLSLOT INTERACT ANO_CATH_ESD_DIO_GB
  A = SIZE A1 BY HVESD_S_7_2_ESDDIO_GB/2 OVERUNDER
  B = HOLES (HVSHN INTERACT NPOD_R_ESD_DIO_GB)
  B INTERACT A > 1
  EXT A1 < HVESD_S_7_2_ESDDIO_GB ABUT < 90 SINGULAR REGION
}

HVESD.S.8_ESDDIO_GA { @ Min space between Anode P+OD space to Cathode N+OD ring in finger width direction >= ^HVESD_S_8_ESDDIO_GA
  A = EXPAND EDGE ANOOD_ESD_DIO_GA_outmostedge_width INSIDE BY GRID
  EXT A NPOD_R_ESD_DIO_GA < HVESD_S_8_ESDDIO_GA ABUT < 90 SINGULAR REGION
}

HVESD.S.8_ESDDIO_GB { @ Min space between Anode P+OD space to Cathode N+OD ring in finger width direction >= ^HVESD_S_8_ESDDIO_GB
  A = EXPAND EDGE ANOOD_ESD_DIO_GB_outmostedge_width INSIDE BY GRID
  EXT A NPOD_R_ESD_DIO_GB < HVESD_S_8_ESDDIO_GB ABUT < 90 SINGULAR REGION
}

HVESD.S.9_ESDDIO_GA { @ Min space between {Anode P+OD OR Cathode N+OD} space to Cathode N+OD ring in finger length direction >= ^HVESD_S_9_ESDDIO_GA
  A = EXPAND EDGE CATHOD_ESD_DIO_GA_edge_length INSIDE BY GRID
  EXT A NPOD_R_ESD_DIO_GA < HVESD_S_9_ESDDIO_GA ABUT < 90 SINGULAR REGION
}

HVESD.S.9_ESDDIO_GB { @ Min space between {Anode P+OD OR Cathode N+OD} space to Cathode N+OD ring in finger length direction >= ^HVESD_S_9_ESDDIO_GB
  A = EXPAND EDGE CATHOD_ESD_DIO_GB_edge_length INSIDE BY GRID
  EXT A NPOD_R_ESD_DIO_GB < HVESD_S_9_ESDDIO_GB ABUT < 90 SINGULAR REGION
}

HVESD.C.1.2_ESDDIO_GA { @ Min and max clearance from SH_N to P+ isolation ring == ^HVESD_C_1_2_ESDDIO_GA
  A1 = HVSHN INTERACT NPOD_R_ESD_DIO_GA
  A2 = (HOLES A1) OR A1
  A = SIZE A2 BY HVESD_C_1_2_ESDDIO_GA
  A XOR PPOD_H_ESD_DIO_GA
}

HVESD.C.1.2_ESDDIO_GB { @ Min and max clearance from SH_N to P+ isolation ring == ^HVESD_C_1_2_ESDDIO_GB
  A1 = HVSHN INTERACT NPOD_R_ESD_DIO_GB
  A2 = (HOLES A1) OR A1
  A = SIZE A2 BY HVESD_C_1_2_ESDDIO_GB
  A XOR PPOD_H_ESD_DIO_GB
}

HVESD.E.39.2_ESDDIO_GB { @ Min and max extension of HVNW beyond NBL slot in finger length direction == ^HVESD_E_39_2_ESDDIO_GB
  A = EXPAND EDGE ANOOD_ESD_DIO_GB_edge_length OUTSIDE BY HVESD_E_30_ESDDIO_GB
  B1 = HVNW TOUCH EDGE A
  B = EXPAND EDGE B1 OUTSIDE BY GRID
  (NBLSLOT INSIDE NPOD_H_ESD_DIO_GB) TOUCH B != 2
  (NBLSLOT INSIDE NPOD_H_ESD_DIO_GB) NOT INSIDE HVNW
}


HVESD.E.40.2_ESDDIO_GB { @ Min extension of HVNW beyond NBLSLOT in finger width direction >= ^HVESD_E_40_2_ESDDIO_GB
  (NBLSLOT INTERACT PPOD_H_ESD_DIO_GB) NOT INSIDE HVNW
}

HVESD.E.41.2_ESDDIO_GB { @ Max extension of HVNW beyond NBLSLOT in finger width direction < ^HVESD_E_41_2_ESDDIO_GB
  A1 = EXPAND EDGE HVPB_ESD_DIO_GB_outmostedge_width OUTSIDE BY HVESD_C_8_1_ESDDIO_GB
  A2 = EXPAND EDGE HVPB_ESD_DIO_GB_innermostedge_width OUTSIDE BY HVESD_C_8_ESDDIO_GB
  A = A1 OR A2
  B1 = HVNW TOUCH EDGE A
  B = EXPAND EDGE B1 INSIDE BY HVESD_E_41_2_ESDDIO_GB - GRID
  B NOT INTERACT NBLSLOT 
}
HVESD.C.6_ESDDIO_GA { @ Min and max clearance from SH_N to PDD for HVESD DIODE for GA HV ESD Diode == ^HVESD_C_6_ESDDIO_GA
  A1 = HVSHN INTERACT NPOD_R_ESD_DIO_GA
  A = HOLES A1
  B1 = PDD INTERACT (DIO3TDMY INTERACT ANOOD_ESD_DIO_GA)
  B = (HOLES B1) OR B1
  A XOR B
}

HVESD.C.7_ESDDIO_GA { @ Min and max clearance from SH_P to PDD for HVESD DIODE for GA HV ESD Diode == ^HVESD_C_7_ESDDIO_GA
  A1 = PDD INTERACT (DIO3TDMY INTERACT ANOOD_ESD_DIO_GA)
  A = HOLES A1
  B = SH_P INTERACT ANOOD_ESD_DIO_GA
  A XOR B
}

HVPB_ESD_DIO_GB_innermostedge_width = HVPB TOUCH EDGE (HVPB INSIDE EDGE ANO_CATH_ESD_merge_DIO_GB)
HVPB_ESD_DIO_GB_edge_length_pre = EXPAND EDGE HVPB_ESD_DIO_GB_innermostedge_width INSIDE BY GRID
HVPB_ESD_DIO_GB_edge_length_pre1 = EXPAND EDGE HVPB_ESD_DIO_GB_innermostedge_width INSIDE BY GRID * 2
HVPB_ESD_DIO_GB_edge_length = HVPB TOUCH EDGE (HVPB_ESD_DIO_GB_edge_length_pre1 NOT HVPB_ESD_DIO_GB_edge_length_pre)
HVPB_ESD_DIO_GB_outmostedge_width =  (HVPB INTERACT ANO_CATH_ESD_merge_DIO_GB) NOT TOUCH EDGE HVPB_ESD_DIO_GB_edge_length_pre
  
HVESD.C.8_ESDDIO_GB { @ Min and max clearance from SH_N to HVPB for GB HV ESD diode (except HVESD.C.8.1) == ^HVESD_C_8_ESDDIO_GB
  NPOD_H_ESD_DIO_GB INTERACT ANO_CATH_ESD_merge_DIO_GB > 1

  A = EXPAND EDGE HVPB_ESD_DIO_GB_innermostedge_width OUTSIDE BY HVESD_C_8_ESDDIO_GB
  A NOT TOUCH HVSHN
}

HVESD.C.8.1_ESDDIO_GB { @ Min and max clearance from outermost HVPB to HVSHN for Cathode N+PD ring for GB HV ESD diode == ^HVESD_C_8_1_ESDDIO_GB
  A = EXPAND EDGE HVPB_ESD_DIO_GB_outmostedge_width OUTSIDE BY HVESD_C_8_1_ESDDIO_GB
  A NOT TOUCH HVSHN
}

HVESD.E.3_ESDDIO_GA { @ Min extension of {Anode P+OD OR Cathode N+OD} beyond CO in finger length direction >= ^HVESD_E_3_ESDDIO_GA
  ENC CO ANOOD_ESD_DIO_GA_edge_length < HVESD_E_3_ESDDIO_GA ABUT < 90 REGION
  ENC CO CATHOD_ESD_DIO_GA_edge_length < HVESD_E_3_ESDDIO_GA ABUT < 90 REGION 
}

HVESD.E.3_ESDDIO_GB { @ Min extension of {Anode P+OD OR Cathode N+OD} beyond CO in finger length direction >= ^HVESD_E_3_ESDDIO_GB
  ENC CO ANOOD_ESD_DIO_GB_edge_length < HVESD_E_3_ESDDIO_GB ABUT < 90 REGION
  ENC CO CATHOD_ESD_DIO_GB_edge_length < HVESD_E_3_ESDDIO_GB ABUT < 90 REGION
}

HVESD.E.6.2_ESDDIO_GA { @ Min and max extension of PSUB beyond SH_N == ^HVESD_E_6_2_ESDDIO_GA
  A = PSUB INTERACT CATHOD_ESD_DIO_GA
  B1 = HVSHN INTERACT CATHOD_ESD_DIO_GA
  B2 = (HOLES B1) OR B1
  B = SIZE B2 BY HVESD_E_6_2_ESDDIO_GA
  A XOR B
}

HVESD.E.6.2_ESDDIO_GB { @ Min and max extension of PSUB beyond SH_N == ^HVESD_E_6_2_ESDDIO_GB
  A = PSUB INTERACT CATHOD_ESD_DIO_GB
  B1 = HVSHN INTERACT CATHOD_ESD_DIO_GB
  B2 = (HOLES B1) OR B1
  B = SIZE B2 BY HVESD_E_6_2_ESDDIO_GB
  A XOR B
}

HVESD.E.8.2_ESDDIO_GA { @ Min extension of HVDMY beyond P+ isolation ring >= ^HVESD_E_8_2_ESDDIO_GA
  ENC PPOD_R_ESD_DIO_GA HVDMY < HVESD_E_8_2_ESDDIO_GA ABUT < 90 SINGULAR REGION
}

HVESD.E.8.2_ESDDIO_GB { @ Min extension of HVDMY beyond P+ isolation ring >= ^HVESD_E_8_2_ESDDIO_GB
  ENC PPOD_R_ESD_DIO_GB HVDMY < HVESD_E_8_2_ESDDIO_GB ABUT < 90 SINGULAR REGION
}

HVESD.E.9.2_ESDDIO_GA { @ Min and max extension of NBL beyond SH_N to which is inside NBL == ^HVESD_E_9_2_ESDDIO_GA
  A = NBL INTERACT ANOOD_ESD_DIO_GA
  B1 = HVSHN INTERACT CATHOD_ESD_DIO_GA
  B = (HOLES B1) OR B1
  A XOR B
}

HVESD.E.9.2_ESDDIO_GB { @ Min and max extension of NBL beyond SH_N to which is inside NBL == ^HVESD_E_9_2_ESDDIO_GB
  A = NBL INTERACT ANOOD_ESD_DIO_GB
  B1 = HVSHN INTERACT CATHOD_ESD_DIO_GB
  B = (HOLES B1) OR B1
  A XOR B
}

HVESD.E.24_ESDDIO_GA { @ Min extension of SH_N beyond Cathode N+OD ring >= ^HVESD_E_24_ESDDIO_GA
  ENC NPOD_R_ESD_DIO_GA HVSHN < HVESD_E_24_ESDDIO_GA ABUT < 90 SINGULAR REGION
}

HVESD.E.24_ESDDIO_GB { @ Min extension of SH_N beyond Cathode N+OD ring >= ^HVESD_E_24_ESDDIO_GB
  ENC NPOD_R_ESD_DIO_GB HVSHN < HVESD_E_24_ESDDIO_GB ABUT < 90 SINGULAR REGION
}

CATHOD_ESD_DIO_GA_edge_width = CATHOD_ESD_DIO_GA NOT TOUCH EDGE ANO_CATH_ESD_merge_DIO_GA
HVESD.E.25_ESDDIO_GA { @ Min and max extension of SH_N beyond Cathode N+OD in finger width direction == ^HVESD_E_25_ESDDIO_GA
  NPOD_H_ESD_DIO_GA INTERACT ANO_CATH_ESD_merge_DIO_GA > 1

  A = EXPAND EDGE CATHOD_ESD_DIO_GA_edge_width OUTSIDE BY HVESD_E_25_ESDDIO_GA
  B1 = HVSHN INTERACT CATHOD_ESD_DIO_GA
  B = HOLES B1
  A NOT TOUCH B
}

CATHOD_ESD_DIO_GB_edge_width = CATHOD_ESD_DIO_GB NOT TOUCH EDGE ANO_CATH_ESD_merge_DIO_GB
HVESD.E.25_ESDDIO_GB { @ Min and max extension of SH_N beyond Cathode N+OD in finger width direction == ^HVESD_E_25_ESDDIO_GB
  NPOD_H_ESD_DIO_GB INTERACT ANO_CATH_ESD_merge_DIO_GB > 1

  A = EXPAND EDGE CATHOD_ESD_DIO_GB_edge_width OUTSIDE BY HVESD_E_25_ESDDIO_GB
  B1 = HVSHN INTERACT CATHOD_ESD_DIO_GB
  B = HOLES B1
  A NOT TOUCH B
}

CATHOD_ESD_DIO_GA_edge_length = CATHOD_ESD_DIO_GA TOUCH EDGE ANO_CATH_ESD_merge_DIO_GA
HVESD.E.26_ESDDIO_GA { @ Min and max extension of SH_N beyond Cathode N+OD in finger length direction == ^HVESD_E_26_ESDDIO_GA
  A1 = HVSHN INTERACT CATHOD_ESD_DIO_GA
  A = A1 NOT NPOD_R_ESD_DIO_GA
  B1 = EXPAND EDGE CATHOD_ESD_DIO_GA_edge_length OUTSIDE BY HVESD_E_26_ESDDIO_GA
  B2 = EXPAND EDGE CATHOD_ESD_DIO_GA_edge_length OUTSIDE BY (HVESD_E_26_ESDDIO_GA + GRID)
  B = B2 NOT B1
  B NOT TOUCH A
}

CATHOD_ESD_DIO_GB_edge_length = CATHOD_ESD_DIO_GB TOUCH EDGE ANO_CATH_ESD_merge_DIO_GB
HVESD.E.26_ESDDIO_GB { @ Min and max extension of SH_N beyond Cathode N+OD in finger length direction == ^HVESD_E_26_ESDDIO_GB
  A1 = HVSHN INTERACT CATHOD_ESD_DIO_GB
  A = A1 NOT NPOD_R_ESD_DIO_GB
  B1 = EXPAND EDGE CATHOD_ESD_DIO_GB_edge_length OUTSIDE BY HVESD_E_26_ESDDIO_GB
  B2 = EXPAND EDGE CATHOD_ESD_DIO_GB_edge_length OUTSIDE BY (HVESD_E_26_ESDDIO_GB + GRID)
  B = B2 NOT B1
  B NOT TOUCH A
}

HVESD.E.27_ESDDIO_GA { @ Min and max extension of SHP beyond Anode P+OD == ^HVESD_E_27_ESDDIO_GA
  A = HVSHP INTERACT ANOOD_ESD_DIO_GA
  B = SIZE ANOOD_ESD_DIO_GA BY HVESD_E_27_ESDDIO_GA
  A XOR B
}

HVESD.E.28_ESDDIO_GB { @ Min and max extension of HVPB beyond Anode P+OD == ^HVESD_E_28_ESDDIO_GB
  A = HVPB INTERACT ANOOD_ESD_DIO_GB
  B = SIZE ANOOD_ESD_DIO_GB BY HVESD_E_28_ESDDIO_GB
  A XOR B
}

HVESD.E.29.2_ESDDIO_GA { @ Min extension of HVGA beyond P+ isolation ring >= ^HVESD_E_29_2_ESDDIO_GA
  ENC PPOD_R_ESD_DIO_GA HVGA < HVESD_E_29_2_ESDDIO_GA ABUT < 90 SINGULAR REGION
}

HVESD.E.30_ESDDIO_GB { @ Min and max extension of HVNW beyond Anode P+OD in finger width direction == ^HVESD_E_30_ESDDIO_GB
  A1 = EXPAND EDGE ANOOD_ESD_DIO_GB_edge_length OUTSIDE BY HVESD_E_30_ESDDIO_GB 
  A2 = EXPAND EDGE ANOOD_ESD_DIO_GB_edge_length OUTSIDE BY HVESD_E_30_ESDDIO_GB + GRID
  A = A2 NOT A1
  A NOT TOUCH HVNW
}

HVESD.E.31.2_ESDDIO_GB { @ Min extension of HVGB beyond P+ isolation ring >= ^HVESD_E_31_2_ESDDIO_GB
  ENC PPOD_R_ESD_DIO_GB HVGB < HVESD_E_31_2_ESDDIO_GB ABUT < 90 SINGULAR REGION
}

HVESD.E.32_ESDDIO_GB { @ Min and max extension of HVNW beyond Anode P+OD in finger length direction == ^HVESD_E_32_ESDDIO_GB
  A1 = EXPAND EDGE ANOOD_ESD_DIO_GB_outmostedge_width OUTSIDE BY HVESD_E_32_ESDDIO_GB
  A2 = EXPAND EDGE ANOOD_ESD_DIO_GB_outmostedge_width OUTSIDE BY HVESD_E_32_ESDDIO_GB + GRID
  A = A2 NOT A1
  A NOT TOUCH HVNW
}

HVESD.R.16_ESDDIO_GA { @ Min finger number of Anode P+OD(Anode = Cathode + 1) >= ^HVESD_R_16_ESDDIO_GA
  HVESD_merge_ESD_DIO_GA INTERACT ANOOD_ESD_DIO_GA < HVESD_R_16_ESDDIO_GA 
  HVESD_merge_ESD_DIO_GA INTERACT CATHOD_ESD_DIO_GA < HVESD_R_16_ESDDIO_GA -1
}

HVESD.R.16_ESDDIO_GB { @ Min finger number of Anode P+OD(Anode = Cathode + 1) >= ^HVESD_R_16_ESDDIO_GB
  HVESD_merge_ESD_DIO_GB INTERACT ANOOD_ESD_DIO_GB < HVESD_R_16_ESDDIO_GB 
  HVESD_merge_ESD_DIO_GB INTERACT CATHOD_ESD_DIO_GB < HVESD_R_16_ESDDIO_GB -1
}

HVESD.R.17_ESDDIO_GA { @ Max finger number of Anode P+OD(Anode = Cathode + 1) <= ^HVESD_R_17_ESDDIO_GA
  HVESD_merge_ESD_DIO_GA INTERACT ANOOD_ESD_DIO_GA > HVESD_R_17_ESDDIO_GA
}

HVESD.R.17_ESDDIO_GB { @ Max finger number of Anode P+OD(Anode = Cathode + 1) <= ^HVESD_R_17_ESDDIO_GB
  HVESD_merge_ESD_DIO_GB INTERACT ANOOD_ESD_DIO_GB > HVESD_R_17_ESDDIO_GB
}

HVESD.R.18.2_ESDDIO_GA { @ HVESD DIODE must be surround by P+ isolation ring
  ANOOD_ESD_DIO_GA NOT INSIDE PPOD_H_ESD_DIO_GA
  CATHOD_ESD_DIO_GA NOT INSIDE PPOD_H_ESD_DIO_GA
}

HVESD.R.18.2_ESDDIO_GB { @ HVESD DIODE must be surround by P+ isolation ring
  ANOOD_ESD_DIO_GB NOT INSIDE PPOD_H_ESD_DIO_GB
  CATHOD_ESD_DIO_GB NOT INSIDE PPOD_H_ESD_DIO_GB
}



// FGD and NGD MOS

//5V FGD NMOS
5V_FGD_NGATE = ((((GATE INTERACT NP) INTERACT PP) AND PWEL) AND OD2) AND FGDDMY
5V_FGD_NGATE_PP = PP INTERACT 5V_FGD_NGATE
5V_FGD_NGATE_NP = NP INTERACT 5V_FGD_NGATE
5V_FGD_NGATE_OD = OD INTERACT 5V_FGD_NGATE
//5V NGD NMOS
5V_NGD_NGATE = ((((GATE INTERACT NP) NOT INTERACT PP) AND PWEL) AND OD2) AND FGDDMY
5V_NGD_NGATE_NP = NP INTERACT 5V_NGD_NGATE
5V_NGD_NGATE_OD = OD INTERACT 5V_NGD_NGATE
//common layers for 5V FGD&NGD NMOS
5V_FGD_PPOD_BULK_R_1 = PPOD AND FGDDMY
5V_FGD_PPOD_BULK_H_1 = (HOLES 5V_FGD_PPOD_BULK_R_1 INNER) NOT 5V_FGD_PPOD_BULK_R_1
5V_FGD_PPOD_BULK_R_2 = 5V_FGD_PPOD_BULK_R_1 TOUCH 5V_FGD_PPOD_BULK_H_1
5V_FGD_PPOD_BULK_R_3 = SIZE 5V_FGD_PPOD_BULK_R_2 BY (FGDOD_W_2/2) -GRID UNDEROVER
5V_FGD_PPOD_BULK_H   = (HOLES 5V_FGD_PPOD_BULK_R_3) ENCLOSE GATE 
5V_FGD_PPOD_BULK_R   = 5V_FGD_PPOD_BULK_R_3 TOUCH 5V_FGD_PPOD_BULK_H

//common layers for FGD MOS
FGD_OD = OD AND FGDDMY
5V_FGD_GATE = GATE AND FGDDMY
5V_FGD_GATE_W = GATE_W INSIDE EDGE FGDDMY


FGDOD.W.1 { @ Min and max width of {LV ACTIVE AND FGDDMY} in channel width direction == ^FGDOD_W_1A OR ^FGDOD_W_1B
  A = PATH LENGTH 5V_FGD_GATE_W != FGDOD_W_1A
  PATH LENGTH A != FGDOD_W_1B
}

FGDOD.W.2 { @ Min width of {OD AND FGDDMY} >= ^FGDOD_W_2
  INT FGD_OD < FGDOD_W_2 ABUT < 90 SINGULAR REGION
}

FGDOD.S.1 { @ Min space between {LV ACTIVE OD AND FGDDMY} and P+ bulk ring >= ^FGDOD_S_1 
  EXT LV_NACT 5V_FGD_PPOD_BULK_R < FGDOD_S_1 ABUT < 90 SINGULAR REGION
}

FGDPO.W.1 { @ Min and max width of {PO AND FGDDMY} for the channel length of 5V FGD MOS == ^FGDPO_W_1A OR ^FGDPO_W_1B
  A = NOT RECTANGLE 5V_FGD_GATE == FGDPO_W_1A BY == FGDPO_W_1A ORTHOGONAL ONLY
  NOT RECTANGLE A == FGDPO_W_1B BY == FGDPO_W_1B ORTHOGONAL ONLY
}

//FGD.R.1 is checked by FGDPO.W.1

FGD.R.2 { @ Min and max clearance from {(NP INTERACT PO) AND FGDDMY} to {(PP INTERACT PO) AND FGDDMY} for 5V FGD MOS == ^FGD_R_2
  5V_FGD_NGATE_NP NOT TOUCH 5V_FGD_NGATE_PP
}

FGDPO.C.1 { @ Min and max clearance from {(PP INTERACT PO) and FGDDMY} to PO edge in chennel length direction for 5V FGD NMOS == ^FGDPO_C_1
  ENC 5V_FGD_NGATE_PP POLY < FGDPO_C_1 ABUT < 90 SINGULAR REGION
  A = 5V_FGD_NGATE NOT PP
  SIZE A BY FGDPO_C_1/2 UNDEROVER
}

FGDPO.C.2 { @ Min clearance from P+ bulk ring to {FGDDMY AND PO} for 5V FGD MOS and 5V NGD MOS >= ^FGDPO_C_2
  EXT POLY 5V_FGD_PPOD_BULK_R < FGDPO_C_2 ABUT < 90 SINGULAR REGION
}


FGDPO.E.1 { @ Min extension of {PO AND FGDDMY} in channel width direction beyond {LV ACTIVE AND FGDDMY} for 5V FGD MOS and 5V NGD MOS >= ^FGDPO_E_1
  A = LV_ACT AND FGDDMY
  ENC A POLY < FGDPO_E_1 ABUT < 90 SINGULAR REGION
}

FGDPP.E.1 { @ Min extension of Flipped PP beyond {PO AND FGDDMY} for 5V FGD NMOS >= ^FGDPP_E_1
  ENC POLY 5V_FGD_NGATE_PP < FGDPP_E_1 ABUT < 90 SINGULAR REGION
}

FGDNP.E.1 { @ Min extension of Source/Drain NP beyond {PO AND FGDDMY} for 5V FGD MOS and 5V NGD NMOS >= ^FGDNP_E_1
  ENC POLY 5V_FGD_NGATE_NP < FGDNP_E_1 ABUT < 90 SINGULAR REGION
}


FGDNP.E.2 { @ Min extension of NP beyond {PO AND FGDDMY} for 5V FGD MOS and 5V NGD NMOS >= ^FGDNP_E_2
  ENC POLY 5V_NGD_NGATE_NP < FGDNP_E_2 ABUT < 90 SINGULAR REGION
}


FGDCO.R.1 { @ Min num of CO on {FGDDMY AND PO} >= ^FGDCO_R_1
  A = POLY AND FGDDMY
  A NOT INTERACT CO >= FGDCO_R_1
}

FGDOD2.E.1 { @ Min extension of {OD2 AND FGDDMY} beyond P+ bulk ring for 5V FGD MOS and 5V NGD MOS >= ^FGDOD2_E_1
  ENC 5V_FGD_PPOD_BULK_R OD2 < FGDOD2_E_1 ABUT < 90 SINGULAR REGION
}


//FGDDMY.R.1 is uncheckable




//================SBD rules Check================================



PPOD_SBD_H = (HOLES (((PPOD AND PWEL) AND RFDUMMY) NOT DNW) INNER) ENCLOSE SBDOD

SBD.W.1_SBD.W.1.1 { @ Minimum width of an OD region to define the width of the
          @ P+ active OD region of the SBD. >=1.0um <= 16.0um
    LENGTH PPOD_SBD_W > 0 < 1
    PATH LENGTH PPOD_SBD_W > 16 < 999
}
SBD.W.2_SBD.W.2.1 { @ Minimum length of an OD region to define the length of the
          @ P+ active OD region of the SBD. >=1.0um <=4.0um
    LENGTH PPOD_SBD_L > 0 < 1
    PATH LENGTH PPOD_SBD_L > 4 < 999 
}
SBD.W.3 { @ Minimum and Maximum length of an OD region to define
          @ the length of the NP OD region of the SBD.==0.42um
    NOT RECTANGLE NPOD_SBD	      
    INT NPOD_SBD < 0.42 ABUT <90 SINGULAR REGION
    SIZE NPOD_SBD BY 0.42/2 UNDEROVER
}
SBD.W.4 { @ The width of NP OD region of the SBD must be equal to P+
          @ active OD region of the SBD.
    NPOD_SBD_W NOT COIN OUTSIDE EDGE PPOD_SBD_G	      
    PPOD_SBD_W NOT COIN OUTSIDE EDGE NPOD_SBD_G        
}
SBD.S.1 { @ Space between P+ active OD region and NP OD region of the SBD ==0.48um
    EXT PPOD_SBD NPOD_SBD < 0.48 ABUT < 90 SINGULAR REGION
    PPOD_SBD INTERACT NPOD
   
    PPOD_SBD NOT TOUCH PPOD_SBD_G == 2
    
    A = PPOD_SBD TOUCH PPOD_SBD_G == 2
    B = A TOUCH OUTSIDE EDGE PPOD_SBD_G 
    C = INT B < 0.48 ABUT == 90 INTERSECTING ONLY REGION 
    PPOD_SBD INTERACT C 
}
SBD.E.1 { @ Minimum and maximum extension from NW edge to an OD
          @ region used for the SBD. ==0.80um
    X = PPOD_SBD OR NPOD_SBD
    Y = SIZE X BY 0.8
    Y XOR NW_SBD
}
SBD.E.2 { @ Minimum and maximum extension of a PP region beyond
          @ an enclosed P+ active OD region of the SBD.==0.22um
    X = SIZE PPOD_SBD BY 0.22
    X XOR PP_SBD_ALL
}
SBD.O.1 { @ Minimum and maximum overlap from a PP edge to a P+
          @ active OD region of the SBD.==0.22um
    X = SIZE PPOD_SBD BY -0.22
    X XOR PP_SBD_HOLE
}

SBD.E.3 { @ Maximum and Minimum extension of SBDDMY beyond NW==0.00um
    SBDDMY XOR NW_SBD
}

//SBD.R.1 is checked by SBD.S.1 

SBD.R.2 { @ Maximum Finger Number of the P+ active OD region of the SBD should be <=16um
    X = SBDDMY INTERACT PPOD_SBD < 17
    Y = SBDDMY NOT X 
    PPOD_SBD INTERACT Y
}
SBD.R.3 { @ The each NW of SBD should be surrounded by the P+ Guard Ring (P+ pickup ring).
    NW_SBD NOT PPOD_SBD_H 
    PPOD_SBD_H INTERACT SBDOD_ALL >1

    PPOD_SBD_H INTERACT NW_SBD > 1
}

SBD.R.4 { @ Use RFDUMMY to fully cover SBD and P+ Guard Ring for LVS to recognize RF Device.
          @// for P+ guard Ring part is checked by SBD.R.3
    SBDDMY NOT RFDUMMY
    NW_SBD NOT RFDUMMY
}
SBD.R.5 { @ PP for SBD must be a rectangle ring. PP rectangle ring must surround OD. Other shape is not allowed.
    NOT RECTANGLE PP_SBD_HOLE	
    NOT RECTANGLE PP_SBD_ALL
}
//SBD.R.7R don't need check. 

SBD.E.4 { @ Maximum and Minimum extension of SBDDMY beyond OD2 ==0.00um
    SBDDMY XOR (OD2 INTERACT SBDDMY)
}
#IFDEF Recommend
SBD.R.8R { @ Recommended for the SPICE simulation accuracy:
           @ Only one muti-finger SBD device(N>1) is allowed in one SBDDMY
 SBDDMY INTERACT SBDOD_ALL >1
}
#ENDIF

//=== BJT ===
// PNP (P+/NW/PSUB)
PNP_E = (((PPOD AND NWEL) AND BJTDUMMY) AND OD2) INTERACT RPO
PNP_RPO = RPO INTERACT PNP_E
PNP_NW = NWEL ENCLOSE PNP_E
PNP_C = ((PPOD NOT NWEL) AND BJTDUMMY) INTERACT OD2
PNP_C_OR_H = PNP_C OR (HOLES PNP_C INNER)
// PNP (P+/NW/PEPI)
PNP_18_E = (((PPOD AND NWEL) AND BJTDUMMY) NOT INTERACT  OD2) INTERACT RPO
PNP_18_RPO = RPO INTERACT PNP_18_E
PNP_18_NW = NWEL ENCLOSE PNP_18_E
PNP_18_C = (((PPOD NOT NWEL) NOT HVDMY) AND BJTDUMMY) NOT INTERACT OD2
PNP_18_C_OR_H = (PNP_18_C OR (HOLES PNP_18_C INNER)) INTERACT RPO
// PNP (5V BJT) (poly boundary)
PNP_PB_E = (((PPOD AND NWEL) AND BJTDUMMY) AND OD2) INTERACT POLY
PNP_PB_NW = NWEL INTERACT PNP_PB_E
PNP_PB_PO = POLY INTERACT PNP_PB_E
PNP_PB_OD = OD INTERACT PNP_PB_E
PNP_PB_PP = PP INTERACT PNP_PB_E
PNP_PB_C = ((PPOD NOT NWEL) AND BJTDUMMY) INTERACT OD2
PNP_PB_C_OR_H = PNP_PB_C OR (HOLES PNP_PB_C INNER)

BJT.O.1 { @ Min.& Max.overlap of RPO and emitter OD for 5V PNP BJT == ^BJT_O_1
   A = RPO AND PNP_E    
   INT RPO PNP_E < BJT_O_1 SINGULAR ABUT < 90 REGION 
   SIZE A BY BJT_O_1/2 UNDEROVER
}

BJT.O.1_18 { @ Min.& Max.overlap of RPO and emitter OD for 1.8V PNP BJT == ^BJT_O_1
   A = RPO AND PNP_18_E    
   INT RPO PNP_18_E < BJT_O_1 SINGULAR ABUT < 90 REGION 
   SIZE A BY BJT_O_1/2 UNDEROVER
}

BJT.E.1 { @ Min.& Max. extension of RPO beyond Emitter OD fro 5V PNP BJT == ^BJT_E_1
   RPO_E0 = RPO INTERACT PNP_E
   RPO_EH = HOLES RPO_E0 INNER
   RPO_E = RPO_EH OR RPO_E0
   A = SIZE RPO_E BY -0.3
   A XOR PNP_E
}

BJT.E.1_18 { @ Min.& Max. extension of RPO beyond Emitter OD fro 1.8V PNP BJT == ^BJT_E_1
   RPO_18_E0 = RPO INTERACT PNP_18_E
   RPO_18_EH = HOLES RPO_18_E0 INNER
   RPO_18_E = RPO_18_EH OR RPO_18_E0
   A = SIZE RPO_18_E BY -0.3
   A XOR PNP_18_E
}


#IFDEF Recommend
BJT.R.2 {@ Emitter OD size ==2*2, 5*5,10*10
    A = NOT RECTANGLE PNP_E ==2 BY ==2 ORTHOGONAL ONLY 
    B = NOT RECTANGLE A ==5 BY ==5 ORTHOGONAL ONLY  
    NOT RECTANGLE B ==10 BY ==10 ORTHOGONAL ONLY

    A1 = NOT RECTANGLE PNP_18_E ==2 BY ==2 ORTHOGONAL ONLY 
    B1 = NOT RECTANGLE A1 ==5 BY ==5 ORTHOGONAL ONLY  
    NOT RECTANGLE B1 ==10 BY ==10 ORTHOGONAL ONLY
}
BJT.E.2 {@ NW enclose of emitter OD for PNP == ^BJT_E_2
   A = SIZE PNP_E BY BJT_E_2
   A XOR PNP_NW 

   A1 = SIZE PNP_18_E BY BJT_E_2
   A1 XOR PNP_18_NW 
}
#ENDIF

BJT.E.4 { @ Min. extension of OD2 beyond the Collector OD for 5V PNP BJT >= ^BJT_E_4
	PNP_C_OR_H NOT OD2
	PNP_PB_C_OR_H NOT OD2
}
BJT.E.5 { @ Min. extension of BJTDMY beyond the Collector OD for 5V PNP BJT >= ^BJT_E_5
	ENC PNP_C BJTDUMMY < BJT_E_5 SINGULAR ABUT < 90 REGION 
	ENC PNP_PB_C BJTDUMMY < BJT_E_5 SINGULAR ABUT < 90 REGION
}

BJT.E.5_18 { @ Min. extension of BJTDMY beyond the Collector OD for 1.8V PNP BJT >= ^BJT_E_5
	ENC PNP_18_C BJTDUMMY < BJT_E_5 SINGULAR ABUT < 90 REGION 
}

BJT.E.6 { @ Min and max extension of PP beyond PO hole for PNP (5V BJT) (poly boundary) == ^BJT_E_6
  INT PNP_PB_PP PNP_PB_PO < BJT_E_6 SINGULAR ABUT < 90 REGION
  A = PNP_PB_PP AND PNP_PB_PO
  SIZE A BY BJT_E_6/2 UNDEROVER
}

BJT.E.7 { @ Min and max extension of OD beyond PO for PNP (5V BJT) (poly boundary) == ^BJT_E_7
  A = (HOLES PNP_PB_PO) OR PNP_PB_PO 
  B = SIZE A BY BJT_E_7
  B XOR PNP_PB_OD
}

BJT.C.3 { @ Min and max clearance between NP and PP on PO for PNP (5V BJT) (poly boundary) == ^BJT_C_3
  A = NP INTERACT PNP_PB_PO
  B = HOLES A 
  C = PP INTERACT PNP_PB_PO
  B XOR C
}

BJT.C.4 { @ Min and max clearance between Base NW and collect P+ OD for 1.8/5V PNP BJT == ^BJT_C_4
  A = SIZE (PNP_NW OR PNP_PB_NW) BY BJT_C_4
  B = HOLES PNP_C INNER
  A XOR B

  A1 = SIZE PNP_18_NW BY BJT_C_4
  B1 = (HOLES PNP_18_C INNER) INTERACT RPO
  A1 XOR B1
}

#IFDEF Recommend
BJT.E.8 { @ Min and max extension of NW beyond {OD INTERACT PO} for PNP (5V BJT) (poly boundary) (exclude corner to corner) == ^BJT_E_8
  A = SIZE PNP_PB_OD BY BJT_E_8
  PNP_PB_NW XOR A
}
#ENDIF

BJT.O.6 { @ Min and max overlap NP and PO for PNP (5V BJT) (poly boundary) == ^BJT_O_6
  INT NP PNP_PB_PO < BJT_O_6 SINGULAR ABUT < 90 REGION
  A = NP AND PNP_PB_PO
  SIZE A BY BJT_O_6/2 UNDEROVER
}

#IFDEF Recommend
BJT.R.3 { @ Min and max PO hole area for PNP (5V BJT) (poly boundary) == 2x2 5x5 10x10
  A = HOLES PNP_PB_PO
  B = NOT RECTANGLE A ==2 BY ==2 ORTHOGONAL ONLY 
  C = NOT RECTANGLE B ==5 BY ==5 ORTHOGONAL ONLY  
  NOT RECTANGLE C ==10 BY ==10 ORTHOGONAL ONLY
}
#ENDIF

PPOD_BULK_R_NCH5_LVT_DD = (PPOD AND OD2) AND NDD
LVT_N_PLUS_ACTIVE = (NPOD NOT NWEL) NOT HVDMY

NPOD_BULK_R_PCH5_LVT_DD = (NPOD AND OD2) AND PDD
LVT_P_PLUS_ACTIVE = (PPOD AND NWEL) NOT HVDMY

LVTOD.W.1{ @ min width of (LV N+ ACTIVE AND (OD2 AND NDD)) in channel width direction of 5V LV NMOS >= ^LVTOD_W_1
    A = LVT_N_PLUS_ACTIVE AND (OD2 AND NDD)
    B = GATE_L TOUCH EDGE A
    INT B < LVTOD_W_1 ABUT < 90 REGION
}

LVTOD.W.2{ @ min width of Bulk ring for 5V LVT NMOS and 5V LVT PMOS >= ^LVTOD_W_2
	INT PPOD_BULK_R_NCH5_LVT_DD < LVTOD_W_2
	INT NPOD_BULK_R_PCH5_LVT_DD < LVTOD_W_2
}

LVTOD.W.4{ @ min width of LV P+ ACTIVE AND (OD2 AND PDD) in channel width direction of 5V LVT PMOS >= ^LVTOD_W_4
    A = LVT_P_PLUS_ACTIVE AND (OD2 AND PDD)
    B = GATE_L TOUCH EDGE A
    INT B < LVTOD_W_4 ABUT < 90 REGION
}

LVTOD.S.1{ @ min space between P+ bulk ring to (LV N+ ACTIVE AND (OD2 AND NDD)) for 5V LVT NMOS >= ^ LVTOD_S_1
    A = LVT_N_PLUS_ACTIVE AND (OD2 AND NDD)
	EXT PPOD_BULK_R_NCH5_LVT_DD A < LVTOD_S_1
}

LVTOD.S.2{ @ min space between N+ bulk ring to (LV P+ ACTIVE AND ((OD2 AND NW) AND PDD)) for 5V LVT PMOS >= ^ LVTOD_S_2
    A = LVT_P_PLUS_ACTIVE AND ((OD2 AND NWEL) AND PDD)
	B = A NOT INTERACT NPOD_BULK_R_PCH5_LVT_DD
	EXT NPOD_BULK_R_PCH5_LVT_DD B < LVTOD_S_2 ABUT < 90 SINGULAR REGION
}

LVTPO.W.1{ @ min width of (PO AND (OD2 AND NDD)) for the channel length of 5V LVT NMOS >= ^ LVTPO_W_1
	A = POLY AND (OD2 AND NDD)
	B = A TOUCH EDGE GATE_W
	INT B < LVTPO_W_1 ABUT < 90 REGION
}

LVTPO.W.2{ @ min width of (PO AND ((OD2 AND NW) AND NDD)) for the channel length of 5V LVT PMOS >= ^ LVTPO_W_2
	A = POLY AND ((OD2 AND NWEL) AND PDD)
	B = A TOUCH EDGE GATE_W
	INT B < LVTPO_W_2 ABUT < 90 REGION
}

LVTPO.E.1 { @ min extension of (PO AND (OD2 AND NDD)) in channel width direction beyond (LV N+ ACTIVE AND (OD2 AND NDD)) for 5V LVT NMOS >= ^ LVTPO_E_1
	A = POLY AND (OD2 AND NDD)
	B = LVT_N_PLUS_ACTIVE AND (OD2 AND NDD)
	ENC B A < LVTPO_E_1 ABUT < 90 SINGULAR REGION
}

LVTPO.E.2 { @ min extension of (PO AND ((OD2 AND NW) AND PDD)) in channel width direction beyond (LV P+ ACTIVE AND ((OD2 AND NW) AND PDD)) for 5V LVT PMOS >= ^ LVTPO_E_2
	A = POLY AND ((OD2 AND NWEL) AND PDD)
	B = LVT_P_PLUS_ACTIVE AND ((OD2 AND NWEL) AND PDD)
	ENC B A < LVTPO_E_2 ABUT < 90 SINGULAR REGION
}

LVTNP.E.1 { @ min extension of NP beyond (PO AND (OD2 AND NDD)) in channel width direction for 5V LVT NMOS >=^ LVTNP_E_1
	A = POLY AND (OD2 AND NDD)
	B = A NOT TOUCH EDGE (A INSIDE EDGE OD)
	ENC B NP < LVTNP_E_1 ABUT < 90 REGION
}

LVTPP.E.1 { @ min extension of PP beyond (PO AND ((OD2 AND NW) AND PDD)) in channel width direction for 5V LVT PMOS >=^ LVTPP_E_1
	A = POLY AND ((OD2 AND NWEL) AND PDD)
	B = A NOT TOUCH EDGE (A INSIDE EDGE OD)
	ENC B PP < LVTPP_E_1 ABUT < 90 REGION
}

LVTOD2.E.1{ @ min extension of (OD2 AND NDD) beyond P+ Bulk ring for 5V LVT NMOS >=^ LVTOD2_E_1
	A = OD2 AND NDD 
	ENC PPOD_BULK_R_NCH5_LVT_DD A < LVTOD2_E_1
}

LVTOD2.E.2{ @ min extension of OD2 beyond NDD for 5V LVT NMOS >= ^LVTOD2_E_2
    A = OD2 INTERACT PPOD_BULK_R_NCH5_LVT_DD
    B = NDD INTERACT PPOD_BULK_R_NCH5_LVT_DD
    B NOT A 
}

LVTOD2.E.3{ @ min extension of ((OD2 AND NW) AND PDD) beyond N+ Bulk ring for 5V LVT PMOS >=^ LVTOD2_E_3
	A = (OD2 AND NWEL) AND PDD 
	ENC NPOD_BULK_R_PCH5_LVT_DD A < LVTOD2_E_3
}

LVTOD2.E.4{ @ min extension of OD2 beyond PDD for 5V LVT PMOS >= ^LVTOD2_E_4
    A = OD2 INTERACT NPOD_BULK_R_PCH5_LVT_DD
    B = PDD INTERACT NPOD_BULK_R_PCH5_LVT_DD
    B NOT A 
}

LVTNDD.E.1{ @ min extension of NDD beyond P+ bulk ring for 5V LVT NMOS >= ^LVTNDD_E_1
    ENC PPOD_BULK_R_NCH5_LVT_DD NDD < LVTNDD_E_1 ABUT < 90 SINGULAR REGION 
}

LVTPDD.E.1{ @ min extension of PDD beyond N+ bulk ring for 5V LVT PMOS >= ^LVTPDD_E_1
    ENC NPOD_BULK_R_PCH5_LVT_DD PDD < LVTPDD_E_1 ABUT < 90 SINGULAR REGION 
}

LVTCO.R.1 { @ min number of CO on(PO AND (OD2 AND NDD)) >=^ LVTCO_R_1
	A = POLY AND (OD2 AND NDD)
	A ENCLOSE CO < LVTCO_R_1
}

LVTCO.R.2 { @ min number of CO on(PO AND ((OD2 AND NW) AND PDD)) >=^ LVTCO_R_2
	A = POLY AND ((OD2 AND NWEL) AND PDD)
	A ENCLOSE CO < LVTCO_R_2
}

LVTNW.E.1 { @ min extension of NW beyond N+ bulk ring for 5V LVT PMOS >=^LVTNW_E_1
    ENC NPOD_BULK_R_PCH5_LVT_DD NWEL < LVTNW_E_1 
}

LVT.R.1{ @ 5V LVT NMOS or 5V LVT PMOS is not allowed to share its own bulk ring with other devices
    A = OTHER_DEVICE NOT (((POLY AND OD) AND OD2) AND PDD)
	B = OTHER_DEVICE NOT (((POLY AND OD) AND OD2) AND NDD)
    (HOLES NPOD_BULK_R_PCH5_LVT_DD INNER) INTERACT  A
    (HOLES PPOD_BULK_R_NCH5_LVT_DD INNER) INTERACT  B
}

LVT.R.2 { @ NDD must be fully inside OD2 for 5V LVT NMOS
    A = OD2 INTERACT PPOD_BULK_R_NCH5_LVT_DD
    B = NDD INTERACT PPOD_BULK_R_NCH5_LVT_DD
    B NOT A
}

LVT.R.3 { @ PDD inside (OD2 AND NDD) is not allowed
    PDD INSIDE (OD2 AND NDD)
}

LVT.R.4 { @ PDD must be fully inside (OD2 AND NW) for 5V LVT PMOS
    A = (OD2 AND NWEL) INTERACT NPOD_BULK_R_PCH5_LVT_DD
    B = PDD INTERACT NPOD_BULK_R_PCH5_LVT_DD
    B NOT A
}

LVT.R.5 { @ NDD inside (OD2 AND PDD) is not allowed
    NDD INSIDE (OD2 AND PDD)
}







HVBJT.W.1_PNDDSHPNBL { @ min and max width of (OD INTERACT PO) for PNP ==^HVBJT_W_1_PNDDSHPNBL
  A = (OD INTERACT POLY) INTERACT BJT_PNDDSHPNBL_E
  INT A < HVBJT_W_1_PNDDSHPNBL
  SIZE A UNDEROVER BY HVBJT_W_1_PNDDSHPNBL/2
}
HVBJT.W.2_PNDDSHPNBL { @ min width of Base OD for PNP >=^ HVBJT_W_2_PNDDSHPNBL
  INT BJT_PNDDSHPNBL_B < HVBJT_W_2_PNDDSHPNBL ABUT < 90 SINGULAR REGION
}

HVBJT.W.3A { @ min and max width of Collector OD for HV BJTs == ^HVBJT_W_3A
  INT (HVBJT_C NOT BJT_PNDDSHPNBL_C)  < HVBJT_W_3A
  SIZE (HVBJT_C NOT BJT_PNDDSHPNBL_C) UNDEROVER BY HVBJT_W_3A/2
}

HVBJT.W.3B { @ min and max width of Collector OD for HV BJTs == ^HVBJT_W_3B
  INT BJT_PNDDSHPNBL_C  < HVBJT_W_3B
  SIZE BJT_PNDDSHPNBL_C UNDEROVER BY HVBJT_W_3B/2
}

HVBJT.W.4_NPDDSHNNBL_PO_BOUNDARY { @ min and max width of P+ iso ring for HVBJT == ^HVBJT_W_4_NPDDSHNNBL_PO_BOUNDARY
   INT PPOD_ISO_R_BJT < HVBJT_W_4_NPDDSHNNBL_PO_BOUNDARY ABUT < 90 SINGULAR REGION
   SIZE (PPOD_ISO_R_BJT_NPDDSHNNBL_PO_BOUNDARY AND HVBJT_DMY) BY HVBJT_W_4_NPDDSHNNBL_PO_BOUNDARY/2 UNDEROVER
}
HVBJT.W.4_NPWSHNNBL_PO_BOUNDARY { @ min and max width of P+ iso ring for HVBJT == ^HVBJT_W_4_NPWSHNNBL_PO_BOUNDARY
   INT PPOD_ISO_R_BJT < HVBJT_W_4_NPWSHNNBL_PO_BOUNDARY ABUT < 90 SINGULAR REGION
   SIZE (PPOD_ISO_R_BJT_NPWSHNNBL_PO_BOUNDARY AND HVBJT_DMY) BY HVBJT_W_4_NPWSHNNBL_PO_BOUNDARY/2 UNDEROVER
}
HVBJT.W.4_PNDDSHPNBL { @ min and max width of P+ iso ring for HVBJT == ^HVBJT_W_4_PNDDSHPNBL
   INT PPOD_ISO_R_BJT < HVBJT_W_4_PNDDSHPNBL ABUT < 90 SINGULAR REGION
   SIZE (PPOD_ISO_R_BJT_PNDDSHPNBL AND HVBJT_DMY) BY HVBJT_W_4_PNDDSHPNBL/2 UNDEROVER
}
HVBJT.W.4_NPDDSHNNBL_BGR8 { @ min and max width of P+ iso ring for HVBJT == ^HVBJT_W_4_NPDDSHNNBL_BGR8
   INT PPOD_ISO_R_BJT < HVBJT_W_4_NPDDSHNNBL_BGR8 ABUT < 90 SINGULAR REGION
   SIZE (PPOD_ISO_R_BJT_NPDDSHNNBL_BGR8 AND HVBJT_DMY) BY HVBJT_W_4_NPDDSHNNBL_BGR8/2 UNDEROVER
}
HVBJT.W.4_NPWSHNNBL_BGR8 { @ min and max width of P+ iso ring for HVBJT == ^HVBJT_W_4_NPWSHNNBL_BGR8
   INT PPOD_ISO_R_BJT < HVBJT_W_4_NPWSHNNBL_BGR8 ABUT < 90 SINGULAR REGION
   SIZE (PPOD_ISO_R_BJT_NPWSHNNBL_BGR8 AND HVBJT_DMY) BY HVBJT_W_4_NPWSHNNBL_BGR8/2 UNDEROVER
}

HVBJT.W.5 { @ min and max width of EMITTER size == 2*2 5*5 10*10
	A = NOT RECTANGLE ((HVBJT_E NOT BJT_PNDDSHPNBL_E) NOT POLY) == 2 BY == 2 ORTHOGONAL ONLY
	B = NOT RECTANGLE A == 5 BY == 5 ORTHOGONAL ONLY
	NOT RECTANGLE B == 10 BY == 10 ORTHOGONAL ONLY
}

HVBJT.W.6 { @ min width of Base OD >= ^HVBJT_W_6
    INT ((HVBJT_B NOT BJT_PNDDSHPNBL_B) NOT POLY) < HVBJT_W_6 ABUT < 90 SINGULAR REGION
}

HVBJT.W.7_PNDDSHPNBL { @ Min and Max width of {((OD AND NDD) NOT PO) NOT NP} (Emitter length) for PNP BJT(Wtihin poly inside edge) == ^HVBJT_W_7_PNDDSHPNBL
   A = ((OD AND (NDD INTERACT BJT_PNDDSHPNBL_E)) NOT POLY) NOT NP
   INT A < HVBJT_W_7_PNDDSHPNBL ABUT < 90 SINGULAR REGION
   SIZE A BY HVBJT_W_7_PNDDSHPNBL/2 UNDEROVER
}

HVBJT.W.8_PNDDSHPNBL { @ Min and Max width of {((OD AND NDD) NOT PO) NOT PP}(Base length) for PNP BJT(Wtihin poly inside edge) == ^HVBJT_W_8_PNDDSHPNBL
   A = ((OD AND (NDD INTERACT BJT_PNDDSHPNBL_E)) NOT POLY) NOT PP
   INT A < HVBJT_W_8_PNDDSHPNBL ABUT < 90 SINGULAR REGION
   SIZE A BY HVBJT_W_8_PNDDSHPNBL/2 UNDEROVER
}

HVBJT.S.2_PNDDSHPNBL{ @ min and max space between Emitter OD and Collector OD for PNP BJT == ^HVBJT_S_2_PNDDSHPNBL
   A = SIZE (OD CUT BJT_PNDDSHPNBL_E) BY HVBJT_S_2_PNDDSHPNBL
   A XOR BJT_PNDDSHPNBL_C_H
}

HVBJT.S.3_NPDDSHNNBL_PO_BOUNDARY{ @ min and max space between Base OD and Collector OD == ^HVBJT_S_3_NPDDSHNNBL_PO_BOUNDARY
  A = BJT_NPDDSHNNBL_PO_BOUNDARY_B OR BJT_NPDDSHNNBL_PO_BOUNDARY_B_H
  B = SIZE A BY HVBJT_S_3_NPDDSHNNBL_PO_BOUNDARY
  B XOR BJT_NPDDSHNNBL_PO_BOUNDARY_C_H
}
HVBJT.S.3_NPWSHNNBL_PO_BOUNDARY{ @ min and max space between Base OD and Collector OD == ^HVBJT_S_3_NPWSHNNBL_PO_BOUNDARY
  A = BJT_NPWSHNNBL_PO_BOUNDARY_B OR BJT_NPWSHNNBL_PO_BOUNDARY_B_H
  B = SIZE A BY HVBJT_S_3_NPWSHNNBL_PO_BOUNDARY
  B XOR BJT_NPWSHNNBL_PO_BOUNDARY_C_H
}
HVBJT.S.3_PNDDSHPNBL { @ min and max space between Base OD and Collector OD == ^HVBJT_S_3_PNDDSHPNBL
  A = BJT_PNDDSHPNBL_C OR BJT_PNDDSHPNBL_C_H
  B = SIZE A BY HVBJT_S_3_PNDDSHPNBL
  B XOR BJT_PNDDSHPNBL_B_H
}
HVBJT.S.3_NPDDSHNNBL_BGR8{ @ min and max space between Base OD and Collector OD == ^HVBJT_S_3_NPDDSHNNBL_BGR8
  A = BJT_NPDDSHNNBL_BGR8_B OR BJT_NPDDSHNNBL_BGR8_B_H
  B = SIZE A BY HVBJT_S_3_NPDDSHNNBL_BGR8
  B XOR BJT_NPDDSHNNBL_BGR8_C_H
}
HVBJT.S.3_NPWSHNNBL_BGR8{ @ min and max space between Base OD and Collector OD == ^HVBJT_S_3_NPWSHNNBL_BGR8
  A = BJT_NPWSHNNBL_BGR8_B OR BJT_NPWSHNNBL_BGR8_B_H
  B = SIZE A BY HVBJT_S_3_NPWSHNNBL_BGR8
  B XOR BJT_NPWSHNNBL_BGR8_C_H
}

HVBJT.C.1_NPDDSHNNBL_PO_BOUNDARY { @ min and max clearance from Collector OD to SH_P extended Base OD == ^HVBJT_C_1_NPDDSHNNBL_PO_BOUNDARY
  A = SH_P INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_B
  B = A OR (HOLES A INNER)
  C = SIZE B BY HVBJT_C_1_NPDDSHNNBL_PO_BOUNDARY
  C XOR BJT_NPDDSHNNBL_PO_BOUNDARY_C_H
}
HVBJT.C.1_NPWSHNNBL_PO_BOUNDARY { @ min and max clearance from Collector OD to SH_P extended Base OD == ^HVBJT_C_1_NPWSHNNBL_PO_BOUNDARY
  A = SH_P INTERACT BJT_NPWSHNNBL_PO_BOUNDARY_B
  B = A OR (HOLES A INNER)
  C = SIZE B BY HVBJT_C_1_NPWSHNNBL_PO_BOUNDARY
  C XOR BJT_NPWSHNNBL_PO_BOUNDARY_C_H
}
HVBJT.C.1_NPDDSHNNBL_BGR8 { @ min and max clearance from Collector OD to SH_P extended Base OD == ^HVBJT_C_1_NPDDSHNNBL_BGR8
  A = SH_P INTERACT BJT_NPDDSHNNBL_BGR8_B
  B = A OR (HOLES A INNER)
  C = SIZE B BY HVBJT_C_1_NPDDSHNNBL_BGR8
  C XOR BJT_NPDDSHNNBL_BGR8_C_H
}
HVBJT.C.1_NPWSHNNBL_BGR8 { @ min and max clearance from Collector OD to SH_P extended Base OD == ^HVBJT_C_1_NPWSHNNBL_BGR8
  A = SH_P INTERACT BJT_NPWSHNNBL_BGR8_B
  B = A OR (HOLES A INNER)
  C = SIZE B BY HVBJT_C_1_NPWSHNNBL_BGR8
  C XOR BJT_NPWSHNNBL_BGR8_C_H
}
HVBJT_E_NPN = ((BJT_NPDDSHNNBL_PO_BOUNDARY_E OR BJT_NPWSHNNBL_PO_BOUNDARY_E) OR BJT_NPDDSHNNBL_BGR8_E) OR BJT_NPWSHNNBL_BGR8_E
HVBJT_E_PNP = BJT_PNDDPSUB_E OR BJT_PHVNWPSUB_GB_E
HVBJT.C.3:NPN { @ Min and Max clearance between NP and PP region under PO for HV Poly boundary == 0.0                   
    X = OD INTERACT HVBJT_E_NPN
    A = NP INTERACT X                                                                               
	B1 = PP INTERACT X                                                                                          
	B = HOLES B1                                                                                                        
	A XOR B                                                                                                             
}

HVBJT.C.3:PNP { @ Min and Max clearance between NP and PP region under PO for HV Poly boundary == 0.0                   
    X = OD INTERACT HVBJT_E_PNP
    A = PP INTERACT X                                                                               
	B1 = NP INTERACT X                                                                                          
	B = HOLES B1                                                                                                        
	A XOR B                                                                                                             
}

HVBJT.C.4_PNDDPSUB{ @ min and max clearance from Collector OD to NDD for PNP(P+/NDD/Psub)(GA) ==^HVBJT_C_4_PNDDPSUB
    A = NDD INTERACT BJT_PNDDPSUB_E
	B = SIZE A BY HVBJT_C_4_PNDDPSUB
	B XOR BJT_PNDDPSUB_C_H 
}

HVBJT.C.5_PHVNWPSUB_GB{ @ min and max clearance from Collector OD to HVNW for PNP(P+/HVNW/Psub)(GB) ==^HVBJT_C_5_PHVNWPSUB_GB
    A = HVNW INTERACT BJT_PHVNWPSUB_GB_E
	B = SIZE A BY HVBJT_C_5_PHVNWPSUB_GB
	B XOR BJT_PHVNWPSUB_GB_C_H 
}

HVBJT.C.6_PNDDSHPNBL { @ Min and Max clearance between NP and PP region under PO for PNP == 0.0                   
    X = OD INTERACT BJT_PNDDSHPNBL_E 
    A = NP INTERACT X                                                                               
	B1 = PP INTERACT X                                                                                          
	B = HOLES B1                                                                                                        
	A XOR B                                                                                                             
}

HVBJT.C.7_PNDDSHPNBL{ @ min and max clearance between poly to OD edge except Poly overlay with Emitter OD and Base OD within NDD == ^ HVBJT_C_7_PNDDSHPNBL
    A = POLY INTERACT BJT_PNDDSHPNBL_E
	B = A NOT TOUCH EDGE (A INSIDE EDGE (BJT_PNDDSHPNBL_B_NDD OR BJT_PNDDSHPNBL_E))
	C = EXPAND EDGE B OUTSIDE BY HVBJT_C_7_PNDDSHPNBL
	C NOT TOUCH OD
}

HVBJT.C.8_NPDDSHNNBL_BGR8 {@ min and max clearance between the PSUB of {BJT1 OR BJT8} to P+ isolation-ring for 8:1 NPN == ^ HVBJT_C_8_NPDDSHNNBL_BGR8
    A = PSUB INTERACT BJT_NPDDSHNNBL_BGR8_E
	B = SIZE A BY HVBJT_C_8_NPDDSHNNBL_BGR8
    B XOR PPOD_ISO_H_BJT_NPDDSHNNBL_BGR8
}

HVBJT.C.9_NPWSHNNBL_BGR8 {@ min and max clearance between the PSUB of {BJT1 OR BJT8} to P+ isolation-ring for 8:1 NPN == ^ HVBJT_C_9_NPWSHNNBL_BGR8
    A = PSUB INTERACT BJT_NPWSHNNBL_BGR8_E
	B = SIZE A BY HVBJT_C_9_NPWSHNNBL_BGR8
    B XOR PPOD_ISO_H_BJT_NPWSHNNBL_BGR8
}

HVBJT.E.1_PNDDPSUB {@ min and max extension of NDD beyond the Emitter and Base OD for HV poly boundary BJT PNP(P+/NDD/Psub(GA)) == ^ HVBJT_E_1_PNDDPSUB 
    A = NDD INTERACT BJT_PNDDPSUB_E
	B = BJT_PNDDPSUB_B OR BJT_PNDDPSUB_B_H
	C = SIZE B BY HVBJT_E_1_PNDDPSUB
	C XOR A
}

HVBJT.E.3_NPDDSHNNBL_PO_BOUNDARY { @ min and max extension of SH_N beyond Collector OD for HV BJT == ^HVBJT_E_3_NPDDSHNNBL_PO_BOUNDARY
   A = HVSHN INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_C
   B = SIZE BJT_NPDDSHNNBL_PO_BOUNDARY_C BY HVBJT_E_3_NPDDSHNNBL_PO_BOUNDARY
   A XOR B
}
HVBJT.E.3_NPWSHNNBL_PO_BOUNDARY { @ min and max extension of SH_N beyond Collector OD for HV BJT == ^HVBJT_E_3_NPWSHNNBL_PO_BOUNDARY
   A = HVSHN INTERACT BJT_NPWSHNNBL_PO_BOUNDARY_C
   B = SIZE BJT_NPWSHNNBL_PO_BOUNDARY_C BY HVBJT_E_3_NPWSHNNBL_PO_BOUNDARY
   A XOR B
}
HVBJT.E.3_NPDDSHNNBL_BGR8 { @ min and max extension of SH_N beyond Collector OD for HV BJT == ^HVBJT_E_3_NPDDSHNNBL_BGR8
   A = HVSHN INTERACT BJT_NPDDSHNNBL_BGR8_C
   B = SIZE BJT_NPDDSHNNBL_BGR8_C BY HVBJT_E_3_NPDDSHNNBL_BGR8
   A XOR B
}
HVBJT.E.3_NPWSHNNBL_BGR8 { @ min and max extension of SH_N beyond Collector OD for HV BJT == ^HVBJT_E_3_NPWSHNNBL_BGR8
   A = HVSHN INTERACT BJT_NPWSHNNBL_BGR8_C
   B = SIZE BJT_NPWSHNNBL_BGR8_C BY HVBJT_E_3_NPWSHNNBL_BGR8
   A XOR B
}

HVBJT.E.4_PNDDSHPNBL {@ min and max extension of SH_N beyond Collector OD for PNP == ^ HVBJT_E_4_PNDDSHPNBL
    A = HVSHN INTERACT BJT_PNDDSHPNBL_B
	B = SIZE BJT_PNDDSHPNBL_B BY HVBJT_E_4_PNDDSHPNBL
	A XOR B
}
HVBJT.E.5_PHVNWPSUB_GB {@ min and max extension of HVNW beyond the Emitter and Base OD HvV poly boundary BJT PNP P+/HVNW/Psub(GB) == ^ HVBJT_E_5_PHVNWPSUB_GB
    A = HVNW INTERACT  BJT_PHVNWPSUB_GB_E
    B = BJT_PHVNWPSUB_GB_B OR BJT_PHVNWPSUB_GB_B_H
	C = SIZE B BY HVBJT_E_5_PHVNWPSUB_GB
	A XOR C
}

HVBJT.E.6 {@ min and max extension of poly to Emitter PP for HV poly boundary PNP BJT == ^HVBJT_E_6
    A = PP INTERACT  HVBJT_E_PNP
    B = SIZE A BY HVBJT_E_6
	C = POLY INTERACT HVBJT_E_PNP
	D = C OR (HOLES C INNER)
	B XOR D
}

HVBJT.E.7_PNDDPSUB{ @ min extension of HVDMY beyond Collector OD >=^HVBJT_E_7_PNDDPSUB
   A = HVDMY INTERACT BJT_PNDDPSUB_E
   ENC BJT_PNDDPSUB_C A < HVBJT_E_7_PNDDPSUB ABUT < 90 SINGULAR REGION
}
HVBJT.E.7_PHVNWPSUB_GB{ @ min extension of HVDMY beyond Collector OD >=^HVBJT_E_7_PHVNWPSUB_GB
   A = HVDMY INTERACT BJT_PHVNWPSUB_GB_E
   ENC BJT_PHVNWPSUB_GB_C A < HVBJT_E_7_PHVNWPSUB_GB ABUT < 90 SINGULAR REGION
}

HVBJT.E.8_NPDDSHNNBL_PO_BOUNDARY { @ min extension of HVDMY beyond P+ isolation-ring == ^ HVBJT_E_8_NPDDSHNNBL_PO_BOUNDARY
   ENC PPOD_ISO_R_BJT_NPDDSHNNBL_PO_BOUNDARY HVDMY < HVBJT_E_8_NPDDSHNNBL_PO_BOUNDARY ABUT < 90 SINGULAR REGION
}
HVBJT.E.8_NPWSHNNBL_PO_BOUNDARY { @ min extension of HVDMY beyond P+ isolation-ring == ^ HVBJT_E_8_NPWSHNNBL_PO_BOUNDARY
   ENC PPOD_ISO_R_BJT_NPWSHNNBL_PO_BOUNDARY HVDMY < HVBJT_E_8_NPWSHNNBL_PO_BOUNDARY ABUT < 90 SINGULAR REGION
}
HVBJT.E.8_PNDDSHPNBL { @ min extension of HVDMY beyond P+ isolation-ring == ^ HVBJT_E_8_PNDDSHPNBL
   ENC PPOD_ISO_R_BJT_PNDDSHPNBL HVDMY < HVBJT_E_8_PNDDSHPNBL ABUT < 90 SINGULAR REGION
}
HVBJT.E.8_NPDDSHNNBL_BGR8 { @ min extension of HVDMY beyond P+ isolation-ring == ^ HVBJT_E_8_NPDDSHNNBL_BGR8
   ENC PPOD_ISO_R_BJT_NPDDSHNNBL_BGR8 HVDMY < HVBJT_E_8_NPDDSHNNBL_BGR8 ABUT < 90 SINGULAR REGION
}
HVBJT.E.8_NPWSHNNBL_BGR8 { @ min extension of HVDMY beyond P+ isolation-ring == ^ HVBJT_E_8_NPWSHNNBL_BGR8
   ENC PPOD_ISO_R_BJT_NPWSHNNBL_BGR8 HVDMY < HVBJT_E_8_NPWSHNNBL_BGR8 ABUT < 90 SINGULAR REGION
}

HVBJT.E.9_PNDDPSUB{ @ min extension of HVGA beyond Collector OD >=^HVBJT_E_9_PNDDPSUB
   ENC BJT_PNDDPSUB_C HVGA < HVBJT_E_9_PNDDPSUB
}

HVBJT.E.10_PHVNWPSUB_GB{ @ min extension of HVGB beyond Collector OD >=^HVBJT_E_10_PHVNWPSUB_GB
   ENC BJT_PHVNWPSUB_GB_C HVGB < HVBJT_E_10_PHVNWPSUB_GB
}

HVBJT.E.13_PNDDSHPNBL { @ min and max extension of SH_P beyond Collector OD PNP == ^ HVBJT_E_13_PNDDSHPNBL
    A = SH_P INTERACT BJT_PNDDSHPNBL_C
	B = SIZE BJT_PNDDSHPNBL_C BY HVBJT_E_13_PNDDSHPNBL
	A XOR B
}

HVBJT.E.16_PNDDSHPNBL { @ min and max extension of NDD beyond Emitter OD for PNP == ^ HVBJT_E_16_PNDDSHPNBL
    A = NDD INTERACT BJT_PNDDSHPNBL_E
    B = SIZE (OD CUT BJT_PNDDSHPNBL_E) BY HVBJT_E_16_PNDDSHPNBL
	A XOR B
}

HVBJT.E.18 { @ min and max extension of SH_N beyond BJTSNDMY == 0
    A = HVSHN OR (HOLES HVSHN INNER)
	BJTSNDMY NOT TOUCH EDGE A 
}

HVBJT.E.21_NPDDSHNNBL_PO_BOUNDARY { @ min and max extension of poly beyond Emitter NP for HV poly boundary NPN BJT == ^ HVBJT_E_21_NPDDSHNNBL_PO_BOUNDARY
  A = POLY INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_E
  B = A OR (HOLES A INNER)
  C = NP INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_E 
  D = SIZE C BY HVBJT_E_21_NPDDSHNNBL_PO_BOUNDARY
  B XOR D
}
HVBJT.E.21_NPWSHNNBL_PO_BOUNDARY { @ min and max extension of poly beyond Emitter NP for HV poly boundary NPN BJT == ^ HVBJT_E_21_NPWSHNNBL_PO_BOUNDARY
  A = POLY INTERACT BJT_NPWSHNNBL_PO_BOUNDARY_E
  B = A OR (HOLES A INNER)
  C = NP INTERACT BJT_NPWSHNNBL_PO_BOUNDARY_E 
  D = SIZE C BY HVBJT_E_21_NPWSHNNBL_PO_BOUNDARY
  B XOR D
}
HVBJT.E.21_NPDDSHNNBL_BGR8 { @ min and max extension of poly beyond Emitter NP for HV poly boundary NPN BJT == ^ HVBJT_E_21_NPDDSHNNBL_BGR8
  A = POLY INTERACT BJT_NPDDSHNNBL_BGR8_E
  B = A OR (HOLES A INNER)
  C = NP INTERACT BJT_NPDDSHNNBL_BGR8_E 
  D = SIZE C BY HVBJT_E_21_NPDDSHNNBL_BGR8
  B XOR D
}
HVBJT.E.21_NPWSHNNBL_BGR8 { @ min and max extension of poly beyond Emitter NP for HV poly boundary NPN BJT == ^ HVBJT_E_21_NPWSHNNBL_BGR8
  A = POLY INTERACT BJT_NPWSHNNBL_BGR8_E
  B = A OR (HOLES A INNER)
  C = NP INTERACT BJT_NPWSHNNBL_BGR8_E 
  D = SIZE C BY HVBJT_E_21_NPWSHNNBL_BGR8
  B XOR D
}

HVBJT.E.23_NPDDSHNNBL_PO_BOUNDARY{ @ min and max extension of SH_P beyond the Emitter and Base OD for HV poly boundary NPN BJT == ^ HVBJT_E_23_NPDDSHNNBL_PO_BOUNDARY
  A = BJT_NPDDSHNNBL_PO_BOUNDARY_B OR BJT_NPDDSHNNBL_PO_BOUNDARY_B_H
  B = SIZE A BY HVBJT_E_23_NPDDSHNNBL_PO_BOUNDARY
  C = SH_P INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_B
  D = C OR (HOLES C INNER)
  B XOR D
}
HVBJT.E.23_NPWSHNNBL_PO_BOUNDARY{ @ min and max extension of SH_P beyond the Emitter and Base OD for HV poly boundary NPN BJT == ^ HVBJT_E_23_NPWSHNNBL_PO_BOUNDARY
  A = BJT_NPWSHNNBL_PO_BOUNDARY_B OR BJT_NPWSHNNBL_PO_BOUNDARY_B_H
  B = SIZE A BY HVBJT_E_23_NPWSHNNBL_PO_BOUNDARY
  C = SH_P INTERACT BJT_NPWSHNNBL_PO_BOUNDARY_B
  D = C OR (HOLES C INNER)
  B XOR D
}
HVBJT.E.23_NPDDSHNNBL_BGR8{ @ min and max extension of SH_P beyond the Emitter and Base OD for HV poly boundary NPN BJT == ^ HVBJT_E_23_NPDDSHNNBL_BGR8
  A = BJT_NPDDSHNNBL_BGR8_B OR BJT_NPDDSHNNBL_BGR8_B_H
  B = SIZE A BY HVBJT_E_23_NPDDSHNNBL_BGR8
  C = SH_P INTERACT BJT_NPDDSHNNBL_BGR8_B
  D = C OR (HOLES C INNER)
  B XOR D
}
HVBJT.E.23_NPWSHNNBL_BGR8{ @ min and max extension of SH_P beyond the Emitter and Base OD for HV poly boundary NPN BJT == ^ HVBJT_E_23_NPWSHNNBL_BGR8
  A = BJT_NPWSHNNBL_BGR8_B OR BJT_NPWSHNNBL_BGR8_B_H
  B = SIZE A BY HVBJT_E_23_NPWSHNNBL_BGR8
  C = SH_P INTERACT BJT_NPWSHNNBL_BGR8_B
  D = C OR (HOLES C INNER)
  B XOR D
}

HVBJT.O.1 { @ min and max overlap of Poly and inside PP region(Emitter area) for HV poly boundary PNP BJT == ^HVBJT_O_1
  A = POLY INTERACT HVBJT_E_PNP
  B = PP INTERACT HVBJT_E_PNP
  INT A B < HVBJT_O_1 ABUT < 90 SINGULAR REGION
  C = A AND B
  SIZE C BY HVBJT_O_1/2 UNDEROVER
}

HVBJT.O.2_NPDDSHNNBL_PO_BOUNDARY { @ min and max overlap of Poly and inside NP region(Emitter area) for HV poly boundary NPN BJT == ^HVBJT_O_2_NPDDSHNNBL_PO_BOUNDARY
  A = POLY AND BJT_NPDDSHNNBL_PO_BOUNDARY_E
  INT A < HVBJT_O_2_NPDDSHNNBL_PO_BOUNDARY ABUT < 90 SINGULAR REGION
  SIZE A BY HVBJT_O_2_NPDDSHNNBL_PO_BOUNDARY/2 UNDEROVER
}
HVBJT.O.2_NPWSHNNBL_PO_BOUNDARY { @ min and max overlap of Poly and inside NP region(Emitter area) for HV poly boundary NPN BJT == ^HVBJT_O_2_NPWSHNNBL_PO_BOUNDARY
  A = POLY AND BJT_NPWSHNNBL_PO_BOUNDARY_E
  INT A < HVBJT_O_2_NPWSHNNBL_PO_BOUNDARY ABUT < 90 SINGULAR REGION
  SIZE A BY HVBJT_O_2_NPWSHNNBL_PO_BOUNDARY/2 UNDEROVER
}
HVBJT.O.2_NPDDSHNNBL_BGR8 { @ min and max overlap of Poly and inside NP region(Emitter area) for HV poly boundary NPN BJT == ^HVBJT_O_2_NPDDSHNNBL_BGR8
  A = POLY AND BJT_NPDDSHNNBL_BGR8_E
  INT A < HVBJT_O_2_NPDDSHNNBL_BGR8 ABUT < 90 SINGULAR REGION
  SIZE A BY HVBJT_O_2_NPDDSHNNBL_BGR8/2 UNDEROVER
}
HVBJT.O.2_NPWSHNNBL_BGR8 { @ min and max overlap of Poly and inside NP region(Emitter area) for HV poly boundary NPN BJT == ^HVBJT_O_2_NPWSHNNBL_BGR8
  A = POLY AND BJT_NPWSHNNBL_BGR8_E
  INT A < HVBJT_O_2_NPWSHNNBL_BGR8 ABUT < 90 SINGULAR REGION
  SIZE A BY HVBJT_O_2_NPWSHNNBL_BGR8/2 UNDEROVER
}

HVBJT.O.3_PNDDSHPNBL { @ min and max overlap of Poly and NP inside (OD and NDD) direction for PNP == ^HVBJT_O_3_PNDDSHPNBL
  A = POLY INTERACT BJT_PNDDSHPNBL_E
  B = NP INTERACT BJT_PNDDSHPNBL_E
  C = B AND (OD AND NDD)
  D = A AND C 
  INT D < HVBJT_O_3_PNDDSHPNBL ABUT < 90 SINGULAR REGION
  SIZE D BY HVBJT_O_3_PNDDSHPNBL/2 UNDEROVER
}

HVBJT.O.4_PNDDSHPNBL { @ min and max overlap of Poly and NP outside (OD and NDD) direction for PNP == ^HVBJT_O_4_PNDDSHPNBL
  A = POLY INTERACT BJT_PNDDSHPNBL_E
  B = NP INTERACT BJT_PNDDSHPNBL_E
  C = B TOUCH EDGE (B INSIDE EDGE (OD INTERACT BJT_PNDDSHPNBL_E))
  D = (B NOT (HOLES A INNER)) NOT (EXPAND EDGE C INSIDE BY HVBJT_O_3_PNDDSHPNBL)
  INT D < HVBJT_O_4_PNDDSHPNBL ABUT < 90 OPPOSITE REGION
  SIZE D BY HVBJT_O_4_PNDDSHPNBL/2 UNDEROVER
}

HVBJT.O.5_PNDDSHPNBL { @ min and max overlap of Poly finger and (OD and NDD) for PNP == ^HVBJT_O_5_PNDDSHPNBL
  A = POLY INTERACT BJT_PNDDSHPNBL_E
  B = A AND (OD AND NDD)
  INT B < HVBJT_O_5_PNDDSHPNBL ABUT < 90 SINGULAR REGION
  SIZE B BY HVBJT_O_5_PNDDSHPNBL/2 UNDEROVER
}

HVBJT.O.23_NPDDSHNNBL_PO_BOUNDARY{ @ min and max overlap of Poly and inside SH_P of Base OD for NPN BJT (N+/PDD/SH_N+NBL(GA)) == ^HVBJT_O_23_NPDDSHNNBL_PO_BOUNDARY
  A = SH_P INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_B 
  B = POLY INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_B
  C = A AND B 
  INT C < HVBJT_O_23_NPDDSHNNBL_PO_BOUNDARY ABUT < 90 SINGULAR REGION
  SIZE C BY HVBJT_O_23_NPDDSHNNBL_PO_BOUNDARY/2 UNDEROVER
}

HVBJT.O.23_NPDDSHNNBL_BGR8{ @ min and max overlap of Poly and inside SH_P of Base OD for NPN BJT (N+/PDD/SH_N+NBL(GA)) == ^HVBJT_O_23_NPDDSHNNBL_BGR8
  A = SH_P INTERACT BJT_NPDDSHNNBL_BGR8_B 
  B = POLY INTERACT BJT_NPDDSHNNBL_BGR8_B
  C = A AND B 
  INT C < HVBJT_O_23_NPDDSHNNBL_BGR8 ABUT < 90 SINGULAR REGION
  SIZE C BY HVBJT_O_23_NPDDSHNNBL_BGR8/2 UNDEROVER
}


HVBJT.O.24_NPDDSHNNBL_PO_BOUNDARY{ @ min and max overlap of Poly and inside PDD of Base OD for NPN BJT (N+/PDD/SH_N+NBL(GA)) == ^HVBJT_O_24_NPDDSHNNBL_PO_BOUNDARY
  A = PDD INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_E 
  B = POLY INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_B
  C = A AND B 
  INT C < HVBJT_O_24_NPDDSHNNBL_PO_BOUNDARY ABUT < 90 SINGULAR REGION
  SIZE C BY HVBJT_O_24_NPDDSHNNBL_PO_BOUNDARY/2 UNDEROVER
}

HVBJT.O.24_NPDDSHNNBL_BGR8{ @ min and max overlap of Poly and inside PDD of Base OD for NPN BJT (N+/PDD/SH_N+NBL(GA)) == ^HVBJT_O_24_NPDDSHNNBL_BGR8
  A = PDD INTERACT BJT_NPDDSHNNBL_BGR8_E 
  B = POLY INTERACT BJT_NPDDSHNNBL_BGR8_B
  C = A AND B 
  INT C < HVBJT_O_24_NPDDSHNNBL_BGR8 ABUT < 90 SINGULAR REGION
  SIZE C BY HVBJT_O_24_NPDDSHNNBL_BGR8/2 UNDEROVER
}


BJT_NPDDSHNNBL_PO_BOUNDARY_E_c = STAMP BJT_NPDDSHNNBL_PO_BOUNDARY_E BY NSD_mf
BJT_NPWSHNNBL_PO_BOUNDARY_E_c = STAMP BJT_NPWSHNNBL_PO_BOUNDARY_E BY NSD_mf
BJT_NPDDSHNNBL_BGR8_E_c = STAMP BJT_NPDDSHNNBL_BGR8_E BY NSD_mf
BJT_NPWSHNNBL_BGR8_E_c = STAMP BJT_NPWSHNNBL_BGR8_E BY NSD_mf

BJT_PNDDPSUB_E_c = STAMP BJT_PNDDPSUB_E BY PSD_mf
BJT_PHVNWPSUB_GB_E_c = STAMP BJT_PHVNWPSUB_GB_E BY PSD_mf

BJT_PNDDSHPNBL_E_c = STAMP BJT_PNDDSHPNBL_E BY PSD_mf

HVBJT.R.7 { @ Poly must be connected with Emitter by metal for HV poly boundary BJT
  A = ILP1_mf INTERACT  (((((BJT_NPDDSHNNBL_PO_BOUNDARY_E OR BJT_NPWSHNNBL_PO_BOUNDARY_E) OR BJT_NPDDSHNNBL_BGR8_E) OR BJT_NPWSHNNBL_BGR8_E) OR BJT_PNDDPSUB_E) OR BJT_PHVNWPSUB_GB_E)
  NET AREA RATIO BJT_NPDDSHNNBL_PO_BOUNDARY_E_c A == 0
  NET AREA RATIO BJT_NPWSHNNBL_PO_BOUNDARY_E_c A == 0 
  NET AREA RATIO BJT_NPDDSHNNBL_BGR8_E_c A == 0  
  NET AREA RATIO BJT_NPWSHNNBL_BGR8_E_c A == 0
  NET AREA RATIO BJT_PNDDPSUB_E_c A == 0
  NET AREA RATIO BJT_PHVNWPSUB_GB_E_c A == 0
}

HVBJT.R.8_PNDDSHPNBL { @ Poly must be connected with Emitter by metal for PNP
  A = ILP1_mf INTERACT BJT_PNDDSHPNBL_E
  NET AREA RATIO BJT_PNDDSHPNBL_E_c A == 0 
}

  BJT_PNDDSHPNBL_B_NDD = (NPOD AND HVBJTDMY4) AND NDD 
HVBJT.R.9 { @ Emitter Od within NDD must be connected with Base OD within SH_N by metal for LPNP
  BJT_PNDDSHPNBL_Bc = STAMP BJT_PNDDSHPNBL_B BY NTAP_mf
  BJT_PNDDSHPNBL_B_NDDc = STAMP BJT_PNDDSHPNBL_B_NDD BY NTAP_mf
  NET AREA RATIO BJT_PNDDSHPNBL_Bc BJT_PNDDSHPNBL_B_NDDc == 0 
}

HVBJT.R.10 { @ 1. 3 poly hole interact with {OD AND NDD} for PNP(P+/NDD/SHP with NBL)(GA).The edge 2 holes are Base N+OD within NDD and center hole is Emitter P+OD
			 @ 2. PO interact more than one OD is not allowed for PNP(P+/NDD/SHP with NBL)(GA)
  A = HOLES POLY INNER
  ((OD AND NDD) AND HVBJTDMY4) INTERACT A != 3
  (POLY AND HVBJTDMY4) INTERACT OD > 1 
  (BJT_PNDDSHPNBL_B_NDD NOT POLY) NOT INSIDE A 
 ((OD AND NDD) AND HVBJTDMY4) INTERACT BJT_PNDDSHPNBL_B_NDD != 2
 ((OD AND NDD) AND HVBJTDMY4) INTERACT BJT_PNDDSHPNBL_E != 1
}


HVBJT_R_156_HOLE = (HOLES PPOD_ISO_R_1 INNER) AND ((BJT4TDMY OR BJTDUMMY) AND HVDMY) 
HVBJT_R_156_DUMMY = (BJT7TDMY OR BJTMDDMY) AND HVDMY    
HVBJT.R.1_NPDDSHNNBL_PO_BOUNDARY {@Minimum and maximum number of Emitter OD = 1
    HVBJT_R_156_HOLE INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_E != 1
}
HVBJT.R.1_NPWSHNNBL_PO_BOUNDARY {@Minimum and maximum number of Emitter OD = 1
    HVBJT_R_156_HOLE INTERACT BJT_NPWSHNNBL_PO_BOUNDARY_E != 1
}
HVBJT.R.1_PNDDPSUB {@Minimum and maximum number of Emitter OD = 1
    HVBJT_R_156_HOLE INTERACT BJT_PNDDPSUB_E != 1
}
HVBJT.R.1_PHVNWPSUB_GB {@Minimum and maximum number of Emitter OD = 1
    HVBJT_R_156_HOLE INTERACT BJT_PHVNWPSUB_GB_E != 1
}
HVBJT.R.1_PNDDSHPNBL {@Minimum and maximum number of Emitter OD = 1
    HVBJT_R_156_HOLE INTERACT BJT_PNDDSHPNBL_E != 1
}
HVBJT.R.1_NPDDSHNNBL_BGR8 {@Minimum and maximum number of Emitter OD = 9
    HVBJT_R_156_DUMMY INTERACT BJT_NPDDSHNNBL_BGR8_E != 9
}
HVBJT.R.1_NPWSHNNBL_BGR8 {@Minimum and maximum number of Emitter OD = 9
    HVBJT_R_156_DUMMY INTERACT BJT_NPWSHNNBL_BGR8_E != 9
}

HVBJT.R.5_NPDDSHNNBL_PO_BOUNDARY {@Minimum and maximum number of Base OD = 1
    HVBJT_R_156_HOLE INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_B != 1
}
HVBJT.R.5_NPWSHNNBL_PO_BOUNDARY {@Minimum and maximum number of Base OD = 1
    HVBJT_R_156_HOLE INTERACT BJT_NPWSHNNBL_PO_BOUNDARY_B != 1
}
HVBJT.R.5_PNDDPSUB {@Minimum and maximum number of Base OD = 1
    HVBJT_R_156_HOLE INTERACT BJT_PNDDPSUB_B != 1
}
HVBJT.R.5_PHVNWPSUB_GB {@Minimum and maximum number of Base OD = 1
    HVBJT_R_156_HOLE INTERACT BJT_PHVNWPSUB_GB_B != 1
}
HVBJT.R.5_PNDDSHPNBL {@Minimum and maximum number of Base OD = 1
    HVBJT_R_156_HOLE INTERACT BJT_PNDDSHPNBL_B != 1
}
HVBJT.R.5_NPDDSHNNBL_BGR8 {@Minimum and maximum number of Base OD = 9
    HVBJT_R_156_DUMMY INTERACT BJT_NPDDSHNNBL_BGR8_B != 9
}
HVBJT.R.5_NPWSHNNBL_BGR8 {@Minimum and maximum number of Base OD = 9
    HVBJT_R_156_DUMMY INTERACT BJT_NPWSHNNBL_BGR8_B != 9
}

HVBJT.R.6_NPDDSHNNBL_PO_BOUNDARY {@Minimum and maximum number of Collector OD = 1
    HVBJT_R_156_HOLE INTERACT BJT_NPDDSHNNBL_PO_BOUNDARY_C != 1
}
HVBJT.R.6_NPWSHNNBL_PO_BOUNDARY {@Minimum and maximum number of Collector OD = 1
    HVBJT_R_156_HOLE INTERACT BJT_NPWSHNNBL_PO_BOUNDARY_C != 1
}
HVBJT.R.6_PNDDSHPNBL {@Minimum and maximum number of Collector OD = 1
    HVBJT_R_156_HOLE INTERACT BJT_PNDDSHPNBL_C != 1
}
HVBJT.R.6_NPDDSHNNBL_BGR8 {@Minimum and maximum number of Collector OD = 9
    HVBJT_R_156_DUMMY INTERACT BJT_NPDDSHNNBL_BGR8_C != 9
}
HVBJT.R.6_NPWSHNNBL_BGR8 {@Minimum and maximum number of Collector OD = 9
    HVBJT_R_156_DUMMY INTERACT BJT_NPWSHNNBL_BGR8_C != 9
}


//  HV HRI poly resistor check
//=================================================
PORES_HRI = HREP INTERACT RLPPDMY
PORES_HRI_HV = PORES_HRI INTERACT HVDMY
PO_HVHRI = POLY INTERACT PORES_HRI_HV

HVHRI.R.4 { @ RLPPDMY RPO are must for HV HRI poly resisitor.
    PO_HRI = (POLY INTERACT HRI) INTERACT HVDMY
    PO_HRI NOT INTERACT RLPPDMY
    PO_HRI NOT INTERACT RPO
}





SLITDMY.E.1_NLD6G5_DE_FULLY_ISO { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT NLD6G5_DE_FULLY_ISO_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.1_NLD6G5_SA_FULLY_ISO { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT NLD6G5_SA_FULLY_ISO_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.1_NLD9G5_FULLY_ISO { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT NLD9G5_FULLY_ISO_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.1_NLD12G5_FULLY_ISO { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT NLD12G5_FULLY_ISO_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.1_NLD16G5_FULLY_ISO { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT NLD16G5_FULLY_ISO_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.1_NLD20G5_FULLY_ISO { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT NLD20G5_FULLY_ISO_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.1_NLD24G5_FULLY_ISO { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT NLD24G5_FULLY_ISO_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.1_NLD24G5_ISO_SWITCH { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT NLD24G5_ISO_SWITCH_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.1_NLD36G5_GB { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT NLD36G5_GB_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.1_NLD45G5_GB { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT NLD45G5_GB_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.1_NA45G3_DEP_GB { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT NA45G3_DEP_GB_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.1_PA12G5_SLIT_BL { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT PA12G5_SLIT_BL_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.1_PA20G5_SLIT_BL { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT PA20G5_SLIT_BL_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.1_PA16G5_SLIT_NBL { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT PA16G5_SLIT_NBL_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}

SLITDMY.E.1_PA9G5_SLIT_NBL { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT PA9G5_SLIT_NBL_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}

SLITDMY.E.1_NLD5G5_ISO_SWITCH { @ Min extension of SLITDMY region beyond (OD2 OR NBL) for slit MOS(except low side slit MOS) >= ^SLITDMY_E_1 um
  A = ((OD2 OR NBL) INTERACT NLD5G5_ISO_SWITCH_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}


SLITDMY.E.2_NLD9G5 { @ Min extension of SLITDMY region beyond (OD2 OR NDD) for low side slit MOS >= ^SLITDMY_E_2 um
  A = ((OD2 OR NDD) INTERACT NLD9G5_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.2_NLD12G5 { @ Min extension of SLITDMY region beyond (OD2 OR NDD) for low side slit MOS >= ^SLITDMY_E_2 um
  A = ((OD2 OR NDD) INTERACT NLD12G5_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.2_NLD16G5 { @ Min extension of SLITDMY region beyond (OD2 OR NDD) for low side slit MOS >= ^SLITDMY_E_2 um
  A = ((OD2 OR NDD) INTERACT NLD16G5_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.2_NLD20G5 { @ Min extension of SLITDMY region beyond (OD2 OR NDD) for low side slit MOS >= ^SLITDMY_E_2 um
  A = ((OD2 OR NDD) INTERACT NLD20G5_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}
SLITDMY.E.2_NLD6G5_SA { @ Min extension of SLITDMY region beyond (OD2 OR NDD) for low side slit MOS >= ^SLITDMY_E_2 um
  A = ((OD2 OR NDD) INTERACT NLD6G5_SA_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}

SLITDMY.E.2_NLD6G5_DE { @ Min extension of SLITDMY region beyond (OD2 OR NDD) for low side slit MOS >= ^SLITDMY_E_2 um
  A = ((OD2 OR NDD) INTERACT NLD6G5_DE_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}

SLITDMY.E.2_NLD24G5 { @ Min extension of SLITDMY region beyond (OD2 OR NDD) for low side slit MOS >= ^SLITDMY_E_2 um
  A = ((OD2 OR NDD) INTERACT NLD24G5_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}

SLITDMY.E.2_NLD24G5_SWITCH { @ Min extension of SLITDMY region beyond (OD2 OR NDD) for low side slit MOS >= ^SLITDMY_E_2 um
  A = ((OD2 OR NDD) INTERACT NLD24G5_SWITCH_CH)  INTERACT SLITDMY
  A NOT SLITDMY
}

HVLOWR.E.1_NLD24G5_ISO_SWITCH { @ Min extension of HVLOWR region beyond P+ isolation-ring for HV switch MOS >= ^ HVLOWR_E_1
  ENC PPOD_ISO_R_NLD24G5_ISO_SWITCH HVLOWR < HVLOWR_E_1 ABUT < 90 SINGULAR REGION
}
HVLOWR.E.1_NLD24G5_SWITCH { @ Min extension of HVLOWR region beyond P+ isolation-ring for HV switch MOS >= ^ HVLOWR_E_1
  ENC PPOD_ISO_R_NLD24G5_SWITCH HVLOWR < HVLOWR_E_1 ABUT < 90 SINGULAR REGION
}

HVLOWR.R.2_NLD24G5_ISO_SWITCH { @ HVLOWR must cover the hole of the P+ isolation ring and P+ isolation ring for HV switch MOS
  PPOD_ISO_H_NLD24G5_ISO_SWITCH NOT HVLOWR
  PPOD_ISO_R_NLD24G5_ISO_SWITCH NOT HVLOWR
}
HVLOWR.R.2_NLD24G5_SWITCH { @ HVLOWR must cover the hole of the P+ isolation ring and P+ isolation ring for HV switch MOS
  PPOD_ISO_H_NLD24G5_SWITCH NOT HVLOWR
  PPOD_ISO_R_NLD24G5_SWITCH NOT HVLOWR
}

HVSLITPP.W.1 { @ Min and Max width of {SLIT PP AND HVDMY} in channel width direction for SLIT HVMOS >= ^HVSLITPP_W_1_1 um  <= ^HVSLITPP_W_1_2 um
  A = (HVNGATE INTERACT HVNGATE_6_9_12_45) INSIDE EDGE SLIT_PP_HV
  LENGTH A < HVSLITPP_W_1_1
  LENGTH A > HVSLITPP_W_1_2
}

HVSLITPP.W.2 { @ Min and Max width of {SLIT PP AND HVDMY} in channel width direction for SLIT HVMOS >= ^HVSLITPP_W_2_1 um  <= ^HVSLITPP_W_2_2 um
  A = (HVNGATE INTERACT HVNGATE_20_24) INSIDE EDGE SLIT_PP_HV
  LENGTH A < HVSLITPP_W_2_1
  LENGTH A > HVSLITPP_W_2_2
}

HVSLITNP.W.1 { @ Min and Max width of {SLIT NP AND HVDMY} in channel width direction for SLIT HVMOS >= ^HVSLITNP_W_1_1 um  <= ^HVSLITNP_W_1_2 um
  A = (HVPGATE INTERACT HVPGATE_12_20) INSIDE EDGE SLIT_NP_HV
  LENGTH A < HVSLITNP_W_1_1
  LENGTH A > HVSLITNP_W_1_2
}

SLIT_PP_S_pre = EXPAND EDGE (GATE AND SLITDMY) INSIDE BY GRID EXTEND BY -GRID
SLIT_PP_S_pre1 = SLIT_PP_S_pre NOT SLIT_PP
SLIT_PP_S_pre1_LV = SLIT_PP_S_pre1 NOT HVDMY
SLIT_PP_S_pre1_HV = SLIT_PP_S_pre1 AND HVDMY
SLIT_PP_S_pre2 = SLIT_PP_S_pre1 INTERACT (SLIT_PP AND POLY) == 2
SLIT_PP_S_pre2_LV = SLIT_PP_S_pre2 NOT HVDMY
SLIT_PP_S_pre2_HV = SLIT_PP_S_pre2 AND HVDMY
SLIT_PP_S = GATE COIN INSIDE EDGE SLIT_PP_S_pre2
SLIT_PP_S_LV = GATE COIN INSIDE EDGE SLIT_PP_S_pre2_LV
SLIT_PP_S_HV = GATE COIN INSIDE EDGE SLIT_PP_S_pre2_HV

SLIT_NP_S_pre = EXPAND EDGE (GATE AND SLITDMY) INSIDE BY GRID EXTEND BY -GRID
SLIT_NP_S_pre1 = SLIT_NP_S_pre NOT SLIT_NP
SLIT_NP_S_pre1_LV = SLIT_NP_S_pre1 NOT HVDMY
SLIT_NP_S_pre1_HV = SLIT_NP_S_pre1 AND HVDMY
SLIT_NP_S_pre2 = SLIT_NP_S_pre1 INTERACT (SLIT_NP AND POLY) == 2
SLIT_NP_S_pre2_LV = SLIT_NP_S_pre2 NOT HVDMY
SLIT_NP_S_pre2_HV = SLIT_NP_S_pre2 AND HVDMY
SLIT_NP_S = GATE COIN INSIDE EDGE SLIT_NP_S_pre2
SLIT_NP_S_LV = GATE COIN INSIDE EDGE SLIT_NP_S_pre2_LV
SLIT_NP_S_HV = GATE COIN INSIDE EDGE SLIT_NP_S_pre2_HV


SLIT_PP_W = POLY INSIDE EDGE SLIT_PP
SLIT_NP_W = POLY INSIDE EDGE SLIT_NP
SLIT_PP_W_region = EXPAND EDGE SLIT_PP_W BY GRID
SLIT_PP_S_region = EXPAND EDGE SLIT_PP_S BY GRID
SLIT_NP_W_region = EXPAND EDGE SLIT_NP_W BY GRID
SLIT_NP_S_region = EXPAND EDGE SLIT_NP_S BY GRID


CONNECT SLIT_PP_W_region SLIT_PP_S_region
CONNECT SLIT_NP_W_region SLIT_NP_S_region

HVSLITPP.S.1 { @ Min and Max space between two SLIT PP in channel width direction for slit HVMOS >= ^HVSLITPP_S_1_1 um <= ^HVSLITPP_S_1_2 um
  LENGTH (SLIT_PP_S_HV TOUCH EDGE HVNGATE_6_9_12_45) < HVSLITPP_S_1_1 
  LENGTH (SLIT_PP_S_HV TOUCH EDGE HVNGATE_6_9_12_45) > HVSLITPP_S_1_2
  NOT RECTANGLE (SLIT_PP_S_pre1_HV INTERACT HVNGATE_6_9_12_45)
}

HVSLITPP.S.2 { @ Min and Max space between two SLIT PP in channel width direction for slit HVMOS >= ^HVSLITPP_S_2_1 um <= ^HVSLITPP_S_2_2 um
  LENGTH (SLIT_PP_S_HV TOUCH EDGE HVNGATE_20_24) < HVSLITPP_S_2_1 
  LENGTH (SLIT_PP_S_HV TOUCH EDGE HVNGATE_20_24) > HVSLITPP_S_2_2
  NOT RECTANGLE (SLIT_PP_S_pre1_HV INTERACT HVNGATE_20_24)
}

HVSLITNP.S.1 { @ Min and Max space between two SLIT NP in channel width direction for slit HVMOS >= ^HVSLITNP_S_1_1 um <= ^HVSLITNP_S_1_2 um
  LENGTH (SLIT_NP_S_HV TOUCH EDGE HVPGATE_12_20) < HVSLITNP_S_1_1 
  LENGTH (SLIT_NP_S_HV TOUCH EDGE HVPGATE_12_20) > HVSLITNP_S_1_2
  NOT RECTANGLE (SLIT_NP_S_pre1_HV INTERACT HVPGATE_12_20)
}

HVSLITPP.R.1 { @ Slit PP must overlap regions {SLITDMY AND OD AND HVPB} for slit HVNMOS
  A = (ALL_HVNMOS_OD1 INTERACT (HVNGATE_6_9_12_45 OR HVNGATE_20_24)) NOT INTERACT NA45G3_DEP_GB_GATE
  B = (A AND SLITDMY) AND HVPB
  C = SLIT_PP_HV INTERACT A
  C OUTSIDE B
}
HVSLITPP.R.2 { @ min and max ratio of the space between two {Slit PP and HVDMY} to the width of {Slit PP and HVDMY} in channel width direction for Slit HVMOS == ^HVSLITPP_R_2
   SLIT_PP_W_region_6_9_12_45 = SLIT_PP_W_region INTERACT HVNGATE_6_9_12_45
   SLIT_PP_S_region_6_9_12_45 = SLIT_PP_S_region INTERACT HVNGATE_6_9_12_45
   NET AREA RATIO  SLIT_PP_W_region_6_9_12_45 SLIT_PP_S_region_6_9_12_45 != HVSLITPP_R_2
     [(AREA(SLIT_PP_S_region_6_9_12_45)/COUNT(SLIT_PP_S_region_6_9_12_45)) / (AREA(SLIT_PP_W_region_6_9_12_45)/COUNT(SLIT_PP_W_region_6_9_12_45))] 
  RDB HVSLITPP_R_2.db  SLIT_PP_W_region_6_9_12_45 SLIT_PP_S_region_6_9_12_45 
}

HVSLITPP.R.3 { @ min and max ratio of the space between two {Slit PP and HVDMY} to the width of {Slit PP and HVDMY} in channel width direction for Slit HVMOS == ^HVSLITPP_R_3
   SLIT_PP_W_region_20_24 = SLIT_PP_W_region INTERACT HVNGATE_20_24
   SLIT_PP_S_region_20_24 = SLIT_PP_S_region INTERACT HVNGATE_20_24
   NET AREA RATIO  SLIT_PP_W_region_20_24 SLIT_PP_S_region_20_24 != HVSLITPP_R_3
     [(AREA(SLIT_PP_S_region_20_24)/COUNT(SLIT_PP_S_region_20_24)) / (AREA(SLIT_PP_W_region_20_24)/COUNT(SLIT_PP_W_region_20_24))] 
  RDB HVSLITPP_R_3.db  SLIT_PP_W_region_20_24 SLIT_PP_S_region_20_24 
}

HVSLITNP.R.1 { @ min and max ratio of the space between two {Slit NP and HVDMY} to the width of {Slit NP and HVDMY} in channel width direction for Slit HVMOS == ^HVSLITNP_R_1
   SLIT_NP_W_region_12_20 = SLIT_NP_W_region INTERACT HVPGATE_12_20
   SLIT_NP_S_region_12_20 = SLIT_NP_S_region INTERACT HVPGATE_12_20
   NET AREA RATIO  SLIT_NP_W_region_12_20 SLIT_NP_S_region_12_20 != HVSLITNP_R_1
     [(AREA(SLIT_NP_S_region_12_20)/COUNT(SLIT_NP_S_region_12_20)) / (AREA(SLIT_NP_W_region_12_20)/COUNT(SLIT_NP_W_region_12_20))] 
  RDB HVSLITPP_R_1.db  SLIT_NP_W_region_12_20 SLIT_NP_S_region_12_20
}

HVSLITNP.C.1 { @ min clearance between SLitNP and OD in channel width direction >= ^HVSLITNP_C_1
   A = ALL_HVPMOS_OD1 INTERACT HVPGATE_12_20
   (SLIT_NP_HV INTERACT A) NOT INSIDE A
}

HVSLITNP.C.2 { @ max clearance between SLitNP and OD in channel width direction < ^HVSLITNP_C_2
   A = ALL_HVPMOS_OD1 INTERACT HVPGATE_12_20
   B = A TOUCH EDGE (A INSIDE EDGE POLY)
   C = EXPAND EDGE B INSIDE BY HVSLITNP_C_2
   C NOT INTERACT SLIT_NP_HV
}

HVSLITPP.C.1 { @ min clearance between SLitPP and OD in channel width direction >= ^HVSLITPP_C_1
   A = ALL_HVNMOS_OD1 INTERACT HVNGATE_6_9_12_45
   (SLIT_PP_HV INTERACT A) NOT INSIDE A
}

HVSLITPP.C.2 { @ max clearance between SLitPP and OD in channel width direction < ^HVSLITPP_C_2
   A = ALL_HVNMOS_OD1 INTERACT HVNGATE_6_9_12_45
   B = A TOUCH EDGE (A INSIDE EDGE POLY)
   C = EXPAND EDGE B INSIDE BY HVSLITPP_C_2
   C NOT INTERACT SLIT_PP_HV
}

HVSLITPP.C.3 { @ min clearance between SLitPP and OD in channel width direction >= ^HVSLITPP_C_3
   A = ALL_HVNMOS_OD1 INTERACT HVNGATE_20_24
   (SLIT_PP_HV INTERACT A) NOT INSIDE A
}

HVSLITPP.C.4 { @ max clearance between SLitPP and OD in channel width direction < ^HVSLITPP_C_4
   A = ALL_HVNMOS_OD1 INTERACT HVNGATE_20_24
   B = A TOUCH EDGE (A INSIDE EDGE POLY)
   C = EXPAND EDGE B INSIDE BY HVSLITPP_C_4
   C NOT INTERACT SLIT_PP_HV
}

HVSLITPP.O.1 { @ Min and Max overlap of SLIT PP and ((PO AND SLITDMY) AND HVDMY) in channel length direction for HVMOS == ^HVSLITPP_O_1 um
  INT SLIT_PP_HV HVNGATE < HVSLITPP_O_1 ABUT < 90 SINGULAR REGION
  A = SLIT_PP_HV AND HVNGATE
  SIZE A BY HVSLITPP_O_1/2 UNDEROVER
}

HVSLITNP.O.1 { @ Min and Max overlap of Slit NP and {(PO AND SLITDMY) AND HVDMY} in channel length direction for HVMOS == ^HVSLITNP_O_1 um
  INT SLIT_NP_HV HVPGATE < HVSLITNP_O_1 ABUT < 90 SINGULAR REGION
  A = SLIT_NP_HV AND HVPGATE
  SIZE A BY HVSLITNP_O_1/2 UNDEROVER
}


HVRPO.O.1 { @ Min and Max overlap of RPO and PO == ^HVRPO_O_1
   A = POLY INTERACT HVGATE
   INT RPO A  < HVRPO_O_1 ABUT < 90 SINGULAR REGION
   B = RPO AND A 
   SIZE B BY HVRPO_O_1/2 UNDEROVER
}

HVRPO.O.2 { @ min and max overlap of RPO and NP == ^HVRPO_O_2
   A = HOLES (NP INTERACT HVGATE) 
   B = EXPAND EDGE A OUTSIDE BY GRID
   C = B NOT INTERACT POLY
   D = A TOUCH OUTSIDE EDGE C
   INT RPO D < HVRPO_O_2 ABUT < 90 REGION
   E1 = EXPAND EDGE D OUTSIDE BY HVRPO_O_2 + GRID
   E2 = EXPAND EDGE D OUTSIDE BY HVRPO_O_2 
   E = E1 NOT E2
   E NOT TOUCH RPO

}

HVRPO.O.3 { @ min and max overlap of RPO and PP ==^HVRPO_O_3
   A = HOLES (PP INTERACT HVGATE)
   B = EXPAND EDGE A OUTSIDE BY GRID
   C = B NOT INTERACT POLY
   D = A TOUCH OUTSIDE EDGE C
   INT RPO D < HVRPO_O_3 ABUT < 90 REGION
   E1 = EXPAND EDGE D OUTSIDE BY HVRPO_O_3 + GRID
   E2 = EXPAND EDGE D OUTSIDE BY HVRPO_O_3 
   E = E1 NOT E2
   E NOT TOUCH RPO
}

HVRPO.E.1_SBD_12V { @ min and max extension of RPO outside edge beyond inside CFP for HV SBD_12V diode == ^HVRPO_E_1_SBD_12V
   A =  RPO INTERACT DIO_SBD_12V_M  
   B = A NOT TOUCH EDGE (HOLES A INNER)
   C = EXPAND EDGE B INSIDE BY HVRPO_E_1_SBD_12V EXTEND BY -HVRPO_E_1_SBD_12V -CFP_S_2_SBD_12V -CFP_W_3_SBD_12V
   D = CFP INSIDE A 
   D NOT TOUCH C
}

HVRPO.E.2_SBD_12V { @ min and max extension of RPO inside edge beyond inside CFP for HV SBD_12V diode == ^HVRPO_E_2_SBD_12V
   A =  RPO INTERACT DIO_SBD_12V_M  
   B = A TOUCH EDGE (HOLES A INNER)
   C = EXPAND EDGE B INSIDE BY HVRPO_E_2_SBD_12V
   D = CFP INSIDE A 
   D NOT TOUCH C
}

HVRPO.C.3_SBD_12V { @ Minimum and maximum clearance from RPO to CO on Cathode OD == ^HVRPO_C_3_SBD_12V
    A = RPO INTERACT DIO_SBD_12V_M
    B = CO INTERACT (NPOD INTERACT DIO_SBD_12V_M)
    EXT B A < HVRPO_C_3_SBD_12V ABUT < 90 SINGULAR REGION
    C = SIZE B BY HVRPO_C_3_SBD_12V
    C NOT TOUCH A
}
HVRPO.E.1_SBD_16V { @ min and max extension of RPO outside edge beyond inside CFP for HV SBD_16V diode == ^HVRPO_E_1_SBD_16V
   A =  RPO INTERACT DIO_SBD_16V_M  
   B = A NOT TOUCH EDGE (HOLES A INNER)
   C = EXPAND EDGE B INSIDE BY HVRPO_E_1_SBD_16V EXTEND BY -HVRPO_E_1_SBD_16V -CFP_S_2_SBD_16V -CFP_W_3_SBD_16V
   D = CFP INSIDE A 
   D NOT TOUCH C
}

HVRPO.E.2_SBD_16V { @ min and max extension of RPO inside edge beyond inside CFP for HV SBD_16V diode == ^HVRPO_E_2_SBD_16V
   A =  RPO INTERACT DIO_SBD_16V_M  
   B = A TOUCH EDGE (HOLES A INNER)
   C = EXPAND EDGE B INSIDE BY HVRPO_E_2_SBD_16V
   D = CFP INSIDE A 
   D NOT TOUCH C
}

HVRPO.C.3_SBD_16V { @ Minimum and maximum clearance from RPO to CO on Cathode OD == ^HVRPO_C_3_SBD_16V
    A = RPO INTERACT DIO_SBD_16V_M
    B = CO INTERACT (NPOD INTERACT DIO_SBD_16V_M)
    EXT B A < HVRPO_C_3_SBD_16V ABUT < 90 SINGULAR REGION
    C = SIZE B BY HVRPO_C_3_SBD_16V
    C NOT TOUCH A
}
HVRPO.E.1_SBD_24V { @ min and max extension of RPO outside edge beyond inside CFP for HV SBD_24V diode == ^HVRPO_E_1_SBD_24V
   A =  RPO INTERACT DIO_SBD_24V_M  
   B = A NOT TOUCH EDGE (HOLES A INNER)
   C = EXPAND EDGE B INSIDE BY HVRPO_E_1_SBD_24V EXTEND BY -HVRPO_E_1_SBD_24V -CFP_S_2_SBD_24V -CFP_W_3_SBD_24V
   D = CFP INSIDE A 
   D NOT TOUCH C
}

HVRPO.E.2_SBD_24V { @ min and max extension of RPO inside edge beyond inside CFP for HV SBD_24V diode == ^HVRPO_E_2_SBD_24V
   A =  RPO INTERACT DIO_SBD_24V_M  
   B = A TOUCH EDGE (HOLES A INNER)
   C = EXPAND EDGE B INSIDE BY HVRPO_E_2_SBD_24V
   D = CFP INSIDE A 
   D NOT TOUCH C
}

HVRPO.C.3_SBD_24V { @ Minimum and maximum clearance from RPO to CO on Cathode OD == ^HVRPO_C_3_SBD_24V
    A = RPO INTERACT DIO_SBD_24V_M
    B = CO INTERACT (NPOD INTERACT DIO_SBD_24V_M)
    EXT B A < HVRPO_C_3_SBD_24V ABUT < 90 SINGULAR REGION
    C = SIZE B BY HVRPO_C_3_SBD_24V
    C NOT TOUCH A
}

HVRPO.C.1 { @ min clearance from RPO to CO for all HVMOS in channel length direction >= ^HVRPO_C_1
   A = RPO INTERACT HVGATE
   B = A TOUCH EDGE (A AND OD)
   EXT B CO < HVRPO_C_1 ABUT < 90 REGION
}

//Serpentine type poly resistor check
PORES_SERP = PORES INTERACT SERPDMY
PORES_SERP_T = (POLY INTERACT SERPDMY) NOT RPO

SERRES.W.1 { @ Min and max poly width of serpentine type resistor under RPO == ^SERRES_W_1
  INT PORES_SERP < SERRES_W_1 ABUT < 90 SINGULAR REGION
  SIZE PORES_SERP BY SERRES_W_1/2 UNDEROVER
}

SERRES.S.1 { @ Min and max poly space of serpentine type resistor under RPO == ^SERRES_S_1
  A = CONVEX EDGE PORES_SERP ANGLE1 == 270 ANGLE2 == 270
  NOT LENGTH A == SERRES_S_1
}

SERRES.L.1 { @ Min height of the serpentine type body(excludes terminal side poly) >= ^SERRES_L_1
  A = CONVEX EDGE PORES_SERP ANGLE1 == 90 ANGLE2 == 90
  B = LENGTH A == SERRES_S_1 + SERRES_W_1 * 2
  INT B < SERRES_L_1 ABUT < 90 OPPOSITE REGION
}

//SWRRES.R.2 is un-checkable rule 

//SWRRES.R.3 is un-checkable rule 
PORES_SERP_L = EXPAND EDGE ((PORES INTERACT SERPDMY) INSIDE EDGE RPO) BY 0.001 CORNER FILL
PORES_SERP_W = EXPAND EDGE ((PORES INTERACT SERPDMY) NOT INSIDE EDGE RPO) BY 0.001 CORNER FILL

CONNECT PORES_SERP_L PORES_SERP_W


SERRES.R.4 { @ The min resistor SQ (= total length /0.18um) of the serpentine type resistor >= ^SERRES_R_4
 NET AREA RATIO PORES_SERP_L PORES_SERP_W < SERRES_R_4 
}
SERRES.C.1 { @ Min and max clearance from DMP2V to RPO for serpentine poly resistor on field oxide == 0
  A = DMP2V INTERACT SERPDMY
  B = RPO INTERACT A
  A XOR B
}

SERRES.E.1 { @ Min extension of DMP2V or RPDUMMY(54;0 or 54;1) beyond the serpentine poly resistor on field oxide (except terminal side poly) >= ^SERRES_E_1
  A = ((POLY INTERACT SERPDMY) INTERACT DMP2V) NOT RPO 
  B = (PORES_SERP INTERACT DMP2V) NOT COIN OUTSIDE EDGE A
  ENC B RPDUMMY < SERRES_E_1 ABUT < 90 REGION
  ENC B DMP2V < SERRES_E_1 ABUT < 90 REGION
}

SERRES.E.2 { @ Min and max extension of RPDUMMY beyond DMP2V == 0
  A = (RPDUMMY INTERACT SERPDMY) INTERACT DMP2V
  B = (DMP2V INTERACT SERPDMY) INTERACT RPDUMMY
  A XOR B
}

SERRES.E.3 { @ Min extension of RLPPDMY OR RPDUMMY(54;0 or 54;1) to the serpentine poly resistor on filed oxide (except terminal side poly) >= ^SERRES_E_3
  A = ((POLY INTERACT SERPDMY) INTERACT RLPPDMY) NOT RPO 
  B = (PORES_SERP INTERACT RLPPDMY) NOT COIN OUTSIDE EDGE A
  ENC B RPDUMMY < SERRES_E_3 ABUT < 90 REGION
  ENC B RLPPDMY < SERRES_E_3 ABUT < 90 REGION
}

SERRES.E.4 { @ Min and max extension of RPDUMMY beyond RLPPDMY == 0
  A = RLPPDMY INTERACT SERPDMY
  B = RPDUMMY INTERACT A
  A XOR B
}

SERRES.E.5 { @ Min extension of the RPO to the serpentine type poly resistor body >= ^SERRES_E_5
  A = (POLY INTERACT SERPDMY) NOT RPO
  B = PORES_SERP NOT COIN OUTSIDE EDGE A
  ENC B RPO < SERRES_E_5 ABUT < 90 REGION
}

SERRES.E.6 { @ Min extension of SERPDMY to the serpentine type poly resistor body(except terminal side poly) >= ^SERRES_E_6
  A = ((POLY INTERACT SERPDMY) INTERACT RLPPDMY) NOT RPO 
  B = (PORES_SERP INTERACT RLPPDMY) NOT COIN OUTSIDE EDGE A
  ENC B SERPDMY < SERRES_E_6 ABUT < 90 REGION
}

SERRES.C.2 { @ Min clearance from the RPO of serpentine type poly resistor to terminal side poly >= ^SERRES_C_2
  A = RPO INTERACT SERPDMY
  B = FPO1 INTERACT RPDUMMY
  EXT A B < SERRES_C_2 ABUT < 90 SINGULAR REGION 
}

SERRES.C.4 { @ Min clearance from the Poly of serpentine type poly resistor to he out-side edge of un-related OD >= ^SERRES_C_4
  EXT PORES_SERP OD < SERRES_C_4 ABUT < 90 SINGULAR REGION
}

SERRES.C.6 { @ Min extension of HRI3D3KDMY to the poly of serpentine poly resistor on field oxide >= ^SERRES_C_6
  A = (POLY INTERACT SERPDMY) INTERACT RLPPDMY
  ENC A HRI3D3KDMY < SERRES_C_6 ABUT < 90 SINGULAR REGION
}

//SERRES.R.1 is un-checkable rule

SERRES.R.5 { @ Min and max clearance from SERPDMY to RPDMY for serpentine poly resistor on field oxide == 0
  A = RPDUMMY INTERACT SERPDMY
  A XOR SERPDMY
}

SERRES.R.6 { @ The min of contact number for the serpentine type poly resistor >= ^SERRES_R_6
  PORES_SERP_T NOT INTERACT CO >= SERRES_R_6
}

//SERRES.R.7 is un-checkable rule

SERRES.R.8 { @ PO INTERACT RPLPPDMY(134;0) must be fully covered by HRI3D3KDMY
  A = (POLY INTERACT SERPDMY) INTERACT RLPPDMY
  A NOT HRI3D3KDMY
}

SERRES.E.7 { @ EXtension of RSEPDUMMY (dummy) (CAD layer:54;4) beyond the poly of serpentine poly resistor on field oxide.	>= ^SERRES_E_7
	A = POLY INTERACT PORES_SERP
	ENC A RSEPDUMMY < SERRES_E_7 ABUT < 90 SINGULAR REGION
}

SERRES.W.2.1 { @ Width of RSEPDUMMY (dummy) (CAD layer:54;4) for Serpentine Type P+ Poly Resistor	= ^SERRES_W_2_1
    A = RSEPDUMMY NOT INTERACT HRI3D3KDMY
    INT A < SERRES_W_2_1 ABUT < 90 SINGULAR REGION
    SIZE A BY SERRES_W_2_1/2 UNDEROVER 
}

SERRES.W.2.2 { @ Width of RSEPDUMMY (dummy) (CAD layer:54;4) for Serpentine Type 3.3K HRI poly Resistor	= ^SERRES_W_2_2
    A = RSEPDUMMY INTERACT HRI3D3KDMY
    INT A < SERRES_W_2_2 ABUT < 90 SINGULAR REGION
    SIZE A BY SERRES_W_2_2/2 UNDEROVER 
}

SERRES.R.10	 { @ Serpentine type poly resistor NOT INSIDE RSEPDUMMY (dummy) (CAD layer:54;4) is not allowed
	PORES_SERP OUTSIDE RSEPDUMMY
}

SERRES.R.9	 { @ 90-degree (RSEPDUMMY AND PO) is not allowed
	A = POLY INSIDE EDGE RSEPDUMMY
	EXT A < SERRES_W_1 ABUT == 90 INTERSECTING ONLY
	INT A < SERRES_W_1 ABUT == 90 INTERSECTING ONLY
}
