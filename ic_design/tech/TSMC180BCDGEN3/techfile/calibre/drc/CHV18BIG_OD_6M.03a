// **********************************************************************************
// * 0.18um Calibre DRC COMMAND FILE - CHV18BIG_OD_6M.03a ( 01/24/2018 )                     *
// * FOR TSMC 0.18um CMOS HIGH VOLTAGE MIXED SIGNAL BASED GENERAL PURPOSE BCD DUAL GATE SILICIDE BIG OD 1P6M DESIGN RULE PROCESS       
// * (DRC COMMAND FILE DOCUMENT: T-000-CV-DR-004-C1 Rev 0.3a)                  *
// * (DESIGN RULE DOCUMENT:      T-000-CV-DR-004 Rev 0.3)                                          *
// **********************************************************************************


//************************************************************************************
//* TSMC developed this deck using Mentor Graphics proprietary SVRF and TVF formats.
//* The deck is to be used only in Calibre tools.
//************************************************************************************
//
//  DISCLAIMER
//
//  The information contained herein is provided by TSMC on an "AS IS" basis
//  without any warranty, and TSMC has no obligation to support or otherwise
//  maintain the information.  TSMC disclaims any representation that the
//  information does not infringe any intellectual property rights or proprietary
//  rights of any third parties.  There are no other warranties given by TSMC,
//  whether express, implied or statutory, including, without limitation, implied
//  warranties of merchantability and fitness for a particular purpose.
//
//  STATEMENT OF USE
//
//  This information contains confidential and proprietary information of TSMC.
//  No part of this information may be reproduced, transmitted, transcribed,
//  stored in a retrieval system, or translated into any human or computer
//  language, in any form or by any means, electronic, mechanical, magnetic,
//  optical, chemical, manual, or otherwise, without the prior written permission
//  of TSMC.  This information was prepared for informational purpose and is for
//  use by TSMC's customers only.  TSMC reserves the right to make changes in the
//  information at any time and without notice.
//
//-------------------------------------------------------------------------------------------
//
//  NOTICE: (Read Me First!)
//
//  1. If the input GDS file does not include all the layers in the
//     INPUT LAYER BLOCK, for example, they are generated by logic
//     operations, please make sure the consistence with original
//     layer definition.
//
//  2. The runset is tested and developed on Calibre  2016.2_26.21, please use 
//     this or newer TSMC qualified version of Calibre to execute this runset.
//
//-------------------------------------------------------------------------------------------
//
// REVISION:
// 01/24/2018 Ver 0.3a K.Zhu
//      1) Modify Big OD definition 
//      2) Modify BO.W.1 ABO.W.2 BO.R.1
//      3) Add ABO.S.4 ABO.EX.1 XBO.S.1 XBO.S.2 XBO.S.3 XBO.S.4 XBO.EX.1 XBO.EX.2 XBO.EX.3 XBO.EX.4 XBO.EX.5 XBO.EX.6   
//      4) Remove BO.W.2 BO.S.1 BO.C.1 ABO.W.2 ABO.W.3 ABO.W.4 ABO.S.1 ABO.S.2 ABO.S.3 ABO.C.1
//      5) Add 90nm deck
//
// 06/20/2017 Ver 0.2a_eval062017 L.L Cao
//      1) Modify BO.W.1, BO.W.2, BO.S.2, ABO.W.1, ABO.W.2, ABO.W.3 
//
// 05/19/2017 Ver 0.2a_pre051917 L.L Cao
//      1) Modify Big OD definition
//      2) Add Samll OD array into Big OD
//      3) Modify BO.W.1, BO.W.2, BO.S.1, ABO.W.1, ABO.W.2, ABO.W.3, ABO.W.4, ABO.S.1, ABO.S.2, ABO.S.3 
//      4) Add BO.S.2, ABO.W.5
//
// 05/31/2016 - Ver 0.1a P.Liu
//      1) Newly created
//*****************************************************************************************************

// ENVIRONMENT SETUP
//------------------
PRECISION    1000
RESOLUTION     5   //Set layout grid  check to 0.005

LAYOUT SYSTEM GDSII
LAYOUT PATH "GDSFILENAME"
LAYOUT PRIMARY "TOPCELLNAME"

DRC RESULTS DATABASE "DRC_RES.db"
DRC SUMMARY REPORT "DRC.rep" 
DRC CHECK TEXT ALL
DRC MAXIMUM RESULTS ALL
DRC INCREMENTAL CONNECT YES
DRC EXCLUDE FALSE NOTCH NO

FLAG OFFGRID YES     // For layout grid check. default grid value is resolution size
FLAG ACUTE YES
FLAG SKEW YES
FLAG NONSIMPLE YES
FLAG NONSIMPLE PATH YES

LAYOUT PROCESS BOX RECORD YES


// definition of variable
VARIABLE  GRID      0.005
VARIABLE  OD_DN 	0.65
VARIABLE  BO_STEP_1 0.25
VARIABLE  BO_STEP_2   15
VARIABLE  BO_STEP_3a  50
VARIABLE  BO_STEP_3b 100
VARIABLE  ABO_STEP    30
VARIABLE  ABO_STEP_1  50
VARIABLE  ABO_STEP_2 500
VARIABLE  XBO_STEP_1  50
VARIABLE  XBO_STEP_2 100
VARIABLE  XA_XB      150

VARIABLE SW_XBO_MAX 32000
VARIABLE LARGE_NUM 1.0E9
VARIABLE BO_W_1 400
VARIABLE ABO_W_2 1000
VARIABLE ABO_S_4 100
VARIABLE ABO_EX_1 50
VARIABLE ABO_EX_1_W 500
VARIABLE ABO_EX_1_L 1000
VARIABLE XBO_R_1 0.8
VARIABLE XBO_S_1_RATIO 1.5
VARIABLE XBO_S_2_RATIO 1.2
VARIABLE XBO_S_3_RATIO 0.9
VARIABLE XBO_S_4_RATIO 0.6

VARIABLE XBO_EX_1_RATIO 1.5
VARIABLE XBO_EX_2_RATIO 1.25
VARIABLE XBO_EX_3_RATIO 1.0
VARIABLE XBO_EX_4_RATIO 0.75
VARIABLE XBO_EX_5_RATIO 0.5
VARIABLE XBO_EX_6_RATIO 0.25



//Definition of layers

LAYER SEALRING	126
LAYER DIFFi	3	// Active areas
LAYER PDIFFi	11	// Active areas
LAYER NDIFFi	12	// Active areas
LAYER DOD	1340	// Dummy OD (DIFF)
LAYER MAP 3   DATATYPE 1 1340	// Mapping (3;1) to 1340 for dummy ODi_pre
LAYER POLYGi	13	// Polysilicon gates, interconnect
LAYER prBoundary 62


OD	= (DIFFi OR NDIFFi) OR PDIFFi

POLY = COPY POLYGi
ALL_GATE = POLY AND OD          // Gate regions for NMOS and PMOS
CHIP_EDGE = EXTENT DRAWN ORIGINAL






OD1 = SIZE OD BY BO_STEP_1 OVERUNDER
OD2 = SIZE OD1  BY BO_STEP_2 UNDEROVER
BO = ( SIZE (SIZE (SIZE OD2 BY BO_STEP_3a) BY -BO_STEP_3b) BY BO_STEP_3a ) AND OD2

ABO_pre = SIZE BO BY ABO_STEP OVERUNDER
ABO = ABO_pre INTERACT BO > 1

SBO = BO NOT ABO

XBO_pre = SIZE (SIZE (SIZE (SBO OR ABO ) BY XBO_STEP_1) BY -XBO_STEP_2) BY XBO_STEP_1 
XBO_RECTANGLE = EXTENTS XBO_pre

XBO_X = GROW XBO_RECTANGLE RIGHT BY XA_XB LEFT BY XA_XB
XBO_X_1 = XBO_X AND CHIP_EDGE
XBO_X_2 = XBO_X_1 TOUCH EDGE XBO_RECTANGLE
XBO_X_3 = (EXPAND EDGE XBO_X_2 INSIDE BY GRID) NOT XBO_RECTANGLE
CONNECT XBO_X
XBO_X_4 = STAMP XBO_X_3 BY XBO_X
XBO_X_pre = NET AREA RATIO XBO_X_4 < XA_XB [AREA (XBO_X_4)/(2*GRID)]
XBO_X_CHECK = XBO_RECTANGLE TOUCH XBO_X_pre

XBO_Y = GROW XBO_RECTANGLE TOP BY XA_XB BOTTOM BY XA_XB
XBO_Y_1 = XBO_Y AND CHIP_EDGE
XBO_Y_2 = XBO_Y_1 TOUCH EDGE XBO_RECTANGLE
XBO_Y_3 = (EXPAND EDGE XBO_Y_2 INSIDE BY GRID) NOT XBO_RECTANGLE
CONNECT XBO_Y
XBO_Y_4 = STAMP XBO_Y_3 BY XBO_Y
XBO_Y_pre = NET AREA RATIO XBO_Y_4 < XA_XB [AREA (XBO_Y_4)/(2*GRID)]
XBO_Y_CHECK = XBO_RECTANGLE TOUCH XBO_Y_pre

XBO = XBO_X_CHECK OR XBO_Y_CHECK



BO.W.1 { @ Maximum width of BO region <= ^BO_W_1
    SIZE BO BY BO_W_1/2 UNDEROVER
}


ABO.W.2 { @ Maximum width of ABO region <= ^ABO_W_2
    SIZE ABO BY ABO_W_2/2 UNDEROVER
}

ABO1 = SIZE ABO BY ABO_STEP_1 OVERUNDER
ABO2 = SIZE ABO1 BY ABO_STEP_2 UNDEROVER
ABO3 = ABO2 AND ABO

ABO.S.4{@ Minimum specific Space between ABO >= ^ABO_S_4
    EXT ABO3 < ABO_S_4 ABUT < 90 SINGULAR REGION
}

ABO.EX.1 {@ If specific width of ABO is larger than 500um, and the length is parallel to chip boundary and larger than 1000um, DRC check the chip edge extension beyond the length of ABO >= ^ABO_EX_1
    A = SIZE ABO BY  ABO_EX_1_W/2 UNDEROVER
    B = LENGTH A > ABO_EX_1_L
    C = EXPAND EDGE B OUTSIDE BY ABO_EX_1
    ABO TOUCH (C CUT CHIP_EDGE)
}


XBO_X_RATIO = XBO_pre AND XBO_X_CHECK
CONNECT XBO_X_RATIO XBO_X_CHECK
XBO_Y_RATIO = XBO_pre AND XBO_Y_CHECK
CONNECT XBO_Y_RATIO XBO_Y_CHECK

XBO_X_CHECK_RATIO = NET AREA RATIO XBO_X_RATIO XBO_X_CHECK >0
               [AREA(XBO_X_RATIO)/AREA(XBO_X_CHECK)] RDB XBO_X_CHECK.RATIO
XBO_Y_CHECK_RATIO = NET AREA RATIO XBO_Y_RATIO XBO_Y_CHECK >0
               [AREA(XBO_Y_RATIO)/AREA(XBO_Y_CHECK)] RDB XBO_Y_CHECK.RATIO

XBO_RATIO = XBO_X_CHECK_RATIO OR XBO_Y_CHECK_RATIO

XBO_X_CHECK_S_RATIO_1 = NET AREA RATIO XBO_X_CHECK XBO_X_RATIO >= 0.8
               [AREA(XBO_X_RATIO)/AREA(XBO_X_CHECK)]   
XBO_X_CHECK_S_RATIO_2 = NET AREA RATIO XBO_X_CHECK XBO_X_RATIO >= 0.6 < 0.8
               [AREA(XBO_X_RATIO)/AREA(XBO_X_CHECK)] 
XBO_X_CHECK_S_RATIO_3 = NET AREA RATIO XBO_X_CHECK XBO_X_RATIO >= 0.4 < 0.6
               [AREA(XBO_X_RATIO)/AREA(XBO_X_CHECK)] 
XBO_X_CHECK_S_RATIO_4 = NET AREA RATIO XBO_X_CHECK XBO_X_RATIO >= 0.2 < 0.4
               [AREA(XBO_X_RATIO)/AREA(XBO_X_CHECK)] 


XBO_Y_CHECK_S_RATIO_1 = NET AREA RATIO XBO_Y_CHECK XBO_Y_RATIO >= 0.8
               [AREA(XBO_Y_RATIO)/AREA(XBO_Y_CHECK)]   
XBO_Y_CHECK_S_RATIO_2 = NET AREA RATIO XBO_Y_CHECK XBO_Y_RATIO >= 0.6 < 0.8
               [AREA(XBO_Y_RATIO)/AREA(XBO_Y_CHECK)] 
XBO_Y_CHECK_S_RATIO_3 = NET AREA RATIO XBO_Y_CHECK XBO_Y_RATIO >= 0.4 < 0.6
               [AREA(XBO_Y_RATIO)/AREA(XBO_Y_CHECK)] 
XBO_Y_CHECK_S_RATIO_4 = NET AREA RATIO XBO_Y_CHECK XBO_Y_RATIO >= 0.2 < 0.4
               [AREA(XBO_Y_RATIO)/AREA(XBO_Y_CHECK)] 


XBO.S.1 { @ Minimum space between XBO with XBO ratio equal or higher than 80% and XBO
XBO_X_CHECK_RATIO_1_EDGE = INT (ANGLE XBO_X_CHECK_S_RATIO_1 == 0) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED
ERROR_XBO_EDGE_X = DFM PROPERTY XBO_X_CHECK_RATIO_1_EDGE
[ OUT = EW(XBO_X_CHECK_RATIO_1_EDGE)*XBO_S_1_RATIO]
ERROR_XBO_EDGE_EXPAND_X = DFM EXPAND EDGE ERROR_XBO_EDGE_X OUTSIDE BY "OUT"
ERROR_XBO_EDGE_EXPAND_X INTERACT (ERROR_XBO_EDGE_EXPAND_X AND XBO_X_CHECK)

XBO_Y_CHECK_RATIO_1_EDGE  = INT (ANGLE XBO_Y_CHECK_S_RATIO_1 == 90) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED
ERROR_XBO_EDGE_Y = DFM PROPERTY XBO_Y_CHECK_RATIO_1_EDGE
[ OUT = EW(XBO_Y_CHECK_RATIO_1_EDGE)*XBO_S_1_RATIO]
ERROR_XBO_EDGE_EXPAND_Y = DFM EXPAND EDGE ERROR_XBO_EDGE_Y OUTSIDE BY "OUT"    
ERROR_XBO_EDGE_EXPAND_Y INTERACT (ERROR_XBO_EDGE_EXPAND_Y AND XBO_Y_CHECK)

}

XBO.S.2 { @ Minimum space between XBO with XBO ratio equal or higher than 60% and lower than 80% and XBO   
XBO_X_CHECK_RATIO_2_EDGE = INT (ANGLE XBO_X_CHECK_S_RATIO_2 == 0) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED
ERROR_XBO_EDGE_X = DFM PROPERTY XBO_X_CHECK_RATIO_2_EDGE
[ OUT = EW(XBO_X_CHECK_RATIO_2_EDGE)*XBO_S_2_RATIO]
ERROR_XBO_EDGE_EXPAND_X = DFM EXPAND EDGE ERROR_XBO_EDGE_X OUTSIDE BY "OUT"
ERROR_XBO_EDGE_EXPAND_X INTERACT (ERROR_XBO_EDGE_EXPAND_X AND XBO_X_CHECK)

XBO_Y_CHECK_RATIO_2_EDGE  = INT (ANGLE XBO_Y_CHECK_S_RATIO_2 == 90) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED
ERROR_XBO_EDGE_Y = DFM PROPERTY XBO_Y_CHECK_RATIO_2_EDGE
[ OUT = EW(XBO_Y_CHECK_RATIO_2_EDGE)*XBO_S_2_RATIO]
ERROR_XBO_EDGE_EXPAND_Y = DFM EXPAND EDGE ERROR_XBO_EDGE_Y OUTSIDE BY "OUT"    
ERROR_XBO_EDGE_EXPAND_Y INTERACT (ERROR_XBO_EDGE_EXPAND_Y AND XBO_Y_CHECK)

}

XBO.S.3 { @ Minimum space between XBO with XBO ratio equal or higher than 40% and lower than 60% and XBO     
XBO_X_CHECK_RATIO_3_EDGE = INT (ANGLE XBO_X_CHECK_S_RATIO_3 == 0) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED
ERROR_XBO_EDGE_X = DFM PROPERTY XBO_X_CHECK_RATIO_3_EDGE
[ OUT = EW(XBO_X_CHECK_RATIO_3_EDGE)*XBO_S_3_RATIO]
ERROR_XBO_EDGE_EXPAND_X = DFM EXPAND EDGE ERROR_XBO_EDGE_X OUTSIDE BY "OUT"
ERROR_XBO_EDGE_EXPAND_X INTERACT (ERROR_XBO_EDGE_EXPAND_X AND XBO_X_CHECK)

XBO_Y_CHECK_RATIO_3_EDGE  = INT (ANGLE XBO_Y_CHECK_S_RATIO_3 == 90) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED
ERROR_XBO_EDGE_Y = DFM PROPERTY XBO_Y_CHECK_RATIO_3_EDGE
[ OUT = EW(XBO_Y_CHECK_RATIO_3_EDGE)*XBO_S_3_RATIO]
ERROR_XBO_EDGE_EXPAND_Y = DFM EXPAND EDGE ERROR_XBO_EDGE_Y OUTSIDE BY "OUT"    
ERROR_XBO_EDGE_EXPAND_Y INTERACT (ERROR_XBO_EDGE_EXPAND_Y AND XBO_Y_CHECK)

}

XBO.S.4 { @ Minimum space between XBO with XBO ratio equal or higher than 20% and lower than 40% and XBO
XBO_X_CHECK_RATIO_4_EDGE = INT (ANGLE XBO_X_CHECK_S_RATIO_4 == 0) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED
ERROR_XBO_EDGE_X = DFM PROPERTY XBO_X_CHECK_RATIO_4_EDGE
[ OUT = EW(XBO_X_CHECK_RATIO_4_EDGE)*XBO_S_4_RATIO]
ERROR_XBO_EDGE_EXPAND_X = DFM EXPAND EDGE ERROR_XBO_EDGE_X OUTSIDE BY "OUT"
ERROR_XBO_EDGE_EXPAND_X INTERACT (ERROR_XBO_EDGE_EXPAND_X AND XBO_X_CHECK)

XBO_Y_CHECK_RATIO_4_EDGE  = INT (ANGLE XBO_Y_CHECK_S_RATIO_4 == 90) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED
ERROR_XBO_EDGE_Y = DFM PROPERTY XBO_Y_CHECK_RATIO_4_EDGE
[ OUT = EW(XBO_Y_CHECK_RATIO_4_EDGE)*XBO_S_4_RATIO]
ERROR_XBO_EDGE_EXPAND_Y = DFM EXPAND EDGE ERROR_XBO_EDGE_Y OUTSIDE BY "OUT"    
ERROR_XBO_EDGE_EXPAND_Y INTERACT (ERROR_XBO_EDGE_EXPAND_Y AND XBO_Y_CHECK)

}



XBO_X_CHECK_EX_RATIO_1 = NET AREA RATIO XBO_X_CHECK XBO_X_RATIO >= 0.9
               [AREA(XBO_X_RATIO)/AREA(XBO_X_CHECK)]     
XBO_X_CHECK_EX_RATIO_2 = NET AREA RATIO XBO_X_CHECK XBO_X_RATIO >= 0.8 < 0.9
               [AREA(XBO_X_RATIO)/AREA(XBO_X_CHECK)] 
XBO_X_CHECK_EX_RATIO_3 = NET AREA RATIO XBO_X_CHECK XBO_X_RATIO >= 0.7 < 0.8
               [AREA(XBO_X_RATIO)/AREA(XBO_X_CHECK)] 
XBO_X_CHECK_EX_RATIO_4 = NET AREA RATIO XBO_X_CHECK XBO_X_RATIO >= 0.6 < 0.7
               [AREA(XBO_X_RATIO)/AREA(XBO_X_CHECK)] 
XBO_X_CHECK_EX_RATIO_5 = NET AREA RATIO XBO_X_CHECK XBO_X_RATIO >= 0.5 < 0.6
               [AREA(XBO_X_RATIO)/AREA(XBO_X_CHECK)] 
XBO_X_CHECK_EX_RATIO_6 = NET AREA RATIO XBO_X_CHECK XBO_X_RATIO >= 0.4 < 0.5
               [AREA(XBO_X_RATIO)/AREA(XBO_X_CHECK)] 

XBO_Y_CHECK_EX_RATIO_1 = NET AREA RATIO XBO_Y_CHECK XBO_Y_RATIO >= 0.9
               [AREA(XBO_Y_RATIO)/AREA(XBO_Y_CHECK)]    
XBO_Y_CHECK_EX_RATIO_2 = NET AREA RATIO XBO_Y_CHECK XBO_Y_RATIO >= 0.8 < 0.9
               [AREA(XBO_Y_RATIO)/AREA(XBO_Y_CHECK)]  
XBO_Y_CHECK_EX_RATIO_3 = NET AREA RATIO XBO_Y_CHECK XBO_Y_RATIO >= 0.7 < 0.8
               [AREA(XBO_Y_RATIO)/AREA(XBO_Y_CHECK)]  
XBO_Y_CHECK_EX_RATIO_4 = NET AREA RATIO XBO_Y_CHECK XBO_Y_RATIO >= 0.6 < 0.7
               [AREA(XBO_Y_RATIO)/AREA(XBO_Y_CHECK)]  
XBO_Y_CHECK_EX_RATIO_5 = NET AREA RATIO XBO_Y_CHECK XBO_Y_RATIO >= 0.5 < 0.6
               [AREA(XBO_Y_RATIO)/AREA(XBO_Y_CHECK)]  
XBO_Y_CHECK_EX_RATIO_6 = NET AREA RATIO XBO_Y_CHECK XBO_Y_RATIO >= 0.4 < 0.5
               [AREA(XBO_Y_RATIO)/AREA(XBO_Y_CHECK)]  


XBO_X_WINDOW =  EXTENT XBO_X_CHECK
XBO_X_EDGE_X = ANGLE XBO_X_CHECK == 0
XBO_X_EDGE_Y = ANGLE XBO_X_CHECK == 90
XBO_X_EDGE_X_EXPAND = EXPAND EDGE XBO_X_EDGE_Y INSIDE BY GRID
XBO_X_EDGE_X_EXPAND_X_EDGE = (XBO_X_EDGE_X_EXPAND TOUCH EDGE XBO_X_EDGE_X) TOUCH EDGE XBO_X_WINDOW
XBO_X_pre_EXPAND = ENC XBO_X_EDGE_X_EXPAND_X_EDGE CHIP_EDGE < LARGE_NUM OPPOSITE REGION


XBO_Y_WINDOW = EXTENT XBO_Y_CHECK
XBO_Y_EDGE_X = ANGLE XBO_Y_CHECK == 0
XBO_Y_EDGE_Y = ANGLE XBO_Y_CHECK == 90
XBO_Y_EDGE_X_EXPAND = EXPAND EDGE XBO_Y_EDGE_X INSIDE BY GRID
XBO_Y_EDGE_X_EXPAND_Y_EDGE = (XBO_Y_EDGE_X_EXPAND TOUCH EDGE XBO_Y_EDGE_Y) TOUCH EDGE XBO_Y_WINDOW
XBO_Y_pre_EXPAND = ENC XBO_Y_EDGE_X_EXPAND_Y_EDGE CHIP_EDGE < LARGE_NUM OPPOSITE REGION



XBO.EX.1{@ Minimum sum of chip boundary extension beyond the outermost XBO at both end in XBO specific width direction if one of the outermost XBO with XBO ratio equal or higher than 90%.
XBO_X_WINDOW_1 = XBO_X_WINDOW TOUCH (XBO_X_pre_EXPAND TOUCH XBO_X_CHECK_EX_RATIO_1)
XBO_X_pre_EXPAND_1 = XBO_X_pre_EXPAND TOUCH XBO_X_WINDOW_1
XBO_X_CHECK_EX_1 = XBO_X_CHECK_EX_RATIO_1 TOUCH XBO_X_pre_EXPAND_1
XBO_X_CHECK_EX_EDGE_1 =  INT (ANGLE XBO_X_CHECK_EX_1 == 0) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED

XBO_Y_WINDOW_1 = XBO_Y_WINDOW TOUCH (XBO_Y_pre_EXPAND TOUCH XBO_Y_CHECK_EX_RATIO_1)
XBO_Y_pre_EXPAND_1 = XBO_Y_pre_EXPAND TOUCH XBO_Y_WINDOW_1
XBO_Y_CHECK_EX_1 = XBO_Y_CHECK_EX_RATIO_1 TOUCH XBO_Y_pre_EXPAND_1
XBO_Y_CHECK_EX_EDGE_1 =  INT (ANGLE XBO_Y_CHECK_EX_1 == 90) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED

PRB_X =  DFM PROPERTY CHIP_EDGE XBO_X_CHECK_EX_EDGE_1  OVERLAP ABUT ALSO MULTI
[SW_XBO_X = MAX(EW(XBO_X_CHECK_EX_EDGE_1)) ]
ERROR_X = DFM PROPERTY PRB_X XBO_X_pre_EXPAND_1  OVERLAP ABUT ALSO  MULTI
[RATIO = (AREA (XBO_X_pre_EXPAND_1)/(2*GRID))/PROPERTY(PRB_X,SW_XBO_X)] < XBO_EX_1_RATIO
XBO_X_WINDOW_1 INTERACT (DFM PROPERTY ERROR_X CHIP_EDGE OVERLAP ABUT ALSO)
DFM RDB ERROR_X "XBO.EX.1.X.db"

PRB_Y = DFM PROPERTY CHIP_EDGE XBO_Y_CHECK_EX_EDGE_1 OVERLAP ABUT ALSO MULTI 
[SW_XBO_Y = MAX(EW(XBO_Y_CHECK_EX_EDGE_1))]
ERROR_Y = DFM PROPERTY PRB_Y XBO_Y_pre_EXPAND_1  OVERLAP ABUT ALSO  MULTI
[RATIO = (AREA (XBO_Y_pre_EXPAND_1)/(2*GRID))/PROPERTY(PRB_Y, SW_XBO_Y)] < XBO_EX_1_RATIO    
XBO_Y_WINDOW_1 INTERACT (DFM PROPERTY ERROR_Y  CHIP_EDGE OVERLAP ABUT ALSO)
DFM RDB ERROR_Y "XBO.EX.1.Y.db"
}

XBO.EX.2{@ Minimum sum of chip boundary extension beyond the outermost XBO at both end in XBO specific width direction if one of the outermost XBO with XBO ratio equal or higher than 80% and lower than 90%.
XBO_X_WINDOW_2 = XBO_X_WINDOW TOUCH (XBO_X_pre_EXPAND TOUCH XBO_X_CHECK_EX_RATIO_2)
XBO_X_pre_EXPAND_2 = XBO_X_pre_EXPAND TOUCH XBO_X_WINDOW_2
XBO_X_CHECK_EX_2 = XBO_X_CHECK_EX_RATIO_2 TOUCH XBO_X_pre_EXPAND_2
XBO_X_CHECK_EX_EDGE_2 =  INT (ANGLE XBO_X_CHECK_EX_2 == 0) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED

XBO_Y_WINDOW_2 = XBO_Y_WINDOW TOUCH (XBO_Y_pre_EXPAND TOUCH XBO_Y_CHECK_EX_RATIO_2)
XBO_Y_pre_EXPAND_2 = XBO_Y_pre_EXPAND TOUCH XBO_Y_WINDOW_2
XBO_Y_CHECK_EX_2 = XBO_Y_CHECK_EX_RATIO_2 TOUCH XBO_Y_pre_EXPAND_2
XBO_Y_CHECK_EX_EDGE_2 =  INT (ANGLE XBO_Y_CHECK_EX_2 == 90) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED

PRB_X =  DFM PROPERTY CHIP_EDGE XBO_X_CHECK_EX_EDGE_2  OVERLAP ABUT ALSO MULTI
[SW_XBO_X = MAX(EW(XBO_X_CHECK_EX_EDGE_2)) ]
ERROR_X = DFM PROPERTY PRB_X XBO_X_pre_EXPAND_2  OVERLAP ABUT ALSO  MULTI
[RATIO = (AREA (XBO_X_pre_EXPAND_2)/(2*GRID))/PROPERTY(PRB_X,SW_XBO_X)] < XBO_EX_2_RATIO
XBO_X_WINDOW_2 INTERACT (DFM PROPERTY ERROR_X CHIP_EDGE OVERLAP ABUT ALSO)
DFM RDB ERROR_X "XBO.EX.2.X.db"

PRB_Y = DFM PROPERTY CHIP_EDGE XBO_Y_CHECK_EX_EDGE_2 OVERLAP ABUT ALSO MULTI 
[SW_XBO_Y = MAX(EW(XBO_Y_CHECK_EX_EDGE_2))]
ERROR_Y = DFM PROPERTY PRB_Y XBO_Y_pre_EXPAND_2  OVERLAP ABUT ALSO  MULTI
[RATIO = (AREA (XBO_Y_pre_EXPAND_2)/(2*GRID))/PROPERTY(PRB_Y, SW_XBO_Y)] < XBO_EX_2_RATIO    
XBO_Y_WINDOW_2 INTERACT (DFM PROPERTY ERROR_Y  CHIP_EDGE OVERLAP ABUT ALSO)
DFM RDB ERROR_Y "XBO.EX.2.Y.db"
}

XBO.EX.3{@ Minimum sum of chip boundary extension beyond the outermost XBO at both end in XBO specific width direction if one of the outermost XBO with XBO ratio equal or higher than 70% and lower than 80%.
XBO_X_WINDOW_3 = XBO_X_WINDOW TOUCH (XBO_X_pre_EXPAND TOUCH XBO_X_CHECK_EX_RATIO_3)
XBO_X_pre_EXPAND_3 = XBO_X_pre_EXPAND TOUCH XBO_X_WINDOW_3
XBO_X_CHECK_EX_3 = XBO_X_CHECK_EX_RATIO_3 TOUCH XBO_X_pre_EXPAND_3
XBO_X_CHECK_EX_EDGE_3 =  INT (ANGLE XBO_X_CHECK_EX_3 == 0) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED

XBO_Y_WINDOW_3 = XBO_Y_WINDOW TOUCH (XBO_Y_pre_EXPAND TOUCH XBO_Y_CHECK_EX_RATIO_3)
XBO_Y_pre_EXPAND_3 = XBO_Y_pre_EXPAND TOUCH XBO_Y_WINDOW_3
XBO_Y_CHECK_EX_3 = XBO_Y_CHECK_EX_RATIO_3 TOUCH XBO_Y_pre_EXPAND_3
XBO_Y_CHECK_EX_EDGE_3 =  INT (ANGLE XBO_Y_CHECK_EX_3 == 90) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED

PRB_X =  DFM PROPERTY CHIP_EDGE XBO_X_CHECK_EX_EDGE_3  OVERLAP ABUT ALSO MULTI
[SW_XBO_X = MAX(EW(XBO_X_CHECK_EX_EDGE_3)) ]
ERROR_X = DFM PROPERTY PRB_X XBO_X_pre_EXPAND_3  OVERLAP ABUT ALSO  MULTI
[RATIO = (AREA (XBO_X_pre_EXPAND_3)/(2*GRID))/PROPERTY(PRB_X,SW_XBO_X)] < XBO_EX_3_RATIO
XBO_X_WINDOW_3 INTERACT (DFM PROPERTY ERROR_X CHIP_EDGE OVERLAP ABUT ALSO)
DFM RDB ERROR_X "XBO.EX.3.X.db"

PRB_Y = DFM PROPERTY CHIP_EDGE XBO_Y_CHECK_EX_EDGE_3 OVERLAP ABUT ALSO MULTI 
[SW_XBO_Y = MAX(EW(XBO_Y_CHECK_EX_EDGE_3))]
ERROR_Y = DFM PROPERTY PRB_Y XBO_Y_pre_EXPAND_3  OVERLAP ABUT ALSO  MULTI
[RATIO = (AREA (XBO_Y_pre_EXPAND_3)/(2*GRID))/PROPERTY(PRB_Y, SW_XBO_Y)] < XBO_EX_3_RATIO    
XBO_Y_WINDOW_3 INTERACT (DFM PROPERTY ERROR_Y  CHIP_EDGE OVERLAP ABUT ALSO)
DFM RDB ERROR_Y "XBO.EX.3.Y.db"
}

XBO.EX.4{@ Minimum sum of chip boundary extension beyond the outermost XBO at both end in XBO specific width direction if one of the outermost XBO with XBO ratio equal or higher than 60% and lower than 70%. 
XBO_X_WINDOW_4 = XBO_X_WINDOW TOUCH (XBO_X_pre_EXPAND TOUCH XBO_X_CHECK_EX_RATIO_4)
XBO_X_pre_EXPAND_4 = XBO_X_pre_EXPAND TOUCH XBO_X_WINDOW_4
XBO_X_CHECK_EX_4 = XBO_X_CHECK_EX_RATIO_4 TOUCH XBO_X_pre_EXPAND_4
XBO_X_CHECK_EX_EDGE_4 =  INT (ANGLE XBO_X_CHECK_EX_4 == 0) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED

XBO_Y_WINDOW_4 = XBO_Y_WINDOW TOUCH (XBO_Y_pre_EXPAND TOUCH XBO_Y_CHECK_EX_RATIO_4)
XBO_Y_pre_EXPAND_4 = XBO_Y_pre_EXPAND TOUCH XBO_Y_WINDOW_4
XBO_Y_CHECK_EX_4 = XBO_Y_CHECK_EX_RATIO_4 TOUCH XBO_Y_pre_EXPAND_4
XBO_Y_CHECK_EX_EDGE_4 =  INT (ANGLE XBO_Y_CHECK_EX_4 == 90) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED

PRB_X =  DFM PROPERTY CHIP_EDGE XBO_X_CHECK_EX_EDGE_4  OVERLAP ABUT ALSO MULTI
[SW_XBO_X = MAX(EW(XBO_X_CHECK_EX_EDGE_4)) ]
ERROR_X = DFM PROPERTY PRB_X XBO_X_pre_EXPAND_4  OVERLAP ABUT ALSO  MULTI
[RATIO = (AREA (XBO_X_pre_EXPAND_4)/(2*GRID))/PROPERTY(PRB_X,SW_XBO_X)] < XBO_EX_4_RATIO
XBO_X_WINDOW_4 INTERACT (DFM PROPERTY ERROR_X CHIP_EDGE OVERLAP ABUT ALSO)
DFM RDB ERROR_X "XBO.EX.4.X.db"

PRB_Y = DFM PROPERTY CHIP_EDGE XBO_Y_CHECK_EX_EDGE_4 OVERLAP ABUT ALSO MULTI 
[SW_XBO_Y = MAX(EW(XBO_Y_CHECK_EX_EDGE_4))]
ERROR_Y = DFM PROPERTY PRB_Y XBO_Y_pre_EXPAND_4  OVERLAP ABUT ALSO  MULTI
[RATIO = (AREA (XBO_Y_pre_EXPAND_4)/(2*GRID))/PROPERTY(PRB_Y, SW_XBO_Y)] < XBO_EX_4_RATIO    
XBO_Y_WINDOW_4 INTERACT (DFM PROPERTY ERROR_Y  CHIP_EDGE OVERLAP ABUT ALSO)
DFM RDB ERROR_Y "XBO.EX.4.Y.db"
}

XBO.EX.5{@ Minimum sum of chip boundary extension beyond the outermost XBO at both end in XBO specific width direction if one of the outermost XBO with XBO ratio equal or higher than 50% and lower than 60%.     
XBO_X_WINDOW_5 = XBO_X_WINDOW TOUCH (XBO_X_pre_EXPAND TOUCH XBO_X_CHECK_EX_RATIO_5)
XBO_X_pre_EXPAND_5 = XBO_X_pre_EXPAND TOUCH XBO_X_WINDOW_5
XBO_X_CHECK_EX_5 = XBO_X_CHECK_EX_RATIO_5 TOUCH XBO_X_pre_EXPAND_5
XBO_X_CHECK_EX_EDGE_5 =  INT (ANGLE XBO_X_CHECK_EX_5 == 0) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED

XBO_Y_WINDOW_5 = XBO_Y_WINDOW TOUCH (XBO_Y_pre_EXPAND TOUCH XBO_Y_CHECK_EX_RATIO_5)
XBO_Y_pre_EXPAND_5 = XBO_Y_pre_EXPAND TOUCH XBO_Y_WINDOW_5
XBO_Y_CHECK_EX_5 = XBO_Y_CHECK_EX_RATIO_5 TOUCH XBO_Y_pre_EXPAND_5
XBO_Y_CHECK_EX_EDGE_5 =  INT (ANGLE XBO_Y_CHECK_EX_5 == 90) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED

PRB_X =  DFM PROPERTY CHIP_EDGE XBO_X_CHECK_EX_EDGE_5  OVERLAP ABUT ALSO MULTI
[SW_XBO_X = MAX(EW(XBO_X_CHECK_EX_EDGE_5)) ]
ERROR_X = DFM PROPERTY PRB_X XBO_X_pre_EXPAND_5  OVERLAP ABUT ALSO  MULTI
[RATIO = (AREA (XBO_X_pre_EXPAND_5)/(2*GRID))/PROPERTY(PRB_X,SW_XBO_X)] < XBO_EX_5_RATIO
XBO_X_WINDOW_5 INTERACT (DFM PROPERTY ERROR_X CHIP_EDGE OVERLAP ABUT ALSO)
DFM RDB ERROR_X "XBO.EX.5.X.db"

PRB_Y = DFM PROPERTY CHIP_EDGE XBO_Y_CHECK_EX_EDGE_5 OVERLAP ABUT ALSO MULTI 
[SW_XBO_Y = MAX(EW(XBO_Y_CHECK_EX_EDGE_5))]
ERROR_Y = DFM PROPERTY PRB_Y XBO_Y_pre_EXPAND_5  OVERLAP ABUT ALSO  MULTI
[RATIO = (AREA (XBO_Y_pre_EXPAND_5)/(2*GRID))/PROPERTY(PRB_Y, SW_XBO_Y)] < XBO_EX_5_RATIO    
XBO_Y_WINDOW_5 INTERACT (DFM PROPERTY ERROR_Y  CHIP_EDGE OVERLAP ABUT ALSO)
DFM RDB ERROR_Y "XBO.EX.5.Y.db"
}

XBO.EX.6{@ Minimum sum of chip boundary extension beyond the outermost XBO at both end in XBO specific width direction if one of the outermost XBO with XBO ratio equal or higher than 40% and lower than 50%.
XBO_X_WINDOW_6 = XBO_X_WINDOW TOUCH (XBO_X_pre_EXPAND TOUCH XBO_X_CHECK_EX_RATIO_6)
XBO_X_pre_EXPAND_6 = XBO_X_pre_EXPAND TOUCH XBO_X_WINDOW_6
XBO_X_CHECK_EX_6 = XBO_X_CHECK_EX_RATIO_6 TOUCH XBO_X_pre_EXPAND_6
XBO_X_CHECK_EX_EDGE_6 =  INT (ANGLE XBO_X_CHECK_EX_6 == 0) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED

XBO_Y_WINDOW_6 = XBO_Y_WINDOW TOUCH (XBO_Y_pre_EXPAND TOUCH XBO_Y_CHECK_EX_RATIO_6)
XBO_Y_pre_EXPAND_6 = XBO_Y_pre_EXPAND TOUCH XBO_Y_WINDOW_6
XBO_Y_CHECK_EX_6 = XBO_Y_CHECK_EX_RATIO_6 TOUCH XBO_Y_pre_EXPAND_6
XBO_Y_CHECK_EX_EDGE_6 =  INT (ANGLE XBO_Y_CHECK_EX_6 == 90) < SW_XBO_MAX OPPOSITE EXCLUDE SHIELDED

PRB_X =  DFM PROPERTY CHIP_EDGE XBO_X_CHECK_EX_EDGE_6  OVERLAP ABUT ALSO MULTI
[SW_XBO_X = MAX(EW(XBO_X_CHECK_EX_EDGE_6)) ]
ERROR_X = DFM PROPERTY PRB_X XBO_X_pre_EXPAND_6  OVERLAP ABUT ALSO  MULTI
[RATIO = (AREA (XBO_X_pre_EXPAND_6)/(2*GRID))/PROPERTY(PRB_X,SW_XBO_X)] < XBO_EX_6_RATIO
XBO_X_WINDOW_6 INTERACT (DFM PROPERTY ERROR_X CHIP_EDGE OVERLAP ABUT ALSO)
DFM RDB ERROR_X "XBO.EX.6.X.db"

PRB_Y = DFM PROPERTY CHIP_EDGE XBO_Y_CHECK_EX_EDGE_6 OVERLAP ABUT ALSO MULTI 
[SW_XBO_Y = MAX(EW(XBO_Y_CHECK_EX_EDGE_6))]
ERROR_Y = DFM PROPERTY PRB_Y XBO_Y_pre_EXPAND_6  OVERLAP ABUT ALSO  MULTI
[RATIO = (AREA (XBO_Y_pre_EXPAND_6)/(2*GRID))/PROPERTY(PRB_Y, SW_XBO_Y)] < XBO_EX_6_RATIO    
XBO_Y_WINDOW_6 INTERACT (DFM PROPERTY ERROR_Y  CHIP_EDGE OVERLAP ABUT ALSO)
DFM RDB ERROR_Y "XBO.EX.6.Y.db"
}





BO.R.1 { @ Maximum (OD OR DOD) density across full chip < ^OD_DN
    DENSITY (OD OR DOD) >= OD_DN INSIDE OF LAYER CHIP_EDGE PRINT OD_DN.DENSITY	
}


Reference_layer_BO{@ show Reference layer BO
   A = COPY BO
   MERGE A
}
Reference_layer_ABO{@ show Reference layer ABO
   MERGE ABO
}
Reference_layer_ABO3{@ show Reference layer ABO3
   MERGE ABO3
}
Reference_layer_SBO{@ show Reference layer SBO
   MERGE SBO
}
Reference_layer_rectangle_XBO{@ show Reference layer rectangle XBO
   MERGE XBO
}
Reference_layer_no_rectangle_XBO{@ show Reference layer no rectangle XBO
   MERGE XBO_RATIO
}
Reference_layer_CHIP_EDGE{@ show Reference layer CHIP_EDGE
   SIZE CHIP_EDGE BY GRID UNDEROVER
}





